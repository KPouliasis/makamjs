// Generated by js_of_ocaml 2.8.3
(function(d1){"use strict";var
ao9=12302,ao8=7890,ao7=7851,$a="RbEq",$b="ExAtt",b3=16777215,ao5=70855,ao6=1252,mI=176,_$=65373,A8=293,__="PaMod",ao4=880,ao3=10096,ao2="should not happen",qb="!",e1=115,ao1=11405,ao0="%a\n%!",aoY="TyExt",aoZ=7756,_9=43755,U=-1043820856,aoX=2556,aoW="CeFun",_7=3403757,_8=513,aoV="ExAcc",yo=" (",aoT="fEmpty",aoU=42649,_6=1026,cY="In ",aoS=65085,aoR=11418,aoQ=10215,A7=543,l2=174,_4="float",_5=44008,aoO="TyVrnEq",aoP=12336,qa="module_expr_get_functor_args",_3=11360,rt=141,aoM=506,aoN=42646,_2=1210,aoL=8489,yn=272,aoK=7794,_0=67592,_1=11422,_Z="PaApp",_Y="WcTyp",rs=-49,_X=43493,_V=744688668,_W="Bad token used as an identifier: %s",p$=-60523212,A6=152,_U="StVal",aoJ=376,_S="LIST1 %a",_T=120771,A5=-53689512,_R="Set.remove_min_elt",aoI=424,_Q="occurs check",aX="e",dZ="False",_P=42792,_O="StInc",_M=11483,_N=7697,aoG="~%s",aoH=11397,aoF="Array",_L="int32",ym=549,aoD="PaExc",aoE=589,aoC=8334,aoB=510,aoA=65293,rr=140,aoz=8579,_K=70487,aoy='" do not belong to the same grammar.\n',fF="type",p_="patt1",_J="%a : %a\n",fE=1024,_H=-192,_I="fTest",_G="Antiquotation not terminated",A4="module",aox=8484,_F="try",_E=1263,_D=1258,A3="infinity",yl=" False",aow=43065,yk=-836483576,_A="this is not the end of a comment",_B=1142,_C=908,aov="%s%a%s",yj="tuple",_y="sub",_z=895,rq="then",aoq="different subst len",aor="PaFlo",aos="ExCom",aot=42888,aou=55296,_x=7797,aop=1134,mH="let ",aoo=7778,_w=7749,aon="----------------------------------",_v=42601,rp=3901488,aol=42583,aom=8027,_u=" -->\n   ~= ",l1=103,j3=17939,aok=8468,aoj="Deferred goal:\n",_t="MeFun",aoi=42824,p9="k",_r=42788,_s=7764,aoh=12293,aog="TermLangCanon Error: Constant of unknown type.\n",p8=184,aof="StNil",_q=570,A2="meta_option",aoe=72343,_p=1289,aod=997,mG=171,io="override_flag",yi=373,aT="A",_o=42589,_l=3021,_m=42851,_n=1204,aoc="[t??]",A1="open",cX=256,_j=8274,_k=11371,ro="apply_expr",aob=67871,aoa="CrVvr",_h=8658,_i=8140,p7="invalid long identifier",_g=395,an$=65021,$=17941,yh=452,an9="RbSem",an_="MePkg",p6=185,an8=7895,_e=126557,_f=1211,A0="Assert_failure",_d=9655,AZ=338,_c="MeTyc",_b="enter",an7=42909,_a="[ <",AY=-108,AW="close_in",AX=350,mF=239,Z$=":%a",an6="debug",Z9=69762,Z_=398,an5="module rec ",Z8="PaOlbi",Z7=65128,rn="patt2",Z5=11786,Z6=3782,an4=65374,Z4=42568,an3="IdUid",Z3=1564,Z2=11370,p5=808768217,AV="blit",Z0="ExCoe",Z1=660,AU=-978084643,an0=126555,an1=7741,an2=1174,ZY=126535,ZZ=6150,AT=523,rm="%a;@ %a",im=117,anZ=7929,rl=150,anW="pipe",anX="utils/tbl.ml",anY=1186,fw="virtual",ZX="SgMty",anV=560,ZV="ExApp",ZW=1271,AR=294,AS=343,p4="module_rec_binding",ZU="%a@ and %a",anU=7042,ZT=71341,ZS=1201,l0=167,anT=11457,yg=279,anR="?(",anS=1292,anQ=425,anP=7803,lZ="x",ZR=2809,j2=-488396039,anO="String",ZQ=7718,anN=65088,anM=7731,ZP="next",lY=161,anL=1153,ZN="PaArr",lX=", line ",ZO=3647,anJ=120779,anK=7914,ZM="PaTyp",yf=1260,jG="%d",ZL=2878,rk="print_comments_before",ZK=70018,anI=11477,ZJ="Cygwin",ZI=65371,anG=11417,anH=8188,ZH="CeApp",anF=7864,ZG=65114,mE=907347494,ZE="StClt",ZF=579,AQ="<-",anD="MtOf",anE=11489,anB="TRY ",anC=1267,ZC="fMemo",ZD=42841,c_=-48,anA=12311,ZB=129472,anx=64286,any=8622,anz=1130,ZA=42921,Zz="int64",Zy=11438,il="((",anw=11486,jF=159,ye=227,anv=7692,Zx=7892,AP=263,dz="*",Zv=42579,Zw=7844,yd="module type ",Zu="TyQuo",rj="else",anu=1302,AO=479,p3=259,AN="@[<1>(%a :@ %a)@]",Zt=8417,AM=342,dX="r",ant=3263,Zs=1001,ans=514,anr=120597,anq="Unix.Unix_error",Zr="CtNil",yc=325,AL="once",fD=122,Zp=2492,Zq=1173,ann="@[<hv0>@[<hv2>object @[<1>(%a)@]@ %a@]@ end@]",ano=126539,anp=42641,ank="dbt_string",anl=7795,anm=42798,Zn="@[<2>let %a%a@];@ %a",Zo=1227,ani=11471,anj=126564,Zm=7691,Zl=11439,yb="Not_found",Zk="Unit ",Zi=7798,Zj=8467,Zg="(%s%s)",Zh=975,Ze="names",Zf=11464,Zc=11454,Zd=1152,cB="n",anh=1261,Zb=42835,c9="termlang/termlangcanon.ml",ang=7847,Za=4038,anf="SgMod",ri=309,p2="<3>",and=42885,ane=42844,Y$="McNil",Y_=10634,mD=-325940165,anc=11400,Y9=1224,Y8=7854,ep=124,AK="flush",Y7=92917,anb=1170,am$=202,ana="TySta",am_=10222,am9=1206,Y5="Map.disjoint_union ",Y6=8260,gn=" ]",e0="binding",am7=43741,am8=42875,j1="value_let",am6=11432,Y3=1194,Y4=1322,bb="_",Y1=11441,Y2=8222,Y0=11842,am4="CrCtr",am5=931,am3="%a%s%a",YZ=1072,YY=42854,YX=2384,am2=12448,AJ=380,am1=10646,YW=2903,eO=748778728,YV="CgVal",p1=264,YU=70480,am0=11423,YT=8585,YS=7883,YR="&",jE="@[<2>%a@ %a@]",YQ=1242,AI=262,p0=-1013199160,amZ=1240,YP=1235,pZ=265,dy="]",ya=332,amY=10098,YN=70460,YO=3072,rh="; ",amX=67644,amW=3897,x$=135,amU=194,amV=42575,mC=17272,amS="WcTyS",rg=179,amT=65117,x_=136,amR="PaAny",h7=": at character number ",rf="raise_match_failure",amQ="OPT ",YM=1275,amO="%a ",amP=1234,mB=107,mA="match_case_aux",AH="unknown",amN=11463,x9=536,YL=7735,amM="this construction is not allowed here",YK=7685,amL=7881,x8=261,YJ="LCons",x7="object",YI="ExOlb",amJ=65506,amK=10088,amH=-223207464,amI=42847,v=18620,lW=251,amG=65116,amE=8233,amF=57344,YG=11814,YH=5787,AG=331,YF=412,re=253,YE=7921,AF=321,amD="fExternal",amA=" and ",amB=1148,amC=576,YD=11481,eo="::",amz=42812,YB=42820,YC=7811,x6=411,amx="PaId",amy="IdApp",YA=7868,amw=1324,Yz=72881,amv=11487,jD=224,Yw=72249,Yx=65091,Yy=474,amu=7766,amt=10648,lV="in",Yv=42862,ams="LIST1 %a SEP %a",bu=250,amr=42911,amq=2563,Yu="@[<2>include@ %a%(%)@]",rd=-935352974,amp=66512,Yt=65290,x5=302,amo="SgInc",Ys=8969,Yq="TySum",Yr=12314,Yp=2928,pY=524,amn=44013,AE=456,Yo=7773,amm=7746,Yl="McArr",Ym=7765,Yn=1221,x4="{",Yk=42586,aml=42908,amk=69932,ami="ExInt64",amj=7705,amh="ExChr",AD=460,Yi="PaEq",Yj="PaSem",Yh=119995,AC="newvar",amf="cannot mix type declaration and extension",amg=7906,Yg=11378,x3=541,ame=126537,amb="ReNil",amc=2902,amd=882,Yf=42904,ama=573,Ye="CtAnd",x2=277,al$="CrVir",Yd=7793,al9=70725,al_=11632,Yc=2946,al8=4239,ba="@,",al7=8221,Ya="StExt",Yb="ExLab",al6=7726,X$=11779,al5=11813,X_=1471,X9="CeAnd",rc="LEFTA",al4=-300835776,AB=346,al3=1141,X8=42913,X6="This comment contains an unterminated string literal",X7=7917,al2=64318,X5=2038,al0=42807,al1=1197,X4=65084,alZ=2801,alY=43597,X3=7544,AA='No level labelled "',alX=42850,X1="@ []",X2="labelled type not allowed here",alW=7686,X0=403,rb=" SEP ",alV=11462,alT="I/O error: ",alU="'#'",x1=146,XY=65082,XZ=42879,pX="Grammar.extend",XX=993,alS=1418,pW=" ::",alR=1254,j0=177,jZ="semisep",Ay=482,Az=313,alQ=65078,XW=65339,alP=7925,XV="ExLmd",XU=396,alO="typing/path.ml",XT=493,Ax=402,pV="|",XS=42859,alN="----------------------------------@,",XQ="assume",XR="fOption",alL=10644,alM=7740,xZ=25025,XO=42573,XP=1757,x0=311,alK=42863,Aw=144,XM="NEWLINE",XN=7843,alI="MeAtt",alJ=11399,eN=948106902,xY=517,xW=470,xX=315,alH=11394,alG=42874,n=17281,XL="TermLangCanon Error: Builtin type ",alF=7698,ik=")[",XK=42887,xV=303,XJ=11425,XH="LEVEL",XI=11488,alD="WcAnd",alE="RvNil",Av="Sys_error",jY="   ~ ",alC=8517,XG=11823,alB=65083,eZ="fun",XF="CrIni",xU=559,Au="row_var_flag",XE=70093,aly="head mismatch",alz=11393,alA=6743,mz="module_binding",XD=12309,alx=1788,XB=42840,XC=475,alw=7905,Xz=7839,XA=7730,ra=132,alu=7828,alv=1187,xT=458,my=347,jX=160,alt=992,Xy="Comment not terminated",als="TyNil",xS=284,xQ="include",xR="unit",alr=11808,S=288368849,At=463,Xx="ExSte",alq=7734,Xw=498,mx=240,q$="assert",alo=7724,alp=10627,xP=25026,lU="@]",alm="CgNil",aln=1232,As=408,pU=-925642055,Xv="%s%!",pT=525,all=1323,alk="%Li",at=255,Ar=364,Xu=587,Xs="TyTup",Xt=1316,alj=6971,q_="@[<2>virtual@ %a@]",pS="typing/env.ml",Xr=7743,Xq=12447,Xp=10641,eM=17945,G=858945253,mw="expr_list",Xo=7875,ali=42876,mv="anti",alh=11410,bq=3801144,Xn=1222,alg=8318,Xl=11461,Xm=486,alf="TySem",Aq="_const_p",Xj=10100,Xk=1195,ale="StSem",alc=42834,ald=7680,ala="ExVrn",alb=1169,Xh=43696,Xi=12320,Xf=11442,Xg=1255,ak_=189,ak$=72272,ak9="Bad token used as an identifier: ",Xe=7760,Xc=70006,Xd=2417,ak8=7785,jC="<v 0>",Xb="TyAmp",ak7=65090,xO=387,ak6=7807,W$="fVoid",Xa=12299,ak4="TyAnd",ak5="CrInh",W8="DiDownto",W9=65378,W_=8455,ak2="TRY %a",ak3=126548,W7="p1",xN=333,lT=252,Ap="...",ak1=66369,W6=42864,ak0=71230,akZ=6086,pR="numeric",akX=886,akY=1239,cH=" ",xM="Undefined_recursive_module",akW=42627,xL="output",W5=64831,pQ=519,akU=7885,akV=7852,Ao=405,W4=1295,akS="StDir",akT=2433,g5="Set.bal",W3=2876,W0=7772,W1=42572,W2=7405,mu="dot_expr",An=147,WZ=1135,WX=42637,WY=312,Am=858943706,c8="`",q9="exception",akR=65113,WV="sort",bO="termlang/termlangrefl.ml",WW=2482,WU=1276,akQ=995,q8="patt_tycon",akO=66927,akP=2493,WT=515,WS=10219,Al=148,eY="str_item",eL="expr",akN=6108,Ak=300,jW=512,akL="no_semisep",akM=1223,mt="EOI",WR=120539,Aj=437,WP=501,WQ=42823,akK=65507,lS=-13792443,WO=2363,akJ="WcMod",WM=11787,WN=67903,a2=128,WL=2969,akI="PaCom",WK=7142,Ai="constraint",akG=10647,akH=562,WJ=1003,akF=1312,WH="@[<hv0>@[<hv2>object@ %a@]@ end@]",WI=11469,akE="SgRecMod",WG=4347,akD=8317,pP=368,xK=453,akC="eq",WF=66272,fv="| ",WD="RvRowVar",WE=7736,akB=3199,akA=11435,g_="rec_flag",WC=1301,WB=984,Ah=392,lR="mk_patt_list",Wz="MeStr",WA=43644,Wx=42624,Wy=42629,xJ=409,aky="RbNil",akz=1325,Ww=11785,Ag=469,akx=8487,akv=42574,akw=7922,Wv=1122,Af=-80,Wt="Path.concat",Wu="1",fu="d",lQ=247,Ae=1199,akt=11501,aku=4348,aks=11810,lP="sum_type",Ws=11434,akr=7748,xI="external",xH="Out_of_memory",akq=1162,jB=101,Wr=7700,Wq="4",ako=92996,akp="index out of bounds",akn=7932,Wp=65392,akm=42814,Ad=268,xG="}",Wo=42827,Wn=42632,xF="@",Wm=1027,q7=327,akl=126521,akk=42795,Wl=42631,Wk="SgTyp",akj="LIST0 %a",aki=1073741824,dB=36732162,akh=1167,Wj=70849,ms=113,mr="simple_ctyp",lO=316,akg=126551,Ac=143,akf=11781,Wi="newmeta",pO="RIGHTA",Wg=" :>",am="<1>",Wh=7908,Wf=1127,xE="semi",We=7708,Wd=8458,xD=297,Wc=71935,ake=42648,V_=1e9,V$="scanning of ",Wa=10629,Wb=64830,V9="StTyp",akc=1288,akd=43712,akb=7801,V8=329,V7=8469,Ab=" :=",aka="IdAcc",V6=126559,xC=322,dY=915171949,aj$=120655,aj8="p2",aj9=42916,aj_=490,V4=8608,V5=1151,aj7="ExAre",V2="StExp",V3=12316,aj6=8305,Aa=" ]@]",aj5=68159,bN=951904681,VZ=12305,V0=7820,V1=1166,aj4=7855,jA=257,mq="andsep",aj3=7840,VY="@,| ",pN="<parser>",z$=-101,jV=118,lN=840561112,VX=71340,VW=12348,VV=2929,z8="%.12g",z9=527,aj1=7696,aj2=6741,z_=375,VU="TyOf",ajX="to",ajY=8495,ajZ=8216,aj0=7758,VT=42914,pM=281,VS=40981,pL=379,VR=1969,VQ=65341,ajW="DiTo",VO=1303,VP=1273,ajV=10089,ij="module ",VN=7149,VL=42848,VM=10631,ajU=1563,q6='$lid:""$',VK="   ~>> (",g9="<",pK="record_binding",ajT=7891,VI=580,VJ=7723,xB=467,ac=17505,VH="SgOpn",VG=512129482,VF=1220,ek="True",VE=1006,VD=94032,z7=454,ajS=6107,VA="PaRng",VB=12304,VC=3389,ajR="@[<2>external@ %a :@ %a =@ %a%(%)@]",Vz=42623,Vy=2381,ajQ=404,ajP=386,g8="])",ajM="fAnyChar",ajN=65089,ajO=8494,jU="value_val",xA=999,dW=126,ajL=491,Vw="CtAtt",Vx=11476,ajJ=") ",ajK=7716,cj="termlang/termlangext.ml",Vv="\n(consider setting variable Quotation.dump_file, or using the -QD option)",z6=145,q5="if",Vu=12303,cT=18608,q4=-180079743,ajI="IdLid",Vs="%S@;<1 2>",Vt=11474,mp=182,ajH=65508,Vr=42833,ajG="OvNil",xz=358,Vq=43014,ajF="CeTyc",Vp="PaRec",mo=-692111574,Vo="ViNil",z5=420,Vn=65279,Vl="Path.relative_to_*",Vm=7866,ajD=42843,ajE=2364,ajC=421,Vk=" ~imit~ ",z4=-976970511,ajB=7752,Vj=11372,q3=464,xy=546,Vh="TyQuM",Vi=11448,ajz=1369,ajA=748,Vf="scanf.ml",Vg=11395,ajy=3773,xx=-932405198,Ve=70206,xw=537,aP=383378679,ajw=42915,ajx=1013,Vd=7923,ajv=65284,aju=7842,ajs="CeNil",ajt=1314,ajr=11480,z3=" True",Vc="ExTyc",ajq=3633,Vb=65047,xv=334,Va=120571,ajp=1308,U$=70108,ajo=11478,U_=7899,U9=393,ajn=42886,U7="SgExt",U8=42917,az="<hv0>",ajm="CrVal",U6=71462,U4="< .. >",U5=6464,pI=491712424,U3=1212,pJ=290,ajl=7827,ajj=7818,ajk=1205,xu=548,U2=328,U0=9002,U1=8029,aji=203,UZ=10097,z2="src/batMap.ml",eX="patt",z1=155,ajh=2224400062,UY=126530,ajg=12543,ajf="Camlp4: Uncaught exception: %s",UX=584,aje=11475,UW=397,ii="f",pH=-613273822,q2="typing/btype.ml",xs=533,xt=468,ajd=1304,h6="clause",ajb=1256,ajc=10221,UV=3895,aja=69633,eK="string",UU=7780,UT="ExId",ai_=1472,ai$=1146,ai9=9001,US="%f",ai8="@[<hv0>@[<hv2>type%a %a@]%(%)@]",ai6="TyApp",ai7=65095,jT=192,UR="invalid pattern",UQ=11778,UP=7911,UO="SgVal",q1=542,ai5=1611,z0=507,xr=457,UM=65087,UN=571,pG="as",ai4=7863,UL=249,h5=" ~ ",UK=43867,xq="Linking_error (",ft="class_expr",UJ=1188,ai3=42590,ai1=7751,ai2=42588,UI=2662,UG="<array len is 0>",UH=2879,ai0=42829,UF="CtSig",UE=42817,aiZ=2088,UC="import",UD=1020,aiX="ghost",aiY="TyAtt",aiU="PrNil",aiV="clone",aiW=43443,mn="\\",aiT=7704,UB=2641,xp=340,Uz="SgNil",UA=7915,ih="((%a)[@@%s %a])",zY=369,zZ=283,Uy=3406,aiR="ExInt32",aiS=11468,Uw=7857,Ux=11802,Uu=7733,Uv=7702,aiQ=42605,zX=551,Ut=" (ghost)",Ur="ExIfe",Us=12296,aiP=10645,Uq=1470,q0="set_loc_and_comments",xo="Sys_blocked_io",xn="_none_",aiO="TyVrnInfSup",Up=489,aiM="PaOlb",aiN=7849,aiK="CtEq",aiL=401,pF=-97,g="Ast",aiJ=11631,Uo="CgVir",h=17059,aiH=12297,aiI=583,xm='" in entry "',aiG=11804,Um=42910,Un=42845,h4=20185,qZ=306,aiF=71351,Ul="X",Uk=7694,bF="-",pE=315942744,qY="@ %a",aiE=7931,bV=-578066109,Uj="rec",Uh=-685813165,pD="quoted_string",Ui="@]@;<1 2>",Ug=11482,Uf=42790,aiD=42858,xl=538,zW="invalid char token",aiB="<:",aiC="MtWit",aiA=1215,Ud=71339,Ue=12288,Uc=494,xj=318,xk=266,Ua=1291,Ub=7910,T$=1123,T_=7683,eW="ctyp",T9="LINE_DIRECTIVE ",aiz='Error: entries "%s" and "%s" do not belong to the same grammar.\n',T8=-55,aix=" => ",aiy=42626,aiw=11396,aiv=65289,T7=10637,aiu=43010,xi=444,ait=4226,lM=-10,xh="' '",T6="bool",h3="private_flag",T4=43645,T5=7791,xg=258,q="",xf=473,ais=11420,zV=3133,T3=7770,aiq=936769581,air=3654,T2=1326,aip="Quotation not terminated",T1=121476,aio=1251,T0='" and "',zU=547,TZ=1202,ain=750,lL="reset_semi",TY=556,aim=2741,TW="(module",TX=8505,ail=6683,lK="interf",xe=550,aik=3517,g7="+",ig=" : ",aii=65952,aij=11437,aih=7771,TV=70003,aig=1285,aif="%li",zT=1321,aid=68296,aie=7687,pC=595845474,aic=120713,pB="functor_arg_var",TU=42599,ie=-32,zS=483,aia="PrPrivate",aib=2891,qX=50834029,TT=3270,ah$=-65,zR=352,TR="\nParsing error at ",TS=8971,ah8="{\n",ah9=11812,ah_=8218,qW=337,ah7=42593,TQ="PaVrn",ah6=7769,ah5=7727,TP=7745,ah4="LIST0 %a SEP %a",TO=1244,ah3=42600,TN=42860,ah2=1138,TL=-2147483648,TM=71350,ah1=8472,TJ=";;",gh="(%a)",TK=3967,ah0=44011,TI=65096,zQ="precision",pA="*)",TG=12317,TH=11647,gg=".\n",TF="TyOpn",ahZ=11445,id=" expected",zP=471,TE=6158,TC=11403,TD=1178,ahY="jsError",a$=-903208930,ahW=42813,ahX=65340,ahV="StExc",TB=6964,ahU="CrMth",qV=", character ",TA="\n}",ahT=7887,ahR="ExOpI",ahS=42638,Tz=11460,Ty="pfun",Tx=1287,xd=539,ahQ=7767,Tw=7867,dV=726316908,g4="camlp4/Camlp4/Printers/OCaml.ml",Tv=561,zO=545,ahP=42810,Ts=7761,Tt=7732,Tu=1417,ahO=377,pz="antiquotation not allowed here",Tr="while",bM="camlinternalFormat.ml",xc=356,ahN=553,ahM=1016,xb=903,Tq="MtAtt",ahL=11815,Tp=7815,To="ExStr",ahK="character ",Tn="%s %a",xa=269,ic=1073741823,Tm=1180,ahJ="Subst.modtype_path",gm="module_type",Tk=3859,Tl=505,ahI=998,w$="meta_list",Tj=43002,Ti="Unix",ahG=1144,ahH=4145,Th=65081,ahF=42905,Tf=119970,Tg=10639,jz="reset",w_=455,ahD="PaNativeInt",ahE="ExFor",w9=307,ahC=5120,Te="typing/ident.ml",ib="when",Td="CrSem",ahB=-87,ahz=1000000010,ahA=990,Tc=7822,Tb=1282,Ta=233950746,ahy=9665,zN="struct",S$="fNonterm",ahx=11429,cW=125,S_=1133,jS=847852583,ahw=42803,S9=":\n  Type ",S8=" =@ %a",ahv=7927,ca=400743937,zM="input",w8=292,ahu=3201,S7=7826,S6="@]@ @[<2>and@ ",mm="object ",qU="patt3",ahs=1126,aht=10218,jR=34288063,ahr=7779,S5=6752,w7=288,py=572,ahp=8287,ahq=1226,aho=42585,S3=43587,S4=7804,ahn=42645,px="set_curry_constr",ahm=10640,S2=2554,S0=12308,S1=10091,ahl=11456,ahk=67671,pw=",@ ",w6="sig",ahj="labeled expression not allowed here",SY=1250,SZ=11398,qT=465,ml=170,SX=7742,w5=299,ahi=42642,w4="(module ",ahg="MtId",ahh="ExFun",ahf=42508,SW="TyId",ahe=1145,SV=6783,zK=472,zL=314,SU="ExWhi",ahd=451,ST=7824,qS=215,SS="@[<2>functor@ @[<1>(%a :@ %a)@]@ ->@ %a@]",w3=378,ahc=2748,ahb=994,SQ=": [ ",SR=7920,w2="anon",aha=42857,SP=11490,ag$=42647,SO=12298,w1=324,zJ=158,SM=":=",SN=988,zI=304,SL=8660,ag_=2519,gf=254,SK=3407,mk="simple_module_expr",ag9=42852,SJ="BiAnd",w0=278,SI=7792,ag7=7722,ag8=7379,ag6="TyVrn",cS="[]",SG="TyAli",SH=1229,ag5=8485,SF=72250,SE=3893,ag4=7924,wZ=15052,ag2="params",ag3=64297,agZ='Error: entries "',ag0=69632,ag1=1293,SD=3449,agX=8488,agY=7703,SC=7690,agW=7886,SB=43765,agV=3892,SA=7082,agT=43762,agU=68096,Sz=1023,wY=282,Sy=3722,agS=7750,dU=">",Sx=7725,wX=552,zH=414,Sw="ExLaz",Sv=-240,mj="constructor_type",zG=428,Su=72767,St=8304,Ss=42853,zF="method",Sr=8031,Sp="TyObj",Sq=42569,agR=7850,agQ=1140,bW="<0>",agP=42856,So=42628,Sm=65291,Sn=1281,fs=17942,zE=276,Sl=1290,agO="PaTup",Sk=10748,agN=71487,pv=4848801,ge="@[<2>%a@]",agM=7739,Si="TyVrnInf",Sj="TyQuP",agL=8239,Sh="@[<2>~%s:@ %a@]",agK="TyPkg",pu="@[<2>fun@ %a@]",Sg=1310,Sf=8968,agJ=7853,Se=42791,zC=" ~N ",agI=6314,zD=531,agH=11816,Sd="@[<v 0>%s: [ ",wW="do",Sc=3008,agF="ExTry",agG=230,Sb=-881952697,agE=11377,Sa=7904,R_=11811,R$=42597,agD=3716,R9=10092,wV='scanf: bad conversion "%*"',gl="class_sig_item",agC=42920,R8=17066,wU=461,agB=3663,agA=11436,agz="<hv1>",agy=1238,mi=172,zB="private",agw=" imports from ",agx=42808,agv="@[<2>(module@ %a@])",agu=70367,_=-1021444811,R7=749,R6=7763,agt=1191,ags=3262,zA=526,R5=65288,mh="class_declaration",agq=65077,agr=10715,R4="PaInt32",agp=1015,pt=212766230,wT=295,h2=223,agm=3749,agn=4238,ago=500,agk=201,agl=6070,R3=42861,wS=308,a8=" :",ps=296,zz=373941027,R2=7903,agj=42576,R1=42567,R0=1185,lJ=168,cr=3901504,agh="< >",agi=7775,agg=785140586,agf=67859554,zy=1139,RZ=1002,RY="CeLet",age=42565,pr=-796725139,RX="PaInt64",agd=70107,RW=557,RV=65520,mg=191,agc="[unknown]",RU=890,cA="%s",aga=121461,agb=7933,RT=12313,af$=6965,RS=7682,jy=190,cF=15043,af_=6846,RQ=70464,RR=7873,RP=66378,zx=129,af9=10713,pq=326,pp="get",mf="class_params",af8="PaInt",dA=",",af7=42838,po="%a%(%)",RO=42596,af5="StMod",af6=42581,zw=372,RN=42566,af4=11458,RM=11449,ej=17064,en="o",RL="%t%a",lI="list",RK=42842,af3=7926,fr=120,RJ=885,RI=3840,af2=72192,zv="|]",wR="=>",RH=42903,wQ="total queries",af1=11419,af0=11451,RF=17058,RG=1184,zu="@[<2>[@ %a@]@ ]",afY="TyPol",afZ=2362,RE=3066,RD=11788,RB=11840,RC=65342,afV=42636,afW=1274,afX=7738,RA=65080,afU=7774,Ry=7754,Rz=1150,afT=1207,afS=7143,bL=112,Rx=1132,afQ=65118,afR=8125,afP=937565914,Ru="TyOfAmp",Rv=7884,Rw=8527,afO="[<",zt=336,Rt=11455,afN=42809,qR=274,Rs="this is the start of a comment",gk="class_str_item",Rq=42896,Rr=1243,afM="dbt_comp",Ro="SgCls",dx="[",Rp=11803,Rn=70842,wP=286,afL=1120,Rk="ExAsr",Rl=42796,Rm=42562,afK="__",me=3458177,afJ=8611,afI=7073,wO="set",afF="Error in staged code at %s.\n",afG=6823,afH=3024,qQ=2048,afE=11450,Ri="failure",Rj=42846,Rg=3542,Rh=7871,jQ="<v2>",afD=10223,lH="seq",afB="TyCol",afC=1014,Rf=207,afz=42893,afA=7823,zs=1269,Re=1259,Rd=65379,Rc=8275,Rb="constructor_declaration",Q$="OvOverride",Ra=7894,afx="3",afy=70747,wN="@[<2>%a@ ->@ %a@]",afw=42578,wM=260,Q_="SgClt",zr=339917928,Q9=7805,J=246,afv=1218,afu=2620,aft=1247,afs=42884,Q6=8276,Q7=8250,Q8='File "',wL="Stack_overflow",afr="fString",Q5="Error in staged code at ",afp="dbt_auto",afq=3900,afo=120687,Q4=42571,Q1=6978,Q2=11473,Q3=3860,afn=120745,zq=1245,wJ="done",Q0=126590,wK=287,wI=298,QY=-46,QZ="mode",afm=11404,pn=-498494526,wG='No level labelled "%s" in entry "%s"\n',wH=291,afl=43047,lG="nil",ei=17502,afj=42650,afk=11459,QX=7848,wF=530,ay="<hv2>",afh="ExRec",afi=11421,qP=106,qO=-535869547,g3="direction_flag",lF="expr_list_cons",QW=43064,pm="?",eh="false",afg=7715,aff=10094,QU=1005,QV=3725,wE=133,QT=1749,zp=1309,afd=3415,afe=2510,QR="@[<2>?%s:@ %a@]",QS=42892,wD=522,QP=244,QQ="String literal not terminated",zn=544,zo=462,afc=439,afa=73018,afb=12292,QO="%a@\n",ae$="nonterm",QN=7919,ae_=1203,QL=43643,QM=7880,ae9=42793,ae8="ifte",pl="functor_args",QK=65372,ae7="action",ae6=11465,ae5=-682496553,QJ="class ",ae4=497,QI=7900,QH=12312,QE=7721,QF=70197,QG=7841,wC="Invalid_argument",eV=639620572,ae3="@[<2>exception@ %a%(%)@]",QC="PaAtt",fp="class_type",fq="module_expr",QD=1176,QB=7930,zm="( ",bt=930693872,Qz="%ni",QA=43714,ae2=1154,ae1=72768,Qy=1000567099,Qx=11424,md=119,wB=1213,qN="mutable",ae0=12349,ia="h",Qw=11427,aeY="TyAny",aeZ=7861,aeX=64285,aeW=42595,wA=-958984497,aeV=391,zl=540,Qu=114394215,Qv=12539,pk=555,cV="0",Qs=1478,Qt=1272,dj="p",lE=121,Qr=2768,aeU=1129,Qp=11440,Qq=1175,aeS="PaAli",aeT=11406,aeQ="ExOvr",aeR=42819,Qo=-95532237,aeP="SELF",Qn=42818,aeO=42822,zk=131,aeN=2893,Qm="nativeint",pj=349,aeM=42828,Ql=7689,di=105,pi="rec_binding",aeL=2365,qM=-944563106,aeK="'*'",h1="y",g2="[ ",Qk=11408,aeJ='"%s"',aeI=65048,aeH=70841,aeF=509,aeG=11433,aeE=10181,Qj=1809,Qi="TyDcl",qL=1026883179,aeD=1283,wz=139,Qh=11402,ph=362,aeC=582,Qg=6618,aeB="class type ",Qf=7813,aez=11407,aeA=10216,Qe=233,Qc=10635,Qd=10628,Qa=1318,Qb=4152,aex="ExArr",aey=5760,zj=351,pg="patt5",P$="TyAnM",aew=7874,aev=42594,P_=1228,lD="node",aeu=4159,P8=3901,P9=2042,P5=211,ax=935822067,P6=70280,P7=42830,aes=42895,aet=7719,wy=", characters ",zi=222,P4=12300,qK=187,P3=7782,lC=173,aer=6211,P2="TyCom",P1=1171,aeo="delete_range",aep=42906,aeq=11507,zh="Out of memory",aen=7788,P0="-_",aem="CeStr",PZ=7799,ael=65092,K=4298439,PY=42587,aek=2307,ci=100,aej=558,PX=1279,aei=7709,aeg=1209,aeh=487,aef=7865,aee=7757,wx=374,PW=4800,aed=42935,jP=438,PV=1241,PT="Warning: trying to recover from syntax error",PU=42837,g1=1e3,lB="type_params",lA=-12944805,ww=138,PS="MuNil",aec="CeEq",aeb=42625,aea=2749,PR=42797,zg=528,PP=2084,PQ=42611,ad$=-1007365033,cU=127,PO=912,mc=" )",ad_=12294,ad9=43260,PN=2877,pf=273,PM=42826,ad8="TyLab",bc=")",ad5="let",ad6=72766,ad7=1233,ad4="curry_constr",ad3="ExAss",qJ="nan",PL="ExFUN",wv=180,PK=11565,ad2="WcMoS",PJ=42898,jx="/",ad1=10712,PH="TyMut",PI=44005,ad0=1249,PE=8261,PF=1769,PG=7856,PD=10214,adZ=7869,PC=42563,adY=65049,PB=4301,adX=-916138799,PA=3572,adW=7860,lz="function",Pz=11506,qI=301757210,Px=1294,Py=10630,adU=1268,adV=586,Pw=7809,Pt=65344,Pu=113820,Pv=15040,adT=3405,Ps="PaLaz",adS=42606,adR=1315,Pr="ExMat",adP=65512,adQ=10182,adO=3761,zf="End_of_file",Pq=2654,qH="whenclause",mb="cons",Po=-435930364,Pp="new",gd="..",ze="Failure",adN=1124,ma="with",Pn=10220,adM="Path.belongs",Pm=11485,qG="patt_class_expr_fun_args",adJ="fConcat",adK=7415,adL=7802,Pl=1257,adI=588,Pk=382,qF="inherit",h$="camlinternalOO.ml",adH=", char ",Pi="PaChr",Pj=1193,wu=323,Ph=8249,adG=10714,qE=520,adF=42644,Pe=43259,Pf=11443,Pg=7918,adE=10749,Pd="@[<2>[ %a ::@ %a ]@]",jw="implem",Pc=42789,Pb="   ~ %a ~imit~ %a --!>\n   ~= %a := %a\n%!",wt=1163,pe=959246196,Pa=1237,O$=42883,zd=535,O9=42591,O_=1196,gc="int_of_string",adD="None",O8=4193,adC="of_tuple",O7=881,O6=1299,adB=42598,ly="functor",O5=70196,ws=271,adA=2880,zb="or",zc=335,ady=42880,adz=8223,O4=3530,O3=-67648294,O2=2047,wr=-856045486,O1=7862,adx="\xe2\x8b\xaf",jO="B",adw=2817,em="end",OZ=" not properly initialized.\n",O0=7701,pd=936572018,qD="NONA",jN="loc",adv=213,OY="ReRecursive",adu=1262,OX=7893,adt=7711,OW=69634,OV="Grammar.extend error",wq="%a :@ %a",OU=575,wp=151,l$="@[<1>(%a)@]",OT="lexing: empty token",jM="constrain",adq=418,adr=42802,ads=585,lx=538139819,OS=590,qC=385,OR=42855,adp=436,ado="+_",OQ=6972,adn="(%a : %a)",za="and ",pc=1e8,a7=" =",lw="ctyp1",adm=11414,lv="simple_expr",dw="%a",eU=", ",adl=1248,adk="init.makam",OP=1131,OO="MeId",ON=73030,adj=4096,adi=7821,qB="set_comments",adh=7913,OM=6450,OL="fCharClass",adg=3149,adf=1149,OK=42580,ade=3031,adc=7816,add=7759,OJ=1265,ada=417971783,adb=69821,ac$="ExAsf",wo=137,jv=116,ac9=574,ac_=492,OH=42607,OI=7934,ac8=6916,ac7=7876,y$="@ | ",ac6=92997,OF=65112,OG=7928,ac5=120513,dh="()",ac3=-123,ac4="@.",y_="%i",OD=7699,OE=1168,OC=8126,ac2=7150,lu="success",ac0=2112,ac1=1192,OA="'%a",ju="i",OB=1190,Oy="TyCls",Oz=7902,Ox=1311,acY=437279279,acZ=42651,Ow=2677,Ov=2765,acW="LNil",acX=3112,acV="OSome",acU=7897,acR="multiple private keyword used, use only one instead",acS="PaOrp",acT=42811,al=117174720,acQ="wrong call to external predicate expecting concrete type\n",Ot="CgInh",Ou=1305,Os=2972,lt="patt_expr_fun_args",Or=12880,acP=61641480,Oq="TyAnP",Op=10632,y9=-43,acO=42999,acM=126503,acN=65020,wn="[|",Ok=72884,Ol=42933,Om=42836,On=11500,Oo=7768,acL="SgDir",Oj="fd ",qA="w",y8="int",Oh="TyArr",Oi=43452,qz="nonrec_flag",ls="var",Og=7877,acK="ExNil",qy=365,Of=8232,y7=354,pb=417,acJ="ExPkg",y6=937215358,Oe=1284,acI="initializer",y4=371,y5=534,wm=186,wk=466,Od=42873,wl=355,acG=11446,acH=511,jL=-88,acF=65129,acE=6754,Ob=71236,Oc=1236,acC="of",acD=3894,Oa=">>",N$=65115,N_=7706,wj="len",N9=1264,N7=1648,N8=1520,N6=11416,N5=1143,N1=":-",N2=3065,N3=499,N4='", line ',acA=1147,acB=1214,gb="b",acy="%a.@,%a",qx=109,acz=1600,acw=43019,acx=991,qw=317,y3=1300,wi=1016606245,NZ=42897,N0=42918,wh="@[<v0>%a@]@.",NY="PaTyc",y2="meta_bool",acu=72751,acv=65079,pa=353,wg=413,act=8580,NX=1748,y1=214,acs=65123,NW=7789,NU=42894,NV=1277,acq=" !! ",acr=1182,lr="patt4",acp="downto",NS="@[<2>open%a@ %a%(%)@]",NT=8025,wf=1121,NR=1808,NQ=10636,aco=1327,qv="simple_patt",acn="ocaml.doc",NP="MuMutable",acm=7710,NO=11559,acl=7870,ack=985,aa=18618,acj=7776,we=330,aci=44012,ach="ReNonrecursive",acg="CgSem",acf=42592,acc=7810,acd=10101,ace=7684,NM="PaLab",NN=65292,acb=8262,NL=7713,aca=7393,d=17056,ab$=42570,ab_=7896,as=".",NK=65375,eg=65535,NJ="<hov 2>",ab9="ExTup",g0=" or ",ab8=42635,yZ=153,ab7=11470,y0=419,NI=11369,lq="camlp4/Camlp4/Struct/Camlp4Ast.ml",ab4="MtNil",ab5=42622,ab6=1246,NG=7909,NH=986,ND="@[<2>#%a@]",wd=518,NE=9839,NF=7784,ab3=7858,lp="index",NC=7808,qu="@[<2>%a@ (%a)@]",NB="applysubstinv",ab2="?%s",yY=578,NA=66045,ab1="value",yX=481,qt=301,abZ=42602,ab0=56320,Ny=10643,Nz=119964,jt=114,Nx=1136,abY=4237,fC="sig_item",Nw="TyTypePol",abX="ExNew",lo="under_pipe",ck=123,abW="MbNil",yW=360,ch='"',Nv=42786,jK=-310707386,wc=-57574468,yV=163,abV=11447,bK="(",abU=1296,Nu=11517,abT=11426,Nt=42881,abS="StOpn",cR=17940,Ns=5788,abR=11401,Nr="BiEq",abQ=390,Nq=11502,Np=7825,No=488,Nn="MbAnd",Nm="fNeg",Nl=120134,Nh=7786,Ni=71102,Nj=65122,Nk=1758,abO="```makam\n",abP=" dumping result...\n",Ng=42804,abN=7777,Nf=120778,wb=348,yU=285,qs=164,Ne="TyRec",Nd=42633,v$=232,wa=344,yT="Division_by_zero",abM=43359,o$=-1057318604,Nc=11411,Na="fLookahead",Nb=883,abL=43632,yS=480,v_="`%a",abK=42816,eT=": ",abJ=11499,M$=42604,abI=2970,M_=3899,v9=57343,yR="dyn",eS="m",M9=" ::@ ",qr="'",abH=508,M8=1306,w=17951,v8=157,abG=8319,M7="ViVirtual",M6=1181,by=3257473,abF=70749,abE=1189,v7=270,M4="ExInt",M5=11466,jJ=";@ ",abC=7712,abD=8486,abB=8659,M3=8523,v6=289,abA=11467,abz=7912,yQ=154,eR="val",M2="TyOlb",abx="TyOr",aby=11799,abw=43766,M0=2509,M1=3294,MZ=11361,o_=2147483647,v5=65536,abu=72873,abv=7720,MX="\\\\",MY=1219,abt=1200,qq=319,MW="%a,@ %a",MV="MeApp",abq=8217,abr=7800,abs=7714,yP=357,MU=11444,abp=126500,yO=275,MT=11412,a1="camlp4/Camlp4/Struct/Camlp4Ast2OCamlAst.ml",l_="mk_expr_list",abo=3751,abn="count",MQ="Parse failure",MR=70854,MS=7783,MO="Impossible.\n",MP="MtAlias",yN=149,abk="TyVrnSup",abl=72263,abm=11381,i="@ ",MN=11367,abj=7693,ML=43713,MM=42919,abh="McOr",abi=" ( ",MJ="MtFun",MK=7882,qp="Loc",MI=10099,abg=7916,abe="@[<2>module type %a =@ %a%(%)@]",abf=7717,v4="( %s )",MH="ExFlo",MG=902,MF=-1012446326,yM=478,a6=-900602447,e=17065,abd=2947,MD=10095,ME=1479,v3=" --!>\n   ~= ",MC=7812,abc=3200,abb="PaNil",qo=130,qn="with_constraint",aba=8333,fB=181,MB=42815,yL=406,Mz=12315,MA=1298,dv=":",aa$="@[<2>functor@ ()@ ->@ %a@]",My=2555,aa9=11415,aa_=7781,yK=345,Mx=42577,aa8=65377,o8="fail",o9=389,Mw="'%s'",aa7=245,Mv=8124,aa5=9084,aa6=42934,v2=320,aa4=42603,v1=-35142e4,aa3="TyMan",yJ="<<",aa1=126523,aa2=42630,o7="<hov 0>",fo="true",Mt=42821,Mu=42564,aa0=485,v0=359,yI="file ",aaY=2274,aaZ=7814,vZ=381,y=17270,l9=104,aaX=42643,gj=108,Mr=-115478020,gZ="Map.bal",Ms=42832,Mp="PaStr",vY="@[",Mq=7737,aaW=7889,aaV=12295,o6=65599,aaT="StRecMod",aaU=1319,Mo=-215364664,vX="close_out",yH=310,Mn=7901,gY="l",Mm=1179,o5=162,Ml=371166853,Mk="@[<2>%a :@ %a@]",aaS=1125,Mj=65072,aaQ=756514606,aaR=11453,aaP="Result~~",jI="<v0>",vW=305,l8=166,Mi=12347,vV="contents",Mh="fChoice",Z=17955,vU=363,aaO="CrNil",aaM=8526,aaN=43596,Mg="utils/uChannel.ml",N=248,aaL=7888,aaJ=8450,aaK=2691,qm=532,Mf=42902,Me="CtFun",fA="invalid format ",aaI=73031,Mc=126553,Md=113823,aaH=68223,Mb="<@",yG=341,aaG=119365,Ma=569,yF=156,L$=894,aaF=7907,a9=-946416027,L9="MtQuo",vT=521,L_=1114111,o4=-69,gX="<hov>",aaE=2858,L8="%u",L7=-78301180,fn=110,o3="%S",L6=1286,bp=18616,aaD=3973,L5=11431,aaC=-200533286,aaB=11472,L4=42806,eQ="ident",aaA="@{",L3="TyPrv",L2=183,L1="trace",L0=11430,yE=" : file already exists",o2="LIST1 ",LZ=42825,LV=1297,LW=11452,LX=7747,LY=1165,LU="Cannot print ",aaz=7707,LT=7878,LS=" ~N name update for Meta[",aay="ExSnd",yD=529,LR=43697,o1=280,yC=142,LQ=1164,aax=7898,LP=42907,LO=8500,vS=484,LN=-224,ak=17057,aaw="@[<2>module rec %a%(%)@]",aW="termlang/termlangprolog.ml",aav=1475,LM=1320,aau="total clauses",h_=102,yB=",\n",LL=11817,LJ=120629,LK=1128,aat="neg_infinity",LI=12310,LH=6313,o0="Win32",aas=989,ql="<h>",aar="ONone",LF=8614,LG=6753,g6="c",aaq=65086,vR=370,aap=12301,dT=806013793,aao=-92,LE=7744,aan=43261,qk="Match_failure",LC="NEXT",js=169,LD=7729,aam="CeAtt",LB="%s@ LEVEL@ %S",LA="CtCon",Lz=7846,aaj="MbColEq",aak=7872,aal=7859,aah=516,aai=384,Lx="L",Ly=887,aag=71229,aaf="ocaml.text",fz="a",aae=42882,aad=7796,Lv=11841,Lw=11479,gi=111,aac=7762,Lu="MbCol",vQ="lazy",fy="match_case",aab=917505,yA=388,$$="CeCon",aaa=10090,yz=361,$_=11484,vP=429,Lt=2142,jr=23515,Ls="???",vO=459,$9=10093,Lr="ExLet",ln="fun_binding",Lq="MeNil",vN=367,$8=142626632,yy="%",ef="s",$7="|}",Lo="#",Lp="Camlp4: Uncaught exception: ",$6="@[<2>class type %a%(%)@]",vM=582930447,$5=11789,Ln=3260,qj="@;<1 2>",l7=";",Lm=554,Ll=1270,$4=-1053842372,$3=42831,Lj=6742,Lk=2800,yx="=",Li=42839,Lh=43642,Le="@[<2>%a%a@]",Lf=42582,Lg=1317,$2=11780,qi="Path.parent",Ld=1225,$1=42561,$0="~",Lb="StCls",Lc=70106,yw="utils/stateEnvMutableMonad.ml",$Z="Internal path",La=65376,oZ=188,l6="and",K$=1313,$Y="MtSig",K_="OPT %a",yv=366,$X=1198,$W=1900,K9=7879,yu=-34,$V="SgSem",K7="\xe2\x96\xb7",K8=42891,fx=383981217,ga="g",K6=1183,cQ="->",$U=4295,K5=10638,yt=577,K4=443,ad=781961420,qh="LIST0 ",vL="prop",K3=1208,K2=7817,K1=11428,K0=7790,$T="ExNativeInt",$S=6109,$Q="SgExc",$R=42639,KZ=7806,$P=11368,KX=1012,KY=70461,KU=8522,KV=43395,KW=42584,lm=" := ",KT=10633,$O=3898,KS=7819,lk="with_constr",ll=178,KR=70726,$N=3261,qg=216,$M=1278,ee="u",KP=10217,KQ=3896,ys="0x",$L=42634,KO=8970,$J=-822975930,el="\n",$K=42787,l5=175,$I=1172,ao=17494,eP=32768,$H=7838,KM=11413,KN=7755,qf="camlp4/Camlp4/OCamlInitSyntax.ml",$F=11809,$G=7753,$E=6103,KL=4253,$D=7688,KK=1547,vK=339,KH="ExSem",KI="CtCol",KJ=70313,KG=42805,$C=1137,l4='"\n',KF=2074,KE="fParam",$A="CgMth",$B=4696,KD="@[<2>(%a :@ %a)@]",KC=43494,$z=-241395589,qe=165,KB=7412,$y=7787,KA=1807,$x=7681,yr=134,jH="'+'",$w=996,qd="set_semisep",qc="%a%a",Kz=1266,$v=7845,$u=-1055160191,Ky="WcNil",j="<2>",Kx=2761,$t=1423,oY="functor_arg",Kv="ExObj",Kw=66463,$s=11409,$r=1791,$q=10642,$p="%a =@ %a",$o=884,Ku=2557,Kt="ExSeq",$n=42794,Kr=" FAILED\n",Ks="@[<2>%a =@ %a@]",Kp="%s__",vJ="src/batInnerWeaktbl.ml",Kq=65343,l3="under_semi",Ko="''",$m="CgCtr",Km=42912,Kn=1307,$l=758940238,Kk=43471,Kl=42560,Kj=1004,cG="t",$k=432,Ki=1177,yq=-410385343,$i=987,$j=7728,$h="stream.ml",Kh=1280,$g=1253,Kg="@[<1>{@[%a@ @]}@]",vI="\xe2\x81\xbf",h9="virtual_flag",$f=2416,Ke="labeled pattern not allowed here",Kf=7695,Kd=42640,$e="StMty",h8="mutable_flag",yp=267,$d="BiNil",Kc=11805,$c=42849;function
apa(d,b,e,c,f){if(c<=b)for(var
a=1;a<=f;a++)e[c+a]=d[b+a];else
for(var
a=f;a>=1;a--)e[c+a]=d[b+a];return 0}function
bTl(a){var
c=[0];while(a!==0){var
d=a[1];for(var
b=1;b<d.length;b++)c.push(d[b]);a=a[2]}return c}function
bTm(e,f,d){var
a=new
Array(d+1);a[0]=0;for(var
b=1,c=f+1;b<=d;b++,c++)a[b]=e[c];return a}function
rE(d,e,c){var
b=new
Array(c);for(var
a=0;a<c;a++)b[a]=d[e+a];return b}function
Bu(b,c,a){var
d=String.fromCharCode;if(c==0&&a<=adj&&a==b.length)return d.apply(null,b);var
e=q;for(;0<a;c+=fE,a-=fE)e+=d.apply(null,rE(b,c,Math.min(a,fE)));return e}function
mJ(b){if(d1.Uint8Array)var
c=new(d1.Uint8Array)(b.l);else
var
c=new
Array(b.l);var
e=b.c,d=e.length,a=0;for(;a<d;a++)c[a]=e.charCodeAt(a);for(d=b.l;a<d;a++)c[a]=0;b.c=c;b.t=4;return c}function
da(d,e,b,f,c){if(c==0)return 0;if(f==0&&(c>=b.l||b.t==2&&c>=b.c.length)){b.c=d.t==4?Bu(d.c,e,c):e==0&&d.c.length==c?d.c:d.c.substr(e,c);b.t=b.c.length==b.l?0:2}else
if(b.t==2&&f==b.c.length){b.c+=d.t==4?Bu(d.c,e,c):e==0&&d.c.length==c?d.c:d.c.substr(e,c);b.t=b.c.length==b.l?0:2}else{if(b.t!=4)mJ(b);var
g=d.c,h=b.c;if(d.t==4)if(f<=e)for(var
a=0;a<c;a++)h[f+a]=g[e+a];else
for(var
a=c-1;a>=0;a--)h[f+a]=g[e+a];else{var
i=Math.min(c,g.length-e);for(var
a=0;a<i;a++)h[f+a]=g.charCodeAt(e+a);for(;a<c;a++)h[f+a]=0}}return 0}var
A9=da;function
bT5(b,a){throw[0,b,a]}function
j9(b,a){if(a.repeat)return a.repeat(b);var
c=q,d=0;if(b==0)return c;for(;;){if(b&1)c+=a;b>>=1;if(b==0)return c;a+=a;d++;if(d==9)a.slice(0,1)}}function
e2(a){if(a.t==2)a.c+=j9(a.l-a.c.length,"\0");else
a.c=Bu(a.c,0,a.c.length);a.t=0}function
apj(a){if(a.length<24){for(var
b=0;b<a.length;b++)if(a.charCodeAt(b)>cU)return false;return true}else
return!/[^\x00-\x7f]/.test(a)}function
bUg(e){for(var
j=q,c=q,g,f,h,a,b=0,i=e.length;b<i;b++){f=e.charCodeAt(b);if(f<a2){for(var
d=b+1;d<i&&(f=e.charCodeAt(d))<a2;d++);if(d-b>jW){c.substr(0,1);j+=c;c=q;j+=e.slice(b,d)}else
c+=e.slice(b,d);if(d==i)break;b=d}a=1;if(++b<i&&((h=e.charCodeAt(b))&-64)==a2){g=h+(f<<6);if(f<jD){a=g-12416;if(a<a2)a=1}else{a=2;if(++b<i&&((h=e.charCodeAt(b))&-64)==a2){g=h+(g<<6);if(f<mx){a=g-925824;if(a<qQ||a>=55295&&a<amF)a=2}else{a=3;if(++b<i&&((h=e.charCodeAt(b))&-64)==a2&&f<aa7){a=h-63447168+(g<<6);if(a<v5||a>L_)a=3}}}}}if(a<4){b-=a;c+="\ufffd"}else
if(a>eg)c+=String.fromCharCode(55232+(a>>10),ab0+(a&Sz));else
c+=String.fromCharCode(a);if(c.length>fE){c.substr(0,1);j+=c;c=q}}return j+c}function
bUf(a){switch(a.t){case
9:return a.c;default:e2(a);case
0:if(apj(a.c)){a.t=9;return a.c}a.t=8;case
8:return bUg(a.c)}}function
c$(c,a,b){this.t=c;this.c=a;this.l=b}c$.prototype.toString=function(){return bUf(this)};function
a(a){return new
c$(0,a,a.length)}function
Br(c,b){bT5(c,a(b))}var
b4=[0];function
fJ(a){Br(b4.Invalid_argument,a)}function
Bs(){fJ(akp)}function
bTn(a,b){switch(a.t&6){default:if(b>=a.c.length)return 0;case
0:return a.c.charCodeAt(b);case
4:return a.c[b]}}function
ha(b,a){if(a>>>0>=b.l)Bs();return bTn(b,a)}function
bTo(a,c,b){b&=at;if(a.t!=4){if(c==a.c.length){a.c+=String.fromCharCode(b);if(c+1==a.l)a.t=0;return 0}mJ(a)}a.c[c]=b;return 0}function
dC(b,a,c){if(a>>>0>=b.l)Bs();return bTo(b,a,c)}function
bUo(c,e){var
d=c.length,b=new
Array(d+1),a=0;for(;a<d;a++)b[a]=c[a];b[a]=e;return b}function
cI(b,a){if(b.fun)return cI(b.fun,a);var
c=b.length,d=a.length,e=c-d;if(e==0)return b.apply(null,a);else
if(e<0)return cI(b.apply(null,rE(a,0,c)),rE(a,c,d-c));else
return function(c){return cI(b,bUo(a,c))}}function
bTk(){fJ(akp)}function
z(a,b){if(b>>>0>=a.length-1)bTk();return a}function
A_(a){if(isFinite(a)){if(Math.abs(a)>=2.22507385850720138e-308)return 0;if(a!=0)return 1;return 2}return isNaN(a)?4:3}function
ape(a,b){var
c=a[3]<<16,d=b[3]<<16;if(c>d)return 1;if(c<d)return-1;if(a[2]>b[2])return 1;if(a[2]<b[2])return-1;if(a[1]>b[1])return 1;if(a[1]<b[1])return-1;return 0}function
fI(a,b){if(a<b)return-1;if(a==b)return 0;return 1}function
he(a,b){a.t&6&&e2(a);b.t&6&&e2(b);return a.c<b.c?-1:a.c>b.c?1:0}function
j4(a,b,h){var
d=[];for(;;){if(!(h&&a===b))if(a
instanceof
c$)if(b
instanceof
c$){if(a!==b){var
c=he(a,b);if(c!=0)return c}}else
return 1;else
if(a
instanceof
Array&&a[0]===(a[0]|0)){var
e=a[0];if(e===gf)e=0;if(e===bu){a=a[1];continue}else
if(b
instanceof
Array&&b[0]===(b[0]|0)){var
f=b[0];if(f===gf)f=0;if(f===bu){b=b[1];continue}else
if(e!=f)return e<f?-1:1;else
switch(e){case
248:var
c=fI(a[2],b[2]);if(c!=0)return c;break;case
251:fJ("equal: abstract value");case
255:var
c=ape(a,b);if(c!=0)return c;break;default:if(a.length!=b.length)return a.length<b.length?-1:1;if(a.length>1)d.push(a,b,1)}}else
return 1}else
if(b
instanceof
c$||b
instanceof
Array&&b[0]===(b[0]|0))return-1;else
if(typeof
a!="number"&&a&&a.compare)return a.compare(b,h);else
if(typeof
a==lz)fJ("equal: functional value");else{if(a<b)return-1;if(a>b)return 1;if(a!=b){if(!h)return NaN;if(a==a)return 1;if(b==b)return-1}}if(d.length==0)return 0;var
g=d.pop();b=d.pop();a=d.pop();if(g+1<a.length)d.push(a,b,g+1);a=a[g];b=b[g]}}function
cJ(a,b){return j4(a,b,true)}function
bX(a){if(a<0)fJ("Bytes.create");return new
c$(a?2:9,q,a)}function
Bq(a){throw a}function
rC(){Bq(b4.Division_by_zero)}function
ru(b,a){if(a==0)rC();return b/a|0}function
bP(a,b){return+(j4(a,b,false)==0)}function
bTq(a,c,b,d){if(b>0)if(c==0&&(b>=a.l||a.t==2&&b>=a.c.length))if(d==0){a.c=q;a.t=2}else{a.c=j9(b,String.fromCharCode(d));a.t=b==a.l?0:2}else{if(a.t!=4)mJ(a);for(b+=c;c<b;c++)a.c[c]=d}return 0}var
bTp=bTq;function
bTr(){return 0}function
cb(a){Br(b4.Failure,a)}function
iq(a){if((a.t&6)!=0)e2(a);return a.c}function
j6(a){var
b;a=iq(a);b=+a;if(a.length>0&&b===b)return b;a=a.replace(/_/g,q);b=+a;if(a.length>0&&b===b||/^[+-]?nan$/i.test(a))return b;var
c=/^ *([+-]?)0x([0-9a-f]+)\.?([0-9a-f]*)p([+-]?[0-9]+)/i.exec(a);if(c){var
d=c[3].replace(/0+$/,q),f=parseInt(c[1]+c[2]+d,16),e=(c[4]|0)-4*d.length;b=f*Math.pow(2,e);return b}if(/^\+?inf(inity)?$/i.test(a))return Infinity;if(/^-inf(inity)?$/i.test(a))return-Infinity;cb("float_of_string")}function
Bp(d){d=iq(d);var
e=d.length;if(e>31)fJ("format_int: format too long");var
a={justify:g7,signstyle:bF,filler:cH,alternate:false,base:0,signedconv:false,width:0,uppercase:false,sign:1,prec:-1,conv:ii};for(var
c=0;c<e;c++){var
b=d.charAt(c);switch(b){case"-":a.justify=bF;break;case"+":case" ":a.signstyle=b;break;case"0":a.filler=cV;break;case"#":a.alternate=true;break;case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":a.width=0;while(b=d.charCodeAt(c)-48,b>=0&&b<=9){a.width=a.width*10+b;c++}c--;break;case".":a.prec=0;c++;while(b=d.charCodeAt(c)-48,b>=0&&b<=9){a.prec=a.prec*10+b;c++}c--;case"d":case"i":a.signedconv=true;case"u":a.base=10;break;case"x":a.base=16;break;case"X":a.base=16;a.uppercase=true;break;case"o":a.base=8;break;case"e":case"f":case"g":a.signedconv=true;a.conv=b;break;case"E":case"F":case"G":a.signedconv=true;a.uppercase=true;a.conv=b.toLowerCase();break}}return a}function
A$(b,f){if(b.uppercase)f=f.toUpperCase();var
e=f.length;if(b.signedconv&&(b.sign<0||b.signstyle!=bF))e++;if(b.alternate){if(b.base==8)e+=1;if(b.base==16)e+=2}var
c=q;if(b.justify==g7&&b.filler==cH)for(var
d=e;d<b.width;d++)c+=cH;if(b.signedconv)if(b.sign<0)c+=bF;else
if(b.signstyle!=bF)c+=b.signstyle;if(b.alternate&&b.base==8)c+=cV;if(b.alternate&&b.base==16)c+=ys;if(b.justify==g7&&b.filler==cV)for(var
d=e;d<b.width;d++)c+=cV;c+=f;if(b.justify==bF)for(var
d=e;d<b.width;d++)c+=cH;return a(c)}function
Ba(i,c){var
a,e=Bp(i),d=e.prec<0?6:e.prec;if(c<0||c==0&&1/c==-Infinity){e.sign=-1;c=-c}if(isNaN(c)){a=qJ;e.filler=cH}else
if(!isFinite(c)){a="inf";e.filler=cH}else
switch(e.conv){case"e":var
a=c.toExponential(d),b=a.length;if(a.charAt(b-3)==aX)a=a.slice(0,b-1)+cV+a.slice(b-1);break;case"f":a=c.toFixed(d);break;case"g":d=d?d:1;a=c.toExponential(d-1);var
h=a.indexOf(aX),g=+a.slice(h+1);if(g<-4||c>=1e+21||c.toFixed(0).length>d){var
b=h-1;while(a.charAt(b)==cV)b--;if(a.charAt(b)==as)b--;a=a.slice(0,b+1)+a.slice(h);b=a.length;if(a.charAt(b-3)==aX)a=a.slice(0,b-1)+cV+a.slice(b-1);break}else{var
f=d;if(g<0){f-=g+1;a=c.toFixed(f)}else
while(a=c.toFixed(f),a.length>d+1)f--;if(f){var
b=a.length-1;while(a.charAt(b)==cV)b--;if(a.charAt(b)==as)b--;a=a.slice(0,b+1)}}break}return A$(e,a)}function
fG(e,c){if(iq(e)==jG)return a(q+c);var
b=Bp(e);if(c<0)if(b.signedconv){b.sign=-1;c=-c}else
c>>>=0;var
d=c.toString(b.base);if(b.prec>=0){b.filler=cH;var
f=b.prec-d.length;if(f>0)d=j9(f,cV)+d}return A$(b,d)}var
apr=0;function
H(){return apr++}function
Bt(a){return new
c$(4,a,a.length)}function
apb(a){if(a.t!=4)mJ(a);return a.c}var
apz=0;function
bUr(){return new
Date().getTime()/g1}function
rH(){return Math.floor(bUr())}function
ip(){this.content={};this.inode=apz++;var
a=rH();this.atime=a;this.mtime=a;this.ctime=a}ip.prototype={exists:function(a){return this.content[a]?1:0},mk:function(b,a){this.content[b]=a},get:function(a){return this.content[a]},list:function(){var
a=[];for(var
b
in
this.content)a.push(b);return a},remove:function(a){delete
this.content[a]}};function
hb(a){if(a<0)fJ("String.create");return new
c$(a?2:9,q,a)}function
g$(b){this.data=b;this.inode=apz++;var
a=rH();this.atime=a;this.mtime=a;this.ctime=a}g$.prototype={truncate:function(){this.data=hb(0);this.modified()},modified:function(){var
a=rH();this.atime=a;this.mtime=a}};var
rD=new
ip();rD.mk(q,new
ip());var
apc=jx;function
ry(a){a=a
instanceof
c$?a.toString():a;if(a.charCodeAt(0)!=47)a=apc+a;var
d=a.split(jx),b=[];for(var
c=0;c<d.length;c++)switch(d[c]){case"..":if(b.length>1)b.pop();break;case".":break;case"":if(b.length==0)b.push(q);break;default:b.push(d[c]);break}b.orig=a;return b}function
e5(a){Br(b4.Sys_error,a)}function
V(h,c){var
e=ry(h),b=rD;for(var
f=0;f<e.length-1;f++){var
d=e[f];if(!b.exists(d))b.mk(d,new
ip());b=b.get(d);if(!(b
instanceof
ip))e5(e.orig+yE)}var
d=e[e.length-1];if(b.exists(d))e5(e.orig+yE);if(c
instanceof
ip)b.mk(d,c);else
if(c
instanceof
g$)b.mk(d,c);else
if(c
instanceof
c$)b.mk(d,new
g$(c));else
if(c
instanceof
Array)b.mk(d,new
g$(Bt(c)));else
if(c.toString){var
g=a(c.toString());b.mk(d,new
g$(g))}else
fJ("caml_fs_register");return 0}function
bTs(){return 0}var
rz=[];function
f(i,h,d){var
b=i[1],g=rz[d];if(g===null)for(var
f=rz.length;f<d;f++)rz[f]=0;else
if(b[g]===h)return b[g-1];var
a=3,e=b[1]*2+1,c;while(a<e){c=a+e>>1|1;if(h<b[c+1])e=c-2;else
a=c}rz[d]=a+1;return h==b[a+1]?b[a]:0}function
ir(a,b){return+(j4(a,b,false)>=0)}if(!Math.imul)Math.imul=function(b,a){a|=0;return((b>>16)*a<<16)+(b&eg)*a|0};var
go=Math.imul;function
fH(b,a){a=go(a,3432918353|0);a=a<<15|a>>>32-15;a=go(a,461845907);b^=a;b=b<<13|b>>>32-13;return(b+(b<<2)|0)+(3864292196|0)|0}function
bTv(b,a){var
d=a[1]|a[2]<<24,c=a[2]>>>8|a[3]<<16;b=fH(b,c^d);return b}var
bUn=Math.log2&&Math.log2(1.12355820928894744e+307)==UD;function
bUm(a){if(bUn)return Math.floor(Math.log2(a));var
b=0;if(a==0)return-Infinity;if(a>=1)while(a>=2){a/=2;b++}else
while(a<1){a*=2;b--}return b}function
apd(a){if(!isFinite(a)){if(isNaN(a))return[at,1,0,RV];return a>0?[at,0,0,32752]:[at,0,0,RV]}var
f=a==0&&1/a==-Infinity?eP:a>=0?0:eP;if(f)a=-a;var
b=bUm(a)+Sz;if(b<=0){b=0;a/=Math.pow(2,-_6)}else{a/=Math.pow(2,b-Wm);if(a<16){a*=2;b-=1}if(b==0)a/=2}var
d=Math.pow(2,24),c=a|0;a=(a-c)*d;var
e=a|0;a=(a-e)*d;var
g=a|0;c=c&15|f|b<<4;return[at,g,e,c]}function
bTu(a,e){var
b=apd(e),d=b[1]|b[2]<<24,c=b[2]>>>8|b[3]<<16;a=fH(a,d);a=fH(a,c);return a}function
bTx(d,b){var
e=b.length,a,c;for(a=0;a+4<=e;a+=4){c=b[a]|b[a+1]<<8|b[a+2]<<16|b[a+3]<<24;d=fH(d,c)}c=0;switch(e&3){case
3:c=b[a+2]<<16;case
2:c|=b[a+1]<<8;case
1:c|=b[a];d=fH(d,c)}d^=e;return d}function
bTy(d,b){var
e=b.length,a,c;for(a=0;a+4<=e;a+=4){c=b.charCodeAt(a)|b.charCodeAt(a+1)<<8|b.charCodeAt(a+2)<<16|b.charCodeAt(a+3)<<24;d=fH(d,c)}c=0;switch(e&3){case
3:c=b.charCodeAt(a+2)<<16;case
2:c|=b.charCodeAt(a+1)<<8;case
1:c|=b.charCodeAt(a);d=fH(d,c)}d^=e;return d}function
bTw(a,b){switch(b.t&6){default:e2(b);case
0:a=bTy(a,b.c);break;case
2:a=bTx(a,b.c)}return a}function
bTt(a){a^=a>>>16;a=go(a,2246822507|0);a^=a>>>13;a=go(a,3266489909|0);a^=a>>>16;return a}var
ao_=cX;function
mK(j,k,m,l){var
f,g,h,d,c,b,a,e,i;d=k;if(d<0||d>ao_)d=ao_;c=j;b=m;f=[l];g=0;h=1;while(g<h&&c>0){a=f[g++];if(a
instanceof
Array&&a[0]===(a[0]|0))switch(a[0]){case
248:b=fH(b,a[2]);c--;break;case
250:f[--g]=a[1];break;case
255:b=bTv(b,a);c--;break;default:var
n=a.length-1<<10|a[0];b=fH(b,n);for(e=1,i=a.length;e<i;e++){if(h>=d)break;f[h++]=a[e]}break}else
if(a
instanceof
c$){b=bTw(b,a);c--}else
if(a===(a|0)){b=fH(b,a+a+1);c--}else
if(a===+a){b=bTu(b,a);c--}}b=bTt(b);return b&ic}function
aph(a){return[a[3]>>8,a[3]&at,a[2]>>16,a[2]>>8&at,a[2]&at,a[1]>>16,a[1]>>8&at,a[1]&at]}function
bTz(d,g,a){var
c=0;function
f(a){g--;if(d<0||g<0)return;if(a
instanceof
Array&&a[0]===(a[0]|0))switch(a[0]){case
248:d--;c=c*o6+a[2]|0;break;case
250:g++;f(a);break;case
255:d--;c=c*o6+a[1]+(a[2]<<24)|0;break;default:d--;c=c*19+a[0]|0;for(var
b=a.length-1;b>0;b--)f(a[b])}else
if(a
instanceof
c$){d--;switch(a.t&6){default:e2(a);case
0:for(var
i=a.c,e=a.l,b=0;b<e;b++)c=c*19+i.charCodeAt(b)|0;break;case
2:for(var
h=a.c,e=a.l,b=0;b<e;b++)c=c*19+h[b]|0}}else
if(a===(a|0)){d--;c=c*o6+a|0}else
if(a===+a){d--;var
j=aph(apd(a));for(var
b=7;b>=0;b--)c=c*19+j[b]|0}}f(a);return c&ic}function
bUh(e){for(var
f=q,b=f,a,h,c=0,g=e.length;c<g;c++){a=e.charCodeAt(c);if(a<a2){for(var
d=c+1;d<g&&(a=e.charCodeAt(d))<a2;d++);if(d-c>jW){b.substr(0,1);f+=b;b=q;f+=e.slice(c,d)}else
b+=e.slice(c,d);if(d==g)break;c=d}if(a<qQ){b+=String.fromCharCode(jT|a>>6);b+=String.fromCharCode(a2|a&63)}else
if(a<aou||a>=v9)b+=String.fromCharCode(jD|a>>12,a2|a>>6&63,a2|a&63);else
if(a>=56319||c+1==g||(h=e.charCodeAt(c+1))<ab0||h>v9)b+="\xef\xbf\xbd";else{c++;a=(a<<10)+h-56613888;b+=String.fromCharCode(mx|a>>18,a2|a>>12&63,a2|a>>6&63,a2|a&63)}if(b.length>fE){b.substr(0,1);f+=b;b=q}}return f+b}function
dD(a){var
b=9;if(!apj(a))b=8,a=bUh(a);return new
c$(b,a,a.length)}function
bTA(a,c,k){if(!isFinite(a)){if(isNaN(a))return dD(qJ);return dD(a>0?A3:"-infinity")}var
i=a==0&&1/a==-Infinity?1:a>=0?0:1;if(i)a=-a;var
d=0;if(a==0);else
if(a<1)while(a<1&&d>-1022){a*=2;d--}else
while(a>=2){a/=2;d++}var
j=d<0?q:g7,e=q;if(i)e=bF;else
switch(k){case
43:e=g7;break;case
32:e=cH;break;default:break}if(c>=0&&c<13){var
g=Math.pow(2,c*4);a=Math.round(a*g)/g}var
b=a.toString(16);if(c>=0){var
h=b.indexOf(as);if(h<0)b+=as+j9(c,cV);else{var
f=h+1+c;if(b.length<f)b+=j9(f-b.length,cV);else
b=b.substr(0,f)}}return dD(e+ys+b+dj+j+d.toString(10))}function
aQ(a,b){switch(a.t&6){default:if(b>=a.c.length)return 0;case
0:return a.c.charCodeAt(b);case
4:return a.c[b]}}function
bTQ(c,b){function
a(b,a){return aQ(b,a)<<24|aQ(b,a+1)<<16|aQ(b,a+2)<<8|aQ(b,a+3)}if(a(c,b)!=(ajh|0))cb("Marshal.data_size: bad object");return a(c,b+4)}function
ao$(b,a){this.s=iq(b);this.i=a}ao$.prototype={read8u:function(){return this.s.charCodeAt(this.i++)},read8s:function(){return this.s.charCodeAt(this.i++)<<24>>24},read16u:function(){var
b=this.s,a=this.i;this.i=a+2;return b.charCodeAt(a)<<8|b.charCodeAt(a+1)},read16s:function(){var
b=this.s,a=this.i;this.i=a+2;return b.charCodeAt(a)<<24>>16|b.charCodeAt(a+1)},read32u:function(){var
b=this.s,a=this.i;this.i=a+4;return(b.charCodeAt(a)<<24|b.charCodeAt(a+1)<<16|b.charCodeAt(a+2)<<8|b.charCodeAt(a+3))>>>0},read32s:function(){var
b=this.s,a=this.i;this.i=a+4;return b.charCodeAt(a)<<24|b.charCodeAt(a+1)<<16|b.charCodeAt(a+2)<<8|b.charCodeAt(a+3)},readstr:function(c){var
b=this.i;this.i=b+c;return a(this.s.substring(b,b+c))}};function
bTF(a){var
c=(a[3]&32767)>>4;if(c==O2)return(a[1]|a[2]|a[3]&15)==0?a[3]&eP?-Infinity:Infinity:NaN;var
d=Math.pow(2,-24),b=(a[1]*d+a[2])*d+(a[3]&15);if(c>0){b+=16;b*=Math.pow(2,c-Wm)}else
b*=Math.pow(2,-_6);if(a[3]&eP)b=-b;return b}function
apg(a){return[at,a[7]|a[6]<<8|a[5]<<16,a[4]|a[3]<<8|a[2]<<16,a[1]|a[0]<<8]}function
j5(a){return bTF(apg(a))}function
bTB(b,f){var
m=b.read32u(),l=b.read32u(),i=b.read32u(),n=b.read32u(),o=b.read32u(),j=[],c=i>0?[]:null,h=0;function
e(){var
i=b.read8u();if(i>=64)if(i>=a2){var
m=i&15,l=i>>4&7,a=[m];if(l==0)return a;if(c)c[h++]=a;j.push(a,l);return a}else
return i&63;else
if(i>=32){var
g=i&31,a=b.readstr(g);if(c)c[h++]=a;return a}else
switch(i){case
0:return b.read8s();case
1:return b.read16s();case
2:return b.read32s();case
3:cb("input_value: integer too large");break;case
4:var
k=b.read8u();return c[h-k];case
5:var
k=b.read16u();return c[h-k];case
6:var
k=b.read32u();return c[h-k];case
8:var
o=b.read32u(),m=o&at,l=o>>10,a=[m];if(l==0)return a;if(c)c[h++]=a;j.push(a,l);return a;case
19:cb("input_value: data block too large");break;case
9:var
g=b.read8u(),a=b.readstr(g);if(c)c[h++]=a;return a;case
10:var
g=b.read32u(),a=b.readstr(g);if(c)c[h++]=a;return a;case
12:var
e=new
Array(8);for(var
d=0;d<8;d++)e[7-d]=b.read8u();var
a=j5(e);if(c)c[h++]=a;return a;case
11:var
e=new
Array(8);for(var
d=0;d<8;d++)e[d]=b.read8u();var
a=j5(e);if(c)c[h++]=a;return a;case
14:var
g=b.read8u(),a=new
Array(g+1);a[0]=gf;var
e=new
Array(8);if(c)c[h++]=a;for(var
d=1;d<=g;d++){for(var
f=0;f<8;f++)e[7-f]=b.read8u();a[d]=j5(e)}return a;case
13:var
g=b.read8u(),a=new
Array(g+1);a[0]=gf;var
e=new
Array(8);if(c)c[h++]=a;for(var
d=1;d<=g;d++){for(var
f=0;f<8;f++)e[f]=b.read8u();a[d]=j5(e)}return a;case
7:var
g=b.read32u(),a=new
Array(g+1);a[0]=gf;if(c)c[h++]=a;var
e=new
Array(8);for(var
d=1;d<=g;d++){for(var
f=0;f<8;f++)e[7-f]=b.read8u();a[d]=j5(e)}return a;case
15:var
g=b.read32u(),a=new
Array(g+1);a[0]=gf;var
e=new
Array(8);for(var
d=1;d<=g;d++){for(var
f=0;f<8;f++)e[f]=b.read8u();a[d]=j5(e)}return a;case
16:case
17:cb("input_value: code pointer");break;case
18:var
n,p=q;while((n=b.read8u())!=0)p+=String.fromCharCode(n);switch(p){case"_j":var
e=new
Array(8);for(var
f=0;f<8;f++)e[f]=b.read8u();var
a=apg(e);if(c)c[h++]=a;return a;case"_i":var
a=b.read32s();if(c)c[h++]=a;return a;case"_n":switch(b.read8u()){case
1:var
a=b.read32s();if(c)c[h++]=a;return a;case
2:cb("input_value: native integer value too large");default:cb("input_value: ill-formed native integer")}default:cb("input_value: unknown custom block identifier")}default:cb("input_value: ill-formed message")}}var
k=e();while(j.length>0){var
g=j.pop(),a=j.pop(),d=a.length;if(d<g)j.push(a,g);a[d]=e()}if(typeof
f!="number")f[0]=b.i;return k}function
bTC(c,a){var
b=new
ao$(c,typeof
a=="number"?a:a[0]);return bTB(b,a)}function
Bc(a){var
c=a.file.data,b=[a.offset],e=bTQ(c,b[0]),d=bTC(c,b);a.offset=b[0];return d}function
Bd(a,b){var
c=a[1]+b[1],d=a[2]+b[2]+(c>>24),e=a[3]+b[3]+(d>>24);return[at,c&b3,d&b3,e&eg]}function
bTD(a,b){return[at,a[1]&b[1],a[2]&b[2],a[3]&b[3]]}function
e3(a){var
b=-a[1],c=-a[2]+(b>>24),d=-a[3]+(c>>24);return[at,b&b3,c&b3,d&eg]}function
Bo(d){var
c=d.length,b=new
Array(c);for(var
a=0;a<c;a++)b[a]=d[a];return b}function
Bi(a,b){var
c=a[1]-b[1],d=a[2]-b[2]+(c>>24),e=a[3]-b[3]+(d>>24);return[at,c&b3,d&b3,e&eg]}function
Bj(a,b){if(a[3]>b[3])return 1;if(a[3]<b[3])return-1;if(a[2]>b[2])return 1;if(a[2]<b[2])return-1;if(a[1]>b[1])return 1;if(a[1]<b[1])return-1;return 0}function
apf(a){a[3]=a[3]<<1|a[2]>>23;a[2]=(a[2]<<1|a[1]>>23)&b3;a[1]=a[1]<<1&b3}function
bTH(a){a[1]=(a[1]>>>1|a[2]<<23)&b3;a[2]=(a[2]>>>1|a[3]<<23)&b3;a[3]=a[3]>>>1}function
rv(e,f){var
c=0,b=Bo(e),a=Bo(f),d=[at,0,0,0];while(Bj(b,a)>0){c++;apf(a)}while(c>=0){c--;apf(d);if(Bj(b,a)>=0){d[1]++;b=Bi(b,a)}bTH(a)}return[0,d,b]}function
Bf(a){return(a[3]|a[2]|a[1])==0}function
bTE(b,a){if(Bf(a))rC();var
d=b[3]^a[3];if(b[3]&eP)b=e3(b);if(a[3]&eP)a=e3(a);var
c=rv(b,a)[1];if(d&eP)c=e3(c);return c}function
mL(a){return[at,a&b3,a>>24&b3,a>>31&eg]}function
api(a){return a[1]|a[2]<<24}function
bTG(a){return a[3]<<16<0}function
Be(g,c){var
a=Bp(g);if(a.signedconv&&bTG(c)){a.sign=-1;c=e3(c)}var
b=q,h=mL(a.base),f="0123456789abcdef";do{var
e=rv(c,h);c=e[1];b=f.charAt(api(e[2]))+b}while(!Bf(c));if(a.prec>=0){a.filler=cH;var
d=a.prec-b.length;if(d>0)b=j9(d,cV)+b}return A$(a,b)}function
bTI(a,b){if(Bf(b))rC();var
d=a[3];if(a[3]&eP)a=e3(a);if(b[3]&eP)b=e3(b);var
c=rv(a,b)[2];if(d&eP)c=e3(c);return c}var
mM=Math.pow(2,-24);function
Bg(a,b){var
c=a[1]*b[1],d=(c*mM|0)+a[2]*b[1]+a[1]*b[2],e=(d*mM|0)+a[3]*b[1]+a[2]*b[2]+a[1]*b[3];return[at,c&b3,d&b3,e&eg]}function
bTJ(a){if(a<0)a=Math.ceil(a);return[at,a&b3,Math.floor(a*mM)&b3,Math.floor(a*mM*mM)&eg]}function
C(a){return a.l}function
Bk(a,b){return Bj(a,b)<0}function
apt(c){var
a=0,d=C(c),b=10,e=d>0&&aQ(c,0)==45?(a++,-1):1;if(a+1<d&&aQ(c,a)==48)switch(aQ(c,a+1)){case
120:case
88:b=16;a+=2;break;case
111:case
79:b=8;a+=2;break;case
98:case
66:b=2;a+=2;break}return[a,e,b]}function
rB(a){if(a>=48&&a<=57)return a-48;if(a>=65&&a<=90)return a-55;if(a>=97&&a<=fD)return a-87;return-1}function
Bh(f){var
e=apt(f),d=e[0],i=e[1],g=e[2],h=mL(g),j=rv([at,b3,268435455,eg],h)[1],c=aQ(f,d),a=rB(c);if(a<0||a>=g)cb(gc);var
b=mL(a);for(;;){d++;c=aQ(f,d);if(c==95)continue;a=rB(c);if(a<0||a>=g)break;if(Bk(j,b))cb(gc);a=mL(a);b=Bd(Bg(h,b),a);if(Bk(b,a))cb(gc)}if(d!=C(f))cb(gc);if(e[2]==10&&Bk([at,0,0,eP],b))cb(gc);if(i<0)b=e3(b);return b}function
bTK(b,a){a=a&63;if(a==0)return b;var
d=b[3]<<16>>16;if(a<24)return[at,(b[1]>>a|b[2]<<24-a)&b3,(b[2]>>a|d<<24-a)&b3,b[3]<<16>>a>>>16];var
c=b[3]<<16>>31;if(a<48)return[at,(b[2]>>a-24|b[3]<<48-a)&b3,b[3]<<16>>a-24>>16&b3,c&eg];return[at,b[3]<<16>>a-32&b3,c&b3,c&eg]}function
bTL(a){return(a[3]<<16)*Math.pow(2,32)+a[2]*Math.pow(2,24)+a[1]}function
dk(f){var
h=apt(f),c=h[0],i=h[1],d=h[2],g=C(f),j=-1>>>0,e=c<g?aQ(f,c):0,b=rB(e);if(b<0||b>=d)cb(gc);var
a=b;for(c++;c<g;c++){e=aQ(f,c);if(e==95)continue;b=rB(e);if(b<0||b>=d)break;a=d*a+b;if(a>j)cb(gc)}if(c!=g)cb(gc);a=i*a;if(d==10&&(a|0)!=a)cb(gc);return a|0}function
Bl(a){return eval(a.toString())}function
bUp(b){var
d=b.length,c=new
Array(d);for(var
a=0;a<d;a++)c[a]=b[a];return c}function
rw(a){return function(){return arguments.length>0?cI(a,bUp(arguments)):cI(a,[undefined])}}function
bTM(a){return[bu,a]}function
bTN(a,b){return+(j4(a,b,false)<=0)}function
Bm(a,b){return+(j4(a,b,false)<0)}function
dl(b){b=iq(b);var
d=b.length/2,c=new
Array(d);for(var
a=0;a<d;a++)c[a]=(b.charCodeAt(2*a)|b.charCodeAt(2*a+1)<<8)<<16>>16;return c}function
bTO(b,t,a){var
n=2,o=3,r=5,d=6,h=7,g=8,j=9,m=1,l=2,q=3,s=4,p=5;if(!b.lex_default){b.lex_base=dl(b[m]);b.lex_backtrk=dl(b[l]);b.lex_check=dl(b[p]);b.lex_trans=dl(b[s]);b.lex_default=dl(b[q])}var
e,c=t,k=apb(a[n]);if(c>=0){a[h]=a[r]=a[d];a[g]=-1}else
c=-c-1;for(;;){var
f=b.lex_base[c];if(f<0)return-f-1;var
i=b.lex_backtrk[c];if(i>=0){a[h]=a[d];a[g]=i}if(a[d]>=a[o])if(a[j]==0)return-c-1;else
e=cX;else{e=k[a[d]];a[d]++}c=b.lex_check[f+e]==c?b.lex_trans[f+e]:b.lex_default[c];if(c<0){a[d]=a[h];if(a[g]==-1)cb(OT);else
return a[g]}else
if(e==cX)a[j]=0}}function
rx(c){var
b=0;for(var
a=c.length-1;a>=0;a--){var
d=c[a];b=[0,d,b]}return b}function
a_(a,d){var
a=a+1|0,b=new
Array(a);b[0]=0;for(var
c=1;c<a;c++)b[c]=d;return b}var
bTR=function(){function
l(a,b){return a+b|0}function
a(d,a,c,f,b,e){a=l(l(a,d),l(f,e));return l(a<<b|a>>>32-b,c)}function
g(c,b,d,e,h,f,g){return a(b&d|~b&e,c,b,h,f,g)}function
h(d,b,e,c,h,f,g){return a(b&c|e&~c,d,b,h,f,g)}function
i(c,b,d,e,h,f,g){return a(b^d^e,c,b,h,f,g)}function
j(c,b,d,e,h,f,g){return a(d^(b|~e),c,b,h,f,g)}function
k(f,n){var
e=n;f[e>>2]|=a2<<8*(e&3);for(e=(e&~3)+8;(e&63)<60;e+=4)f[(e>>2)-1]=0;f[(e>>2)-1]=n<<3;f[e>>2]=n>>29&536870911;var
k=[1732584193,4023233417,2562383102,271733878];for(e=0;e<f.length;e+=16){var
a=k[0],b=k[1],c=k[2],d=k[3];a=g(a,b,c,d,f[e+0],7,3614090360);d=g(d,a,b,c,f[e+1],12,3905402710);c=g(c,d,a,b,f[e+2],17,606105819);b=g(b,c,d,a,f[e+3],22,3250441966);a=g(a,b,c,d,f[e+4],7,4118548399);d=g(d,a,b,c,f[e+5],12,1200080426);c=g(c,d,a,b,f[e+6],17,2821735955);b=g(b,c,d,a,f[e+7],22,4249261313);a=g(a,b,c,d,f[e+8],7,1770035416);d=g(d,a,b,c,f[e+9],12,2336552879);c=g(c,d,a,b,f[e+10],17,4294925233);b=g(b,c,d,a,f[e+11],22,2304563134);a=g(a,b,c,d,f[e+12],7,1804603682);d=g(d,a,b,c,f[e+13],12,4254626195);c=g(c,d,a,b,f[e+14],17,2792965006);b=g(b,c,d,a,f[e+15],22,1236535329);a=h(a,b,c,d,f[e+1],5,4129170786);d=h(d,a,b,c,f[e+6],9,3225465664);c=h(c,d,a,b,f[e+11],14,643717713);b=h(b,c,d,a,f[e+0],20,3921069994);a=h(a,b,c,d,f[e+5],5,3593408605);d=h(d,a,b,c,f[e+10],9,38016083);c=h(c,d,a,b,f[e+15],14,3634488961);b=h(b,c,d,a,f[e+4],20,3889429448);a=h(a,b,c,d,f[e+9],5,568446438);d=h(d,a,b,c,f[e+14],9,3275163606);c=h(c,d,a,b,f[e+3],14,4107603335);b=h(b,c,d,a,f[e+8],20,1163531501);a=h(a,b,c,d,f[e+13],5,2850285829);d=h(d,a,b,c,f[e+2],9,4243563512);c=h(c,d,a,b,f[e+7],14,1735328473);b=h(b,c,d,a,f[e+12],20,2368359562);a=i(a,b,c,d,f[e+5],4,4294588738);d=i(d,a,b,c,f[e+8],11,2272392833);c=i(c,d,a,b,f[e+11],16,1839030562);b=i(b,c,d,a,f[e+14],23,4259657740);a=i(a,b,c,d,f[e+1],4,2763975236);d=i(d,a,b,c,f[e+4],11,1272893353);c=i(c,d,a,b,f[e+7],16,4139469664);b=i(b,c,d,a,f[e+10],23,3200236656);a=i(a,b,c,d,f[e+13],4,681279174);d=i(d,a,b,c,f[e+0],11,3936430074);c=i(c,d,a,b,f[e+3],16,3572445317);b=i(b,c,d,a,f[e+6],23,76029189);a=i(a,b,c,d,f[e+9],4,3654602809);d=i(d,a,b,c,f[e+12],11,3873151461);c=i(c,d,a,b,f[e+15],16,530742520);b=i(b,c,d,a,f[e+2],23,3299628645);a=j(a,b,c,d,f[e+0],6,4096336452);d=j(d,a,b,c,f[e+7],10,1126891415);c=j(c,d,a,b,f[e+14],15,2878612391);b=j(b,c,d,a,f[e+5],21,4237533241);a=j(a,b,c,d,f[e+12],6,1700485571);d=j(d,a,b,c,f[e+3],10,2399980690);c=j(c,d,a,b,f[e+10],15,4293915773);b=j(b,c,d,a,f[e+1],21,2240044497);a=j(a,b,c,d,f[e+8],6,1873313359);d=j(d,a,b,c,f[e+15],10,4264355552);c=j(c,d,a,b,f[e+6],15,2734768916);b=j(b,c,d,a,f[e+13],21,1309151649);a=j(a,b,c,d,f[e+4],6,4149444226);d=j(d,a,b,c,f[e+11],10,3174756917);c=j(c,d,a,b,f[e+2],15,718787259);b=j(b,c,d,a,f[e+9],21,3951481745);k[0]=l(a,k[0]);k[1]=l(b,k[1]);k[2]=l(c,k[2]);k[3]=l(d,k[3])}var
o=new
Array(16);for(var
e=0;e<4;e++)for(var
m=0;m<4;m++)o[e*4+m]=k[e]>>8*m&at;return o}return function(h,g,f){var
e=[];switch(h.t&6){default:e2(h);case
0:var
d=h.c;for(var
a=0;a<f;a+=4){var
b=a+g;e[a>>2]=d.charCodeAt(b)|d.charCodeAt(b+1)<<8|d.charCodeAt(b+2)<<16|d.charCodeAt(b+3)<<24}for(;a<f;a++)e[a>>2]|=d.charCodeAt(a+g)<<8*(a&3);break;case
4:var
c=h.c;for(var
a=0;a<f;a+=4){var
b=a+g;e[a>>2]=c[b]|c[b+1]<<8|c[b+2]<<16|c[b+3]<<24}for(;a<f;a++)e[a>>2]|=c[a+g]<<8*(a&3)}return Bt(k(e,f))}}();function
cK(a){return a.l}function
bT9(a){delete
b4.fds[a];return 0}function
cc(a){if(!a.opened)e5("Cannot flush a closed channel");if(a.buffer==q)return 0;if(a.output)switch(a.output.length){case
2:a.output(a,a.buffer);break;default:a.output(a.buffer)}a.buffer=q;return 0}var
j8=new
Array();function
j7(a){cc(a);a.opened=false;delete
j8[a.fd];bT9(a.fd);return 0}function
apn(a){var
e=a.refill(),c=C(e);if(c==0)a.refill=null;var
b=C(a.file.data)-a.offset;if(b==0)a.file.data=e;else{var
d=hb(b+c);da(a.file.data,a.offset,d,0,b);da(e,0,d,b,c);a.file.data=d}a.offset=0;return c}function
apl(a,e,d,b){var
c=C(a.file.data)-a.offset;if(c==0&&a.refill!=null)c=apn(a);if(c<b)b=c;da(a.file.data,a.offset,e,d,b);a.offset+=b;return b}function
I(b,a){if(a>>>0>=b.l)Bs();return aQ(b,a)}function
bTT(a){if(a.refill==null)return;if(C(a.file.data)!=a.offset)return;apn(a)}function
bT3(){Bq(b4.End_of_file)}function
bTS(a){bTT(a);if(a.offset>=C(a.file.data))bT3();var
b=I(a.file.data,a.offset);a.offset++;return b}function
apu(a){a=a
instanceof
c$?a.toString():a;e5(a+": No such file or directory")}function
Bb(c){var
a=rD;for(var
b=0;b<c.length;b++){if(!(a.exists&&a.exists(c[b])))apu(c.orig);a=a.get(c[b])}return a}function
bUd(b){var
c=ry(b),a=Bb(c);return a
instanceof
ip?1:0}function
mO(f){var
a=rD,c=ry(f),d,e;for(var
b=0;b<c.length;b++){if(a.auto){d=a.auto;e=b}if(!(a.exists&&a.exists(c[b])))return d?d(c,e):0;a=a.get(c[b])}return 1}function
mP(c,d,a){if(b4.fds===undefined)b4.fds=new
Array();a=a?a:{};var
b={};b.file=d;b.offset=a.append?C(d.data):0;b.flags=a;b4.fds[c]=b;b4.fd_last_idx=c;return c}function
apx(b,d,h){var
a={};while(d){switch(d[1]){case
0:a.rdonly=1;break;case
1:a.wronly=1;break;case
2:a.append=1;break;case
3:a.create=1;break;case
4:a.truncate=1;break;case
5:a.excl=1;break;case
6:a.binary=1;break;case
7:a.text=1;break;case
8:a.nonblock=1;break}d=d[2]}var
e=b.toString(),g=ry(b);if(a.rdonly&&a.wronly)e5(e+" : flags Open_rdonly and Open_wronly are not compatible");if(a.text&&a.binary)e5(e+" : flags Open_text and Open_binary are not compatible");if(mO(b)){if(bUd(b))e5(e+" : is a directory");if(a.create&&a.excl)e5(e+yE);var
f=b4.fd_last_idx?b4.fd_last_idx:0,c=Bb(g);if(a.truncate)c.truncate();return mP(f+1,c,a)}else
if(a.create){var
f=b4.fd_last_idx?b4.fd_last_idx:0;V(b,hb(0));var
c=Bb(g);return mP(f+1,c,a)}else
apu(b)}mP(0,new
g$(hb(0)));mP(1,new
g$(hb(0)));mP(2,new
g$(hb(0)));function
apm(b){var
a=b4.fds[b];if(a.flags.wronly)e5(Oj+b+" is writeonly");return{file:a.file,offset:a.offset,fd:b,opened:true,refill:null}}function
bUk(a){var
b=d1;if(b.process&&b.process.stdout&&b.process.stdout.write)b.process.stderr.write(a);else{if(a.charCodeAt(a.length-1)==10)a=a.substr(0,a.length-1);var
c=b.console;c&&c.error&&c.error(a)}}function
bUl(a){var
b=d1;if(b.process&&b.process.stdout&&b.process.stdout.write)b.process.stdout.write(a);else{if(a.charCodeAt(a.length-1)==10)a=a.substr(0,a.length-1);var
c=b.console;c&&c.log&&c.log(a)}}function
bT7(b,h){var
g=a(h),c=C(g),f=C(b.file.data),e=b.offset;if(e+c>=f){var
d=hb(e+c);da(b.file.data,0,d,0,f);da(g,0,d,e,c);b.file.data=d}b.offset+=c;b.file.modified();return 0}function
Bn(a){var
b;switch(a){case
1:b=bUl;break;case
2:b=bUk;break;default:b=bT7}var
d=b4.fds[a];if(d.flags.rdonly)e5(Oj+a+" is readonly");var
c={file:d.file,offset:d.offset,fd:a,opened:true,buffer:q,output:b};j8[c.fd]=c;return c}function
bTU(){var
b=0;for(var
a=0;a<j8.length;a++)if(j8[a]&&j8[a].opened)b=[0,j8[a],b];return b}function
mN(a,d,g,f){if(!a.opened)e5("Cannot output to a closed channel");var
c;if(g==0&&C(d)==f)c=d;else{c=hb(f);da(d,g,c,0,f)}var
b=c.toString(),e=b.lastIndexOf("\n");if(e<0)a.buffer+=b;else{a.buffer+=b.substr(0,e+1);cc(a);a.buffer+=b.substr(e+1)}return 0}var
bTV=mN;function
rA(c,b){var
d=a(String.fromCharCode(b));mN(c,d,0,1);return 0}function
bTW(c,b){var
a=b4.fds[c.fd];a.flags.text=!b;a.flags.binary=b;return 0}function
apo(){return 0}function
bTX(a,b){a.output=b;return 0}function
hd(b,a){if(a==0)rC();return b%a}function
bTP(d,a,c,f){for(;;){var
b=d.charCodeAt(a);a++;if(b==at)return;var
e=d.charCodeAt(a);a++;c[b+1]=e==at?f:c[e+1]}}function
apk(d,a,c){for(;;){var
b=d.charCodeAt(a);a++;if(b==at)return;var
e=d.charCodeAt(a);a++;c[b+1]=e==at?-1:c[e+1]}}function
bTZ(a,D,b){var
t=2,u=3,A=5,e=6,i=7,h=8,n=9,j=10,r=1,p=2,y=3,B=4,v=5,s=6,q=7,z=8,C=9,w=10,x=11;if(!a.lex_default){a.lex_base=dl(a[r]);a.lex_backtrk=dl(a[p]);a.lex_check=dl(a[v]);a.lex_trans=dl(a[B]);a.lex_default=dl(a[y])}if(!a.lex_default_code){a.lex_base_code=dl(a[s]);a.lex_backtrk_code=dl(a[q]);a.lex_check_code=dl(a[w]);a.lex_trans_code=dl(a[C]);a.lex_default_code=dl(a[z])}if(a.lex_code==null)a.lex_code=iq(a[x]);var
d,c=D,o=apb(b[t]);if(c>=0){b[i]=b[A]=b[e];b[h]=-1}else
c=-c-1;for(;;){var
g=a.lex_base[c];if(g<0){var
f=a.lex_base_code[c];apk(a.lex_code,f,b[j]);return-g-1}var
l=a.lex_backtrk[c];if(l>=0){var
f=a.lex_backtrk_code[c];apk(a.lex_code,f,b[j]);b[i]=b[e];b[h]=l}if(b[e]>=b[u])if(b[n]==0)return-c-1;else
d=cX;else{d=o[b[e]];b[e]++}var
k=c;c=a.lex_check[g+d]==c?a.lex_trans[g+d]:a.lex_default[c];if(c<0){b[e]=b[i];if(b[h]==-1)cb(OT);else
return b[h]}else{var
m=a.lex_base_code[k],f;f=a.lex_check_code[m+d]==k?a.lex_trans_code[m+d]:a.lex_default_code[k];if(f>0)bTP(a.lex_code,f,b[j],b[e]);if(d==cX)b[n]=0}}}function
e4(a,b){return+(j4(a,b,false)!=0)}function
cZ(d,c){var
b=new
Array(c+1);b[0]=d;for(var
a=1;a<=c;a++)b[a]=0;return b}function
bT0(b,a){b[0]=a;return 0}function
bi(a){return a
instanceof
Array?a[0]:a
instanceof
c$?lT:g1}function
apq(b,a){if(a<=0||a+1>b.length)fJ("Obj.truncate");if(b.length!=a+1)b.length=a+1;return 0}var
bT1=function(){function
f(){this.chunk=[]}f.prototype={chunk_idx:20,block_len:0,obj_counter:0,size_32:0,size_64:0,write:function(b,c){for(var
a=b-8;a>=0;a-=8)this.chunk[this.chunk_idx++]=c>>a&at},write_code:function(c,b,d){this.chunk[this.chunk_idx++]=b;for(var
a=c-8;a>=0;a-=8)this.chunk[this.chunk_idx++]=d>>a&at},finalize:function(){this.block_len=this.chunk_idx-20;this.chunk_idx=0;this.write(32,ajh);this.write(32,this.block_len);this.write(32,this.obj_counter);this.write(32,this.size_32);this.write(32,this.size_64);return this.chunk}};return function(a){var
b=new
f(),e=[];function
d(a){if(a
instanceof
Array&&a[0]===(a[0]|0)){if(a[0]==at){b.write(8,18);for(var
c=0;c<3;c++)b.write(8,"_j\0".charCodeAt(c));var
f=aph(a);for(var
c=0;c<8;c++)b.write(8,f[c]);b.size_32+=4;b.size_64+=3;return}if(a[0]==lW)cb("output_value: abstract value (Abstract)");if(a[0]<16&&a.length-1<8)b.write(8,a2+a[0]+(a.length-1<<4));else
b.write_code(32,8,a.length-1<<10|a[0]);b.size_32+=a.length;b.size_64+=a.length;if(a.length>1)e.push(a,1)}else
if(a
instanceof
c$){var
d=C(a);if(d<32)b.write(8,32+d);else
if(d<cX)b.write_code(8,9,d);else
b.write_code(32,10,d);for(var
c=0;c<d;c++)b.write(8,aQ(a,c));b.size_32+=1+((d+4)/4|0);b.size_64+=1+((d+8)/8|0)}else
if(a!=(a|0)){var
g=typeof
a;cb("output_value: abstract value ("+g+bc)}else
if(a>=0&&a<64)b.write(8,64+a);else
if(a>=-(1<<7)&&a<1<<7)b.write_code(8,0,a);else
if(a>=-(1<<15)&&a<1<<15)b.write_code(16,1,a);else
b.write_code(32,2,a)}d(a);while(e.length>0){var
c=e.pop(),a=e.pop();if(c+1<a.length)e.push(a,c+1);d(a[c])}b.finalize();return b.chunk}}();function
bT2(a,b){return Bt(bT1(a))}function
aps(b,c,d){var
a=bT2(c);mN(b,a,0,C(a));return 0}function
eq(c,b,a){b4[c+1]=b;if(a)b4[a]=b}var
app={};function
bT6(a,b){app[iq(a)]=b;return 0}function
apw(a){a[2]=apr++;return a}function
a3(a,b){if(a===b)return 1;a.t&6&&e2(a);b.t&6&&e2(b);return a.c==b.c?1:0}function
bT8(a,b){a.t&6&&e2(a);b.t&6&&e2(b);return a.c<b.c?1:0}function
O(a,b){return 1-a3(a,b)}function
bY(a,c,b){b&=at;if(a.t!=4){if(c==a.c.length){a.c+=String.fromCharCode(b);if(c+1==a.l)a.t=0;return 0}mJ(a)}a.c[c]=b;return 0}function
bT_(){return o_/4|0}function
bT$(b){var
a=d1;if(a.quit)a.quit(b);if(a.process&&a.process.exit)a.process.exit(b);fJ("Function 'exit' not implemented")}function
bUa(){var
a=d1,f="a.out",b=[];if(a.process&&a.process.argv&&a.process.argv.length>1){var
c=a.process.argv;f=c[1];b=rE(c,2,c.length-2)}var
g=dD(f),e=[0,g];for(var
d=0;d<b.length;d++)e.push(dD(b[d]));return[0,g,e]}function
bUb(){return[0,a(Ti),32,0]}function
bUc(){return a(apc)}function
bT4(){Bq(b4.Not_found)}function
fK(c){var
a=d1,b=c.toString();if(a.process&&a.process.env&&a.process.env[b]!=undefined)return dD(a.process.env[b]);bT4()}function
bUe(){var
a=new
Date()^4294967295*Math.random();return[0,a]}function
dE(a){var
b=1;while(a&&a.joo_tramp){a=a.joo_tramp.apply(null,a.joo_args);b++}return a}function
ai(b,a){return{joo_tramp:b,joo_args:a}}function
is(c,a){if(typeof
a===lz){c.fun=a;return 0}if(a.fun){c.fun=a.fun;return 0}var
b=a.length;while(b--)c[b]=a[b];return 0}var
hc=3;function
mQ(a,c,b,d,e){apa(a,hc+c-1,b,hc+d-1,e);return 0}function
mR(b,a){return b[hc+a]!==undefined&&b[hc+a]!==0?1:0}function
j_(b){var
a=[lW,"caml_ephe_list_head"];a.length=hc+b;return a}function
d0(b,a){return b[hc+a]===undefined?0:b[hc+a]}function
Bv(d,c){var
a=d0(d,c);if(a===0)return a;var
b=a[1];if(b
instanceof
Array)return[0,Bo(b)];return a}function
it(c,a,b){c[hc+a]=b;return 0}function
apv(a){return a}function
bTY(a){return app[a]}function
s(a){if(a
instanceof
Array)return a;if(d1.RangeError&&a
instanceof
d1.RangeError&&a.message&&a.message.match(/maximum call stack/i))return apv(b4.Stack_overflow);if(d1.InternalError&&a
instanceof
d1.InternalError&&a.message&&a.message.match(/too much recursion/i))return apv(b4.Stack_overflow);if(a
instanceof
d1.Error)return[0,bTY(ahY),a];return[0,b4.Failure,dD(String(a))]}function
apy(){}function
bUi(){}function
bUj(){}function
rF(){}function
bUq(){}function
rG(){return 0}function
bUs(g){var
a=new
Date(g*g1),d=new
Date(a.getFullYear(),0,1),b=Math.floor((a-d)/864e5),c=new
Date(a.getFullYear(),0,1),e=new
Date(a.getFullYear(),6,1),f=Math.max(c.getTimezoneOffset(),e.getTimezoneOffset());return[0,a.getSeconds(),a.getMinutes(),a.getHours(),a.getDate(),a.getMonth(),a.getFullYear()-$W,a.getDay(),b,a.getTimezoneOffset()<f|0]}function
c(a,b){return a.length==1?a(b):cI(a,[b])}function
b(a,b,c){return a.length==2?a(b,c):cI(a,[b,c])}function
m(a,b,c,d){return a.length==3?a(b,c,d):cI(a,[b,c,d])}function
p(a,b,c,d,e){return a.length==4?a(b,c,d,e):cI(a,[b,c,d,e])}function
aq(a,b,c,d,e,f){return a.length==5?a(b,c,d,e,f):cI(a,[b,c,d,e,f])}function
E(a,b,c,d,e,f,g){return a.length==6?a(b,c,d,e,f,g):cI(a,[b,c,d,e,f,g])}function
bE(a,b,c,d,e,f,g,h){return a.length==7?a(b,c,d,e,f,g,h):cI(a,[b,c,d,e,f,g,h])}function
bx(a,b,c,d,e,f,g,h,i){return a.length==8?a(b,c,d,e,f,g,h,i):cI(a,[b,c,d,e,f,g,h,i])}function
f$(a,b,c,d,e,f,g,h,i,j){return a.length==9?a(b,c,d,e,f,g,h,i,j):cI(a,[b,c,d,e,f,g,h,i,j])}function
bTj(a,b,c,d,e,f,g,h,i,j,k){return a.length==10?a(b,c,d,e,f,g,h,i,j,k):cI(a,[b,c,d,e,f,g,h,i,j,k])}function
Kb(a,b,c,d,e,f,g,h,i,j,k,l){return a.length==11?a(b,c,d,e,f,g,h,i,j,k,l):cI(a,[b,c,d,e,f,g,h,i,j,k,l])}function
vH(a,b,c,d,e,f,g,h,i,j,k,l,m){return a.length==12?a(b,c,d,e,f,g,h,i,j,k,l,m):cI(a,[b,c,d,e,f,g,h,i,j,k,l,m])}function
bTi(a,b,c,d,e,f,g,h,i,j,k,l,m,n){return a.length==13?a(b,c,d,e,f,g,h,i,j,k,l,m,n):cI(a,[b,c,d,e,f,g,h,i,j,k,l,m,n])}V("/examples/paper/02-binding-forms.md","<!--\n```makam\n%use \"01-base-language.md\".\n```\n-->\n\nAs we've seen, single-variable binding as in the lambda abstraction can be handled easily through\nhigher-order abstract syntax. Let us now explore how to encode other forms of binding.\n\nAs a first example, we will introduce multiple-argument functions as a distinct object-level\nconstruct, as opposed to using currying. A first attempt at encoding such a construct could be to\nintroduce a `list` of term variables at the same time, as follows:\n\n```makam\nlammany : (list term -> term) -> term.\n```\n\nHowever, this type does not correspond to the construct we are trying to encode. The type `list term\n-> term` introduces a fresh local variable for the `list` type, as opposed to a number of fresh\nlocal variables for the `term` type. Since the HOAS function space is parametric, there is no way to\neven refer to the potential elements of the fresh `list` -- we can only refer to the fresh list in\nfull.\n\nInstead, we would like a type that represents all types of the form:\n\n- `term` (binding no variables)\n- `term -> term` (binding a single variable)\n- `term -> (term -> term)` (binding two variables)\n- `term -> (term -> (term -> term))` (binding three variables) etc.\n\nWe can encode such a type inductively in \xce\xbbProlog, as follows:\n\n```makam\nbindmanyterms : type.\nbindbase : term -> bindmanyterms.\nbindnext : (term -> bindmanyterms) -> bindmanyterms.\n```\n\nFurthermore, we can generalize the type that we are binding over, and the type of the body, leading\nto a polymorphic type of the form:\n\n```makam\nbindmany : type -> type -> type.\nbindbase : B -> bindmany A B.\nbindnext : (A -> bindmany A B) -> bindmany A B.\n```\n\nWith these, `lammany` can be encoded as: \n\n```makam\nlammany : bindmany term term -> term.\n```\n\n(As an aside: here we have allowed binding zero variables for presentation reasons.  We could\ndisallow binding zero variables by changing the `base` case to require an argument of type `A -> B`\ninstead of a `B`, similar to how we can specify lists with at least one element inductively by\nreplacing the `nil` constructor with a constructor that requires an element.)\n\nHow do we work with the `bindmany` type? For the built-in single binding type, we used three\noperations:\n\n- variable substitution, encoded through HOAS function application\n- introducing a fresh variable, through the predicate form `x:term -> ...`\n- introducing a new assumption, through the predicate form `P -> ...`\n\nWe can define three equivalent operations as predicates, for the multiple binding\ncase: \n\n-- *a generalization of application*, for substituting all the variables in a `bindmany` \n\n```makam\napplymany : bindmany A B -> list A -> B -> prop.\napplymany (bindbase Body) [] Body.\napplymany (bindnext F) (HD :: TL) Body :-\n  applymany (F HD) TL Body.\n```\n\n-- *local introduction of multiple fresh variables at once* within a predicate P; a list\n  of the variables is passed to it \n\n```makam\nintromany : bindmany A B -> (list A -> prop) -> prop.\nintromany (bindbase _) P :- P [].\nintromany (bindnext F) P :-\n  (x:A -> intromany (F x) (fun tl => P (x :: tl))).\n```\n\n-- *local introduction of a number of assumptions* of the form `P X Y` within a predicate\n   `Q`.\n   \nThis is intended to be used, for example, for introducing assumptions\nfor predicates such as `typeof`, taking a list of term variables and a\nlist of types, in the same order.\n\n```makam\nassumemany : (A -> B -> prop) -> list A -> list B -> prop -> prop.\nassumemany P [] [] Q :- Q.\nassumemany P (X :: XS) (Y :: YS) Q :- (P X Y -> assumemany P XS YS Q).\n```\n\nThese predicates are in exact correspondence with the operations we have available for the built-in\nHOAS function type -- save for application being a predicate rather than a term-level construct --\nso we are able to reap the benefits of HOAS representations for multiple bindings as well.\n\nFor convenience, it is also useful to define another predicate that gives access to both the\nvariables introduced in a `bindmany` and the body of the construct as well.  This predicate combines\n`intromany`, for introducing the variables, with `applymany`, for getting the body of the construct,\nand is defined as follows:\n\n```makam\nopenmany : bindmany A B -> (list A -> B -> prop) -> prop.\nopenmany F P :-\n  intromany F (pfun xs => [Body] applymany F xs Body, P xs Body).\n```\n\nTwo notational idiosyncrasies here of Makam, the \xce\xbbProlog dialect we are using:\n\n`pfun` is syntactic convenience for anonymous predicate literals, allowing to use the normal syntax\nfor propositions that we use elsewhere, i.e. in clause premises.  It is otherwise entirely\nequivalent to the `fun` construct for anonymous functions.\n\nThe square bracket notation, used above in `[Body]`, introduces a new metavariable; it therefore can\nbe read as existential quantification. Metavariables are allowed to capture all the free variables\nin scope at the point where they are introduced.  For most of them, introduced implicitly in each\nclause, this means the free variables in scope when the clause is used. In this case however it is\nnecessary that `Body` can capture the fresh variables introduced by the `intromany` predicate too,\nhence the explicit metavariable introduction.\n\nWe can now define the typing rule for `lammany` using these predicates, as follows: \n\n```makam\narrowmany : list typ -> typ -> typ.\n\ntypeof (lammany F) (arrowmany TS T') :-\n  openmany F (fun xs body =>\n    assumemany typeof xs TS (typeof body T')).\n```\n\nFor example, the following query returns: \n\n```makam\ntypeof (lammany (bindnext (fun x => bindnext (fun y => bindbase (tuple [x, y]))))) T ?\n>> Yes:\n>> T := arrowmany [T1, T2] (product [T1, T2])\n```\n\nAdding the corresponding `appmany` construct for simultaneous application is straightforward. We can\nuse the `applymany` predicate defined above to encode simultaneous substitution for the evaluation\nrule.\n\n```makam\nappmany : term -> list term -> term.\n\ntypeof (appmany E ES) T' :-\n  typeof E (arrowmany TS T'),\n  map typeof ES TS.\n\neval (lammany F) (lammany F).\n\neval (appmany E ES) V' :-\n  eval E (lammany F),\n  map eval ES VS,\n  applymany F VS E',\n  eval E' V'.\n```\n\nWe can use the `bindmany` type to encode other constructs, such as mutually recursive definitions,\nlike the `let rec` construct of ML. In that case, we can capture the right binding structure by\nintroducing a number of variables simultaneously, accessible both when giving the (same number of)\ndefinitions and the body of the construct.\n\nWe can therefore encode a `let rec` construct of the form:\n\n```\nlet rec f = f_def and g = g_def in body\n```\n\nas\n\n```\nletrec (bindnext (fun f => bindnext (fun g => bindbase ([f_def, g_def]))))\n       (bindnext (fun f => bindnext (fun g => bindbase body)))\n```\n\nThe type-checking rule would be as follows:\n\n```makam\nletrec : bindmany term (list term) -> bindmany term term -> term.\n\ntypeof (letrec XS_Defs XS_Body) T' :-\n  openmany XS_Defs (pfun xs defs =>\n    assumemany typeof xs TS (map typeof defs TS)\n  ),\n  openmany XS_Body (pfun xs body =>\n    assumemany typeof xs TS (typeof body T')\n  ).\n```\n\nStill, even though this encoding matches the binding structure correctly, it is unsatisfying, as it\ndoes not guarantee that the same number of variables are introduced in both cases and that the same\nnumber of definitions are given. Though this requirement is enforced at the level of the typing\nrules, it would be better if we could enforce it at the syntax level.  This would require some sort\nof dependency though, which at first does not seem possible to do in \xce\xbbProlog.\n");V("/examples/paper/07-hindley-milner.md","(Text is very much WIP.)\n\n<!--\n```makam\n%use \"05-type-synonyms.md\".\n```\n-->\n\nLet's now do Hindley-Milner let-polymorphism:\n\n```makam\nlet : term -> (term -> term) -> term.\n```\n\nEasy so far.\n\nThe inference rule looks like this:\n\\begin{displaymath}\n\\inferrule{\n  \\Gamma \\vdash e : \\tau \\\\\n  \\vec{a} = \\text{fv}(\\tau) - \\text{fv}(\\Gamma) \\\\\n  \\Gamma, x : \\forall \\vec{a}.\\tau \\vdash e' : \\tau'\n}{\n  \\Gamma \\vdash \\text{let} \\; x = e \\; \\text{in} \\; e' : \\tau'\n}\n\\end{displaymath}\n\n(We have not added any side-effectful operations, so no need to add a value restriction.)\n\nThis is easy to transcribe in Makam, assuming a predicate for generalizing a type:\n\n```makam\ngeneralize : typ -> typ -> prop.\n\ntypeof (let E F) T' :-\n  typeof E T,\n  generalize T Tgen,\n  (x:term -> typeof x Tgen -> typeof (F x) T').\n```\n\nSo we need to do the following:\n\n- something that picks out free-variables from a term -- or, in our setting, uninstantiated meta-variables\n- something that picks out free-variables from the local context\n- a way to turn something that includes meta-variables into a `forall` type\n\nThis predicate picks out the first metavariable of a certain type it finds. It uses `generic.fold`\nwhich is another generic operation, defined similarly to `structural_recursion`, but which performs\na fold over arbitrary types.\n\n```makam\nfindunif : [A B] option B -> A -> option B -> prop.\nfindunif (some X) _ (some X).\nfindunif none (X : A) (some (X : A)) :- refl.isunif X.\nfindunif In X Out :- generic.fold findunif In X Out.\n\nfindunif : [A B] A -> B -> prop.\nfindunif T X :- findunif none T (some X).\n```\n\nNote that the second rule, the important one, will only match when we encounter a metavariable\nof the same type as the one we require, as we do type specialization.\n\nNow let's add something, that given a specific meta-variable and a specific term, replaces the\nmeta-variable with the term. We will see later why this is necessary. Here we will need another\nreflective predicate, `refl.sameunif` that succeeds when its two arguments are the same exact\nmetavariable. As opposed to unifying two metavariables, this allows us to \"pick out\" occurrences\nof a specific metavariable.\n\n```makam\nreplaceunif : [A B] A -> A -> B -> B -> prop.\nreplaceunif Which ToWhat Where Result :-\n  refl.isunif Where,\n  if (refl.sameunif Which Where)\n  then (eq (dyn Result) (dyn ToWhat))\n  else (eq Result Where).\nreplaceunif Which ToWhat Where Result :-\n  not(refl.isunif Where),\n  structural_recursion (replaceunif Which ToWhat) Where Result.\n```\n\nA last auxiliary predicate will allow us to check whether a specific metavariable exists\nwithin a term:\n\n```makam\nhasunif : [A B] B -> bool -> A -> bool -> prop.\nhasunif _ true _ true.\nhasunif X false Y true :- refl.sameunif X Y.\nhasunif X In Y Out :- generic.fold (hasunif X) In Y Out.\n\nhasunif : [A B] A -> B -> prop.\nhasunif Term Var :- hasunif Var false Term true.\n```\n\nWe are now ready to implement `generalize`. Base case: there exist no unification variables\nwithin a type:\n```makam\ngeneralize T T :- \n  not(findunif T X).\n```\n\nRecursive case: there exists at least one unification variable. We will pick out that unification\nvariable, abstract over it and repeat the process to pick out any remaining ones.  We will check\nwhether we are allowed to generalize by getting something that holds all `typ`s in the current\nvariable environment -- that is, all `T`s for any `typeof x T` local assumptions -- and making sure\nthat the current unification variable does not occur in that.  Getting the types in the environment\nis done through the `get_types_in_environment` predicate, and we will leave the type of its result\nabstract for the time being.\n\n```makam\nget_types_in_environment : [A] A -> prop.\n\ngeneralize T Res :-\n  findunif T X,\n  (x:typ -> (replaceunif X x T (T' x), generalize (T' x) (T'' x))),\n  get_types_in_environment Types,\n  if (hasunif Types X)\n  then (eq Res (T'' X))\n  else (eq Res (forall T'')).\n```\n\nWhat can `get_types_in_environment` be? We could change all our typing rules to add a list argument\nthat holds all the types that we put in the context, and thread it through all our predicates.\nHowever, again using reflective predicates, there is an easier way to do that: we can simply get\nall the local assumptions for the `typeof` predicate for terms, which will exactly correspond\nto the local assumptions for the current set of free variables:\n\n```makam\nget_types_in_environment Assumptions :-\n  refl.assume_get (typeof : term -> typ -> prop) Assumptions.\n```\n\nWe're done!\n\nExample, easy:\n\n```makam\ntypeof (let (lam _ (fun x => x)) (fun id => id)) T ?\n>> Yes:\n>> T := forall (fun a => arrow a a)\n```\n\nAnother example, where the problem of naive generalization shows up:\n\n```makam\ntypeof (let (lam _ (fun x => let x (fun y => y)))\n            (fun z => z)) T ?\n>> Yes:\n>> T := forall (fun a => arrow a a)\n```\n\n(Just checking the issue where we don't remove all unification variables in the context -- this\nis a hack, if we need to do this we can show the above in two steps instead:)\n\n```makam\n(get_types_in_environment [] ->\n  typeof (let (lam _ (fun x => let x (fun y => y)))\n            (fun z => z)) T) ?\n>> Yes:\n>> T := forall (fun a => arrow a (forall (fun b => b)))\n```\n");V("/examples/paper/01-base-language.md","We will start with encoding a version of the simply typed lambda calculus in \xce\xbbProlog. We define two new meta-types to\nrepresent the two sorts of our object language: terms and types. We also define the `typeof`\nrelation that corresponds to the typing judgement of the language.\n\n```makam\nterm   : type.\ntyp    : type.\ntypeof : term -> typ -> prop.\n```\n\nDefining the basic forms of the \xce\xbb-calculus is very easy, thanks to the support of higher-order\nabstract syntax in higher-order logic programming. We can reuse the meta-level function type in\norder to implement object-level binding. This is because the meta-level function space is\n*parametric* -- that is, the body of a function is a value that can just mention the argument as-is,\ninstead of being a computation that can inspect the specific value of an argument. Therefore,\nmeta-level functions exactly represent an object-level binding of a single variable, without\nintroducing *exotic terms*.\n\n```makam\napp    : term -> term -> term.\nlam    : typ -> (term -> term) -> term.\narrow  : typ -> typ -> typ.\n```\n\nEncoding the typing rule for application as a \xce\xbbProlog *clause* for the `typeof` relation is a\nstraightforward transliteration of the pen-and-paper version.\n\n```makam\ntypeof (app E1 E2) T' :-\n  typeof E1 (arrow T T'),\n  typeof E2 T.\n```\n\nIn logic programming, the goal of a rule is written first, followed by the premises; the `:-`\noperator can be read as \"is implied by,\" and comma is logical conjuction. We use capital letters for\nunification variables.\n\nThe rule for lambda functions is similarly straightforward: \n\n```makam\ntypeof (lam T1 E) (arrow T1 T2) :-\n  (x:term -> typeof x T1 -> typeof (E x) T2).\n```\n\nThere are three things of note in the premise of the rule. First, we introduce a fresh term variable\n`x`, through the form `x:term ->`, which can be read as universal quantification. Second, we\nintroduce a new assumption through the form `typeof x T ->`, which essentially introduces a new rule\nfor the `typeof` relation locally; this can be read as logical implication. Third, in order to get\nto the body of the lambda function to type-check it, we need to apply it to the fresh variable `x`.\n\nWith these definitions, we have already implemented a type-checker for the simply typed lambda\ncalculus, as we can issue queries for the `typeof` relation to Makam:\n\n```makam\ntypeof (lam _ (fun x => x)) T' ?\n>> Yes:\n>> T' := arrow T T\n```\n\nOne benefit of using \xce\xbbProlog instead of rolling our own type-checker is that the occurs check is\nalready implemented in the unification engine. As a result, a query that would result in an\nill-formed cyclical type with a naive implementation of unification fails as expected.\n\n```makam\ntypeof (lam _ (fun x => app x x)) T' ?\n>> Impossible.\n```\n\nOther than supporting higher-order abstract syntax, \xce\xbbProlog also supports polymorphic types and\nhigher-order predicates, in a matter akin to traditional functional programming languages. For\nexample, we can define the polymorphic `list` type, and an accompanying `map` higher-order\npredicate, as follows:\n\n```\nlist : type -> type.\n\nnil : list A.\ncons : A -> list A -> list A.\n\nmap : (A -> B -> prop) -> list A -> list B -> prop.\nmap P nil nil.\nmap P (cons X XS) (cons Y YS) :- P X Y, map P XS YS.\n```\n\nUsing the meta-level list type, we can encode object-level constructs such as tuples and product types \ndirectly: \n\n```makam\ntuple : list term -> term.\nproduct : list typ -> typ.\n```\n\nSimilarly we can use the `map` predicate to define the typing relation for tuples. \n\n```makam\ntypeof (tuple ES) (product TS) :-\n  map typeof ES TS.\n```\n\nExecuting a query with a tuple yields the correct result:\n\n```makam\ntypeof (lam _ (fun x => lam _ (fun y => tuple (cons x (cons y nil))))) T ?\n>> Yes:\n>> T := arrow T1 (arrow T2 (product (cons T1 (cons T2 nil))))\n```\n\nSo far we have only introduced the predicate `typeof` for typing. In the same way, we can introduce\na predicate for evaluating terms, capturing the dynamic semantics of the language.\n\n```makam\neval : term -> term -> prop.\n```\n\nMost of the rules are straightforward, following standard practice for big-step semantics.  We\nassume a call-by-value evaluation strategy.\n\n```makam\neval (lam T F) (lam T F).\neval (tuple ES) (tuple VS) :- map eval ES VS.\n```\n\nFor the beta-redex case, function application for higher-order abstract syntax gives us\ncapture-avoiding substitution directly: \n\n```makam\neval (app E E') V'' :-\n  eval E (lam _ F), eval E' V', eval (F V') V''.\n```\n");V("/examples/paper/03-dependent-binding.md","<!--\n```makam\n%use \"02-binding-forms.md\".\n```\n-->\n\nThe type system of \xce\xbbProlog can be viewed as a particular subset of System F\xcf\x89: namely, it is the\nsimply typed lambda calculus extended with prenex polymorphism and simple type constructors of the\nform `type -> type -> ... -> type`. (As an aside, `prop` can be viewed as a separate sort, but we\ntake the view that it is just a distinguished extensible type.)\n\nAs is well-known from Haskell even before the addition of kind definitions, type promotion and\ntype-in-type, this subset of System F\xcf\x89 is enough to model some form of dependency. For example, we\ncan introduce two types for modelling natural numbers, and define vectors as a GADT using those:\n\n```makam\nnatZ : type.\nnatS : type -> type.\n\nvector : type -> type -> type.\nvnil : vector natZ A.\nvcons : A -> vector N A -> vector (natS N) A.\n```\n\nIn fact, \xce\xbbProlog naturally supports pattern-matching over such constructors as well, through *ad-hoc\npolymorphism*, where polymorphic type variables are allowed to be instantiated at *runtime* rather\nthan at type-checking time. The mechanism through which ad-hoc polymorphism works in \xce\xbbProlog is\nsimple: before performing unification at the term-level, we perform unification at the type level\nfirst, therefore further determining any uninstantiated type variables. Therefore, when we check to\nsee whether the current goal matches the premise of a rule, type unification can force us to\ndistinguish between different types. Based on these, the standard example of `map` for vectors is as\nfollows:\n\n```makam\nvmap : [N] (A -> B -> prop) -> vector N A -> vector N B -> prop.\nvmap P vnil vnil.\nvmap P (vcons X XS) (vcons Y YS) :- P X Y, vmap P XS YS.\n```\n\nThe notation `[N]` in the type of `vmap` means that the type argument `N` is ad-hoc/not-parametric.\nNon-specified type arguments are parametric by default, so as to match standard practice in\nlanguages like ML and Haskell, and to catch type errors that allowing unqualified ad-hoc\npolymorphism would permit. For example, consider the following erroneous definition for `fold`,\nwhere the arguments for `P` in the `cons` case are flipped.\n\n```\nfoldl : (B -> A -> B -> prop) -> B -> list A -> B -> prop.\nfoldl P S nil S.\nfoldl P S (cons HD TL) S'' <- P HD S S', foldl P S' TL S''.\n```\n\nIf ad-hoc polymorphism is allowed for `A` and `B`, this is a well-typed definition. However, the\nerroneous call to `P` forces the types `A` and `B` to be unified, and therefore the `fold` predicate\nis unnecessarily restricted to only work when the two types are the same. Having to specify ad-hoc\npolymorphism explicitly helps us avoid such mistakes.\n\nThough this support for ad-hoc polymorphism was part of the original \xce\xbbProlog design, we have not\nfound extensive coverage of its implications in the literature. Furthermore, it is not supported\nwell by standard implementations of \xce\xbbProlog (like Teyjus), which was one of the reasons that\nprompted us to work on Makam.\n\nArmed with GADTs of this form, we can now introduce dependently-typed binding forms, where the\nnumber of variables that are being bound is reflected in the type. One way to do this is through\na type of the form `dbind A N B`, standing for a dependently-typed binding of `N` fresh variables\nof type `A`'s into a body of type `B`. `N` will be instantiated with `natZ` and `natS` as above. \n\n```makam\ndbind : type -> type -> type -> type. \n\ndbindbase : B -> dbind A natZ B.\ndbindnext : (A -> dbind A N B) -> dbind A (natS N) B.\n```\n\nAnother possibility, avoiding the need for introducing type-level natural numbers, is to\nuse a more standard type as the dependent parameter: the type of tuples that would serve\nas substitutions for the introduced variables. The type would then become:\n```makam\ndbind : type -> type -> type -> type.\n\ndbindbase : B -> dbind A unit B.\ndbindnext : (A -> dbind A T B) -> dbind A (A * T) B.\n```\n\nThe definitions for helper predicates, such as `intromany`, `applymany`, etc. follow the case for\n`bindmany` closely, only with more precise types.  We first define a helper type `subst A T` that is\nequivalent to the type of tuples `T` we expect. This is not strictly necessary but allows for more\nprecise types: \n\n```makam\nsubst : type -> type -> type.\nnil : subst A unit.\ncons : A -> subst A T -> subst A (A * T).\n```\n\nThe predicates are now defined as follows. First, their types are: \n\n```makam\nintromany : [T] dbind A T B -> (subst A T -> prop) -> prop.\napplymany : [T] dbind A T B -> subst A T -> B -> prop.\nopenmany : [T] dbind A T B -> (subst A T -> B -> prop) -> prop.\n```\n\nNote that we are reusing the same predicate names as before. Makam allows overloading for\nall variable names; expected types are taken into account for resolving variables and\ndisambiguating between them, as has been long known to be possible in the bi-directional\ntype-checking literature. Type ascription is used when variable resolution is\nambiguous. We also sometimes avoid overloading for constructors; having unambiguous types\nfor constructors means that they can be used to resolve ambiguity between overloaded\npredicates easily. However, here we reuse the `nil` and `cons` constructors for `subst`\nso that we can use the sugared form for list-like datatypes (using `[]` and `::`).\n\n```makam\nintromany (dbindbase F) P :- P nil.\nintromany (dbindnext F) P :-\n  (x:A -> intromany (F x) (pfun t => P (x :: t))).\n\napplymany (dbindbase Body) [] Body.\napplymany (dbindnext F) (X :: XS) Body :- applymany (F X) XS Body.\n\nopenmany F P :-\n  intromany F (pfun xs => [Body] applymany F xs Body, P xs Body).\n```\n\nAlso, we define predicates analogous to `map` and `assumemany` for the\n`subst` type: \n\n```makam\nassumemany : [T T'] (A -> B -> prop) -> subst A T -> subst B T' -> prop -> prop.\nassumemany P [] [] Q :- Q.\nassumemany P (X :: XS) (Y :: YS) Q :- (P X Y -> assumemany P XS YS Q).\n\nmap : [T T'] (A -> B -> prop) -> subst A T -> subst B T' -> prop.\nmap P [] [].\nmap P (X :: XS) (Y :: YS) :- P X Y, map P XS YS.\n```\n\n(Here we have not captured the relationship between the type of tuples `T` and `T'` precisely,\nnamely that one structurally matches the other with `A`s replaced by `B`s. We could capture that by\nadding another argument of a dependent type that captures that relationship, but we will elide this\nto avoid needlessly complicating the presentation.)\n  \nUsing this type, we can define `letrec` as follows: \n\n```makam\nletrec : dbind term T (subst term T) -> dbind term T term -> term.\n```\n\nThis encoding captures the binding structure of the construct precisely: we need the same number of\ndefinitions as the number of variables we introduce, and the body of the construct needs exactly the\nsame number of variables bound.\n\nThe typing rule is entirely similar to the one we had previously:\n\n```makam\ntypeof (letrec Defs Body) T' :-\n  openmany Defs (pfun xs defs =>\n    assumemany typeof xs TS (map typeof defs TS)\n  ),\n  openmany Body (pfun xs body =>\n    assumemany typeof xs TS (typeof body T')\n  ).\n```\n\n## Patterns\nWe can also use the same 'dependency' trick for other, more complicated forms of binding. One such\nexample which we sketch below is linear ordered binding as in the case of patterns. The point is\nthat having explicit support in our metalanguage only for single-variable binding, as is standard in\nHOAS, together with the two kinds of polymorphism we have shown, is enough. Using them, we can\nencode complicated binding forms, that often require explicit support in other meta-linguistic\nsettings (e.g. Needle + Knot, Unbound, etc.)\n\nAt the top level, a single type argument is needed for patterns, representing the list of variables\nthat it uses in the order that they are used. Each variable can only be used once, so at the level\nof patterns, there is not really a notion of binding: pattern variables are \"introduced\" at their\npoint of use. However, the list of variables that we build up can be reused in order to be actually\nbound into a term -- e.g. the body of a pattern-matching branch.\n\n(Single-variable binding is really a way to introduce a \"point\" in an AST where we can \"refer back\nto\" from its children; or the means to introduce sharing in the notion of ASTs, allowing to refer to\nthe same \"thing\" a number of times. There's no sharing going on inside patterns though; hence no\nbinding constructs are needed for encoding the patterns themselves.)\n\nEach sub-pattern that makes up a pattern needs to dependent on two arguments, in order to capture\nthe linearity -- the fact that variables \"go away\" after their first use. The first argument\nrepresents all the variables that can be used, and initially matches the type argument of the\ntop-level pattern; the second argument represents the variables that \"remain\" to be used after this\nsub-pattern is traversed. We use \"initially\" and \"after\" to refer to the order of visiting the\nsub-patterns in a structural, depth-first traversal of the pattern. The \"difference\" between the\ntypes corresponds to the variables that each particular sub-pattern uses.\n\nTo make the presentation cleaner, we will introduce a single type for patterns that has both\narguments, with the requirement that for top-level arguments, no variables remain.\n\n```makam\npatt : type -> type -> type.\n```\n\n(Probably hidden: add natural numbers so that we can have a simple example of patterns.)\n\n```makam\nnat : typ.\nzero : term.\nsucc : term -> term.\ntypeof zero nat.\ntypeof (succ N) nat :- typeof N nat.\neval zero zero.\neval (succ E) (succ V) :- eval E V.\n```\n\nThe pattern for zero does not use any variables; the pattern `succ P` for successor\nuses the same variables that `P` does.\n```makam\npatt_zero : patt T T.\npatt_succ : patt T T' -> patt T T'.\n```\nA single pattern variable declares/uses exactly itself.\n```makam\npatt_var : patt (term * T) T.\n```\nA wildcard pattern does not use any variables.\n```makam\npatt_wild : patt T T.\n```\nn-ary tuples require a type for pattern lists:\n```makam\npattlist : type -> type -> type.\npatt_tuple : pattlist T T' -> patt T T'.\n\nnil : pattlist T T.\ncons : patt T1 T2 -> pattlist T2 T3 -> pattlist T1 T3.\n```\n\nWe can now encode a single-branch \"case-or-else\" statement as follows:\n\n```makam\ncase_or_else : term -> patt T unit -> dbind term T term -> term -> term.\n```\n\nThe first argument is the scrutinee; the second is the pattern; the third is the branch body, where\nwe bind the same number of variables as the ones used in the pattern, and the last argument is the\n`else` case.\n\nThe typing relation for patterns is defined as follows: given a pattern and a list of types for the\nvariables that remain after the pattern, yield a list of types for all the variables that are\navailable, plus the type of the pattern.\n\n```makam\ntypeof : [T T' Ttyp T'typ] patt T T' -> subst typ T'typ -> subst typ Ttyp -> typ -> prop.\n\ntypeof patt_var S' (cons T S') T.\ntypeof patt_wild S S T.\ntypeof patt_zero S S nat.\ntypeof (patt_succ P) S' S nat :-\n  typeof P S' S nat.\n\ntypeof :\n  [T T' Ttyp T'typ] pattlist T T' -> subst typ T'typ -> subst typ Ttyp -> list typ -> prop.\n\ntypeof (patt_tuple PS) S' S (product TS) :-\n  typeof PS S' S TS.\n\ntypeof [] S S [].\ntypeof (P :: PS) S3 S1 (T :: TS) :-\n  typeof PS S3 S2 TS, typeof P S2 S1 T.\n\ntypeof (case_or_else Scrutinee Pattern Body Else) T' :-\n  typeof Scrutinee T,\n  typeof Pattern nil TS T,\n  openmany Body (pfun xs body =>\n     (assumemany typeof xs TS (typeof body T'))\n  ),\n  typeof Else T'.\n```\n  \nIn order to define evaluation rules, we could define a predicate that models unification between\npatterns and terms. However, we can do better than that: we can re-use the existing support for\nunification from the metalanguage! In that case, all we need is a way to convert a pattern into a\nterm, with pattern variables replaced by *meta-level metavariables*. The metavariables are\nintroduced at each conversion rule as needed, and will get instantiated to the right terms if\nunification with the scrutinee succeeds.\n\n```makam\npatt_to_term : [T T'] patt T T' -> term -> subst term T' -> subst term T -> prop.\npatt_to_term patt_var X Subst (X :: Subst).\npatt_to_term patt_wild _ Subst Subst.\npatt_to_term patt_zero zero Subst Subst.\npatt_to_term (patt_succ PN) (succ EN) Subst' Subst :- patt_to_term PN EN Subst' Subst.\n\npattlist_to_termlist : [T T'] pattlist T T' -> list term -> subst term T' -> subst term T -> prop.\n\npatt_to_term (patt_tuple PS) (tuple ES) Subst' Subst :-\n  pattlist_to_termlist PS ES Subst' Subst.\n\npattlist_to_termlist [] [] Subst Subst.\npattlist_to_termlist (P :: PS) (T :: TS) Subst3 Subst1 <-\n  pattlist_to_termlist PS TS Subst3 Subst2,\n  patt_to_term P T Subst2 Subst1.\n\neval (case_or_else Scrutinee Pattern Body Else) V :-\n  patt_to_term Pattern TermWithUnifvars [] Unifvars,\n  if (eq Scrutinee TermWithUnifvars)  (* reuse unification from the meta-language *)\n  then (applymany Body Unifvars Body', eval Body' V)\n  else (eval Else V).\n```\n\nTwo new things here: if-then-else has the semantics described in the LogicT monad paper.\n`eq` is a predicate that forces its arguments to be unified, defined simply as:\n\n```makam\neq : A -> A -> prop.\neq X X.\n```\n\nExample of pattern matching: predecessor for nats.\n\n```makam\n(eq _PRED \n  (lam _ (fun n => \n    case_or_else n\n      (patt_succ patt_var) (dbindnext (fun pred => dbindbase pred))\n      zero\n      )),\n typeof _PRED T,\n eval (app _PRED zero) PRED_OF_ZERO,\n eval (app _PRED (succ (succ zero))) PRED_OF_TWO) ?\n>> Yes:\n>> T := arrow nat nat\n>> PRED_OF_ZERO := zero\n>> PRED_OF_TWO := succ zero\n```\n");V("/examples/paper/05-type-synonyms.md","<!--\n```makam\n%use \"04-ml-subset.md\".\n```\n-->\n\nLet us proceed to add type synonyms:\n\n```makam\ntype_synonym : dbind typ T typ -> (typeconstructor T -> program) -> program.\n\ntype_synonym_info : typeconstructor T -> dbind typ T typ -> prop.\n\nwfprogram (type_synonym Syn Program') :-\n  (t:(typeconstructor T) ->\n   type_synonym_info t Syn ->\n   wfprogram (Program' t)).\n```\n\nSimple enough. How to typecheck them though? We need something like the\nconversion rule:\n\n\\begin{displaymath}\n\\inferrule{\n  \\Gamma \\vdash e : \\tau \\\\ \\tau =_{\\delta} \\tau'\n}{\n  \\Gamma \\vdash e : \\tau'\n}\n\\end{displaymath}\n\nHere $=_{\\delta}$ means equality up to expanding type synonyms.\n\nWe will need a type equality predicate:\n\n```makam\nteq : typ -> typ -> prop.\n```\n\nA naive attempt at the conversion rule would be:\n\n```\ntypeof E T :- typeof E T', teq T T'.\n```\n\nHowever, it is easy to see that this rule leads to divergence:\nit does a recursive call to itself.\n\nWe can do a bit better. We only need to use the conversion rule in cases where we\nalready know something about the type `T` of the expression, but our typing rules do\nnot match that type. In bi-directional typing parlance, instead of analyzing the type\n`T` of the expression `E`, we want to synthesize the type starting from a new\nmeta-variable `T'`, and then check that the two types are equal using `teq`.\nSo we need to change our rule to only apply in the case where `T` starts with a\nconcrete type constructor, rather than when it is an uninstantiated meta-variable.\n\nIt is typical for a logic programming language to have a predicate that only succeeds\nwhen a specific term is uninstantiated (usually called `var`). In Makam this is\ncalled `refl.isunif` -- the `refl` namespace prefix standing for the fact that we\ncall these kinds of predicates \"reflective\", as they give us extra-logical\ninformation about the form of a term (sometimes referred to as \"meta-predicates\" in\nProlog parlance). Our second attempt thus looks as follows:\n\n```\ntypeof E T :- not(refl.isunif T), typeof E T', teq T T'.\n```\n\nUpon further consideration, we see that this rule leads to an infinite loop as well:\nsince `teq` should be reflective, for every proof of `typeof E T'` through the other\nrules, a new proof using this rule will be discovered, which will lead to another\nproof for it, etc. One way to fix it is to make sure that this rule is only used once\nat the end, if typing using the other rules fails:\n\n```\ntypeof, typeof_cases, typeof_conversion : term -> typ -> prop.\ntypeof E T :-\n  if (typeof_cases E T)\n  then success\n  else (typeof_conversion E T).\ntypeof_cases (app E1 E2) T' :-\n  typeof E1 (arrow T1 T2),\n  typeof E2 T1.\n...\ntypeof_conversion E T :-\n  not(refl.isunif T), typeof_cases E T', teq T T'.\n```\n\nHowever, this would require changing every typing rule we had. Instead, we can do a\ntrick, to force the rule to only fire once for each expression `E`, remembering the\nfact that we have used the rule already:\n\n```makam\nalready_in : [A] A -> prop.\ntypeof E T :-\n  not(refl.isunif T),\n  not(already_in (typeof E)),\n  (already_in (typeof E) -> typeof E T'),\n  teq T T'.\n```\n\nAlso, we need to make sure that we also take the conversion rule into account for\npatterns:\n\n```makam\ntypeof (P : patt A B) S' S T :-\n  not(refl.isunif T),\n  not(already_in (typeof P)),\n  (already_in (typeof P) -> typeof P S' S T'),\n  teq T T'.\n```\n\nNow let's go and define the actual `teq` predicate. A first approach would be to just\nwrite out each case individually:\n\n```\nteq (arrow T1 T2) (arrow T1' T2') :- teq T1 T1', teq T2 T2'.\nteq (product TS) (product TS') :- map teq TS TS'.\nteq (arrowmany TS T) (arrowmany TS' T') :- teq T T', map teq TS TS'.\nteq nat nat.\nteq (forall T) (forall T') :- (x:typ -> teq x x -> teq (T x) (T' x)).\nteq (tconstr TC Args) (tconstr TC Args') :- map teq Args Args'.\nteq (tconstr TC Args) T' :-\n  type_synonym_info TC Syn,\n  applymany Syn Args T,\n  teq T T'.\nteq T' (tconstr TC Args) :-\n  type_synonym_info TC Syn,\n  applymany Syn Args T,\n  teq T' T.\n```\n\nOnly the two last cases are important; the rest is boilerplate that performs\nstructural recursion through the type. Can we do better than that?\n\nLet us ruminate on a possible solution. We want to handle the case where we have a\nconstructor applied to a number of arguments generically, so roughly something\nlike:\n\n```\nteq (Constructor Arguments) (Constructor Arguments') :-\n  map teq Arguments Arguments'.\n```\n\nWhat we mean here, taking the `arrow` rule as an example, is that `Constructor`\nwould match with `arrow`, and `Arguments` would get instantiated with the list\nof arguments of the constructor. One thing to be careful about though is that\nthe types of arguments are not all the same. As a result, instead of a homogeneous\nlist, we need a heterogeneous list. This is simple to represent using the existential\ntype, `dyn`:\n\n```\ndyn : type.\ndyn : A -> dyn.\n```\n\nSo the type of `Arguments` should be `list dyn` rather than `list typ`. The type\nof `teq` will need to be changed, so that we can apply it for any different type,\nrather than just `typ`:\n\n```\nteq : [A] A -> A -> prop.\n```\n\nFurthermore, since we have a heterogeneous list, we need a `map` that uses\npolymorphic recursion: it needs take a polymorphic function as an argument, so that\nit can be used at different types for different elements of the list.\n\n```\ndyn.map : (forall A. [A] A -> A -> prop) -> list dyn -> list dyn -> prop.\n```\n\nThis is in contrast to a type like `[A] (A -> A -> prop) -> list dyn -> list dyn ->\nprop`, which would instantiate the type `A` to the type of the first element of the\nlist, making further applications to different types impossible.\n\nMakam currently does not provide higher-rank types as the above type suggests\n-- nor do any \\lamprolog implementations that we are aware of. Instead, it provides\na way to side-step this issue, through a predicate that replaces polymorphic\ntype variables with fresh variables, allowing it to be instantiated with new types.\nThis is called `dyn.call`, and `dyn.map` can be defined in terms of that:\n\n```\ndyn.call : [B] (A -> A -> prop) -> B -> B -> prop.\ndyn.map : (A -> A -> prop) -> list dyn -> list dyn -> prop.\ndyn.map P [] [].\ndyn.map P (HD :: TL) (HD' :: TL') :- dyn.call P HD HD', dyn.map P TL TL'.\n```\n\n(`dyn.call` is itself defined in terms of a more fundamental predicate `dyn.duphead`\nthat creates a fresh version of a single polymorphic constructor with fresh\ntype variables.)\n\nBased on these, the only thing missing is a way to actually check whether a term\nis a ground term that can be decomposed into a constructor and a list of arguments.\nMakam provides this in the form of the `refl.headargs` predicate:\n\n```\nrefl.headargs : B -> A -> list dyn -> prop.\n```\n\n(Other Prolog implementations also provide predicates towards the same effect;\nfor example, SWI-Prolog provides `compound_name_arguments` which is quite similar.\nThough such predicates are not typical in other \\lamprolog implementations, they\nshould not be viewed as a hack: we could always define these within the language\nif we maintained a discipline, where we added a rule to `refl.headargs` for every\nconstructor that we introduce. For example:\n```\narrowmany : list typ -> typ -> typ.\nrefl.headargs (arrowmany TS T) [arrowmany, [dyn TS, dyn T]].\n```\nMaybe taking extra care to check that we are not instantiating a unification\nby using `refl.isunif`.)\n\nWe are now ready to proceed to defining the boilerplate generically. We will do this\nas a reusable higher-order predicate for structural recursion, that we will use to\nimplement `teq`. We will define it in open recursion style, providing the predicate\nto use on recursive calls as an argument:\n\n```makam\nstructural_recursion : [B] (A -> A -> prop) -> B -> B -> prop.\n\nstructural_recursion Rec X Y :-\n  refl.headargs X Constructor Arguments,\n  dyn.map Rec Arguments Arguments',\n  refl.headargs Y Constructor Arguments'.\n```\n\nWe also need to handle built-in types, such as the meta-level `int` and `string`\ntypes, in case they are used as an argument with other constructors: \n\n```makam\nstructural_recursion Rec (X : string) (X : string).\nstructural_recursion Rec (X : int) (X : int).\n```\n\nAnd last, we need to handle the case of the meta-level function type as well:\n\n```makam\nstructural_recursion Rec (X : A -> B) (Y : A -> B) :-\n  (x:A -> structural_recursion Rec x x -> structural_recursion Rec (X x) (Y x)).\n```\n\nWe are done! Now we can define `teq` using `structural_recursion`, through\nan auxiliary predicate called `teq_aux`. We only need to define the non-trivial\ncases for it, using `structural_recursion` for the rest, while tying the\nopen recursion knot at the same time:\n\n```makam\nteq_aux : [A] A -> A -> prop.\n\nteq T T' :- teq_aux T T'.\n\nteq_aux T T' :-\n  structural_recursion teq_aux T T'.\n\nteq_aux (tconstr TC Args) T' :-\n  type_synonym_info TC Synonym,\n  applymany Synonym Args T,\n  teq_aux T T'.\n\nteq_aux T' (tconstr TC Args) :-\n  type_synonym_info TC Synonym,\n  applymany Synonym Args T,\n  teq_aux T' T.\n```\n\nOther than minimizing the boilerplate, the great thing about using\n`structural_recursion` is that no adaptation needs to be done when we add any new\nconstructor to our `typ` datatype -- even if that uses new types that we have not\ndefined before. For example, we did not have to take any special provision to handle\ntypes we defined earlier such as `dbind` -- everything works out thanks to the\nreflective predicates we are using. (Mention something about the expression problem?)\n\nThe one form of terms that `structural_recursion` does not handle are uninstantiated\nunification variables. We find that leaving that as something that we handle whenever\nwe define a new predicate that uses `structural_recursion` works fine. In this case,\n`teq` is only supposed to be used with ground terms, so it is fine if we fail when we\nencounter a unification variable.\n\nLet's try an example out:\n\n```makam\nascribe : term -> typ -> term.\ntypeof (ascribe E T) T :- typeof E T.\n\nwfprogram (\n  (type_synonym (dbindnext (fun a => dbindbase (product [a, a])))\n  (fun bintuple => \n  \n  main (lam (tconstr bintuple [product [nat, nat]])\n            (fun x => \n    case_or_else x\n    (patt_tuple [patt_tuple [patt_wild, patt_wild], patt_tuple [patt_wild, patt_wild]])\n    (dbindbase (tuple []))\n    (tuple [])\n  ))\n))) ?\n>> Yes.\n```\n\nLet's make sure we don't diverge on type error:\n\n```makam\nascribe : term -> typ -> term.\ntypeof (ascribe E T) T :- typeof E T.\n\nwfprogram (\n  (type_synonym (dbindnext (fun a => dbindbase (product [a, a])))\n  (fun bintuple => \n  \n  main (lam (tconstr bintuple [product [nat, nat]])\n            (fun x => \n    case_or_else x\n    (patt_tuple [patt_tuple [patt_wild], patt_tuple [patt_wild, patt_wild]])\n    (dbindbase (tuple []))\n    (tuple [])\n  ))\n))) ?\n>> Impossible.\n```\n");V("/examples/paper/04-ml-subset.md","<!--\n```makam\n%use \"03-dependent-binding.md\".\n```\n-->\n\nLet us now proceed to encode more features of a programming language like ML using the\ntechniques we have seen so far.\n\nFirst, let's add polymorphism, therefore extending our simply typed lambda calculus to System\nF. We will only consider the explicit polymorphism case for the time being, and explore type\ninference later.\n\nWe need a type for quantification over types, as well as term-level constructs for functions\nover types and instantiating a polymorphic function with a specific type.\n\n```makam\nforall : (typ -> typ) -> typ.\nlamt : (typ -> term) -> term.\nappt : term -> typ -> term.\n```\n\nThe typing rules are similarly straightforward.\n\n```makam\ntypeof (lamt E) (forall T) :-\n  (a:typ -> typeof (E a) (T a)).\n\ntypeof (appt E T) (TF T) :-\n  typeof E (forall TF).\n```\n\nOne thing to note is that in a pen-and-paper version we would need to define a new context that\nkeeps track of type variables that are in scope (typically named $\\Delta$), and an auxiliary\njudgement of the form $\\Delta \\vdash \\tau \\; \\text{wf}$ that checks that all type variables used\nin $\\tau$ are in scope. Here we get type well-formedness for free. Furthermore, if we had to\nkeep track of further information about type variables (e.g. their kind), we could have added\nan assumption of the form `kindof a K ->`. Since the local assumption context can carry rules\nfor any predicate, no extra declaration or change to the existing rules would be needed, as\nwould be required in the pen-and-paper version in order to incorporate the new $\\Delta$\ncontext.\n\nWith these additions, we can give a polymorphic type to the identity function:\n\n```makam\ntypeof (lamt (fun a => lam a (fun x => x))) T ?\n```\n\nMoving on towards a more ML-like language, we would like to add the option to declare algebraic\ndatatypes. This requires us to first introduce a notion of top-level programs, composed of a\nseries of declarations of types and terms, as well as a predicate to check that a program is\nwell-formed:\n\n```makam\nprogram : type.\nwfprogram : program -> prop.\n```\n\nLet us add `let` definitions as a first example of a program component. These introduce a term\nvariable that can be used in the rest of the program:\n\n```makam\nlet : term -> (term -> program) -> program.\n\nwfprogram (let E P) :-\n  typeof E T,\n  (x:term -> typeof x T -> wfprogram (P x)).\n```\n\nWe also need a \"last\" component for the program -- typically this takes the form of a main\nexpression:\n\n```makam\nmain : term -> program.\n\nwfprogram (main E) :-\n  typeof E _.\n```\n\nLet us now proceed to algebraic datatypes. Datatypes have a name, a number of type parameters,\nand a list of constructors; constructors themselves have a name and a list of arguments:\n\n```makam\ntypeconstructor : type -> type.\nconstructor : type.\n\nctor_declaration : type -> type.\nnil : ctor_declaration unit.\ncons : list typ -> ctor_declaration T ->\n         ctor_declaration (constructor * T).\ndatatype_declaration : type -> type -> type.\ndatatype_declaration : \n  (typeconstructor Arity -> dbind typ Arity (ctor_declaration Constructors)) ->\n  datatype_declaration Arity Ctors.\n\ndatatype :\n  datatype_declaration Arity Constructors ->\n  (typeconstructor Arity -> dbind constructor Constructors program) ->\n  program.\n```\n\nThe datatype introduces a type constructor, as well as a number of constructors in the rest of\nthe program. Here we use dependency to carry the arity of the type constructor in its\nmeta-level type, avoiding the need for a well-formedness predicate for types. Of course, in\nsituations where object-level types are more complicated, we would need to incorporate kind\nchecking into our predicates.\n\nLet us now proceed to well-formedness for datatype declarations. We will need two auxiliary\npredicates: one that keeps information about a constructor -- which type it belongs to, what\narguments it expects; and another one that abstracts over the type variables\nused in the datatype declaration, creating a polymorphic type for the type of the constructor,\nthat can be instantiated with different types at different places.\n\n```makam\nconstructor_info :\n  typeconstructor Arity -> constructor -> dbind typ Arity (list typ) -> prop.\n\nconstructor_polytypes : [Arity Ctors PolyTypes]\n  subst typ Arity ->\n  ctor_declaration Ctors -> subst (dbind typ Arity (list typ)) PolyTypes -> prop.\n\nconstructor_polytypes _ [] [].\nconstructor_polytypes TypVars (CtorType :: CtorTypes) (PolyType :: PolyTypes) :-\n  applymany PolyType TypVars CtorType,\n  constructor_polytypes TypVars CtorTypes PolyTypes.\n```\n\nOne interesting part in this one is the two `applymany` calls: these are used in the opposite\ndirection than what we have used it so far, getting `TypVars` and `CtorType` as inputs,\nand producing `PolyType` as an output. We need to be careful though to make sure that `PolyType`\ncannot capture the `TypVars` variables:\n\n```makam\nwfprogram (datatype (datatype_declaration ConstructorDecls) Program') :-\n  (dt:(typeconstructor T) -> ([PolyTypes]\n    openmany (ConstructorDecls dt) (pfun tvars constructor_decls => (\n      constructor_polytypes tvars constructor_decls PolyTypes)),\n    openmany (Program' dt) (pfun constructors program' =>\n      assumemany (constructor_info dt) constructors PolyTypes\n      (wfprogram program')))).\n```\n\nIn order to be able to refer to datatypes and constructors, we will need type- and term-level\nformers.\n\n```makam\ntconstr : typeconstructor T -> subst typ T -> typ.\nconstr : constructor -> list term -> term.\n\ntypeof (constr Constructor Args) (tconstr TypConstr TypArgs) :-\n  constructor_info TypConstr Constructor PolyType,\n  applymany PolyType TypArgs Typs,\n  map typeof Args Typs.\n```\n\nWe will also need patterns:\n\n```makam\npatt_constr : constructor -> pattlist T T' -> patt T T'.\n\ntypeof (patt_constr Constructor Args) S' S (tconstr TypConstr TypArgs) :-\n  constructor_info TypConstr Constructor PolyType,\n  applymany PolyType TypArgs Typs,\n  typeof Args S' S Typs.\n```\n\nAs an example, we will define lists, and the append function for them:\n\n```makam\nwfprogram\n  (datatype\n    (datatype_declaration (fun llist => dbindnext (fun a => dbindbase (\n    [ [] (* nil *) ,\n      [a, tconstr llist [a]] (* cons of a * list a *) ]))))\n  (fun llist => dbindnext (fun lnil => dbindnext (fun lcons => dbindbase (\n  (main\n    (letrec\n      (dbindnext (fun append => dbindbase (\n      [ lamt (fun a => lam (tconstr llist [a]) (fun l1 => lam _ (fun l2 =>\n        case_or_else l1\n          (patt_constr lcons [patt_var, patt_var])\n            (dbindnext (fun hd => dbindnext (fun tl => dbindbase (\n            constr lcons [hd, app (app (appt append _) tl) l2]))))\n          l2))) ])))\n      (dbindnext (fun append => dbindbase (\n    (app (app (appt append _)\n      (constr lcons [zero, constr lnil []]))\n      (constr lcons [zero, constr lnil []]))\n)))))))))) ?\n```\n\nThe semantics, if needed:\n```makam\npatt_to_term (patt_constr Constructor Args) (constr Constructor Args') S' S :-\n  pattlist_to_termlist Args Args' S' S.\n\neval (constr C Args) (constr C Args') :-\n  map eval Args Args'.\n\neval : program -> program -> prop.\n\neval (let E P') P'' :-\n  eval E V, eval (P' V) P''.\n\neval (datatype D P') (datatype D P'') :-\n  (dt:(typeconstructor T) ->\n    intromany CS (pfun cs => ([P'c P''c]\n    applymany (P' dt) cs P'c,\n    applymany (P'' dt) cs P''c,\n    eval P'c P''c))).\n\neval (main E) (main V) :-\n  eval E V.\n```\n\nExample:\n\n```makam\n(eq _PROGRAM (\n\n    (datatype\n      (datatype_declaration (fun llist => dbindnext (fun a => dbindbase (\n      [ [] (* nil *) ,\n        [a, tconstr llist [a]] (* cons of a * list a *) ]))))\n      (fun llist => dbindnext (fun lnil => dbindnext (fun lcons => dbindbase (\n\n    (main (constr lcons [zero, constr lnil []]))\n\n    )))))),\n\n wfprogram _PROGRAM,\n eval _PROGRAM FINAL) ?\n```\n");V("/examples/paper/06-veriml-light.md","<!--\n```makam\n%use \"05-type-synonyms.md\".\n```\n-->\n\nLet us now add one more meta level: make our object language a meta-language as well!\nThat is, we will add the ability to our object language to manipulate terms of a different\nobject language, in a type-safe manner. This is similar, for example, to heterogeneous\nmeta-programming in MetaHaskell; however, the setting we have in mind is closer to\nmetalanguages where the object language is a logic, similar to Beluga (where the object\nlanguage is LF) and VeriML (where the object language is the $\\lambda\\text{HOL}$ logic).\n\nWe will follow the construction of (cite my dissertation), but using a simpler object\nlanguage. We will first define the notion of *dependent objects*. These are objects\nthat are external to the language that we have seen so far, but we will add a standard\ndependently typed subsystem to our language over them. (Similar to the DML construction/\nthe DML generalization by Licata and Harper.) Dependent objects are classified through\n*dependent classifiers*:\n\n```makam\ndepobject, depclassifier : type.\ndepclassify : depobject -> depclassifier -> prop.\n```\n\nWe also have a (perhaps non-trivial) substitution operation for terms containing a\nvariable of type `depobject`:\n```makam\ndepsubst : [A] (depobject -> A) -> depobject -> A -> prop.\n```\n\n(In the simple case this could just be the built-in function application:\n```\ndepsubst F X (F X).\n```\nWe could have something more complicated than that though.)\n\nNow let's add the standards: dependent functions and dependent products:\n\n```makam\nlamdep : depclassifier -> (depobject -> term) -> term.\nappdep : term -> depobject -> term.\npackdep : depobject -> term -> (depobject -> typ) -> term.\nunpackdep : term -> (depobject -> term -> term) -> term.\n\npidep : depclassifier -> (depobject -> typ) -> typ.\nsigdep : depclassifier -> (depobject -> typ) -> typ.\n\ntypeof (lamdep DC EF) (pidep DC TF) :-\n  (x:depobject -> depclassify x DC -> typeof (EF x) (TF x)).\n\ntypeof (appdep E DO) T' :-\n  typeof E (pidep DC TF),\n  depclassify DO DC,\n  depsubst TF DO T'.\n\ntypeof (packdep DO E TYPF) (sigdep DC TYPF) :-\n  depclassify DO DC,\n  depsubst TYPF DO T',\n  typeof E T'.\n\ntypeof (unpackdep E F) T' :-\n  typeof E (sigdep DC TYPF),\n  (do:depobject -> x:term -> depclassify do DC -> typeof x (TYPF do) ->\n   typeof (F do x) T').\n```\n\nOK, let's now add a very simple object language -- the simply typed lambda\ncalculus. Let's go again... or actually, let's just import what we have\nalready in a separate namespace:\n\n```makam\n%import \"01-base-language.md\" as object.\n\n%extend object.\nintconst : int -> term.\nintplus : term -> term -> term.\n\ntint : typ.\n\ntypeof (intconst _) tint.\ntypeof (intplus E1 E2) tint :- typeof E1 tint, typeof E2 tint.\n%end.\n```\n\n(Note: we're just importing the previous literate development into a different\nnamespace. Unfortunately I can't import the further developments right now,\nprobably some issue with the importing code, but I think it's fine to skip for now.\nWe could go with just defining a new language anew though.)\n\nNow let's turn these into dependent objects:\n\n```makam\nterm : object.term -> depobject.\ntyp : object.typ -> depobject.\n\ntyp : object.typ -> depclassifier.\next : depclassifier.\n\ndepclassify (term E) (typ T) :- object.typeof E T.\n```\n\nTo classify types, we'll need to make sure they're well-formed. For the time\nbeing, all types are well-formed by construction, but let's prepare for the\nfuture:\n\n```makam\n%extend object.\nwftype : typ -> prop.\nwftype_cases : [A] A -> A -> prop.\n\nwftype T :- wftype_cases T T.\nwftype_cases T T :- structural wftype_cases T T.\n%end.\n\ndepclassify (typ T) ext :- object.wftype T.\n```\n\nLet's proceed to substitution:\n\n```makam\ndepsubst_aux, depsubst_cases : [A] depobject -> depobject -> A -> A -> prop.\ndepsubst F X Res :- (x:depobject -> depsubst_aux x X (F x) Res).\ndepsubst_aux Var Replace Where Result :-\n  if (depsubst_cases Var Replace Where Result)\n  then (success)\n  else (structural_recursion (depsubst_aux Var Replace) Where Result).\n```\n\nAlright. Now let's see what we can do:\n\n```makam\ntypeof\n  (lamdep ext (fun t =>\n  (packdep t (tuple []) (fun _ => product [])))) T ?\n```\n\nWe can only use the dependent variables as they are, so not much use.\nThe whole point of this though is being able to refer to dependent variables\nwithin the object terms:\n\n```makam\n%extend object.\nmetaterm : depobject -> term.\nmetatyp : depobject -> typ.\n\ntypeof (metaterm E) T :-\n  refl.isnvar E,\n  depclassify E (typ T).\n  \nwftype_cases (metatyp T) (metatyp T) :-\n  refl.isnvar T,\n  depclassify T ext.\n%end.\n\ndepsubst_cases Var (term Replace) (object.metaterm Var) Replace.\ndepsubst_cases Var (typ Replace) (object.metatyp Var) Replace.\n```\n\nOK, now let's see if we can do better:\n\n```makam\ntypeof\n  (lamdep ext (fun t =>\n  (packdep\n     (term (object.lam (object.metatyp t) (fun x => x)))\n     (tuple []) (fun _ => product [])))) T ?\n```\n\nWe can also handle the case of non-closed terms, using contextual types:\n```makam\n%extend object.\nsubst : type -> type.\nsubst : list A -> subst A.\n\nctx : type -> type.\nctx : subst typ -> bindmany term A -> ctx A.\n\nopenctx : ctx A -> (subst term -> subst typ -> A -> prop) -> prop.\napplyctx : ctx A -> subst term -> A -> prop.\n\nopenctx (ctx Types Binds) P :-\n  openmany Binds (pfun vars body =>\n    P (subst vars) Types body\n  ).\n\napplyctx (ctx _ Binds) (subst Args) Result :-\n  applymany Binds Args Result.\n\nmap : (A -> B -> prop) -> subst A -> subst B -> prop.\nmap P (subst L) (subst L') :- map P L L'.\n%end.\n\nopenterm : object.ctx object.term -> depobject.\nctxtyp : object.subst object.typ -> object.typ -> depclassifier.\n\ndepclassify (openterm CtxE) (ctxtyp Typs T) :-\n  object.openctx CtxE (pfun vars typs e => [Units]\n    object.map (pfun t u => object.wftype t) typs (Units : object.subst unit),\n    object.map eq typs Typs,\n    object.typeof e T).\n```\n\nAnd one last step: let's reify open terms back into the language:\n\n```makam\n%extend object.\nmetaterm : depobject -> subst term -> term.\n\ntypeof (metaterm E ES) T :-\n  refl.isnvar E,\n  depclassify E (ctxtyp Typs T),\n  object.map object.typeof ES Typs.\n%end.\n\ndepsubst_cases Var (openterm CtxE) (object.metaterm Var Subst) Result :-\n  object.applyctx CtxE Subst E,\n  depsubst_aux Var (openterm CtxE) E Result.\n```\n\nLet's try the final thing:\n\n```makam\n(eq _FUNCTION\n  (lamdep ext (fun t1 =>\n    (lamdep ext (fun t2 =>\n    (lamdep (ctxtyp (object.subst [object.metatyp t1]) (object.metatyp t2)) (fun x_e =>\n    (packdep (openterm (object.ctx (object.subst []) (bindbase (object.lam _ (fun x =>\n      object.tuple [object.metaterm x_e #SUBST, object.intconst 5]\n    ))))) (tuple []) (fun _ => product [])))))))),\n typeof _FUNCTION FUNCTION_TYPE,\n\n typeof \n  (appdep (appdep \n    _FUNCTION \n    (typ object.tint)) \n    (typ (object.product [object.tint])))\n APPLIED_TYPE) ?\n>> Yes:\n>> SUBST := fun t1 t2 x_e x => subst (cons x nil),\n>> FUNCTION_TYPE :=\n>>  pidep ext (fun t1 =>\n>>  pidep ext (fun t2 =>\n>>  pidep (ctxtyp (object.subst (cons (object.metatyp t1) nil)) (object.metatyp t2))\n>>  (fun x_e =>\n>>    sigdep \n>>      (ctxtyp (subst nil) \n>>       (arrow\n>>         (object.metatyp t1)\n>>         (product (cons (object.metatyp t2) (cons tint nil)))))\n>>     (fun _ => product nil)))),\n>> APPLIED_TYPE :=\n>>  pidep (ctxtyp\n>>    (object.subst (cons object.tint nil))\n>>    (object.product (cons object.tint nil)))\n>>  (fun x_e =>\n>>    sigdep (ctxtyp\n>>      (subst nil)\n>>      (arrow\n>>        object.tint\n>>        (product (cons (object.product (cons object.tint nil)) (cons tint nil)))))\n>>    (fun _ => product nil))\n```\n\nNote that we can infer both the type of the lambda abstraction and the substitution\nitself. Getting to that point in the VeriML implementation took months!\n\nMention that adding polymorphic contexts and dependent pattern matching as in VeriML is\nalso possible, but we won't show it here.\n");V("/./tests/core_expandmeta_subst_rest_of_args.makam","(* Catch a bug I ran into at some point *)\n\nmap : (A -> B -> prop) -> list A -> list B -> prop.\nmap P [] [].\nmap P (HD :: TL) (HD' :: TL') <- P HD HD', map P TL TL'.\n\ncatenable : list A -> (list A -> list A) -> prop.\ncatenable [] (fun x => x).\ncatenable (HD :: TL) (fun x => HD :: (TL' x)) <- catenable TL TL'.\n\nflatten : list (list A) -> list A -> prop.\nflatten LS L <- map catenable LS LS',\n                reverse LS' LS'rev,\n                foldl (fun cur lst => eq (lst cur)) nil LS'rev L.\n\nflatten [[1]] X ?\n\n\n");V("/./tests/use_directives/parsing_error.makam",'print_string "starting to load error module.\\n" ?\n\n**************** THIS IS NOT A VALID MAKAM FILE *********************\n\nprint_string "(should not print) continuing to load.\\n" ?\n');V("/./tests/use_directives/index.makam","%use normal.\n\ntest : type.\ntest : test.\n\ntestprop : [A] A -> prop.\ntestprop test.\n\n%import qualified.\n\neq : A -> A -> prop.\neq X X.\n\neq test qualified.test ?\neq test test ?\neq qualified.test qualified.test ?\ntestprop test ?\n\n");V("/./tests/use_directives/qualified.makam","test : test.\n");V("/./tests/use_directives/normal.makam",'print_string "normal module loaded\\n" ?\n');V("/./tests/use_directives/typing_error.makam",'print_string "starting to load error module.\\n" ?\n\nprint_string 5 ?\n\nprint_string "(should not print) continuing to load.\\n" ?\n');V("/./tests/use_directives.makam",'%directory "use_directives".\n%use index.\n\nprint_string "Use directives successfully loaded.\\n" ?\n');V("/./tests/stdlib/structural.makam",'change : [A] A -> A -> prop.\nchange_ : [A] A -> A -> prop.\n\nchange X Y <-\n  demand.case_otherwise (change_ X Y)\n                        (structural change X Y).\n\nchange_ "a" "b".\nchange_ X Y <- plus X 1 Y.\n\nterm : type.\nchange ("a", 15, (fun (x : term) => x), (fun (x : term) => 12)) Y ?\n');V("/./tests/use_multiple_times.makam","%use benchmark.\n(* that's the only case where that should be parsed and executed *)\n\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n%use benchmark.\n\n(* we'd notice by now. *)");V("/./tests/import_filenotfound_error.makam",'%directory "use_directives".\n\n%import filenotfound_error.\n\nprint_string "(should not print) back to main module.\\n" ?\n');V("/./tests/import_typing_error.makam",'print_string "starting to load main file.\\n" ?\n\n%directory "use_directives".\n\n%import typing_error.\n\nprint_string "(should not print) back to main module.\\n" ?\n');V("/./tests/import_parsing_error.makam",'print_string "starting to load main file.\\n" ?\n\n%directory "use_directives".\n\n%import parsing_error.\n\nprint_string "(should not print) back to main module.\\n" ?\n');V("/./stdlib/set.makam","set : type -> type.\n\nnil : set A.\ncons : A -> set A -> set A.\n\n%extend set.\nremove, remove_if_member : set A -> A -> set A -> prop.\nremove_if_member nil A nil.\nremove_if_member (cons A S') A' Result :-\n  if (eqv A A')\n  then (remove_if_member S' A' Result)\n  else (remove_if_member S' A' S'', eq Result (cons A S'')).\n\nremove (cons A S') A' Result :-\n  if (eqv A A')\n  then (remove_if_member S' A' Result)\n  else (remove S' A' S'', eq Result (cons A S'')).\n\nmember : set A -> A -> set A -> prop.\nmember (cons A S') A' Result :-\n  if (eqv A A')\n  then (remove_if_member S' A' Result)\n  else (member S' A' S'', eq Result (cons A S'')).\n\nccons : A -> set A -> set A -> prop.\nccons A S S when (member S A _).\nccons A S (cons A S) when not(member S A _).\n\nmerge : set A -> set A -> set A -> prop.\nmerge S nil S.\nmerge S (cons A S') Result :- merge S S' S'', ccons A S'' Result.\n\ndiff : set A -> set A -> set A -> prop.\ndiff S nil S.\ndiff S (cons A S') Result :- remove_if_member S A S'', diff S'' S' Result.\n  \n%end.\n\neqv (nil : set A) nil.\neqv (cons A B) C :- set.member C A B', eqv B' B''.\n");V("/./stdlib/clause.makam","%extend clause.\n\napplies : prop -> clause -> prop.\napplies CurGoal (clause Goal Premise) <- eq CurGoal Goal.\napplies CurGoal (whenclause Goal Guard Premise) <- eq CurGoal Goal, Guard.\n\npremise : clause -> prop.\npremise (clause Goal Premise) <- Premise.\npremise (whenclause Goal Guard Premise) <- Premise.\n\ndemand : prop -> clause -> prop.\ndemand CurGoal Clause <-\n  applies CurGoal Clause, premise Clause.\n\ndemand_or : prop -> list clause -> prop.\ndemand_or Goal (HD :: TL) <- (demand Goal HD ; demand_or Goal TL).\n\ndemand_and : prop -> list clause -> prop.\ndemand_and Goal [].\ndemand_and Goal (HD :: TL) <-\n  if applies Goal HD\n  then (premise HD, demand_and Goal TL)\n  else (demand_and Goal TL).\n\ndemand_case : prop -> list clause -> prop.\ndemand_case Goal (HD :: TL) <-\n  if applies Goal HD\n  then premise HD\n  else demand_case Goal TL.\n\n%end.\n");V("/./stdlib/testing.makam",'testsuite : type.\n\ntestcase : testsuite -> prop.\n\nrun_tests : list testsuite -> prop.\n\n%extend testing_private.\n\nhandle_result : list clause -> list clause -> prop.\nhandle_result Successes [] <-\n  length Successes Tests, tostring Tests TestsS,\n  foldl string.append ""\n  [ "\\n\\n=== TESTS SUCCESSFUL (", TestsS, " passed, 0 failed) ===\\n\\n" ] S,\n  print_string S.\n\nhandle_result Successes Failures when not(eq Failures []) <-\n  length Successes SuccessN, tostring SuccessN SuccessS,\n  length Failures FailureN, tostring FailureN FailureS,\n  foldl string.append ""\n  [ "\\n\\n=== TESTS FAILED (", SuccessS, " passed, ", FailureS, " failed) ===\\n\\n" ] S,\n  print_string S,\n  failure.\n\nhandle_failure : clause -> prop.\nhandle_failure TestCase <-\n  locget TestCase Loc,\n  tostring Loc TestCaseS,\n  foldl string.append ""\n  [ "\\n-- Test failure for testcase at ", TestCaseS, "\\n" ] S,\n  print_string S.\n\nrun_test : list testsuite -> list clause -> list clause -> prop -> list clause -> prop.\nrun_test Suites Successes Failures (testcase X) [] <- handle_result Successes Failures.\nrun_test Suites Successes Failures (testcase X) (TestCase :: TL) <-\n  if (once(find (fun suite => clause.applies (testcase suite) TestCase) Suites _))\n  then (\n    if (once(clause.premise TestCase))\n    then (run_test Suites (TestCase :: Successes) Failures (testcase X) TL)\n    else (handle_failure TestCase, run_test Suites Successes (TestCase :: Failures) (testcase X) TL)\n  )\n  else (run_test Suites Successes Failures (testcase X) TL).\n\n\n%end.\n\nrun_tests Suites <-\n  if (refl.isunif Suites)\n  then (eq SuitesStr "all")\n  else (map tostring Suites (SuitesStrs : list string),\n        foldl (pfun cur elm res => [X] string.append cur "- " X, string.append X elm res) "" SuitesStrs SuitesStr),\n  foldl string.append ""\n  [ "\\n\\n=== RUNNING TESTS (test suites: ", SuitesStr, ")\\n" ] Str,\n  print_string Str,\n  once(demand.aux_demand (testing_private.run_test Suites [] []) (testcase X)).\n');V("/./stdlib/tuple.makam","%extend tuple.\n\nmap : (A -> C -> prop) -> (B -> D -> prop) -> A * B -> C * D -> prop.\nmap P Q (X, Y) (X', Y') <- P X X', Q Y Y'.\n\ndynlist : A -> list dyn -> prop.\ndynlist Res [dyn Res]\n  when unless (typ.isunif Res) (not(typ.eq Res (_ : A * B))).\ndynlist Res (dyn HD :: TL') when not(typ.isunif Res), dyn.eq Res (HD, TL) <-\n  dynlist TL TL'.\n\nofdynlist : [A] list dyn -> A -> prop.\nofdynlist [dyn Res] Res.\nofdynlist (dyn HD :: TL) (HD, TL') <- ofdynlist TL TL'.\n\n%end.\n");V("/./stdlib/generic.makam","(* Structural recursion. \n   Useful for defining predicates that proceed by cases and use\n   structural recursion as the default behavior when no other case\n   matches.\n\n   Example usage:\n\n     term : type.\n\n     namedvar : string -> term.\n     lam : (term -> term) -> term.\n     app : term -> term -> term.\n     unit : term.\n     \n     Substitute namedvar for any term would be implemented as follows:\n  \n     subst, subst_ : string -> term -> A -> A -> prop.\n  \n     subst S T X Y <- demand.case_otherwise (subst_ S T X Y) (structural (subst_ S T) X Y).\n  \n     subst S T (namedvar S) T.\n  \n     subst \"y\" unit [lam (fun x => app x (namedvar \"y\"))), lam (fun x => namedvar \"y\")] X ?\n     > X := [lam (fun x => app x unit), lam (fun x => unit)]\n\n     (This will continue to work even after adding other constructors to term,\n      or with any other type that term is incorporated into.)\n*)\n\n\nstructural : [B] (A -> A -> prop) -> B -> B -> prop.\n\n(* defer if both input and output are uninstantiated metavariables *)\nstructural Rec (X : A) (Y : A) when refl.isunif X, refl.isunif Y <-\n  guardmany (X, Y) (dyn.call Rec X Y).\n\n(* deal with built-in types *)\nstructural Rec X X when refl.isconst X.\n\n(* deal with functions *)\nstructural Rec (X : A -> B) (Y: A -> B) <-\n  (x:A -> dyn.call Rec (X x) (Y x)).\n\n(* the essence: forward and backward destructuring *)\nstructural Rec X Y when refl.isbaseterm X <-\n  refl.headargs X Hd Args,\n  dyn.map Rec Args Args',\n  refl.headargs Y Hd Args'.\n\nstructural Rec X Y when refl.isunif X, refl.isbaseterm Y <-\n  refl.headargs Y Hd Args',\n  dyn.map Rec Args Args',\n  refl.headargs X Hd Args.\n\n\n%extend generic.\nfold : [A A'] (B -> A -> B -> prop) -> B -> A' -> B -> prop.\n\nfold F Acc X Acc' when refl.isunif X <-\n  guard X (dyn.call F Acc X Acc').\n\nfold F Acc X Acc when refl.isconst X.\n\nfold F Acc (X : A -> B) Acc' <-\n  (x:A -> dyn.call F Acc (X x) Acc').\n\nfold F Acc X Acc' when refl.isbaseterm X <-\n  refl.headargs X HD Args,\n  dyn.foldl F Acc Args Acc'.\n%end.\n\n\neq_nounif : [A] A -> A -> prop.\n\neq_nounif (X : A) (Y : A)\n  when refl.isunif X, refl.isunif Y, refl.decomposeunif X I XArgs, refl.decomposeunif Y I YArgs <-\n  dyn.map eq_nounif XArgs YArgs.\n\neq_nounif X Y when refl.isconst X, refl.isconst Y <- eq X Y.\n\neq_nounif (X : A -> B) (Y : A -> B) <-\n  (x:A -> dyn.call eq_nounif (X x) (Y x)).\n\neq_nounif X Y when refl.isbaseterm X, refl.isbaseterm Y <-\n  refl.headargs X HD XArgs,\n  refl.headargs Y HD YArgs,\n  dyn.map eq_nounif XArgs YArgs.\n");V("/./stdlib/dyn.makam","%extend dyn.\n(* A version of `eq` that delays type unification of the terms until runtime *)\neq : [B] A -> B -> prop.\neq X X.\n\n(* Similarly, a dynamically-typed version of application. *)\napply : [A C] A -> B -> C -> prop.\napply F X (F X).\n\n(* Magic: fake rank-N polymorphism by duplicating all heads found, therefore\n   generating new polymorphic variables for them. *)\npoly : [A B] A -> B -> prop.\npolybvar : [A B] A -> B -> prop.\nmap_poly : list dyn -> list dyn -> prop.\n\npoly E E' when refl.isbaseterm E, refl.isnvar E <-\n  unless (polybvar E E') (dyn.eq E E').\npoly E E' when refl.isbaseterm E, refl.isfvar E <-\n  refl.headargs E HD ARGS,\n  refl.duphead HD HD',\n  map_poly ARGS ARGS',\n  refl.headargs E' HD' ARGS'.\npoly C C when refl.isconst C.\npoly X X when refl.isunif X.\npoly F F' when refl.isfun F <- (x:A -> x':A' -> polybvar x x' -> poly (F x) (F' x')).\n\nmap_poly [] [].\nmap_poly (dyn HD :: TL) (dyn HD' :: TL') <- poly HD HD', map_poly TL TL'.\n\ncall : (A -> prop) -> A' -> prop.\ncall P X <- poly P P', P' X.\n\ncall : (A -> B -> prop) -> A' -> B' -> prop.\ncall P X Y <- poly P P', P' X Y.\n\ncall : (A -> B -> C -> prop) -> A' -> B' -> C' -> prop.\ncall P X Y Z <- poly P P', P' X Y Z.\n\ncall_dyn : (A -> prop) -> dyn -> prop.\ncall_dyn P (dyn X) <- poly P P', P' X.\n\ncall_dyn : (A -> B -> prop) -> dyn -> dyn -> prop.\ncall_dyn P (dyn X) (dyn Y) <- poly P P', P' X Y.\n\ncall_dyn : (A -> B -> C -> prop) -> dyn -> dyn -> dyn -> prop.\ncall_dyn P (dyn X) (dyn Y) (dyn Z) <- poly P P', P' X Y Z.\n\niter : (A -> prop) -> list dyn -> prop.\niter P L <- .map (call_dyn P) L.\n\nmap : (A -> B -> prop) -> list dyn -> list dyn -> prop.\nmap P L L' <- .map (call_dyn P) L L'.\n\nfoldl : (B -> A -> B -> prop) -> B -> list dyn -> B -> prop.\nfoldl F X L X' <- .foldl (call_dyn F) (dyn X) L (dyn X').\n\n%end.\n\n(* Apply many arguments *)\napply_many : [A B] A -> list dyn -> B -> prop.\napply_many X nil X.\napply_many (X : A -> B) (dyn HD :: TL) Res <- dyn.apply X HD X', apply_many X' TL Res.\n\n(* Apply all arguments -- when the argument list is not specified,\n   this will repeatedly apply arguments, generating new unification\n   variables, for the full arity of the functional argument. *)\napply_all : [A B] A -> list dyn -> B -> prop.\napply_all (X : A -> B) (dyn HD :: TL) Res <- dyn.apply X HD X', apply_all X' TL Res.\n(apply_all X nil X) when not(typ.eq X (_ : A -> B)).\n\n(* Abstract over many variables *)\nnewvars_many : list dyn -> (list dyn -> prop) -> prop.\nnewvars_many_aux : list dyn -> list dyn -> (list dyn -> prop) -> prop.\nnewvars_many_aux [] Acc P <- reverse Acc Acc', P Acc'.\nnewvars_many_aux (dyn (HD : A) :: TL) Acc P <- (x:A -> newvars_many_aux TL (dyn x :: Acc) P).\nnewvars_many Typs P <- newvars_many_aux Typs [] P.\n");V("/./stdlib/guard.makam","guardmany : TupleType -> prop -> prop.\n\nguardmany_aux : [TupleType] TupleType -> unit -> prop -> prop.\n\nguardmany_aux X Trigger P when not(typ.eq X (_ : A * B)) <-\n  removableguard Trigger X {prop| P, eq Trigger unit |}.\n\nguardmany_aux (HD, TL) Trigger P <-\n  guardmany_aux HD Trigger P, guardmany_aux TL Trigger P.\n\nguardmany XS P <- guardmany_aux XS Trigger P.\n\n  ");V("/./stdlib/list.makam","(* Append a list to the end of another list. *)\n\nappend : list A -> list A -> list A -> prop.\nappend [] Y Y.\nappend (HD::TL) Y (HD::TL') <- append TL Y TL'.\n\n(* Map a predicate over (a number of) lists.\n\n   We overload the map predicate to work on up to 4 lists,\n   but define the most commonly used version last -- the one on 2 lists.\n   This way if no typing constraints are present, the common version will be picked\n   by default. *)\n\nmap : (A -> prop) -> list A -> prop.\nmap P [].\nmap P (HD :: TL) <- P HD, map P TL.\n\nmap : (A -> B -> C -> prop) -> list A -> list B -> list C -> prop.\nmap P [] [] [].\nmap P (HD1 :: TL1) (HD2 :: TL2) (HD3 :: TL3) <- P HD1 HD2 HD3, map P TL1 TL2 TL3.\n\nmap : (A -> B -> C -> D -> prop) -> list A -> list B -> list C -> list D -> prop.\nmap P [] [] [] [].\nmap P (HD1 :: TL1) (HD2 :: TL2) (HD3 :: TL3) (HD4 :: TL4) <- P HD1 HD2 HD3 HD4, map P TL1 TL2 TL3 TL4.\n\nmap : (A -> B -> prop) -> list A -> list B -> prop.\nmap P [] [].\nmap P (HD :: TL) (HD' :: TL') <- P HD HD', map P TL TL'.\n\n(* Folds and fold inversion *)\n\nfoldr : (A -> B -> B -> prop) -> list A -> B -> B -> prop.\nfoldr P nil S S.\nfoldr P (cons HD TL) S S'' <- foldr P TL S S', P HD S' S''.\n\nfoldr_invert : (A -> B -> B -> prop) -> B -> list A -> B -> prop.\nfoldr_invert P SStart Res SEnd <-\n  if P Hd SNext SStart\n  then (foldr_invert P SNext Tl SEnd, eq Res (cons Hd Tl))\n  else (eq Res nil, eq SStart SEnd).\n\nfoldl : (B -> A -> B -> prop) -> B -> list A -> B -> prop.\nfoldl P S nil S.\nfoldl P S (cons HD TL) S'' <- P S HD S', foldl P S' TL S''.\n\nfoldl_invert : (B -> A -> B -> prop) -> B -> list A -> B -> prop.\nfoldl_invert P SEnd Res SStart <-\n  if P SPrev Last SEnd\n  then (foldl_invert P SPrev Res' SStart, append Res' [Last] Res)\n  else (eq Res nil, eq SStart SEnd).\n\n(* Length *)\nlength : list A -> int -> prop.\nlength [] 0.\nlength (HD :: TL) N <- length TL N', plus N' 1 N.\n\n(* Reverse the list *)\nreverse : list A -> list A -> prop.\nreverse_aux : list A -> list A -> list A -> prop.\nreverse_aux [] L L.\nreverse_aux (HD :: TL) L L' <- reverse_aux TL (HD :: L) L'.\nreverse L L' <- reverse_aux L [] L'.\n\n\n(* Convert to catenable list -- list with a hole. Useful for some optimized\n   implementations. *)\ncatenable : list A -> (list A -> list A) -> prop.\ncatenable [] (fun x => x).\ncatenable (HD :: TL) (fun x => HD :: (TL' x)) <- catenable TL TL'.\n\n(* Concatenate many lists / flatten *)\nconcat : list (list A) -> list A -> prop.\nconcat LS L <-\n  map catenable LS LS', reverse LS' LS'rev,\n  foldl (fun cur lst => eq (lst cur)) nil LS'rev L.\n\n\n(* Find element matching a predicate *)\nfind : (A -> prop) -> list A -> A -> prop.\nfind Pred (HD :: TL) Res <- if (Pred HD) then eq Res HD else find Pred TL Res.\n\n(* Keep only elements that succeed on a predicate *)\nfilter : (A -> prop) -> list A -> list A -> prop.\nfilter Pred (HD :: TL) Res <-\n  if (Pred HD)\n  then (eq Res (HD :: TL'), filter Pred TL TL')\n  else (filter Pred TL Res).\n\n(* Combination of filter and map *)\nfiltermap : (A -> B -> prop) -> list A -> list B -> prop.\nfiltermap Pred (HD :: TL) Res <-\n  if (Pred HD HD')\n  then (eq Res (HD' :: TL'), filtermap Pred TL TL')\n  else (filtermap Pred TL Res).\n\n\n(* Succeeds if a list contains an element *)\ncontains : A -> list A -> prop.\ncontains X (HD :: TL) <- unless (eqv X HD) (contains X TL).\n\n(* Returns a list with the unique elements *)\nunique : list A -> list A -> prop.\nunique L L' <-\n  foldl (pfun cur elm res => (if contains elm cur then eq res cur else eq res (elm :: cur)) )\n        [] L L'', reverse L'' L'.\n\n\n(* Relates a number of lists to a lists where the corresponding elements are tupled together. Overloaded up to 4 lists. *)\n(* Can be used in the opposite direction to unzip into multiple lists. *)\nzip : list A -> list B -> list C -> list (A * B * C) -> prop.\nzip [] [] [] [].\nzip (HD1 :: TL1) (HD2 :: TL2) (HD3 :: TL3) ((HD1, HD2, HD3) :: TL) <- zip TL1 TL2 TL3 TL.\n\nzip : list A -> list B -> list C -> list D -> list (A * B * C * D) -> prop.\nzip [] [] [] [] [].\nzip (HD1 :: TL1) (HD2 :: TL2) (HD3 :: TL3) (HD4 :: TL4) ((HD1, HD2, HD3, HD4) :: TL) <- zip TL1 TL2 TL3 TL4 TL.\n\nzip : list A -> list B -> list (A * B) -> prop.\nzip [] [] [].\nzip (HD1 :: TL1) (HD2 :: TL2) ((HD1, HD2) :: TL) <- zip TL1 TL2 TL.\n");V("/./stdlib/map.makam","map : type -> type -> type.\n\nnil : map A B.\ncons : A * B -> map A B -> map A B.\n\n%extend map.\n\n(* Remove the key-value pair matching the key. *)\nremove_if_member : map A B -> A -> map A B -> prop.\nremove_if_member nil A nil.\nremove_if_member ((Key', Val') :: Map') Key MapR <-\n  if (eqv Key Key')\n  then (remove_if_member Map' Key MapR)\n  else (remove_if_member Map' Key MapR', eq MapR ((Key', Val') :: MapR')).\n\nremove : map A B -> A -> B -> map A B -> prop.\nremove ((Key', Val') :: Map') Key Val MapR <-\n  if (eqv Key Key')\n  then (eq Val Val', remove_if_member Map' Key MapR)\n  else (remove Map' Key Val MapR', eq MapR ((Key', Val') :: MapR')).\n\n(* Find the value corresponding to a key in a map *)\nfind : map A B -> A -> B -> prop.\nfind Map Key Val <-\n  remove Map Key Val _.\n\n(* Check whether a key exists in the map *)\nelem : map A B -> A -> prop.\nelem Map Key <- find Map Key _.\n\nadd_new : map A B -> A * B -> map A B -> prop.\nadd_new M (Key, Val) ((Key, Val) :: M) when not(elem M Key).\n\nadd_or_update : map A B -> A * B -> map A B -> prop.\nadd_or_update M (Key, Val) ((Key, Val) :: M') :- remove_if_member M Key M'.\n\nto_list : map A B -> list (A * B) -> prop.\nto_list [] [].\nto_list ((Key, Val) :: M) ((Key, Val) :: L) :-\n  remove_if_member M Key M',\n  to_list M' L.\n\nfrom_list : list (A * B) -> map A B -> prop.\nfrom_list L M :- foldl add_or_update [] L M.\n\n(* Check whether two maps are equal *)\neqv [] [].\neqv ((Key, Val) :: MapA') MapB :-\n  remove MapB Key Val' MapB',\n  eqv Val Val',\n  eqv MapA' MapB'.\n\n(* Map each value in the map through a predicate. *)\nmapvalues : (A -> B -> prop) -> map K A -> map K B -> prop.\nmapvalues P [] [].\nmapvalues P ((Key, Val) :: Map) ((Key, Val') :: Map') :-\n  P Val Val', mapvalues P Map Map'.\n\n(* Compute the union of two maps, assuming the keys are distinct. *)\nunion : map A B -> map A B -> map A B -> prop.\nunion MapA MapB MapResult <-\n  to_list MapB MapBList,\n  foldl add_new MapA MapBList MapResult.\n\n(* Compute the merge of two maps, with the latter map taking precedence. *)\nmerge_onto : map A B -> map A B -> map A B -> prop.\nmerge_onto MapA MapB MapResult <-\n  to_list MapB MapBList,\n  foldl add_or_update MapA MapBList MapResult.\n\n%end.\n");V("/./stdlib/vars.makam","%use generic.\n%use demand. \n\n\n(* freevars *)\nfreevars : A -> list B -> prop.\nfreevars_aux : list B -> A -> list B -> prop.\nfreevars_aux_ : [A] list B -> A -> list B -> prop.\nfreevars_dontadd : A -> prop.\n\nfreevars_aux Acc Root Result <-\n  demand.case_otherwise (freevars_aux_ Acc Root Result)\n                        (generic.fold freevars_aux Acc Root Result).\n\nfreevars_aux_ Acc X Result when refl.headargs X V Args, refl.isnvar V, not(freevars_dontadd V) <-\n  freevars_aux (V :: Acc) Args Result.\n\nfreevars_aux_ Acc (F : A -> B) Res <-\n  (x:A -> freevars_dontadd x -> freevars_aux Acc (F x) Res).\n\nfreevars Root Result <-\n  freevars_aux [] Root Result', unique Result' Result.\n\n  \n(* unifvars *)\nunifvars : A -> list B -> prop.\nunifvars_aux : list B -> A -> list B -> prop.\nunifvars_aux_ : [A] list B -> A -> list B -> prop.\n\nunifvars_aux Acc Root Result <-\n  demand.case_otherwise (unifvars_aux_ Acc Root Result)\n                        (generic.fold unifvars_aux Acc Root Result).\n\nunifvars_aux_ (Acc : list A) (X : A) Result when refl.isunif X <-\n  refl.decomposeunif X _ Args, unifvars_aux (X :: Acc) Args Result.\n\nunifvars_aux_ Acc X Result when refl.isunif X <-\n  refl.decomposeunif X _ Args, unifvars_aux Acc Args Result.\n\nreified_unif : type -> type.\nreified_unif : A -> reified_unif A.\nwithout_eqv_refl (_ : reified_unif Z).\neqv (reified_unif X) (reified_unif Y) when refl.sameunif X Y.\n\nunifvars Root Result <-\n  unifvars_aux [] Root Result',\n  map (apply reified_unif) Result' Result'',\n  unique Result'' Result''',\n  map (apply reified_unif) Result Result'''.\n\n(* deepguard *)\ndeepguard : A -> B -> prop -> prop.\ndeepguard E (T : B) P <-\n  unifvars E (Unifs : list B),\n  map (apply dyn) Unifs DynUnifs,\n  tuple.ofdynlist DynUnifs Tuple,\n  guardmany Tuple P.\n");V("/./stdlib/string.makam",'%extend string.\n\nconcat : list string -> string -> prop.\nconcat Strings Result <-\n  foldl append "" Strings Result.\n\n%end.\n\n');V("/./stdlib/eqv.makam","(* eqv can be used for matching up to equivalence. many\n   of the stdlib functions use it in place of an equality\n   type class *)\n\neqv : [A]A -> A -> prop.\n\n(* the refl rule can be disabled on a per-type basis *)\nwithout_eqv_refl : [A]A -> prop.\neqv (X : A) X when not(without_eqv_refl (Z : A)).\n");V("/./stdlib/option.makam","option : type -> type.\nnone : option A.\nsome : A -> option A.\n\n%extend option.\nmap : (A -> B -> prop) -> option A -> option B -> prop.\nmap P (some X) (some Y) <- P X Y.\nmap P none none.\n\nissome : option A -> prop.\nissome (some _).\n\nisnone : option A -> prop.\nisnone none.\n\nget : option A -> A -> prop.\nget (some X) X.\n%end.");V("/./stdlib/demand.makam","%extend demand.\n\naux_demand : (prop -> list clause -> prop) -> prop -> prop.\naux_demand ClauseDemand Goal <-\n  refl.headargs Goal Pred _,\n  refl.rules_get Pred GlobalRules,\n  refl.assume_get Pred LocalRules,\n  append GlobalRules LocalRules AllRules,\n  ClauseDemand Goal AllRules.\n\nor : prop -> prop.\nor Goal <- aux_demand clause.demand_or Goal.\n\nand : prop -> prop.\nand Goal <- aux_demand clause.demand_and Goal.\n\ncase : prop -> prop.\ncase Goal <- aux_demand clause.demand_case Goal.\n\ncase_otherwise : prop -> prop -> prop.\ncase_otherwise Goal Otherwise <-\n  (\n    (clause.demand_case Goal [] <- Otherwise) ->\n    aux_demand clause.demand_case Goal\n  ).\n\n%end.");V("/./stdlib/init.makam","%use basic_predicates.\n%use connectives.\n%use eqv.\n%use clause.\n%use typ.\n%use guard.\n\n%use list.\n%use string.\n\n%use demand.\n%use testing.\n\n%use dyn.\n%use tuple.\n%use option.\n%use set.\n%use map.\n%use fluid.\n\n%use bind.\n\n%use generic.\n\n%use morerefl.\n\n%use vars.\n");V("/./stdlib/typ.makam","%extend typ.\n\neq : [B] A -> B -> prop.\neq (X : A) (Y : A).\n\n\nisunif : A -> prop.\nisunif X <- not(not(eq X (_ : string))), not(not(eq X (_ : int))).\n\n\n%end.\n");V("/./stdlib/basic_predicates.makam","eq : A -> A -> prop.\neq X X.\n\napply : (A1 -> A2 -> B) -> A1 -> A2 -> B -> prop.\napply F X1 X2 (F X1 X2).\n\napply : (A1 -> A2 -> A3 -> B) -> A1 -> A2 -> A3 -> B -> prop.\napply F X1 X2 X3 (F X1 X2 X3).\n\napply : (A1 -> A2 -> A3 -> A4 -> B) -> A1 -> A2 -> A3 -> A4 -> B -> prop.\napply F X1 X2 X3 X4 (F X1 X2 X3 X4).\n\napply : (A -> B) -> A -> B -> prop.\napply F X (F X).\n");V("/./stdlib/connectives.makam","not : prop -> prop.\nnot P <- if once(P) then failure else success.\n\nor_many : list prop -> prop.\nor_many (HD :: TL) <- (HD ; or_many TL).\n\nand_many : list prop -> prop.\nand_many [].\nand_many (HD :: TL) <- HD, and_many TL.\n\nunless : prop -> prop -> prop.\nunless P Q <- if P then success else Q.\n\nunless_many : list prop -> prop.\nunless_many (HD :: TL) <- if HD then success else unless_many TL.\n\nassume_many : list prop -> prop -> prop.\nassume_many [] P <- P.\nassume_many (HD :: TL) P <- (HD -> assume_many TL P).\n\nassume_many_clauses : list clause -> prop -> prop.\nassume_many_clauses [] P <- P.\nassume_many_clauses (HD :: TL) P <- assume HD (assume_many_clauses TL P).\n\nassume_many : (A -> B -> prop) -> list A -> list B -> prop -> prop.\nassume_many P [] [] G <- G.\nassume_many P (A :: AS) (B :: BS) G <- (P A B -> assume_many P AS BS G).\n\n");V("/./stdlib/fluid.makam","fluid : type -> type.\n\n%extend fluid.\n\nnew : A -> (fluid A -> prop) -> prop.\nget : fluid A -> A -> prop.\nset : fluid A -> A -> prop -> prop.\nmodify : fluid A -> (A -> A -> prop) -> prop -> prop.\n\ncurrent_value : fluid A -> A -> prop.\n\nnew (Init : A) Pred <- (x:(fluid A) -> current_value x Init -> Pred x).\nget X Value <- once(current_value X Value).\nset X Value Pred <- (current_value X Value -> Pred).\nmodify X Modify Pred <- get X CurrentValue, Modify CurrentValue NewValue, set X NewValue Pred.\n\n%end.\n");V("/./stdlib/stdlib_tests.makam",'icase : type.\nicase : string -> icase.\neqv (icase S1) (icase S2) :- string.uppercase S1 S1\', string.uppercase S2 S2\', eq S1\' S2\'.\n\nlist : testsuite.\n\ntestcase list :- (contains 1 [1,2,3]).\ntestcase list :- (contains 2 [1,2,3]).\ntestcase list :- (not(contains 4 [1,2,3])).\ntestcase list :- contains (icase "LaLa") [icase "lala"].\n\nset : testsuite.\n\ntestcase set :- (set.remove [1,2,3,4] 1 R, eq R [2,3,4]).\ntestcase set :- (set.remove [2,3,4,1] 1 R, eq R [2,3,4]).\ntestcase set :- (set.remove [1,2,3,4,1] 1 R, eq R [2,3,4]).\ntestcase set :- (not(set.remove [2,3,4] 1 R)).\ntestcase set :- (not(set.remove [] X R)).\n\ntestcase set :- (set.member [1,2,3,4] 1 _).\ntestcase set :- (set.member [2,3,4,1] 1 _).\ntestcase set :- (not(set.member [2,3,4] 1 _)).\ntestcase set :- (set.member [1,2,3,4,1] 1 X, not(set.member X 1 _)).\ntestcase set :- (set.member [1,2,3,4,1] 1 X, set.member X 2 _).\n\ntestcase set :- (set.ccons 1 [1,2,3,4] X, eq X [1,2,3,4]).\ntestcase set :- (set.ccons 1 [1,2,3,4,1] X, eq X [1,2,3,4,1]).\ntestcase set :- (set.ccons 1 [2,3,4,1] X, eq X [2,3,4,1]).\ntestcase set :- (set.ccons 1 [2,3,4,2] X, eq X [1,2,3,4,2]).\n\ntestcase set :- (eqv 1 1).\ntestcase set :- (eqv A A).\ntestcase set :- (eqv ([1,2,3,4,1]: set A) [4,3,1,2]).\ntestcase set :- (eqv ([1,1]: set A) [1,1,1,1,1,1,1,1]).\ntestcase set :- (not(eqv ([1,1]: set A) [2,3,4])).\ntestcase set :- (eqv ([[1,1], [1,2,3], [3,2,1]]: set (set A)) [[1],[1,2,3]]).\n\ntestcase set :- (set.merge [] [1,2,3,4] X, eqv X [1,2,3,4]).\ntestcase set :- (set.merge [1,2] [3,4] X, eqv X [1,2,3,4]).\ntestcase set :- (set.merge [1,2,3] [2,3,4] X, eqv X [1,2,3,4]).\ntestcase set :- (set.merge [1,2,3,4] [1,2,3,4] X, eqv X [1,2,3,4]).\ntestcase set :- (set.merge [[1,2,3], [1,1]] [[1,2],[1,1]] X, eqv X [[1], [1,2], [1,2,3]]).\n\ntestcase set :- (set.diff [] [1] X, eqv X []).\ntestcase set :- (set.diff [1,1] [1] X, eqv X []).\ntestcase set :- (set.diff [2,1] [1] X, eqv X [2]).\ntestcase set :- (set.diff [1,2,3,4,2,3,4] [2,3] X, eqv X [1,4]).\n\nmap : testsuite.\n\ntestcase map :- (map.remove [("hello", 1)] "hello" R1 R2, eq R1 1, eq R2 []).\ntestcase map :- (map.remove [("hello", 1), ("foo", 2)] "hello" R1 R2, eq R1 1, eq R2 [("foo", 2)]).\ntestcase map :- (not(map.remove [("hello", 1)] "foo" R1 R2)).\n\ntestcase map :- (map.remove_if_member [("hello", 1)] "hello" R, eq R []).\ntestcase map :- (map.remove_if_member [("hello", 1), ("foo", 2)] "hello" R, eq R [("foo", 2)]).\ntestcase map :- (map.remove_if_member [("hello", 1)] "foo" [("hello", 1)]).\n\ntestcase map :- (eqv [("hello", 1), ("foo", 2)] [("foo", 2), ("hello", 1)]).\ntestcase map :- (not(eqv [("hello", 1), ("foo", 2)] [("hello", 2), ("foo", 2)])).\ntestcase map :- (eqv [(icase "hello", 1), (icase "foo", 2)] [(icase "Foo", 2), (icase "HELLO", 1)]).\ntestcase map :- (eqv [(icase "hello", icase "a"), (icase "foo", icase "b")] [(icase "Foo", icase "B"), (icase "HELLO", icase "A")]).\n\ntestcase map :- (map.add_new [("hello", 1)] ("foo", 2) R, eqv R [("hello", 1), ("foo", 2)]).\ntestcase map :- (not(map.add_new [("hello", 1)] ("hello", 2) R)).\n\ntestcase map :- (map.add_or_update [("hello", 1)] ("foo", 2) R, eqv R [("hello", 1), ("foo", 2)]).\ntestcase map :- (map.add_or_update [("hello", 1)] ("hello", 2) R, eqv R [("hello", 2)]).\n\nrun_tests X ?\n');V("/./stdlib/bind.makam","nameofvar : A -> string -> prop.\ninfoofvar : V -> T -> prop.\n\n(* Bind one variable of type A into a term of type B *)\n(* Includes a string that represents the concrete name of the variable *)\n\nbindone : type -> type -> type.\nbindone : string -> (A -> B) -> bindone A B.\n\n%extend bindone.\n\nnewvar : bindone A B -> (A -> prop) -> prop.\nvarname : bindone A B -> string -> prop.\napply : bindone A B -> A -> B -> prop.\n\nnewvar (bindone Name (F : A -> B)) (P : A -> prop) <-\n  (x:A -> nameofvar x Name -> P x).\n\napply (bindone _ F) X (F X).\n\nvarname (bindone S _) S.\n\nmatch_binders : bindone A B -> bindone A' B' -> prop.\nmatch_binders (bindone S _) (bindone S _).\n\nopen_aux : [PropType] A -> list dyn -> PropType -> prop.\nopen_aux Var [] P <- P.\nopen_aux Var (dyn B :: TL) P <-\n  apply B Var X,\n  open_aux Var TL (P X).\n\nopendyn : [PropType] list dyn -> PropType -> prop.\nopendyn ES P <-\n  eq ES (dyn HD :: _),\n  dyn.iter (match_binders HD) ES,\n  newvar HD (fun x => open_aux x ES (P x)).\n\nopendyn_nomatch : [PropType] list dyn -> PropType -> prop.\nopendyn_nomatch ES P <-\n  eq ES (dyn HD :: _),\n  newvar HD (fun x => open_aux x ES (P x)).\n\nopen : bindone A B -> bindone A C -> (A -> B -> C -> prop) -> prop.\nopen X1 X2 P <-\n  opendyn [dyn X1, dyn X2] P.\n\nopen : bindone A B -> bindone A C -> bindone A D -> (A -> B -> C -> D -> prop) -> prop.\nopen X1 X2 X3 P <-\n  opendyn [dyn X1, dyn X2, dyn X3] P.\n\nopen : bindone A B -> (A -> B -> prop) -> prop.\nopen X1 P <-\n  opendyn [dyn X1] P.\n\nopen_nomatch : bindone A B -> bindone A C -> (A -> B -> C -> prop) -> prop.\nopen_nomatch X1 X2 P <-\n  opendyn_nomatch [dyn X1, dyn X2] P.\n\nopen_nomatch : bindone A B -> bindone A C -> bindone A D -> (A -> B -> C -> D -> prop) -> prop.\nopen_nomatch X1 X2 X3 P <-\n  opendyn_nomatch [dyn X1, dyn X2, dyn X3] P.\n\nopen_nomatch : bindone A B -> (A -> B -> prop) -> prop.\nopen_nomatch X1 P <-\n  opendyn_nomatch [dyn X1] P.\n\n%end.\n\n\n(* Bindmany: bind a number of A's into a B *)\n\nbindmany : type -> type -> type.\nbindend  : B -> bindmany A B.\nbindnext : string -> (A -> bindmany A B) -> bindmany A B.\n\n%extend bindmany.\n\nnewvars : bindmany A B -> (list A -> prop) -> prop.\napply : bindmany A B -> list A -> B -> prop.\nvarnames : bindmany A B -> list string -> prop.\n\nnewvars_aux : bindmany A B -> list A -> (list A -> prop) -> prop.\nnewvars_aux (bindend _) Vars P <- reverse Vars Vars', P Vars'.\nnewvars_aux (bindnext S Rest) Vars P <-\n  bindone.open (bindone S Rest) (fun x bindrest => newvars_aux bindrest (x :: Vars) P).\nnewvars B P <- newvars_aux B [] P.\n\napply (bindend X) [] X.\napply (bindnext _ F) (HD :: TL) Res <- apply (F HD) TL Res.\n\napplysome : bindmany A B -> list A -> bindmany A B -> prop.\napplysome (bindnext _ F) (HD :: TL) Res <- applysome (F HD) TL Res.\napplysome X nil X.\n\nvarnames B Names <- newvars B (fun xs => map nameofvar xs Names).\n\nmatch_binders : bindmany A B -> bindmany A' B' -> prop.\nmatch_binders (bindend  _) (bindend _).\nmatch_binders (bindnext S F) (bindnext S F') <- (x:A -> x':A' -> match_binders (F x) (F' x')).\n\n\nopen_aux : [PropType] list A -> list dyn -> PropType -> prop.\nopen_aux Vars [] P <- P.\nopen_aux Vars (dyn B :: TL) P <-\n  apply B Vars X,\n  open_aux Vars TL (P X).\n\nopendyn : [PropType] list dyn -> PropType -> prop.\nopendyn ES P <-\n  eq ES (dyn HD :: _),\n  dyn.iter (match_binders HD) ES,\n  newvars HD (fun xs => open_aux xs ES (P xs)).\n\nopendyn_nomatch : [PropType] list dyn -> PropType -> prop.\nopendyn_nomatch ES P <-\n  eq ES (dyn HD :: _),\n  newvars HD (fun xs => open_aux xs ES (P xs)).\n\nopen : bindmany A B -> bindmany A C -> (list A -> B -> C -> prop) -> prop.\nopen X1 X2 P <-\n  opendyn [dyn X1, dyn X2] P.\n\nopen : bindmany A B -> bindmany A C -> bindmany A D -> (list A -> B -> C -> D -> prop) -> prop.\nopen X1 X2 X3 P <-\n  opendyn [dyn X1, dyn X2, dyn X3] P.\n\nopen : bindmany A B -> (list A -> B -> prop) -> prop.\nopen X1 P <-\n  opendyn [dyn X1] P.\n\nopen_nomatch : bindmany A B -> bindmany A C -> (list A -> B -> C -> prop) -> prop.\nopen_nomatch X1 X2 P <-\n  opendyn_nomatch [dyn X1, dyn X2] P.\n\nopen_nomatch : bindmany A B -> bindmany A C -> bindmany A D -> (list A -> B -> C -> D -> prop) -> prop.\nopen_nomatch X1 X2 X3 P <-\n  opendyn_nomatch [dyn X1, dyn X2, dyn X3] P.\n\nopen_nomatch : bindmany A B -> (list A -> B -> prop) -> prop.\nopen_nomatch X1 P <-\n  opendyn_nomatch [dyn X1] P.\n\n%end.\n\n\n(* Telescope: bind a number of A's into B, with an additional term of type C at each\n   binding that can use previously-bound variables. Useful for modelling the context in\n   dependently-typed languages. *)\n\ntelescope : type -> type -> type -> type.\ntelend   : B -> telescope V T B.\ntelnext  : string -> V -> (V -> telescope V T B) -> telescope V T B.\n\n%extend telescope.\n\nnewvars : telescope V T B -> (list V -> prop) -> prop.\napply : telescope V T B -> list V -> B -> prop.\nvarnames : telescope V T B -> list string -> prop.\nvarinfos : telescope V T B -> list T -> prop.\n\nnewvars_aux : telescope V T B -> list V -> (list V -> prop) -> prop.\nnewvars_aux (telend _) Vars P <- reverse Vars Vars', P Vars'.\nnewvars_aux (telnext S T Rest) Vars P <-\n  bindone.open (bindone S Rest) (pfun x bindrest => (infoofvar x T -> newvars_aux bindrest (x :: Vars) P) ).\nnewvars B P <- newvars_aux B [] P.\n\napply (telend X) [] X.\napply (telnext _ _ F) (HD :: TL) Res <- apply (F HD) TL Res.\n\napplysome : telescope V T B -> list V -> telescope V T B -> prop.\napplysome (telnext _ _ F) (HD :: TL) Res <- applysome (F HD) TL Res.\napplysome X nil X.\n\nvarnames B Names <- newvars B (fun xs => map nameofvar xs Names).\nvarinfos B Names <- newvars B (fun xs => map infoofvar xs Names).\n\nmatch_binders : telescope V T A -> telescope V' T' A' -> prop.\nmatch_binders (telend  _) (telend _).\nmatch_binders (telnext S _ F) (telnext S _ F') <- (x:A -> x':A' -> match_binders (F x) (F' x')).\n\nopen_aux : [PropType] list A -> list dyn -> PropType -> prop.\nopen_aux Vars [] P <- P.\nopen_aux Vars (dyn HD :: TL) P <-\n  apply HD Vars X,\n  open_aux Vars TL (P X).\n\nopendyn : [PropType] list dyn -> PropType -> prop.\nopendyn ES P <-\n  eq ES (dyn HD :: _),\n  dyn.iter (match_binders HD) ES,\n  newvars HD (fun xs => open_aux xs ES (P xs)).\n\nopendyn_nomatch : [PropType] list dyn -> PropType -> prop.\nopendyn_nomatch ES P <-\n  eq ES (dyn HD :: _),\n  newvars HD (fun x => open_aux x ES (P x)).\n\nopen : telescope V T1 B -> telescope V T2 C -> (list V -> B -> C -> prop) -> prop.\nopen X1 X2 P <-\n  opendyn [dyn X1, dyn X2] P.\n\nopen : telescope V T1 B -> telescope V T2 C -> telescope V T3 D -> (list V -> B -> C -> D -> prop) -> prop.\nopen X1 X2 X3 P <-\n  opendyn [dyn X1, dyn X2, dyn X3] P.\n\nopen : telescope V T1 B -> (list V -> B -> prop) -> prop.\nopen X1 P <-\n  opendyn [dyn X1] P.\n\nopen_nomatch : telescope V T1 B -> telescope V T2 C -> (list V -> B -> C -> prop) -> prop.\nopen_nomatch X1 X2 P <-\n  opendyn_nomatch [dyn X1, dyn X2] P.\n\nopen_nomatch : telescope V T1 B -> telescope V T2 C -> telescope V T3 D -> (list V -> B -> C -> D -> prop) -> prop.\nopen_nomatch X1 X2 X3 P <-\n  opendyn_nomatch [dyn X1, dyn X2, dyn X3] P.\n\nopen_nomatch : telescope V T1 B -> (list V -> B -> prop) -> prop.\nopen_nomatch X1 P <-\n  opendyn_nomatch [dyn X1] P.\n\n%end.\n\n");V("/./stdlib/morerefl.makam","%extend refl.\n\nsameunif : A -> A -> prop.\nsameunif X Y <-\n  refl.isunif X, refl.isunif Y,\n  refl.decomposeunif X I _, refl.decomposeunif Y I _.\n\n\n\n\n%extend userdef.\n\n(* reimplement two builtin predicates just to show that it's possible to do *)\ngetunif : [A B] A -> B -> prop.\n\ngetunif_aux, getunif_ : [A B] option B -> A -> option B -> prop.\n\ngetunif_aux X Y Z <- demand.case_otherwise (getunif_ X Y Z) (generic.fold getunif_aux X Y Z).\ngetunif_ (some Res) _ (some Res).\ngetunif_ _ X (some X) when refl.isunif X.\n\ngetunif Root Unif <- getunif_aux none Root (some Unif).\n\nabsunif : [A B] A -> B -> (B -> A) -> prop.\nabsunif_aux, absunif_ : [A B] B -> B -> A -> A -> prop.\n\nabsunif_ Unif Replace Root Replace when refl.sameunif Root Unif.\nabsunif_ Unif Replace Root Root when refl.isunif Root.\nabsunif_aux Unif Replace Root Result <- demand.case_otherwise (absunif_ Unif Replace Root Result) (structural (absunif_aux Unif Replace) Root Result).\n\nabsunif Root (Unif : A) Res <-\n  (x:A -> absunif_aux Unif x Root (Res x)).\n\n%end.\n\n%end.\n\n\n");V("/./init.makam",'%directory "examples/lib".\n%directory "examples/big".\n%directory "examples/small".\n%directory "examples/peg".\n%directory "examples/experiments".\n%directory "examples/paper".\n');V("/./examples/big/testurweb.makam",'%use urweb.\n\nhnf (tapp (tapp (trowmap ktype ktype) (tlam ktype (fun x => tarrow x x))) (trowunion (trowsingleton (tname "test") (tpi ktype (fun x => x))) C)) X ?\n\n(rows_disjoint_assume (trowsingleton X1 T1) (trowsingleton X2 T2) (rows_disjoint_prove (trowsingleton X2 T1) (trowsingleton X1 T2))) ?\n\n%constraints+.\n(rows_disjoint_assume (trowsingleton X1 T1) (trowsingleton X2 T2) (rows_disjoint_prove (trowsingleton X2 T1) X3), eq X3 (trowsingleton X4 T1)) ?\n\n(eq T1 (tbase "a"), eq T2 (tbase "b"), eq T3 (tbase "c"),\n teq (trowunion (trowsingleton (tname "a") T1) (trowunion (trowsingleton X T2) (trowsingleton Y T3)))\n     (trowunion (trowsingleton X T2) (trowunion (trowsingleton (tname "a") T1\') Z))) ?\n\n(eq T1 (tbase "a"), eq T2 (tbase "b"), eq T3 (tbase "c"),\n teq (trowunion (trowsingleton (tname "a") T1) (trowunion (trowsingleton X T2) (trowsingleton Y T3)))\n     (trowunion (trowsingleton X T2) (trowunion (trowsingleton (tname "a") T1\') (trowunion Z Q)))) ?\n\n(eq T1 (tbase "a"), eq T2 (tbase "b"), eq T3 (tbase "c"),\n teq (trowunion (trowsingleton (tname "a") T1) (trowunion (trowsingleton X T2) (trowsingleton Y T3)))\n     (trowunion (trowsingleton X T2) (trowunion (trowsingleton (tname "a") T1\') (trowunion Z Q))),\n eq Z (trowempty ktype)) ?\n\n\n(*\nfun proj [nm :: Name] [t :: Type] [r :: {Type}]\n[[nm] ~ r] (x : $([nm = t] ++ r)) = x.nm\n*)\n\ntypeof \n   (lamt (kname)      (fun nm =>\n   (lamt (ktype)      (fun t =>\n   (lamt (krow ktype) (fun r =>\n   (rowneedcon (trowsingleton nm tunit) r\n   (lam  (trowtype (trowunion (trowsingleton nm t) r)) (fun x =>\n   rowproject x nm))))))))) T ?\n\ntypeof \n   (lamt (kname)      (fun nm =>\n   (lamt (ktype)      (fun t =>\n   (lamt (krow ktype) (fun r =>\n   (rowneedcon (trowsingleton nm tunit) r\n   (lam  (trowtype (trowunion r (trowsingleton nm t))) (fun x =>\n   rowproject x nm))))))))) T ?\n\n`( letdef "proj"\n   (lamt (kname)      (fun nm =>\n   (lamt (ktype)      (fun t =>\n   (lamt (krow ktype) (fun r =>\n   (rowneedcon (trowsingleton nm tunit) r\n   (lam  (trowtype (trowunion (trowsingleton nm t) r)) (fun x =>\n   rowproject x nm))))))))) ).\n\n`( letdef "extend"\n   (lamt (kname)      (fun nm =>\n   (lamt (ktype)      (fun t =>\n   (lamt (krow ktype) (fun r =>\n   (rowneedcon (trowsingleton nm tunit) r\n   (lam  (trowtype r) (fun x =>\n   (lam  t            (fun a =>\n   rowunion x (rowsingleton nm a)))))))))))) ).\n\ntypeof extend T ?\n\n(*\nfun weird [nm :: Name] [t :: Type] [r :: {Type}]\n[[nm] ~ r] (x : $r) (a : t) = rowproject (rowunion x (rowsingleton nm a)) nm\n*)\ntypeof \n   (lamt (kname)      (fun nm =>\n   (lamt (ktype)      (fun t =>\n   (lamt (krow ktype) (fun r =>\n   (rowneedcon (trowsingleton nm tunit) r\n   (lam  (trowtype r) (fun x =>\n   (lam  (t)          (fun a =>\n   rowproject (rowunion x (rowsingleton nm a)) nm))))))))))) T ?\n\n\n(* the following, but unfortunately type inference is not robust yet in the presence of metas -- so not all modifications that should work do work. *)\n\ntypeof (app (magic (appt proj (tname "test1"))) (rowunion (rowsingleton (tname "test1") eunit) (rowsingleton (tname "test2") eunit))) X ?\n\n\n\n(*\ntype folder\n(r :: {Type}) = tf :: ({Type} -> Type)\n-> (nm :: Name -> t :: Type -> r :: {Type}\n-> [[nm] ~ r] => tf r -> tf ([nm = t] ++ r))\n-> tf [] -> tf r\n\n*)\n\n`( typedef "folder"\n      (tlam (krow ktype) (fun r =>\n      (tpi  (karrow (krow ktype) ktype) (fun tf =>\n      (tarrow (tpi kname (fun nm =>\n\t      (tpi ktype (fun t =>\n\t      (tpi (krow ktype) (fun r =>\n\t      (trowconstraint (trowsingleton nm tunit) r\n\t      (tarrow (tapp tf r) (tapp tf (trowunion (trowsingleton nm t) r))))))))))\n      (tarrow (tapp tf (trowempty _))\n      (tapp tf r))))))) ).\n\n      \n\n(* \nfun countFields [ts :: {Type}] (fl : folder ts) : int =\n    @fl [fn _ => int] (fn [nm ::_] [v ::_] [r ::_] [[nm] ~ r] n => n + 1) 0 fl\n*)\n\n(typeof (lamt (krow ktype) (fun ts =>\n       (lam  (tapp folder ts) (fun fl =>\n       app (appt fl (tlam #_ (fun x => tint)))\n\t   (lamt #_ (fun nm =>\n\t   (lamt #_ (fun v =>\n\t   (lamt #_ (fun r =>\n\t   (rowneedcon (trowsingleton nm tunit) r\n\t   (lam  #_ (fun n => intplus n (intconst 1)))))))))))))) T,\nteq T (tpi (krow ktype) (fun ts => tarrow (tapp folder ts) (tarrow tint tint)))) ?\n\n');V("/./examples/big/hol.makam","%use utils.\n\n(*        \xce\xbbHOL        *)\n(* ------------------ *)\n\n(* PTS *)\nterm : type.\nsort : type.\n\nstype : sort.\nsprop : sort.\nsext  : sort.\n\nsort : sort -> term.\npi   : sort -> term -> (term -> term) -> term.\nlam  : term -> (term -> term) -> term.\napp  : term -> term -> term -> term.\n\nrule : sort -> sort -> sort -> prop.\nrule sprop sprop sprop.\nrule stype stype stype.\nrule stype sprop sprop.\n\ntmof : term -> term -> prop.\n\ntmof (sort sprop) (sort stype).\ntmof (sort stype) (sort sext).\ntmof (pi S T T')  (sort S'') <-\n                     guard T (tmof T (sort S)),\n                     (x:term -> tmof x T -> tmof (T' x) (sort S')),\n\t\t     rule S S' S''.\ntmof (lam T E) (pi S T T') <- guard T (tmof T (sort S)),\n\t\t              (x:term -> tmof x T -> tmof (E x) (T' x)),\n                              tmof (pi S T T') _ .\ntmof (app E1 (pi S T T') E2) (T' E2) <- tmof E1 (pi S T T'), tmof E2 T.\n\n(* equality *)\neqp : term -> term -> term.\nrefl : term -> term.\nconv : term -> term -> term.\nsubst : term -> (term -> term) -> term -> term.\ncongLam : term -> (term -> term) -> term.\ncongForall : term -> (term -> term) -> term.\nbeta : term -> (term -> term) -> term -> term.\ntmof (eqp T1 T2) (sort sprop) <- tmof T1 T, tmof T2 T, guard T (tmof T (sort stype)).\ntmof (refl T) (eqp T T) <- guard T (tmof T T'), tmof T' (sort stype).\ntmof (conv T1 T2) T' <- tmof T1 T, tmof T (sort sprop), tmof T2 (eqp T T').\ntmof (subst Tk Tp T) (eqp (Tp Ta) (Tp Tb)) <-\n                        guard Tk (tmof Tk (sort stype)),\n\t\t\t(x:term -> tmof x Tk -> tmof (Tp x) (sort sprop)),\n\t\t        tmof T (eqp Ta Tb),\n\t\t        tmof Ta Tk.\ntmof (congLam Tk T) (eqp (lam Tk T1) (lam Tk T2)) <-\n\t\t\tguard Tk (tmof Tk (sort stype)),\n\t\t        (x:term -> tmof x Tk -> tmof (T x) (eqp (T1 x) (T2 x))).\ntmof (congForall Tk T) (eqp (pi stype Tk T1) (pi stype Tk T2)) <-\n\t\t\tguard Tk (tmof Tk (sort stype)),\n\t\t        (x:term -> tmof x Tk ->\n\t\t\t  (tmof (T x) (eqp (T1 x) (T2 x)),\n\t\t\t   tmof (T1 x) (sort sprop))).\ntmof (beta Ta T1 T2) (eqp (app (lam Ta T1) _ T2) (T1 T2)) <-\n                        tmof (lam Ta T1) (pi S Ta (fun x => Tb)),\n\t\t        tmof (pi S Ta (fun x => Tb)) (sort stype),\n\t\t        tmof T2 Ta.\n\ntrue : term.\ntriv : term.\ntmof true (sort sprop).\ntmof triv true.\n");V("/./examples/big/testocaml.makam",'%use ocaml.\n\n(* examples *)\n\ntypeof (let\n         (lam (fun f => lam (fun g => lam (fun x =>\n\t  app f (app g x)))))\n\t (fun compose => compose)) X ?\n\ntypeof (letrec\n         (bindmutrec\n\t (bcons (fun compose => bnil (cons\n         (lam (fun f => lam (fun g => lam (fun x =>\n\t  app f (app g x)))))\n\t nil))))\n\t (bcons (fun compose => bnil compose))) X ?\n\ntypeof (letrec\n         (bindmutrec\n\t   (bcons (fun \n\t   append => bnil [\n\t   lam (fun x => lam (fun y =>\n\t   match x\n             [ bindrel (bcons (fun hd => bcons (fun tl => bnil \n\t       (pconstr "Cons" (ptuple [ pvar hd, pvar tl ]),\n\t\tconstr "Cons" (tuple [ hd, app (app append tl) y ]))))),\n\n\t       bindrel (bnil\n\t       (pconstrun "Nil", y)) ]))])))\n          (bcons (fun append => bnil append))) Y?\n\nsigof (strmany\n\t [ strletrec\n\t   (bindmutrec (bcons (fun append => bnil [\n\t   lam (fun x => lam (fun y =>\n\t   match x\n\t     [ bindrel (bcons (fun hd => bcons (fun tl => bnil\n\t\t( pconstr "Cons" (ptuple [pvar hd, pvar tl]),\n\t\t  constr "Cons" (tuple [hd, app (app append tl) y]) )))),\n\t       bindrel (bnil\n\t\t( pconstrun "Nil",\n\t\t  y )) ]))]))),\n           strlet "g" (named "append") ]) S ?\n\nsigof (strmany\n        [strtypesingle "tree" [ktype] (typdef_variant\n           [ ("Leaf", csdefunit),\n\t     ("Node", csdef (typconstr (bcons (fun a => bnil (tprod [tbase "tree" [a], a, tbase "tree" [a]]))))) ]),\n\t strlet "isempty"\n           (lam (fun t => match t\n\t      [ bindrel (bcons (fun top => bnil\n\t\t   ( pconstr "Node" (ptuple [pwild, pvar top, pwild]),\n\t\t     top ))) ]))]) S ?\n\nsigof (strmany\n         [ strtypesingle "test1" [ktype, ktype] (typdef_eq\n\t    (typconstr (bcons (fun a => bcons (fun b => bnil (\n\t\t   tprod [ tbase "list" [a],\n\t\t           tbase "list" [ tbase "list" [ tprod [b, a] ] ] ])))))),\n\t   strtypesingle "test2" [ktype] (typdef_eq\n\t    (typconstr (bcons (fun a => bnil (\n\t\t   tbase "test1" [a, a]))))),\n\t   strlet "f" (lam (fun x => ascribe x (tbase "test2" [tbase "unit" []]) )),\n\t   strlet "g" (app (named "f")\n\t\t\t  (tuple [ construn "Nil",\n\t\t\t          constr "Cons" (tuple [ (constr "Cons" (tuple [tuple [construn "Unit", construn "Unit"], construn "Nil"])) ,\n\t\t\t\t                         constr "Cons" (tuple [construn "Nil", construn "Nil"])])])) ]) S ?\n\n\n');V("/./examples/big/urweb.makam","%use utils.\n%use bindutils.\n%use subbindutils.\n%use extutils.\n%use maps.\n\n(* kinds *)\nknd            : type.\n\nktype          : knd.\nkname          : knd.\nkarrow         : knd -> knd -> knd.\nkrow           : knd -> knd.\n\n(* types *)\ntyp            : type.\n\ntarrow         : typ -> typ -> typ .\ntbase          : string -> typ.\ntpi            : knd -> (typ -> typ) -> typ.\ntlam           : knd -> (typ -> typ) -> typ.\ntapp           : typ -> typ -> typ.\ntname          : string -> typ.\ntrowtype       : typ -> typ.\ntrowempty      : knd -> typ.\ntrowsingleton  : typ -> typ -> typ.\ntrowunion      : typ -> typ -> typ.\ntrowmap        : knd -> knd -> typ.\ntrowconstraint : typ -> typ -> typ -> typ.\ntunit          : typ.\ntint           : typ.\n\n(* terms *)\nterm           : type.\n\nlam            : typ -> (term -> term) -> term.\napp            : term -> term -> term .\nlamt           : knd -> (typ -> term) -> term.\nappt           : term -> typ -> term.\nlet            : term -> typ -> (term -> term) -> term.\nlett           : typ  -> knd -> (typ -> term) -> term.\nletrec         : bindmutrec term term -> bindmany term term -> term.\neunit          : term.\nintconst       : int -> term.\n\nrowempty       : term.\nrowsingleton   : typ -> term -> term.\nrowproject     : term -> typ -> term.\nrowremove      : term -> typ -> term.\nrowunion       : term -> term -> term.\nrowneedcon     : typ -> typ -> term -> term.\nrowprovcon     : term -> term.\n\n\n(* ----------------------------------------------------------- *)\n(* type system. *)\n\n\nkindof : typ -> knd -> prop.\ntypeof : term -> typ -> prop.\n\nkindof_ : typ -> knd -> prop.\ntypeof_ : term -> typ -> prop.\n\nrows_disjoint_prove  : typ -> typ -> prop.\nrows_disjoint_assume : typ -> typ -> prop -> prop.\nrows_disjoint        : typ -> typ -> prop.\n\nkindof_var : string -> knd -> prop.\n\nkindof T K                   \t       <- guard T (kindof_ T K).\nkindof_ (tarrow T1 T2) ktype \t       <- kindof T1 ktype, kindof T2 ktype.\nkindof_ (tbase T)      K     \t       <- kindof_var T K.\nkindof_ (tpi K TF)     ktype \t       <- (x:typ -> kindof_ x K -> kindof (TF x) ktype).\nkindof_ (tlam K TF)    (karrow K K')   <- (x:typ -> kindof_ x K -> kindof (TF x) K').\nkindof_ (tapp T1 T2)   K'    \t       <- kindof T1 (karrow K K'), kindof T2 K.\nkindof_ (tname N)      kname.\nkindof_ (trowtype C)   ktype \t       <- kindof C (krow ktype).\nkindof_ (trowempty K)  (krow K).\nkindof_ (trowsingleton C1 C2) (krow K) <- kindof C1 kname, kindof C2 K.\nkindof_ (trowunion C1 C2) (krow K)     <- kindof C1 (krow K), kindof C2 (krow K), rows_disjoint_prove C1 C2.\nkindof_ (trowmap K1 K2) (karrow (karrow K1 K2) (karrow (krow K1) (krow K2))).\nkindof_ (trowconstraint C1 C2 T) ktype <- kindof C1 (krow K1), kindof C2 (krow K2), rows_disjoint_assume C1 C2 (kindof T ktype).\nkindof_ (tunit) ktype.\nkindof_ (tint) ktype.\n\nteq : typ -> typ -> prop.\n\n(* term typing *)\n\ntypeof E T <- guard E (typeof_ E T).\n\ntypeof_ (lam T1 E) (tarrow T1 T2) <-\n  (x:term -> typeof_ x T1 -> typeof (E x) T2), kindof T1 ktype.\n\ntypeof_ (app E1 E2) T2 <-\n  typeof E1 (tarrow T1 T2), typeof E2 T1.\n\ntypeof_ (lamt K E) (tpi K TF) <-\n  (x:typ -> kindof_ x K -> typeof (E x) (TF x)).\n\ntypeof_ (appt E T) (TF T) <-\n  typeof E (tpi K TF), kindof T K.\n\ntypeof_ (let E T E') T' <-\n  typeof E T, (x:term -> typeof_ x T -> typeof (E' x) T').\n\ntypeof_ (lett T K E') T' <-\n  kindof T K, typeof (E' T) T'.\n\n(* let rec *)\ntypeof_ (letrec ES E') T' <-\n\n  bindmutrec_newvars ES (fun xs => {prop| [Bodies Rest Assumption]\n    many_assume typeof_ xs TS ({prop|\n\n     bindmutrec_apply ES xs Bodies,\n     bindmany_apply E' xs Rest,\n\n     map typeof Bodies TS,\n     map0 (fun x => kindof x ktype) TS,\n\n     typeof Rest T' |}) |}).\n     \ntypeof_ rowempty (trowtype (trowempty ktype)).\ntypeof_ (rowsingleton N E) (trowtype (trowsingleton N T)) <-\n  kindof N kname, typeof E T.\ntypeof_ (rowproject E N) T <-\n  kindof N kname,\n  typeof E (trowtype (trowunion (trowsingleton N T) M)).\ntypeof_ (rowremove E N) (trowtype M) <-\n  kindof N kname,\n  typeof E (trowtype (trowunion (trowsingleton N T) M)).\ntypeof_ (rowunion E1 E2) (trowtype (trowunion C1 C2)) <-\n  typeof E1 (trowtype C1), typeof E2 (trowtype C2), rows_disjoint_prove C1 C2.\ntypeof_ (rowneedcon C1 C2 E) (trowconstraint C1 C2 T) <-\n  kindof C1 (krow K1), kindof C2 (krow K2), rows_disjoint_assume C1 C2 (typeof E T).\ntypeof_ (rowprovcon E) T <-\n  typeof E (trowconstraint C1 C2 T), rows_disjoint_prove C1 C2.\n\ntypeof_ (eunit) (tunit).\ntypeof_ (intconst _) tint.\n\nintplus : term -> term -> term.\ntypeof_ (intplus E1 E2) tint <- typeof E1 tint, typeof E2 tint.\n\nmagic : term -> term.\nexpandmagic : term -> typ -> term -> prop.\nexpandmagic E T E' <-\n  case T\n   [ (tpi K TF, expandmagic (appt E Tunif) (TF Tunif) E'),\n     (trowconstraint _ _ T', expandmagic (rowprovcon E) T' E'),\n     (_, eq E E') ].\n\ntypeof_ (magic E) T' <- typeof E T, expandmagic E T E', typeof_ E' T'.\n\n(* conversion *)\n(typeof_ E T) when not (refl.isunif T), once(typeof_ E T') <- teq T' T.\n\n\ntoption : typ -> typ.\nesome : term -> term.\nenone : term.\nkindof_ (toption T) ktype <- kindof T ktype.\ntypeof_ (esome E) (toption T) <- kindof T ktype, typeof E T.\ntypeof_ (enone)   (toption T) <- kindof T ktype.\n\ntlist : typ -> typ.\necons : term -> term -> term.\nenil  : term.\nkindof_ (tlist T) ktype <- kindof T ktype.\ntypeof_ (econs E ES) (tlist T) <- kindof T ktype, typeof E T, typeof ES (tlist T).\ntypeof_ (enil) (tlist T) <- kindof T ktype.\n\n\n(* head-normal forms, row summarization, etc. *)\nhnf : typ -> typ -> prop.\nhnf_ : typ -> typ -> prop.\nhnfvar : typ -> typ -> prop.\n\n(hnf_ T Res) when not(refl.isunif T) <- hnf T Res.\n\nhnf T Res <-\n    (caseguard T\n       [ (X, refl.isunif X, eq Res X),\n\t (tapp LAM C2, hnf LAM (tlam _ C1), hnf (C1 C2) Res),\n\t (trowunion EMPTY C, hnf_ EMPTY (trowempty _), hnf C Res),\n\t (trowunion C EMPTY, hnf_ EMPTY (trowempty _), hnf C Res),\n\t (tapp (tapp MAP F) EMPTY, {prop| hnf_ EMPTY (trowempty _), hnf_ MAP (trowmap _ K2) |},\n\t                           eq Res (trowempty K2)),\n\t (tapp (tapp MAP ID) C, {prop| hnf_ MAP (trowmap _ _), hnf_ ID (tlam _ (fun x => x)) |},\n\t                        eq Res C),\n\t (tapp (tapp MAP F) UNION, {prop| hnf_ MAP (trowmap K1 K2), hnf_ UNION (trowunion U1 U2) |},\n\t                           {prop| hnf_ (tapp (tapp (trowmap K1 K2) F) U1) U1',\n\t                                  hnf_ (tapp (tapp (trowmap K1 K2) F) U2) U2',\n\t\t\t\t          eq Res (trowunion U1' U2') |}),\n         (tapp (tapp MAP F) SINGLETON, {prop| hnf_ MAP (trowmap K1 K2), hnf_ SINGLETON (trowsingleton N1 C2) |},\n\t                               {prop| hnf_ (tapp F C2) VAL,\n\t\t\t\t\t      eq Res (trowsingleton N1 VAL) |}),\n         (tapp (tapp MAP F) MAP2, {prop| hnf_ MAP (trowmap K2 K3), hnf_ MAP2 (tapp (tapp MAP2' F') C),\n\t                                 hnf_ MAP2' (trowmap K1 K2) |},\n\t                          {prop| hnf (tapp (tapp (trowmap K1 K3) (tlam K1 (fun a => tapp F (tapp F' a))))\n\t\t\t\t                   C) Res |}),\n\t (_, hnfvar T T', or (eq Res T) (eq Res T')),\n\t (_, success, eq Res T) ]).\n\n\n(typeof_ X T') when (newnmeta (fun x => eq x X)) <- once(typeof_ X T), hnf T T'.\n\n\nrow_summary : typ -> map typ unit -> list typ -> prop.\nrow_summary T Res Unifs <-\n  hnf T T',\n    (caseguard T'\n\t  [ (X, refl.isunif X,\n\t        {prop| eq Unifs [X], eq Res (map []) |}),\n\t    (trowsingleton N1 _, success,\n\t        {prop| eq (map [ (N1, unit) ]) Res, eq Unifs [] |}),\n\t    (trowunion R1 R2, success,\n\t        {prop| row_summary R1 M1 U1, row_summary R2 M2 U2,\n\t\t       map_union M1 M2 Res, append U1 U2 Unifs |}),\n\t    (V, isnvar V,\n\t        {prop| eq (map [ (V, unit) ]) Res, eq Unifs [] |}),\n\t    (tapp (tapp (trowmap _ _) _) C', success,\n\t        {prop| row_summary C' Res Unifs |}),\n\t    (_, success,\n\t        {prop| eq Res (map []), eq Unifs [] |}) ]).\n\ncartesian_product : (A -> B -> prop) -> list A -> list B -> list prop -> prop.\ncartesian_product P [] _ [].\ncartesian_product P (HD :: TL) L Props <-\n  map (fun elm => eq (P HD elm)) L HDProp,\n  cartesian_product P TL L TLProp,\n  append HDProp TLProp Props.\n\ndisjointness_assumptions : typ -> typ -> list prop -> prop.\ndisjointness_assumptions T1 T2 ASSUM <-\n  guardmany [dyn T1, dyn T2] {prop|\n    row_summary T1 (map L1) [],\n    row_summary T2 (map L2) [],\n    map (fun elm res => eq elm (tuple res unit)) L1 L1',\n    map (fun elm res => eq elm (tuple res unit)) L2 L2',\n    cartesian_product rows_disjoint L1' L2' Prop1,\n    cartesian_product rows_disjoint L2' L1' Prop2,\n    append Prop1 Prop2 ASSUM |}.\n\nrows_disjoint_assume T1 T2 P <-\n  guardmany [dyn T1, dyn T2] {prop|\n  disjointness_assumptions T1 T2 ASSUM,\n  assumemany ASSUM P |}.\n\nrows_disjoint_prove_atomic : typ -> typ -> prop.\n(rows_disjoint_prove_atomic T1 T2) when rows_disjoint T1' T2', eq_benign T1 T1', eq_benign T2 T2'.\n(rows_disjoint_prove_atomic T1 T2) when not(refl.isunif T1), not(refl.isunif T2), eq T1 (tname N1), eq T2 (tname N2) <- not(eq N1 N2).\n\n\nrows_disjoint_prove T1 T2 <-\n  row_summary T1 (map L1) U1,\n  row_summary T2 (map L2) U2,\n  map (fun elm res => eq elm (tuple res unit)) L1 L1',\n  map (fun elm res => eq elm (tuple res unit)) L2 L2',\n  append U1 U2 US,\n  map (fun elm => eq (dyn elm)) US Udyn,\n  (if eq Udyn []\n   then (cartesian_product rows_disjoint_prove_atomic L1' L2' Props,\n         map0 (fun p => p) Props)\n   else guardmany Udyn (rows_disjoint_prove T1 T2)).\n\nisrowtyp : typ -> prop.\ntroweq : typ -> typ -> prop.\nisrowtyp (trowempty _).\nisrowtyp (trowsingleton _ _).\nisrowtyp (trowunion _ _).\nisrowtyp (tapp (tapp (trowmap _ _) _) _).\n\npartition_union : tuple (list (tuple typ typ)) (tuple (list (tuple typ unit)) (list (tuple typ unit))) ->\n                  tuple (list (tuple typ typ)) (tuple (list (tuple typ unit)) (list (tuple typ unit))) ->\n                  tuple (list (tuple typ typ)) (tuple (list (tuple typ unit)) (list (tuple typ unit))) ->\n                  prop.\npartition_union (L1, L2, L3) (L1', L2', L3') (L1'', L2'', L3'') <-\n  append L1 L1' L1'',\n  append L2 L2' L2'',\n  append L3 L3' L3''.\n    \nrow_partition : typ -> list (tuple typ typ) -> list (tuple typ unit) -> list (tuple typ unit) -> prop.\nrow_partition T Singletons Unifs Others <-\n  hnf T T',\n    caseguard T'\n\t  [ (X, refl.isunif X,\n\t        {prop| eq Singletons [], eq Unifs [ (X, unit) ], eq Others [] |} ),\n\t    (trowempty _, success,\n\t        {prop| eq Singletons [], eq Unifs [], eq Others [] |}),\n\t    (trowsingleton N1 T1, success,\n\t        {prop| eq Singletons [ (N1, T1) ], eq Unifs [], eq Others [] |} ),\n\t    (trowunion R1 R2, success,\n\t        {prop| row_partition R1 L1 L2 L3, row_partition R2 L1' L2' L3',\n\t\t       partition_union (L1, L2, L3) (L1', L2', L3') (Singletons, Unifs, Others) |} ),\n\t    (_, success,\n\t        {prop| eq Singletons [], eq Unifs [], eq Others [ (T', unit) ] |} ) ].\n\nrow_remove : list (tuple A B) -> tuple A B -> list (tuple A B) -> bool -> prop.\nrow_remove [] _ [] false.\n(row_remove ( (Key', Val') :: Rest ) ( Key, Val ) Rest true) when eq_benign Key Key' <- eq Val Val'.\n(row_remove ( (Key', Val') :: Rest ) ( Key, Val ) ( (Key', Val') :: Rest' ) Found) when not(eq_benign Key Key') <-\n  row_remove Rest (Key, Val) Rest' Found.\n\nrow_cross_off : list (tuple A B) -> list (tuple A B) -> list (tuple A B) -> list (tuple A B) -> prop.\nrow_cross_off [] L2 [] L2.\nrow_cross_off ( HD :: TL ) L2 L1' L2' <-\n  (if row_remove L2 HD L2'' true\n   then row_cross_off TL L2'' L1' L2'\n   else (row_cross_off TL L2 TL' L2', eq L1' ( HD :: TL' ))).\n\nrow_union : option typ -> typ -> option typ -> prop.\nrow_union none T (some T).\nrow_union (some T) T' (some (trowunion T T')).\n\nrow_reconstruct : tuple (list (tuple typ typ)) (tuple (list (tuple typ unit)) (list (tuple typ unit))) -> typ -> prop.\nrow_reconstruct (Singletons, Unifs, Others) T <-\n  foldl (fun cur elm res => {prop| [N T] eq elm (N, T), row_union cur (trowsingleton N T) res |}) none Singletons T1,\n  foldl (fun cur elm res => {prop| [N] eq elm (N, unit), row_union cur N res |}) T1 Unifs T2,\n  foldl (fun cur elm res => {prop| [N] eq elm (N, unit), row_union cur N res |}) T2 Others T3,\n  (if eq T3 (some T) then success else eq T (trowempty ktype)).\n\nis_concrete_name : typ -> prop.\nis_concrete_name N <-\n  not(refl.isunif N), eq N (tname N'), not(refl.isunif N').\nconcrete_names_partition : list (tuple typ A) -> prop.\nconcrete_names_partition L <-\n  map0 (fun elm => {prop| [N N' T] eq elm (N, T), is_concrete_name N |}) L.\n\n\ndeepguard : A -> prop -> prop.\ndeepguard (X : A) P <-\n  gather_all_unifs (dyn X) (Y : typ) Unifs,\n  map (fun elm => eq (dyn elm)) Unifs DynUnifs,\n  guardmany DynUnifs P.\n\n\ntroweq T1 T2 <-\n  row_partition T1 Ston1 Unif1 Misc1,\n  row_partition T2 Ston2 Unif2 Misc2,\n  row_cross_off Ston1 Ston2 Ston1' Ston2',\n  row_cross_off Unif1 Unif2 Unif1' Unif2',\n  row_cross_off Misc1 Misc2 Misc1' Misc2',\n  caseguard ( (Ston1', Unif1', Misc1'), (Ston2', Unif2', Misc2') )\n   [ ( ( ([], [], []),\n\t ([], [], []) ), success, success ),\n     ( ( ([], [ (U1, unit) ], []),\n         All2), success, row_reconstruct All2 U1 ),\n     ( ( All1,\n         ([], [ (U2, unit) ], [])), success, row_reconstruct All1 U2 ),\n     ( ( ( [ S1 ], [], [] ),\n\t ( [ S2 ], [], [] )), success, eq S1 S2 ),\n     ( ( ( StonCName1, [ (U1, unit) ], [] ),\n\t ( StonCName2, [ (U2, unit) ], [] ) ), and (concrete_names_partition StonCName1)\n                                                   (concrete_names_partition StonCName2),\n         {prop| row_reconstruct (StonCName2, [ (Z, unit) ], []) U1,\n\t        row_reconstruct (StonCName1, [ (Z, unit) ], []) U2 |} ),\n     ( ( ( [], [], [ (tapp (tapp (trowmap K1 K2) F) A, unit) ] ),\n\t ( Stons2, [], [] ) ), success,\n       {prop| map (fun elm res => {prop| [N T A'] eq elm (N, T), eq res (N, A'), teq (tapp F A') T |}) Stons2 StonsA,\n\t      row_reconstruct (StonsA, [], []) A |}),\n     ( ( ( Stons2, [], [] ),\n\t ( [], [], [ (tapp (tapp (trowmap K1 K2) F) A, unit) ] ) ), success,\n       {prop| map (fun elm res => {prop| [N T A'] eq elm (N, T), eq res (N, A'), teq (tapp F A') T |}) Stons2 StonsA,\n\t      row_reconstruct (StonsA, [], []) A |}),\n     ( ( Any1, Any2 ), success,\n       {prop|\n       row_reconstruct Any1 T1'', row_reconstruct Any2 T2'',\n       deepguard (Any1, Any2) (troweq T1'' T2'') |} )\n\n     (* no postponing yet *)\n  ]. \n\ndynteq : dyn -> dyn -> prop.\n\nteq T1 T2 <-\n  hnf T1 T1', hnf T2 T2',\n  caseguard (T1', T2')\n   [ ( (X1, X2), {prop| once( (refl.isunif X1; refl.isunif X2) ) |}, eq T1' T2'),\n     ( (trowtype R1, trowtype R2), success, troweq R1 R2 ),\n     ( _, {prop| once( (isrowtyp T1'; isrowtyp T2') ) |}, troweq T1' T2'),\n     ( _, success, {prop| refl.headargs T1' HD ARGS1,\n\t                  refl.headargs T2' HD ARGS2,\n\t                  map (structural dynteq) ARGS1 ARGS2 |}) ].\n\ndynteq (dyn T) (dyn T') <-\n  (if (eq (dyn T) (dyn (X : typ)), eq (dyn T') (dyn (Y : typ)))\n   then teq X Y\n   else structural dynteq (dyn T) (dyn T')).\n\nletdef : [E] string -> E -> cmd -> prop.\nletdef X E (cmd_many [ cmd_newterm X (_ : term),\n                       cmd_stage (fun res => {prop|\n\t                  refl.lookup X C,\n\t                  eq res (cmd_newclause (clause (typeof_ C T) success)) |}) ]) <-\n  typeof E T.\n\n\ntypedef : [T] string -> T -> cmd -> prop.\ntypedef X T (cmd_many [ cmd_newterm X (_ : typ),\n                        cmd_stage (fun res => {prop|\n\t                  refl.lookup X C,\n\t                  eq res (cmd_many\n\t                    [ cmd_newclause (clause (kindof_ C K) success),\n\t\t\t      cmd_newclause (clause (hnfvar C T) success) ]) |}) ]) <-\n  kindof T K.\n");V("/./examples/big/ocaml-binders-everywhere.makam","%use utils.\n%use bindutils.\n%use extutils.\n\n(* kinds *)\nknd     : type.\n\nktype   : knd.\nkarrow  : list knd -> knd -> knd.\n\n(* types *)\ntyp       : type.\ntypconstr : type.\ntarrow    : typ -> typ -> typ .\ntprod     : list typ -> typ.\ntapp      : typ -> list typ -> typ.\ntpi       : knd -> (typ -> typ) -> typ.\ntypconstr : bindmany typ typ -> typconstr.\n\n(* terms *)\nterm        : type.\npatt        : type.\nconstructor : type.\nfield       : type.\n\nlam      : typ -> (term -> term) -> term.\napp      : term -> term -> term .\nlamt     : knd -> (typ -> term) -> term.\nappt     : term -> typ -> term.\nlet      : term -> (term -> term) -> term.\nletrec   : bindmutrec term term -> bindmany term term -> term.\nconstr   : constructor -> term -> term.\nconstrun : constructor -> term.\nascribe  : term -> typ -> term.\nmatch    : term -> list (bindmany term (tuple patt term)) -> term.\ntuple    : list term -> term.\nraise    : term -> term.\ntrycatch : term -> list (bindmany term (tuple patt term)) -> term.\nrecord   : list (tuple field term) -> term.\nprojrec  : term -> field -> term.\n\n(* patterns *)\nptuple    : list patt -> patt.\npconstr   : constructor -> patt -> patt.\npconstrun : constructor -> patt.\npvar      : term -> patt.\npwild     : patt.\npas       : term -> patt -> patt.\nprecord   : list (tuple field patt) -> patt.\n\n\n(* structure items *)\n\nstritem        : type.\nbindanystritem : type.\nsigitem        : type.\nbindanysigitem : type.\n\ntypdef         : type.\ntypdefblock    : type.\nconstrdef      : type.\nfielddef       : type.\n\ncsdef     : typconstr -> constrdef.\ncsdefunit : constrdef.\n\nmodstruct : type.\nmodstruct : listbindany stritem -> modstruct.\nmodsig    : type.\nmodsig    : listbindany sigitem -> modsig.\n\nstrlet    : term -> stritem.\nstrlet_   : term -> stritem.\nstrletrec : bindmutrec term term -> stritem.\nstrtype   : typconstr -> stritem.\nstrdata   : typdefblock -> stritem.\nstrexn    : constrdef -> stritem.\n\n(* signature items *)\nsigval    : typ -> sigitem.\nsigtype   : typconstr -> sigitem.\nsigdata   : typdefblock -> sigitem.\nsigexn    : constrdef -> sigitem.\n\n\n(*\ntypdefblock:\n\ntype ('a, 'b) Type1 = Constrs1\nand  ('c, 'd) Type2 = Constrs2\nand  ('e)     Type3 = { ... }\n\nmust bind all type constructor names together\nthen must bind all parameters\nthen must have constructors.\n\n*)\n\ntypdefblock : bindmutrec typ typdef -> list knd -> typdefblock.\n\ntypdefvar   : list constrdef -> typdef.\ntypdefrecrd : list typconstr -> typdef.\n\n\n(* type system. *)\n\n(* kinds *)\nkindof       : typ -> knd -> prop .\nkindofall    : list typ -> knd -> prop.\nkindofconstr : typconstr -> knd -> prop.\nguardkindof  : typ -> knd -> prop.\n\nkindof T ktype              <- (refl.isunif T; failure).\nkindof (tarrow T1 T2) ktype <- guardkindof T1 ktype, guardkindof T2 ktype.\nkindof (tpi K TF)     ktype <- (x:typ -> kindof x K -> guardkindof (TF x) ktype).\nkindof (tprod TS)     ktype <- kindofall TS ktype.\nkindof (tapp T TS)    K     <- guardkindof T (karrow KS K), map guardkindof TS KS.\nkindof T ktype              <- not (refl.isunif T), kindof T (karrow nil ktype).\n\nkindofall TS K <- map (fun t res => guardkindof t K) TS _.\n\nkindofconstraux : typconstr -> list knd -> knd -> prop.\nkindofconstraux (typconstr TC) KS K <-\n  bindmany_map kindof kindof TC KS K.\n    \nexn : typ.\nkindof exn (karrow nil ktype).\n\n(* normal form of types *)\ntypapply : typconstr -> list typ -> typ -> prop.\ntypapply (typconstr TC) TS T <- bindmany_apply TC TS T.\n\ntappmany : typ -> list typ -> typ -> prop.\ntappmany T nil T.\ntappmany T (cons T' TS) (tapp T (cons T' TS)).\n\ntconstrdef : typ -> typconstr -> knd -> prop.\nkindof X K <- tconstrdef X _ K.\n\nnf         : typ -> typ -> prop.\nnf X X <- refl.isunif X.\nnf (tapp TypConstr TypArgs) (tapp TypConstr TypArgs') <-\n  map nf TypArgs TypArgs'.\nnf (tapp TypConstr TypArgs) T <-\n  tconstrdef TypConstr Def _,\n  typapply Def TypArgs T.\nnf (tapp TypConstr TypArgs) T <-\n  tconstrdef TypConstr Def _,\n  typapply Def TypArgs T0,\n  nf T0 T.\nnf TypConstr T <-\n  tconstrdef TypConstr Def _,\n  typapply Def nil T.\nnf TypConstr T <-\n  tconstrdef TypConstr Def _,\n  typapply Def nil T0,\n  nf T0 T.\nnf (tarrow T1 T2) (tarrow T1' T2') <- nf T1 T1', nf T2 T2'.\nnf (tpi K TF)     (tpi K TF')      <- (x:typ -> nf x x -> nf (TF x) (TF' x)).\nnf (tprod TS)     (tprod TS')      <- map nf TS TS'.\n\n\n\n(* term typing *)\n\nguardkindof T K <- guard T (kindof T K).\n\ntypeof    : term -> typ -> prop.\nconstrdef : constructor -> constrdef -> typ -> list knd -> prop.\nfielddef  : field -> typconstr -> typ -> list knd -> prop.\nrecorddef : typ -> list knd -> list (tuple field typconstr) -> prop.\nrecordtypcheck : list (tuple field term) -> list (tuple field typconstr) -> list typ -> prop.\nrecordtypmatch : list (tuple field typ) -> typ -> list typ -> list (tuple field typconstr) -> prop.\n\ntypeof (lam T1 E) (tarrow T1 T2) <-\n  (x:term -> typeof x T1 -> typeof (E x) T2 ), guardkindof T1 ktype.\n\ntypeof (app E1 E2) T2 <-\n  typeof E1 (tarrow T1 T2), typeof E2 T1.\n\ntypeof (lamt K E) (tpi K TF) <-\n  (x:typ -> kindof x K -> typeof (E x) (TF x)).\n\ntypeof (appt E T) (TF T) <-\n  typeof E (tpi K TF), guardkindof T K.\n\ntypeof (tuple ES) (tprod TS) <- map typeof ES TS.\n\ntypeof (ascribe E T) T <- typeof E T.\n\ntypeof (raise E) T     <- typeof E exn, guardkindof T ktype.\n\n(* implicit generalization/instantiation and so on *)\ntypinst : typ -> typ -> prop.\ntypinst (tpi K TF) T' <- typinst (TF Tnew) T'.\ntypinst T T <- not(eq T (tpi _ _)).\n\ntypgen : typ -> typ -> prop.\ntypgen T T <- not(refl.getunif T (X: typ)).\ntypgen T (tpi K F') <-\n  refl.getunif T (X : typ), refl.absunif T X F,\n  (x:typ -> kindof x K -> typgen (F x) (F' x)).\n\ntpimany : knd -> (typ -> list typ) -> list typ -> prop.\ntpimany K (fun x => nil) nil.\ntpimany K (fun x => cons (T x) (TS x)) (cons (tpi K T) TS') <-\n  tpimany K TS TS'.\n\ntypgenlist : list typ -> list typ -> prop.\ntypgenlist TS TS' <-\n   (if refl.getunif TS (X : typ)\n    then (refl.absunif TS X F,\n          (x:typ -> kindof x K -> typgenlist (F x) (F' x)),\n          tpimany K F' TS')\n    else (eq TS TS')).\n\ngentypeof : term -> typ -> prop.\ntypeof X T <- gentypeof X T.\ntypeof X T' <- gentypeof X T, typinst T T'.\n\ntypeof (app E1 E2) T2 <-\n  typeof E1 T,\n  typinst T (tarrow T1 T2),\n  typeof E2 T1.\n\nvalrestr : term -> prop.\nvalrestr (constr _ _).\nvalrestr (construn _).\nvalrestr (lam    _ _).\nvalrestr (lamt   _ _).\nvalrestr (tuple _).\nvalrestr (record _).\nvalrestr (ascribe E _) <- valrestr E.\n\ntypeof (let E E') T' <-\n  typeof E T, \n  (if valrestr E\n   then (typgen T Tgen, guardkindof Tgen ktype, (x:term -> gentypeof x Tgen -> typeof (E' x) T'))\n   else (guardkindof T ktype, (x:term -> typeof x T -> typeof (E' x) T'))).\n\n(* let rec *)\ntypeof_recdef          : bindmutrec term term -> list typ -> prop.\ntypeof_recbody         : list typ -> bindmany   term term -> typ -> prop.\ngentypeof_recbody      : list typ -> bindmany   term term -> typ -> prop.\n\ntypeof_recdef  ES TS <- bindmutrec_map typeof typeof ES TS TS.\ntypeof_recbody TS E T' <- bindmany_map typeof typeof E TS T'.\ngentypeof_recbody TS E T' <- bindmany_map gentypeof typeof E TS T'.\n\ntypeof (letrec ES E') T' <-\n  typeof_recdef ES TS, \n  (if (bindmutrec_endmap (fun elm res => valrestr elm) ES _)\n   then (typgenlist TS TSgen, kindofall TSgen ktype, gentypeof_recbody TSgen E' T')\n   else (kindofall TS ktype, typeof_recbody TS E' T')).\n\n\n(* constructors *)\ntypeof (construn C) T' <-\n  constrdef C csdefunit T KS,\n  map guardkindof TS KS,\n  tappmany T TS T'.\n\ntypeof (constr C E) T'' <-\n  constrdef C (csdef TC') T KS,\n  map guardkindof TS KS,\n  typapply TC' TS T',\n  typeof E T',\n  tappmany T TS T''.\n\n(* records *)\ntypeof (projrec E Field) T' <-\n  fielddef Field TC T KS,\n  map guardkindof TS KS,\n  tappmany T TS T'',\n  once (typeof E T''),\n  typapply TC TS T'.\n\ntypeof (record FieldsTerms) T' <-\n  map (map eq typeof) FieldsTerms FieldsTypes,\n  recordtypmatch FieldsTypes Rectyp TS FieldsTypes',\n  tappmany Rectyp TS T'.\n\n\nfieldget : list (tuple field typconstr) -> field -> typconstr -> list (tuple field typconstr) -> prop.\nfieldget (cons (tuple F TC) Rest) F TC Rest.\nfieldget (cons (tuple F' TC') Rest) F T (cons (tuple F' TC') Rest') <-\n  not(eq F F'), fieldget Rest F T Rest'.\n\nrecordtypcheck nil nil Targs.\nrecordtypcheck (cons (tuple F E) Rest) FieldSpec Targs <-\n  fieldget FieldSpec F TC FieldSpec',\n  typapply TC Targs T,\n  typeof E T,\n  recordtypcheck Rest Fieldspec' Targs.\n\nteq : typ -> typ -> prop.\nteq X Y <- (eq X Y; (nf X Y; nf Y X)).\n\nrecordtypmatchaux : list (tuple field typ) -> list typ -> list (tuple field typconstr) -> prop.\nrecordtypmatch (cons (tuple F T) Rest) Rectyp TS FS <-\n  fielddef F TC Rectyp KS,\n  recorddef Rectyp KS FS,\n  map guardkindof TS KS,\n  recordtypmatchaux (cons (tuple F T) Rest) TS FS.\nrecordtypmatch nil Rectyp TS nil <-\n  recorddef Rectyp KS nil,\n  map guardkindof TS KS.\nrecordtypmatchaux (cons (tuple F T) Rest) TS FS <-\n  fieldget FS F TC FS',\n  typapply TC TS T',\n  teq T T',\n  recordtypmatchaux Rest TS FS'.\nrecordtypmatchaux nil TS nil.\n\n(* matching. *)\n\ntypebranch   : list term -> bindmany term (tuple patt term) -> typ -> typ -> prop.\ntypebranches : list (bindmany term (tuple patt term)) -> typ -> typ -> prop.\ntypeofpatt   : patt -> list term -> list term -> typ -> prop.\ntypeofpattlist : list patt -> list term -> list term -> list typ -> prop.\ntypeofpattrecord : list (tuple field patt) -> list term -> list term -> typ -> prop.\n\ntypeofpattlist nil Unifs Unifs nil.\ntypeofpattlist (cons P PS) Unifs Unifs'' (cons T TS) <-\n  typeofpatt P Unifs Unifs' T,\n  typeofpattlist PS Unifs' Unifs'' TS.\n\n\ntypeofpatt (ptuple PS) Unifs Unifs' (tprod TS) <- typeofpattlist PS Unifs Unifs' TS.\ntypeofpatt (pconstr C P) Unifs Unifs' T'TS <-\n  constrdef C (csdef TC) T' KS,\n  typapply TC TS T'',\n  tappmany T' TS T'TS,\n  typeofpatt P Unifs Unifs' T''.\ntypeofpatt (pconstrun C) Unifs Unifs T'TS <-\n  constrdef C csdefunit T' KS,\n  map guardkindof TS KS,\n  tappmany T' TS T'TS.\ntypeofpatt (pvar X) (cons X Rest) Rest T <-\n  typeof X T.\ntypeofpatt pwild Unifs Unifs T.\ntypeofpatt (pas X P) (cons X Rest) Unifs' T <-\n  typeof X T,\n  typeofpatt P Rest Unifs' T.\ntypeofpatt (precord FP) Unifs Unifs' T <-\n  typeofpattrecord FP Unifs Unifs' T.\n\ntypeofpattrecord nil Unifs Unifs TTS <-\n  recorddef T KS nil,\n  map guardkindof TS KS,\n  tappmany T TS TTS.\npattrecordaux : list (tuple field patt) -> list (tuple field typconstr) -> list typ -> list term -> list term -> prop.\ntypeofpattrecord (cons (tuple F P) Rest) Unifs Unifs' TTS <-\n  fielddef F TC T KS,\n  map guardkindof TS KS,\n  tappmany T TS TTS,\n  recorddef T KS FS,\n  pattrecordaux (cons (tuple F P) Rest) FS TS Unifs Unifs'.\npattrecordaux (cons (tuple F P) Rest) FS TS Unifs Unifs'' <-\n  fieldget FS F TC FS',\n  typapply TC TS T,\n  typeofpatt P Unifs Unifs' T,\n  pattrecordaux Rest FS' TS Unifs' Unifs''.\npattrecordaux nil nil TS Unifs Unifs.\n\n\n\ntypebranch Unifs (bnil (tuple Patt Body)) T T' <-\n  typeofpatt Patt Unifs nil T,\n  typeof Body T'.\ntypebranch Unifs (bcons F) T T' <-\n  (x:term -> typeof x Tx -> \n  newmeta (fun Unifs' =>\n  (and (snoc Unifs x Unifs')\n       (typebranch Unifs' (F x) T T')))).\n\ntypebranches BS T T' <- map (fun branch res => typebranch nil branch T T') BS _ .\n\ntypeof (match E Branches) T' <-\n  typeof E T,\n  not(refl.isunif T),\n  typebranches Branches T T'.\n\ntypeof (match E Branches) T' <-\n  typeof E T,\n  not(refl.isunif T),\n  nf T Tnf,\n  typebranches Branches Tnf T'.\n\ntypeof (match E Branches) T' <-\n  typebranches Branches T T',\n  typeof E T.\n\ntypeof (trycatch E Handlers) T <-\n  typeof E T,\n  typebranches Handlers exn T.\n\n\n(* conversion *)\ntypeof E T <- not (refl.isunif T), once(typeof E T'), (nf T T'; nf T' T).\n\n\n(* built-in datatypes *)\nlist  : typ.\nNil  : constructor.\nCons : constructor.\nkindof list (karrow (cons ktype nil) ktype).\nconstrdef Nil  csdefunit list (cons ktype nil).\nconstrdef Cons (csdef (typconstr (bcons (fun a => bnil (tprod (cons a (cons (tapp list (cons a nil)) nil)))))))\n                list (cons ktype nil).\n\nunit : typ.\nUnit : constructor.\nkindof unit (karrow nil ktype).\nconstrdef Unit csdefunit unit nil.\n\nint : typ.\nintconst : int -> term.\nkindof int (karrow nil ktype).\ntypeof (intconst N) int.\n\nstring : typ.\nstringconst : string -> term.\nkindof string (karrow nil ktype).\ntypeof (stringconst S) string.\n\nbool : typ.\nTrue : constructor.\nFalse : constructor.\nkindof bool (karrow nil ktype).\nconstrdef True csdefunit bool nil.\nconstrdef False csdefunit bool nil.\n\n\n\n(* module structures/signatures *)\nsigof : modstruct -> modsig -> prop.\nsigof_item : stritem -> bindany (list prop) -> listbindany sigitem -> prop.\n\nsigof_item_cast : [X] stritem -> X -> listbindany sigitem -> prop.\nsigof_item X Y Z <-\n  sigof_item_cast X Y' Z,\n  bindany_cast Y' Y.\n\n\nsigof (modstruct lbnil) (modsig lbnil).\nsigof (modstruct (lbcons HD BTL)) (modsig Sig) <-\n\n  sigof_item HD HDBinds SigHD,\n  listbindany_append SigHD BSigTL Sig,\n  bindany_newvars HDBinds (fun vars =>\n\n  newmeta (fun tl => newmeta (fun sigTL => newmeta (fun assumptions =>\n   and (bindany_apply BTL     vars tl)\n  (and (bindany_apply BSigTL  vars sigTL)\n  (and (bindany_apply HDBinds vars assumptions)\n\n  (assumemany assumptions\n    (sigof (modstruct tl) (modsig sigTL))))))))).\n\n\nsigof_item_cast\n      (strlet E)          (fun (x : term) => cons (typeof x T) nil)\n      (lbcons (sigval T') (bcons (fun (x : term) => bnil lbnil))) <-\n  typeof (let E (fun y => y)) T, teq T T'.\n\nsigof_item_cast\n      (strlet_ E) (nil)\n      (lbnil) <-\n  typeof (let E (fun x => x)) T.\n\n\nsigof_item\n      (strletrec (bindmutrec ES)) BAssumptions\n      Sig <-\n  bindmany_newvars ES (fun (xs : list term) =>\n\n  newmeta (fun assumptions => newmeta (fun mkSig =>\n   and (bindmany_apply BXS xs (tuple xs))\n  (and (typeof (letrec (bindmutrec ES) BXS) (tprod TS))\n  (and (bindany_apply_sametype BAssumptions xs assumptions)\n  (and (map2 (fun x t res => eq res (gentypeof x t)) xs TS assumptions)\n  (and (map2 (fun x t res => eq res (tuple (dyn x) (sigval t))) xs TS mkSig)\n       (mklistbindany mkSig Sig)))))\n\n  ))).\n\n\nsigof_item_cast\n    (strtype TC) (fun (x : typ) => cons (tconstrdef x TC (karrow KS KRes)) nil)\n    (lbcons (sigtype TC) (bcons (fun (x : typ) => bnil lbnil))) <-\n  kindofconstr TC (karrow KS KRes).\n  \n(* datatypes *)\n(* TODO. fix this finally... *)\n\nwf_typdef       : typdef -> knd -> prop.\nwf_typdef_var   : constrdef -> list knd -> prop.\nwf_typdef_recrd : typconstr -> list knd -> prop.\n\nwf_typdef_var   csdefunit  KS.\nwf_typdef_var   (csdef (typconstr TC)) KS <- bindmany_map kindof kindof TC KS ktype.\nwf_typdef_recrd (typconstr TC)         KS <- bindmany_map kindof kindof TC KS ktype.\n\nwf_typdef (typdefvar TS)   (karrow KS ktype) <- map (fun t res => wf_typdef_var t KS) TS _.\nwf_typdef (typdefrecrd TS) (karrow KS ktype) <- map (fun t res => wf_typdef_recrd t KS) TS _.\n\n(* type (('a, 'b) : KParams) T = (...) Constructor of (Csdef) (...) *)\n\ntypdef_bindsandassumptions_var : typ -> constrdef -> list knd -> bindany prop -> prop.\ntypdef_bindsandassumptions_recrd : typ -> typconstr -> list knd -> bindany prop -> prop.\ntypdef_bindsandassumptions : typdef -> typ -> knd -> list (bindany prop) -> prop.\n\ntypdef_bindsandassumptions_var   T Csdef KParams\n\t\t\t\t (bcons (fun (x : constructor) => bnil (constrdef x Csdef T KParams))).\ntypdef_bindsandassumptions_recrd T Tdef  KParams\n\t\t\t\t (bcons (fun (x : field) => bnil (fielddef x Tdef T KParams))).\ntypdef_bindsandassumptions (typdefvar TS) T (karrow KS ktype) Res <-\n  map (fun c res => typdef_bindsandassumptions_var T c KS res) TS Res.\ntypdef_bindsandassumptions (typdefrecrd TS) T (karrow KS ktype) Res <-\n  map (fun c res => typdef_bindsandassumptions_recrd T c KS res) TS Res.\n\n\t    \n\nsigof_item (strdata (typdefblock BTypDefs Kinds)) BindsAndAssumptions\n\t   (lbcons (sigdata (typdefblock BTypDefs Kinds)) Sig) <-\n\n  bindmutrec_newvars BTypDefs (fun typs =>\n  newmeta (fun typdefs => newmeta (fun typAssumptions =>\n  newmeta (fun llcba => newmeta (fun lcba => newmeta (fun cba => newmeta (fun cbafull =>\n\n  (and (bindmutrec_apply BTypDefs typs typdefs)\n  (and (map2 (fun t k res => eq res (kindof t k)) typs Kinds typAssumptions)\n  (and (assumemany typAssumptions (map wf_typdef typdefs Kinds))\n\n  (and (bindany_apply_sametype BTyps typs nil)\n  (and (map3 (fun typdef t k res => typdef_bindsandassumptions typdef t k res) typdefs typs Kinds llcba)\n  (and (flatten llcba lcba)\n  (and (bindany_list_flatten lcba cba)\n  (and (bindany_modifybody (append typAssumptions) cba cbafull)\n  (and (bindany_apply_partial_sametype BindsAndAssumptions typs cbafull)\n  (and (bindany_modifybody (fun _ res => eq res lbnil) BindsAndAssumptions Sig)\n       success))))))))))))))))) .\n\n\nsigof_item_cast\n     (strexn CS) (fun (x : constructor) => cons (constrdef x CS exn nil))\n     (lbcons (sigexn CS) (bcons (fun (x : constructor) => bnil lbnil))) <-\n wf_typdef_var CS nil.\n\n\n\n\n\n\n\n(* ------------------------------------------------------------------------- *)\n\n\n\n\n\n\n\n\n\n\n(* extensibility support *)\n(*\ntermext : termext -> term -> term.\ntypext  : typext  -> typ -> typ.\nstrext  : stritemext -> stritem -> stritem.\n\ntypeof (termext extE baseE) t <- not(refl.isunif baseE), typeof baseE t.\nkindof (typext extT baseT) k <-  not(refl.isunif baseT), kindof baseT k.\nsigof  (strext extS baseS) s <-  not(refl.isunif baseS), sigof baseS s.\nvalrestr (termext extE baseE) <- not(refl.isunif baseE), valrestr baseE.\n*)\n\ntypeof (let\n         (lam #_ (fun f => lam #_ (fun g => lam #_ (fun x =>\n\t  app f (app g x)))))\n\t (fun compose => compose)) X ?\n\ntypeof (letrec\n         (bindmutrec\n\t (bcons (fun compose => bnil (cons\n         (lam #_ (fun f => lam #_ (fun g => lam #_ (fun x =>\n\t  app f (app g x)))))\n\t nil))))\n\t (bcons (fun compose => bnil compose))) X ?\n\ntypeof (letrec\n         (bindmutrec\n\t   (bcons (fun \n\t   append =>    bnil (cons(\n\t   lam #_ (fun x => lam #_ (fun y =>\n\t   match x (cons (\n\t     (bcons (fun hd => bcons (fun tl => bnil \n\t     (tuple\n\t     (pconstr Cons (ptuple (cons (pvar hd) (cons (pvar tl) nil)))) (* -> *)\n\t     (constr Cons (tuple (cons hd (cons (app (app append tl) y) nil))))\n\t     ) )))) (cons (\n\t     (bnil\n\t     (tuple \n\t     (pconstrun Nil) (* -> *) y\n\t     ) )) nil))\n\t  ))) nil))))\n\t(bcons (fun append => bnil append)))\n   Y ?\n\nsigof (modstruct\n       (lbcons\n         (strletrec\n         (bindmutrec \n\t   (bcons (fun \n\t   append => bnil (cons(\n\t   lam #_ (fun x => lam #_ (fun y =>\n\t   match x (cons (\n\t     (bcons (fun hd => bcons (fun tl => bnil \n\t     (tuple\n\t     (pconstr Cons (ptuple (cons (pvar hd) (cons (pvar tl) nil)))) (* -> *)\n\t     (constr Cons (tuple (cons hd (cons (app (app append tl) y) nil))))\n\t     ) )))) (cons (\n\t     (bnil\n\t     (tuple \n\t     (pconstrun Nil) (* -> *) y\n\t     ) )) nil))\n\t  ))) nil)))))\n\t (bcons (fun append =>\n\t  bnil (lbcons\n\t (strlet append)\n\t (bcons (fun g => bnil lbnil))))))) S ?\n\nsigof (modstruct\n        (lbcons\n\t  (strdata (typdefblock\n\t    (bindmutrec (bcons (fun tree => bnil\n\t    (cons (typdefvar (* tree *)\n\t            (cons ( (* Leaf *)\n\t\t            csdefunit\n\t\t          )\n\t\t    (cons ( (* Node *)\n\t\t            csdef (typconstr (bcons (fun a => bnil (\n\t\t\t          tprod (cons (tapp tree (cons a nil)) (cons a (cons (tapp tree (cons a nil)) nil)))))))\n\t\t          )\n\t\t    nil))\n\t          )\n\t     nil)))) (cons (karrow (cons ktype nil) ktype) nil)))\n\t  (bcons (fun tree => bcons (fun Leaf => bcons (fun Node =>\n\t  bnil\n       (lbcons\n\t (strlet\n\t    (lam #_ (fun t => match t\n\t    \t              (cons (bcons (fun top => bnil\n\t\t\t            (tuple (pconstr Node (ptuple (cons pwild (cons (pvar top) (cons pwild nil)))))\n\t\t\t\t           (top)))) nil)))\n\t ) (bcons (fun isempty => bnil lbnil))))))))) S ?\n\n\n\n(* tests *)\n(*\ntypeof\n\n(letrec\n  (tmblcons (fun (f:term) =>\n   tmblcons (fun (g:term) =>\n   tmblnil  (\n   tmcons (lam _ (fun x => app g x))\n   (tmcons (lam _ (fun x => app f x))\n           tmnil)))))\n  (tmbcons (fun (f:term) =>\n   tmbcons (fun (g:term) =>\n   tmbnil  (\n   app f (construn Unit)\n   )))))\n\nT ?\n\nsigof\n\n(strletrec\n  (tmblcons (fun (f:term) =>\n   tmblcons (fun (g:term) =>\n   tmblnil  (\n   tmcons (lam _ (fun x => app g x))\n   (tmcons (lam _ (fun x => app f x))\n           tmnil)))))\n  (bastrterm (fun (f:term) =>\n   bastrterm (fun (g:term) =>\n   bastrbase  (\n   \n   strnil\n   \n   )))))\n\nT ?\n\n\ntypeof\n\n(letrec\n  (tmblcons (fun (f:term) =>\n   tmblcons (fun (g:term) =>\n   tmblnil  (\n   tmcons (lam _ (fun x =>  x))\n   (tmcons (lam _ (fun x => x))\n           tmnil)))))\n  (tmbcons (fun (f:term) =>\n   tmbcons (fun (g:term) =>\n   tmbnil  (\n   g\n   )))))\n\nT ?\n\n\ntypeof\n  (let\n    (constr Cons (tuple (tmcons (construn Nil) (tmcons (construn Nil) tmnil))))\n    (fun x => x))\n  A ?\n\n\n\n\n%mlgrammar \"Base\".\n%mlgrammar \"Unparsed\".\n%mlgrammar \"OCaml\".\n%mlparser term    \"OCaml.parse_term\".\n%mlparser stritem \"OCaml.parse_stritem\".\n\ntypeof \n  (fun l1 l2 -> match l1 with [] -> l2)\n  t\n  ?\n\n\ntypeof {{\n  let rec append l1 l2 =\n     match l1 with\n       [] -> l2\n     | hd :: tl -> hd :: (append tl l2)\n     in\n     append\n}}\nt ?\n\nsigof {{\n\n  let rec append l1 l2 =\n    match l1 with \n      [] -> l2\n    | hd :: tl -> hd :: (append tl l2)\n  ;;\n\n  let rec foldl f a l =\n    match l with\n      [] -> a\n    | hd :: tl -> foldl f (f a hd) tl\n  ;;\n\n  let reverse l =\n    let rec aux acc l =\n       match l with\n          [] -> acc\n        | hd :: tl -> aux (hd :: acc) tl\n    in\n    aux [] l\n  ;;\n\n  let map f l =\n    let revmap = foldl (fun cur elm -> f elm :: cur) [] l in\n    reverse revmap\n\n}} T ?\n\n\nsigof {{\n\n  type ('a, 'b) test1 = ('a list) * ( ('b * 'a) list list) ;;\n  type 'a test2 = ('a, 'a) test1 ;;\n  let f (x : unit test2) = x ;;\n  let g = f ([], [[(),()];[]])\n\n}} T ?\n\n\nsigof {{\n\n  type 'a tree = Leaf | Node of 'a tree * 'a * 'a tree ;;\n  let rec append l1 l2 =\n    match l1 with \n      [] -> l2\n    | hd :: tl -> hd :: (append tl l2)\n  ;;\n  let rec flatten t = match t with Leaf -> [] | Node(left,a,right) -> append (flatten left) (a :: (flatten right))\n\n}} T ?\n\nsigof {{\n\n  type 't monad = {\n    return : forall 'a. 'a -> 'a 't ;\n    bind   : forall 'a 'b. 'a 't -> ('a -> 'b 't) -> 'b 't\n  } ;;\n\n  type 'a option = Some of 'a | None ;;\n  \n  let optionmonad =\n    { return = (tfun 'a -> fun (x : 'a) -> Some x) ;\n      bind   = (tfun 'a -> tfun 'b ->\n\t       fun (x : 'a option) ->\n\t       fun (f : 'a -> 'b option) ->\n\t       match x with\n\t\t   Some y -> f y\n\t\t | None   -> None) }\n\n}}\nt ?\n*)");V("/./examples/big/f2tal.makam","%use utils.\n%use bindutils.\n%use generic.\n%use extutils.\n\n\nuseexample : string -> prop.\nuseexample \"fact\". \n(* useexample \"twice\". *)\n(* useexample \"id\". *)\n\n(* --------------\n   Phase 1.\n   System F\n   -------------- *)\n\n\ntyp   : type.\nbterm : type.\nterm  : type.\nprim  : type.\n\ntint   : typ.\ntarrow : typ -> typ -> typ.\ntpi    : (typ -> typ) -> typ.\nttup   : list typ -> typ.\n\nterm  : bterm -> typ -> term.\n\niconst : int -> bterm.\nfix    : typ -> typ -> (bterm -> bterm -> term) -> bterm.\napp    : term -> term -> bterm.\nlamt   : (typ -> term) -> bterm.\nappt   : term -> typ -> bterm.\ntup    : list term -> bterm.\n\nnat   : type.\nnzero : nat.\nnsucc : nat -> nat.\n\nproj   : nat -> term -> bterm.\nop     : prim -> term -> term -> bterm.\nif0    : term -> term -> term -> bterm.\n\npplus  : prim.\npminus : prim.\npmult  : prim.\n\ntypeof : term -> typ -> prop.\ntypeof_ : bterm -> typ -> prop.\ntypeof (term X T) T <- typeof_ X T.\n\ntypeof_ (iconst _) tint.\ntypeof_ (fix T1 T2 (fun x => fun x1 => E x x1)) (tarrow T1 T2) <-\n  (x:bterm -> x1:bterm ->\n   typeof_ x (tarrow T1 T2) ->\n   typeof_ x1 T1 ->\n   typeof (E x x1) T2).\ntypeof_ (app E1 E2) T2 <-\n  typeof E1 (tarrow T1 T2),\n  typeof E2 T1.\ntypeof_ (lamt (fun a => E a)) (tpi (fun a => T a)) <-\n  (a:typ ->\n   typeof (E a) (T a)).\ntypeof_ (appt E T) (T' T) <-\n  typeof E (tpi (fun a => T' a)).\ntypeof_ (tup ES) (ttup TS) <-\n  map typeof ES TS.\n\nnth : list A -> nat -> A -> prop.\nnth (HD :: TL) nzero HD.\nnth (HD :: TL) (nsucc N) R <- nth TL N R.\n\ntypeof_ (proj I ES) Ti <-\n  typeof ES (ttup TS),\n  nth TS I Ti.\n\ntypeof_ (op P E1 E2) tint <-\n  typeof E1 tint,\n  typeof E2 tint.\n\ntypeof_ (if0 E1 E2 E3) T <-\n  typeof E1 tint,\n  typeof E2 T,\n  typeof E3 T.\n\n\n(* --------------\n   Phase 2.\n   \xce\xbb^K (CPS)\n   -------------- *)\n\ntypk  : type.\nvalk  : type.\nbvalk : type.\ndeclk : type.\ntermk : type.\n\ntint  : typk.\ntpi   : bindmany typk (list typk) -> typk.\nttup  : list typk -> typk.\n\ndkval  : valk -> declk.\ndkproj : nat -> valk -> declk.\ndkop   : prim -> valk -> valk -> declk.\n\nvalk : bvalk -> typk -> valk.\n\niconst : int -> bvalk.\nfixk   : bindmany typk (tuple (list typk) (bvalk -> bindmany bvalk termk)) ->\n         bvalk.\ntupk   : list valk -> bvalk.\n\nletk : declk -> (bvalk -> termk) -> termk.\nappk : valk -> list typk -> list valk -> termk.\nif0k : valk -> termk -> termk -> termk.\nhaltk : typk -> valk -> termk.\n\n(* typing *)\n\ntypeofk_ : valk -> typk -> prop.\ntypeofk : bvalk -> typk -> prop.\ntypeofk : termk -> prop.\n\ntypeofk_ (valk U T) T <- typeofk U T.\ntypeofk (iconst _) tint.\ntypeofk (fixk F) (tpi T) <-\n  bindmany_newvars F (fun as => {prop| [TS Decls]\n  bindmany_apply F as (tuple TS Decls),\n  bindmany_apply T as TS,\n  (x:bvalk ->\n   typeofk x (tpi T) ->\n   bindmany_newvars (Decls x) (fun xs => {prop| [E]\n   bindmany_apply (Decls x) xs E,\n   many_assume typeofk xs TS\n   (typeofk E) |})) |}).\n\ntypeofk (tupk VS) (ttup TS) <-\n  map typeofk_ VS TS.\n\ntypeofk (letk (dkval V) E) <-\n  typeofk_ V T,\n  (x:A -> typeofk x T -> typeofk (E x)).\n\ntypeofk (letk (dkproj I V) E) <-\n  typeofk_ V (ttup TS),\n  nth TS I T,\n  (x:A -> typeofk x T -> typeofk (E x)).\n\ntypeofk (letk (dkop P V1 V2) E) <-\n  typeofk_ V1 tint,\n  typeofk_ V2 tint,\n  (x:A -> typeofk x tint -> typeofk (E x)).\n\ntypeofk (appk V TS VS) <-\n  typeofk_ V (tpi T),\n  bindmany_apply T TS TS',\n  map typeofk_ VS TS'.\n\ntypeofk (if0k V E1 E2) <-\n  typeofk_ V tint,\n  typeofk E1, typeofk E2.\n\ntypeofk (haltk T V) <-\n  typeofk_ V T.\n\n\n(* translation : System F -> \xce\xbb^K *)\n\ntranslate : typ -> typk -> prop.\ntranslatecont : typ -> typk -> prop.\n\ntranslate tint tint.\ntranslate (tarrow T1 T2) (tpi (bnil [T1', T2'])) <-\n  translate T1 T1', translatecont T2 T2'.\ntranslate (tpi (fun a => T a)) (tpi (bcons (fun a => bnil [T' a]))) <-\n  (a:typ -> a':typk ->\n   translate a a' ->\n   translatecont (T a) (T' a')).\ntranslate (ttup TS) (ttup TS') <-\n  map translate TS TS'.\ntranslatecont T (tpi (bnil [T'])) <-\n  translate T T'.\n\n\nsugarlam : typk -> (bvalk -> termk) -> bvalk -> prop.\nsugarlam T (fun x => E x) (fixk (bnil ([T], (fun u => bcons (fun x => bnil (E x)))))).\n\ntranslateprog : term -> termk -> prop.\ntranslateexpr : term -> valk -> termk -> prop.\ntranslateexpr_var : bterm -> bvalk -> prop.\ntranslateexpr_lam : term -> typk -> (bvalk -> (termk -> prop)) -> typk -> termk -> prop.\n\ntranslateexpr_lam E T (fun x => P x) T' E' <-\n  (x:bvalk -> P x (Res x)),\n  sugarlam T Res K,\n  translateexpr E (valk K T') E'.\n\n\ntranslateprog (term U T) E <-\n  translatecont T Tcont,\n  translate T T',\n  translateexpr_lam (term U T) T' (fun x => eq (haltk T' (valk x T'))) Tcont E.\n\ntranslateexpr (term Y T) K (appk K [] [valk Y' T']) <-\n  translateexpr_var Y Y',\n  translate T T'.\n\ntranslateexpr (term (iconst I) T) K (appk K [] [valk (iconst I) T']) <-\n  translate T T'.\n\ntranslateexpr (term (fix T1 T2 (fun x x1 => E x x1)) T) K\n              (appk K []\n\t       [valk (fixk (bnil ([T1', T2cont], (fun x => FixDecls x)))) T']) <-\n\n  translate T1 T1', translate T2 T2', translatecont T2 T2cont, translate T T',\n  (x:bterm -> x1:bterm -> x':bvalk -> x1':bvalk -> c:bvalk ->\n\n   translateexpr_var x x' ->\n   translateexpr_var x1 x1' -> {prop| [FixBody]\n   bindmany_apply (FixDecls x') [x1',c] FixBody,\n   translateexpr (E x x1) (valk c T2cont) FixBody |}).\n\n\t\ntranslateexpr (term (app (term U1 T1) (term U2 T2)) T) K\n              E <-\n  translate T1 T1', translate T2 T2', translatecont T1 T1cont, translatecont T2 T2cont,\n  translateexpr_lam (term U1 T1) T1' (fun x1 =>\n    translateexpr_lam (term U2 T2) T2' (fun x2 =>\n     eq (appk (valk x1 T1') [] [valk x2 T2', K])) T2cont) T1cont E.\n\ntranslateexpr (term (lamt (fun a => term (U a) (T a))) T') K\n              (appk K [] [valk (fixk (bcons (fun a => bnil (FixBody a)))) T'c]) <-\n  translate T' T'c,\n  (a:typ -> a':typk ->\n   translate a a' ->\n   (translatecont (T a) (Tcont a'),\n   (c:bvalk ->\n    translateexpr (term (U a) (T a)) (valk c (Tcont a')) (Body a' c)),\n   sugarlam (Tcont a') (Body a') (fixk (bnil (FixBody a')))) ).\n\ntranslateexpr (term (appt (term U T) S) T') K E <-\n  translate T Tc, translatecont T Tcont, translate S Sc,\n  translateexpr_lam (term U T) Tc\n    (fun x => eq (appk (valk x Tc) [Sc] [K]))\n    Tcont E.\n\ntranslateexpr_tup : list term -> valk -> list valk -> typk -> termk -> prop.\n\ntranslateexpr_tup nil K VS T (appk K [] [valk (tupk VS') T]) <- reverse VS VS'.\ntranslateexpr_tup (cons (term Ui Ti) Rest) K VS T E <-\n  translate Ti Ti', translatecont Ti Ticont,\n  translateexpr_lam \n   (term Ui Ti) Ti'\n   (fun xi => translateexpr_tup Rest K ((valk xi Ti') :: VS) T)\n   Ticont E.\n\ntranslateexpr (term (tup VS) T) K E <-\n  translate T T',\n  translateexpr_tup VS K [] T' E.\n\ntranslateexpr (term (proj I (term U T)) T') K E <-\n  translate T Tc, translate T' T'c, translatecont T Tcont,\n  translateexpr_lam (term U T) Tc\n    (fun x => eq (letk (dkproj I (valk x Tc)) (fun y => appk K [] [valk y T'c])))\n    Tcont E.\n\ntranslateexpr (term (op O E1 E2) T) K E <-\n  translatecont tint Intcont,\n  translateexpr_lam E1 tint (fun x1 =>\n    translateexpr_lam E2 tint (fun x2 =>\n      eq (letk (dkop O (valk x1 tint) (valk x2 tint))\n\t       (fun y => appk K [] [valk y tint]))) Intcont) Intcont E.\n\ntranslateexpr (term (if0 E1 E2 E3) T) K E <-\n  translatecont tint Intcont,\n  translateexpr E2 K E2',\n  translateexpr E3 K E3',\n  translateexpr_lam E1 tint (fun x =>\n   eq (if0k (valk x tint) E2' E3')) Intcont E.\n\n\n(* optimization: get rid of administrative redeces *) \n\noptkT : termk -> termk -> prop.\noptkV : valk  -> valk  -> prop.\noptkB : bvalk -> bvalk -> prop.\n\noptkV (valk U T) (valk U' T) <- optkB U U'.\n\noptkB (iconst I) (iconst I).\noptkB (fixk F)   (fixk F') <-\n  bindmany_newvars F (fun as => {prop| [TS Decls Decls']\n  (x:bvalk -> optkB x x -> \n   (bindmany_apply F  as (TS, Decls),\n    bindmany_apply F' as (TS, Decls'),\n    bindmany_newvars (Decls x) (fun xs => {prop| [Body Body']\n    bindmany_apply (Decls x) xs Body,\n    bindmany_apply (Decls' x) xs Body',\n    many_assume optkB xs xs (optkT Body Body') |}))) |}).\n\noptkB (tupk VS) (tupk VS') <-\n  map optkV VS VS'.\n\noptkT (letk D (fun x => E x)) (letk D (fun x => E' x)) <-\n  (x:bvalk -> optkB x x ->\n   optkT (E x) (E' x)).\n\noptkT (if0k V E1 E2) (if0k V' E1' E2') <-\n  optkV V V', optkT E1 E1', optkT E2 E2'.\n\noptkT (haltk T V) (haltk T V') <-\n  optkV V V'.\n  \noptkT (appk (valk (fixk F) _) TS VS) E' <-\n  bindmany_apply F TS (tuple _ (fun x => Body)),\n  map (fun a b => {prop| [T] optkV a (valk b T) |}) VS VS',\n  bindmany_apply Body VS' E,\n  optkT E E'.\n\noptkT (appk V TS VS) (appk V' TS VS') <-\n  (if eq V (valk (fixk F) _) then not(bindmany_apply F TS (_, (fun x => Body))) else success),\n  optkV V V', map optkV VS VS'.\n\n(* examples *)\n\nexample : term -> prop.\n\n\n\nexample\n  (term (app\n        (term (fix tint tint (fun f n => term (if0 (term n #_)\n                                                   (term (iconst 1) #_)\n                                                   (term (op pmult\n\t\t\t\t\t\t             (term n #_)\n\t\t\t\t\t\t\t     (term (app (term f #_)\n\t\t\t\t\t\t\t                (term (op pminus (term n #_)\n\t\t\t\t\t\t\t\t\t                 (term (iconst 1) #_))\n\t\t\t\t\t\t\t\t\t      #_)) #_)) #_)) #_)) #_)\n        (term (iconst 6) #_)) #_)\n<- useexample \"fact\".\n\nexample\n (term (lamt (fun a =>\n       term (fix (tarrow a a) #_ (fun unused1 => fun f =>\n       term (fix a            #_ (fun unused2 => fun x =>\n       term (app (term f #_) (term (app (term f #_) (term x #_)) #_)) #_)) #_)) #_)) #_)\n<- useexample \"twice\".\n\nexample\n (term (lamt (fun a =>\n       term (fix a #_ (fun unused1 => fun x => term x #_)) #_)) #_)\n<- useexample \"id\".\n\n\n\nexamplek : termk -> prop.\n\n`( define examplek (fun res => {prop| example X, typeof X T, translateprog X E, optkT E res, typeofk E |}) ).\n\n([X] examplek X, typeofk X, print \"System F ~~> \xce\xbbK\", print X) ?\n\n(* after some beautification: \nappk\n (valk \n (fixk anon1015_0.f (tuple [anon1093_1.n : tint, anon1099_2.k : tint -> void])\n  \n  if0k(n,\n     appk k [iconst 1],\n     (letk (pminus n 1)\n\t   (fun x_3.x =>\n\t\tappk f [x,\n\t\t\tlamk (tuple [anon1318_5.y : tint])\n                             (letk (pmult n y)\n\t\t\t\t   (fun x_6.z =>\n\t\t\t\t\tappk k z))])))))\n\n[iconst 6, lamk [ anon1604_0.n : tint ] (haltk tint n) ]\n*)\n\n(* TIME: about 3 hours so far *)\n\n\n(* ------------------------\n   Phase 3.\n   \xce\xbb^C (closure conversion)\n   ------------------------ *)\n\ntypc  : type.\nvalc  : type.\nbvalc : type.\ndeclc : type -> type.\ntermc : type.\n\ntint  : typc.\ntpi   : bindmany typc (list typc) -> typc.\nttup  : list typc -> typc.\ntex   : (typc -> typc) -> typc.\n\ndcval    : valc -> (bvalc -> A) -> declc A.\ndcproj   : nat -> valc -> (bvalc -> A) -> declc A.\ndcop     : prim -> valc -> valc -> (bvalc -> A) -> declc A.\ndcunpack : valc -> (typc -> bvalc -> A) -> declc A.\n\nvalc : bvalc -> typc -> valc.\n\niconst : int -> bvalc.\nfixc   : bindmany typc (tuple (list typc) (bvalc -> bindmany bvalc termc)) ->\n         bvalc.\ntupc   : list valc -> bvalc.\napptc  : valc -> typc -> bvalc.\npackc  : typc -> valc -> typc -> bvalc.\n\nletc : declc termc -> termc.\nappc : valc -> list valc -> termc.\nif0c : valc -> termc -> termc -> termc.\nhaltc : typc -> valc -> termc.\n\n(* typing *)\n\nwftypc   : typc -> unit -> prop.\ntypeofc_ : valc -> typc -> prop.\ntypeofc  : bvalc -> typc -> prop.\ntypeofc  : termc -> prop.\n\nwftypc tint unit.\nwftypc (tpi T) unit <-\n  bindmany_newvars T (fun as => {prop|\n  many_assume wftypc as US {prop| [TS US']\n  bindmany_apply T as TS,\n  map wftypc TS US' |} |}).\nwftypc (ttup TS) unit <- map wftypc TS US.\nwftypc (tex T) unit <-\n  (x:typc -> wftypc x unit -> wftypc (T x) unit).\n\n\ntypeofc_ (valc U T) T <- typeofc U T, wftypc T unit.\n\ntypeofvarc : bvalc -> typc -> prop.\n\ntypeofc X Y <- typeofvarc X Y.\ntypeofc (iconst _) tint.\ntypeofc (fixc F) (tpi T) <-\n  bindmany_newvars F (fun as => {prop| [TS Decls]\n  bindmany_apply F as (tuple TS Decls),\n  bindmany_apply T as TS,\n  refl.assume_reset (typeofc : bvalc -> typc -> prop) {prop|\n  (x:bvalc ->\n   typeofvarc x (tpi T) ->\n   bindmany_newvars (Decls x) (fun xs => {prop| [E]\n   bindmany_apply (Decls x) xs E,\n   many_assume typeofvarc xs TS\n   (typeofc E) |})) |} |}),\n  refl.assume_reset wftypc (wftypc (tpi T) unit).\n\ntypeofc (tupc VS) (ttup TS) <-\n  map typeofc_ VS TS.\n\n\ntypeofc X <- (if refl.isunif X then print \"TODO error!\" else success), failure.\ntypeofc (letc (dcval V E)) <-\n  typeofc_ V T,\n  (x:bvalc -> typeofvarc x T -> typeofc (E x)).\n\ntypeofc (letc (dcproj I V E)) <-\n  typeofc_ V (ttup TS),\n  nth TS I T,\n  (x:bvalc -> typeofvarc x T -> typeofc (E x)).\n\ntypeofc (letc (dcop P V1 V2 E)) <-\n  typeofc_ V1 tint,\n  typeofc_ V2 tint,\n  (x:bvalc -> typeofvarc x tint -> typeofc (E x)).\n\ntypeofc (letc (dcunpack V E)) <-\n  typeofc_ V (tex (fun a => T a)),\n  (a:typc -> x:bvalc ->\n   wftypc a unit -> typeofvarc x (T a) ->\n   typeofc (E a x)).\n\ntypeofc (appc V VS) <-\n  typeofc_ V (tpi (bnil TS)),\n  map typeofc_ VS TS.\n\ntypeofc (apptc V S) (tpi (Rest S)) <-\n  wftypc S unit,\n  typeofc_ V (tpi (bcons (fun a => Rest a))).\n\ntypeofc (packc T1 V (tex (fun a => T2 a))) (tex (fun a => T2 a)) <-\n  wftypc T1 unit,\n  typeofc_ V (T2 T1).\n\ntypeofc (if0c V E1 E2) <-\n  typeofc_ V tint,\n  typeofc E1, typeofc E2.\n\ntypeofc (haltc T V) <-\n  typeofc_ V T.\n\n\n\nsugarapp : valc -> list typc -> valc -> prop.\nsugarapp V [] V.\nsugarapp (valc U T0) (cons T TS) R <-\n  eq T0 (tpi (bcons (fun a => Rest a))),\n  sugarapp (valc (apptc (valc U T0) T) (tpi (Rest T))) TS R.\n\n\ntranslatec_typ : typk -> typc -> prop.\ntranslatec_typ tint tint.\ntranslatec_typ (tpi T) (tex (fun b => ttup [ tpi (T' b), b ])) <-\n  bindmany_changetype T (Ttemp : bindmany typc unit),\n  (b:typc ->\n  bindmany_newvars T (fun as =>\n  bindmany_newvars Ttemp (fun as' =>\n  many_assume translatec_typ as as' {prop| [TS TS']\n  bindmany_apply T as TS,\n  map translatec_typ TS TS',\n  bindmany_apply (T' b) as' (b :: TS') |}))).\n\ntranslatec_typ (ttup TS) (ttup TS') <-\n  map translatec_typ TS TS'.\n\n(* TIME: about +1 hour *)\n\ntranslatec_prog : termk -> termc -> prop.\ntranslatec_expr : termk -> termc -> prop.\ntranslatec_val  : valk -> valc -> prop.\ntranslatec_var  : bvalk -> bvalc -> prop.\ntranslatec_decl : declk -> (bvalk -> termk) -> declc termc -> prop.\n\ntranslatec_prog E E' <- translatec_expr E E'.\n\ntranslatec_let_aux : ( (bvalc -> termc) -> declc termc ) ->\n                     ( bvalc -> termc -> prop ) -> termc -> prop.\ntranslatec_let_aux DC Rest (letc (DC (fun x => Term' x))) <-\n  (x:bvalc -> Rest x (Term' x)).\n\ntranslatec_letunpack_aux : ( (typc -> bvalc -> termc) -> declc termc ) ->\n                     ( typc -> bvalc -> termc -> prop ) -> termc -> prop.\ntranslatec_letunpack_aux DC Rest (letc (DC (fun a x => Term' a x))) <-\n  (a:typc -> x:bvalc -> Rest a x (Term' a x)).\n\n\ntranslatec_expr (letk D E) (letc D') <- translatec_decl D E D'.\n\ntranslatec_expr (if0k V E1 E2) (if0c V' E1' E2') <-\n  translatec_val V V', translatec_expr E1 E1', translatec_expr E2 E2'.\n\ntranslatec_expr (haltk T V) (haltc T' V') <-\n  translatec_typ T T', translatec_val V V'.\n\ntranslatec_expr (appk (valk U T) SS VS) E <-\n  \n  translatec_val (valk U T) V',\n  translatec_typ T (tex (fun g => ttup [ Tcode g, g ])),\n  map translatec_typ SS SS',\n  map translatec_val VS VS',\n\n  translatec_letunpack_aux (dcunpack V') (fun g z =>\n  translatec_let_aux       (dcproj nzero (valc z (ttup [Tcode g, g]))) (fun zcode =>\n  translatec_let_aux       (dcproj (nsucc nzero) (valc z (ttup [Tcode g, g]))) (fun zenv res => {prop| [Res0]\n  \n  sugarapp (valc zcode (Tcode g)) SS' Res0,\n  eq res (appc Res0 ( (valc zenv g) :: VS' )) |}))) E.\n\n\ntranslatec_decl (dkval V) E (dcval V' (fun x => E' x)) <-\n  translatec_val V V',\n  (x:bvalk -> x':bvalc -> translatec_var x x' -> translatec_expr (E x) (E' x')).\n\ntranslatec_decl (dkproj I V) E (dcproj I V' (fun x => E' x)) <-\n  translatec_val V V',\n  (x:bvalk -> x':bvalc -> translatec_var x x' -> translatec_expr (E x) (E' x')).\n\ntranslatec_decl (dkop P V1 V2) E (dcop P V1' V2' (fun x => E' x)) <-\n  translatec_val V1 V1', translatec_val V2 V2',\n  (x:bvalk -> x':bvalc -> translatec_var x x' -> translatec_expr (E x) (E' x')).\n\n\n\ntranslatec_val (valk X T) (valc X' T') <-\n  translatec_var X X', translatec_typ T T'.\ntranslatec_val (valk (iconst I) T) (valc (iconst I) T') <-\n  translatec_typ T T'.\ntranslatec_val (valk (tupk VS) T) (valc (tupc VS') T') <-\n  map translatec_val VS VS',\n  translatec_typ T T'.\n\n\nvalfv : [A] A -> list B -> prop.\nvalfv_aux : [B] dyn -> list B -> list B -> prop.\nvalfv_avoid : [A] A -> prop.\n\nvalfv_aux Input Cur Res <-\n  caseguard Input\n    [ (dyn (fun (x : A) => (T x : B)), success,\n       {prop| (x:A -> valfv_avoid x -> generic_fold valfv_aux (dyn (T x)) Cur Res) |}),\n      (dyn (valk U S), {prop| refl.headargs U X Args, isnvar X, not(valfv_avoid X) |}, \n       {prop| eq Res ((valk U S) :: Cur) |}),\n      (_, success, {prop| generic_fold valfv_aux Input Cur Res |}) ].\n\nvalfv X Res' <-\n  valfv_aux (dyn X) [] Res, unique Res Res'.\n\n(* ------------------ fv *)\n\nfoldr_inat : (nat -> A -> B -> B -> prop) -> list A -> B -> B -> prop.\nfoldr_inat_aux : (nat -> A -> B -> B -> prop) -> nat -> list A -> B -> B -> prop.\n\nfoldr_inat_aux P N nil S S.\nfoldr_inat_aux P N (cons HD TL) S S'' <- foldr_inat_aux P (nsucc N) TL S S', P N HD S' S''.\nfoldr_inat P L S S' <- foldr_inat_aux P nzero L S S'.\n\n\ntranslatec_val (valk (fixk Fix) T)\n               (valc (packc Tenv_ (valc (tupc [ Vcode_, Venv_ ]) (ttup [ Tcode_, Tenv_ ]))  T'_) T'_) <-\n\n  valfv (fixk Fix) (YS : list valk),\n  fv (fixk Fix) (BS : list typk),\n\n  map (fun yi si => {prop| [Ui] eq yi (valk Ui si) |}) YS SS,\n  map (fun yi si => {prop| [Ui] eq yi (valk si Ui) |}) YS YSvars,\n\n\n  bindmany_changetype Fix (FixAS : bindmany typc unit),\n  bindmany_fromlist BS (BStemp : bindmany typc unit),\n  map translatec_val YS YS'closure,\n\n  (* Tenv_    *) translatec_typ (ttup SS) Tenv_ ,\n  (* T'_      *) translatec_typ T T'_ ,\n  (* Trawcode *) eq Trawcode (tpi Trawcode0),\n  (* Vcode    *) eq Vcode    (valc (fixc Vcode0) Trawcode),\n  (* Vcode_   *) map translatec_typ BS BS',\n                 sugarapp Vcode BS' Vcode_ ,\n  (* Tcode_   *) eq Vcode_   (valc _ Tcode_),\n  (* Venv_    *) eq Venv_    (valc (tupc YS'closure) Tenv_),\n\n\n  refl.assume_reset translatec_typ (\n\n  bindmany_newvars Fix (fun as => {prop| [TS FixFun]\n  bindmany_newvars BStemp (fun bs' => {prop| [Tcode]\n  bindmany_newvars FixAS (fun as' =>\n\n  many_assume translatec_typ BS bs' (\n  many_assume translatec_typ as as' {prop| \n                                     [TS' FixFun' Fix'Params BS'AS' T' Tenv]\n\n  (* T        *) translatec_typ T T',\n  (* Tenv     *) translatec_typ (ttup SS) Tenv,\n  \n  bindmany_apply Fix as (TS, (fun x => FixFun x)),\n\n  map translatec_typ TS TS',\n \n  append bs' as' BS'AS',\n  bindmany_apply Trawcode0 BS'AS' (Tenv :: TS'),\n\n  bindmany_apply Vcode0 BS'AS' ( Tenv :: TS', (fun zcode => FixFun' zcode) ),\n\n  (x:bvalk -> zcode:bvalc ->\n   \n  (bindmany_changetype (FixFun x) (Fix'Params : bindmany bvalc unit),\n  bindmany_newvars (FixFun x) (fun xs => {prop|\n\n  (zenv:bvalc ->\n  bindmany_newvars Fix'Params (fun xs' =>\n  \n  refl.assume_reset translatec_var (\n  many_assume translatec_var xs xs' ( {prop| [FixBody FixBody'\n\t                                      ZcodeInst ZenvVal ZUnused]\n  \n  bindmany_apply (FixFun x) xs FixBody,\n  bindmany_apply (FixFun' zcode) (zenv :: xs') FixBody',\n\n  sugarapp (valc zcode Trawcode) bs' ZcodeInst,\n  eq ZcodeInst (valc ZUnused Tcode),\n  eq ZenvVal (valc zenv Tenv),\t \n\n  translatec_let_aux\n          (dcval (valc (packc Tenv\n\t    (valc (tupc [ ZcodeInst, ZenvVal ])\n\t          (ttup [ Tcode, Tenv ]))\n\t    T') T'))\n  (fun x' e' => {prop| [LetYS](translatec_var x x' ->\n\n    (foldr_inat\n        (fun idx yi cur =>\n\t eq (translatec_let_aux (dcproj idx ZenvVal) (fun yi' ei => {prop| (translatec_var yi yi' -> cur ei) |})))\n        YSvars\n        (translatec_expr FixBody)\n        LetYS,\n    LetYS e')) |}\n\n  ) FixBody' |} )))) |} ) )) |})) |}) |})).\n\n\n(* time: about +2 hours *)\n(* debugging: +1 hour (problem in valfv, boxed types not handled right)  *)\n\nexamplec : termc -> prop.\n\n`( define examplec (fun res => {prop| examplek E, translatec_prog E res |}) ).\n\n\nerasetypes : [A] A -> A -> prop.\nerasetypes (X : typc) (X : typc).\nerasetypes (dcval X Y) (dcval X' Y') <- erasetypes X X', (x:bvalc -> erasetypes (Y x) (Y' x)).\nerasetypes (dcproj I V Y) (dcproj I V' Y') <- erasetypes V V', (x:bvalc -> erasetypes (Y x) (Y' x)).\nerasetypes (dcop P V1 V2 Y) (dcop P V1' V2' Y') <- erasetypes V1 V1', erasetypes V2 V2', (x:bvalc -> erasetypes (Y x) (Y' x)).\nerasetypes (dcunpack V Y) (dcunpack V' Y') <- erasetypes V V', (a:typc -> x:bvalc -> erasetypes (Y a x) (Y' a x)).\n\nv : bvalc -> valc.\nerasetypes (valc E _) (v E') <- erasetypes E E'.\nerasetypes (iconst I) (iconst I).\nerasetypes (fixc ES) (fixc ES') <-\n  bindmany_newvars ES (fun as => {prop| [TS Decls Decls']\n  bindmany_apply ES  as (TS, Decls),\n  bindmany_apply ES' as (TS, Decls'),\n  (x:bvalc -> bindmany_newvars (Decls x) (fun xs => {prop| [Body Body']\n  bindmany_apply (Decls x) xs Body,\n  bindmany_apply (Decls' x) xs Body',\n  erasetypes Body Body' |})) |}).\nerasetypes (tupc ES) (tupc ES') <- map erasetypes ES ES'.\nerasetypes (apptc E T) (apptc E' T) <- erasetypes E E'.\nerasetypes (packc T E T') (packc T E' T') <- erasetypes E E'.\nerasetypes (letc E) (letc E') <- erasetypes E E'.\nerasetypes (appc E ES) (appc E' ES') <- map erasetypes (E :: ES) (E' :: ES').\nerasetypes (if0c V E E') (if0c V' E2 E2') <- erasetypes V V', map erasetypes [E,E'] [E2,E2'].\nerasetypes (haltc T E) (haltc T E') <- erasetypes E E'.\nerasetypes (X : bvalc) X <- newnmeta (fun x => eq x X).\n\n([R R']examplec R, erasetypes R R', print R') ?\n\n\n(* %debug+. *)\n([R]examplec R, typeofc R, print \"\xce\xbbK ~~> \xce\xbbC\", print R) ?\n(* %debug-. *)\n\n\n(* unfortunately twice doesn't work as expected -- the problem seems to be that no\n   tail call optimization as called in the paper is done. *)\n\n(* ------------------------\n   Phase 4.\n   \xce\xbb^H (hoisting)\n   ------------------------ *)\n\ntyph  : type.\nvalh  : type.\nbvalh : type.\ndeclh : type -> type.\ntermh : type.\nhvalh : type.\nprogh : type.\n\ntint  : typh.\ntpi   : bindmany typh (list typh) -> typh.\nttup  : list typh -> typh.\ntex   : (typh -> typh) -> typh.\n\ndhval    : valh -> (bvalh -> A) -> declh A.\ndhproj   : nat -> valh -> (bvalh -> A) -> declh A.\ndhop     : prim -> valh -> valh -> (bvalh -> A) -> declh A.\ndhunpack : valh -> (typh -> bvalh -> A) -> declh A.\n\nvalh : bvalh -> typh -> valh.\n\niconst : int -> bvalh.\ntuph   : list valh -> bvalh.\nappth  : valh -> typh -> bvalh.\npackh  : typh -> valh -> typh -> bvalh.\n\nleth : declh termh -> termh.\napph : valh -> list valh -> termh.\nif0h : valh -> termh -> termh -> termh.\nhalth : typh -> valh -> termh.\n\ncodeh : bindmany typh (tuple (list typh) (bvalh -> bindmany bvalh termh)) -> hvalh.\n\nletrech : bindmutrec bvalh hvalh -> bindmany bvalh termh -> progh.\n\n(* typing *)\n\nwftyph   : typh -> unit -> prop.\ntypeofh_ : valh -> typh -> prop.\ntypeofh  : bvalh -> typh -> prop.\ntypeofh  : termh -> prop.\ntypeofhvalh : hvalh -> typh -> prop.\ntypeofprogh : progh -> prop.\n\nwftyph tint unit.\nwftyph (tpi T) unit <-\n  bindmany_newvars T (fun as => {prop|\n  many_assume wftyph as US {prop| [TS US']\n  bindmany_apply T as TS,\n  map wftyph TS US' |} |}).\nwftyph (ttup TS) unit <- map wftyph TS US.\nwftyph (tex T) unit <-\n  (x:typh -> wftyph x unit -> wftyph (T x) unit).\n\n\ntypeofh_ (valh U T) T <-  typeofh U T, wftyph T unit.\ntypeofh (iconst _) tint.\n\ntypeofhvalh (codeh F) (tpi T) <-\n  bindmany_newvars F (fun as => {prop| [TS Decls]\n  bindmany_apply F as (tuple TS Decls),\n  bindmany_apply T as TS,\n  (x:bvalh ->\n   typeofh x (tpi T) ->\n   bindmany_newvars (Decls x) (fun xs => {prop| [E]\n   bindmany_apply (Decls x) xs E,\n   many_assume typeofh xs TS\n   (typeofh E) |})) |}),\n  wftyph (tpi T) unit.\n\ntypeofh (tuph VS) (ttup TS) <-\n  map typeofh_ VS TS.\n\ntypeofh (leth (dhval V E)) <-\n  typeofh_ V T,\n  (x:bvalh -> typeofh x T -> typeofh (E x)).\n\ntypeofh (leth (dhproj I V E)) <-\n  typeofh_ V (ttup TS),\n  nth TS I T,\n  (x:bvalh -> typeofh x T -> typeofh (E x)).\n\ntypeofh (leth (dhop P V1 V2 E)) <-\n  typeofh_ V1 tint,\n  typeofh_ V2 tint,\n  (x:bvalh -> typeofh x tint -> typeofh (E x)).\n\ntypeofh (leth (dhunpack V E)) <-\n  typeofh_ V (tex (fun a => T a)),\n  (a:typh -> x:bvalh ->\n   wftyph a unit -> typeofh x (T a) ->\n   typeofh (E a x)).\n\ntypeofh (apph V VS) <-\n  typeofh_ V (tpi (bnil TS)),\n  map typeofh_ VS TS.\n\ntypeofh (appth V S) (tpi (Rest S)) <-\n  wftyph S unit,\n  typeofh_ V (tpi (bcons (fun a => Rest a))).\n\ntypeofh (packh T1 V (tex (fun a => T2 a))) (tex (fun a => T2 a)) <-\n  wftyph T1 unit,\n  typeofh_ V (T2 T1).\n\ntypeofh (if0h V E1 E2) <-\n  typeofh_ V tint,\n  typeofh E1, typeofh E2.\n\ntypeofh (halth T V) <-\n  typeofh_ V T.\n\ntypeofprogh (letrech DeclHS DeclE) <-\n\n  bindmutrec_newvars DeclHS (fun xs =>\n  many_assume typeofh xs TS {prop| [HS E]\n  \n  bindmutrec_apply DeclHS xs HS,\n  map typeofhvalh HS TS,\n  bindmany_apply DeclE xs E,\n  typeofh E\n\n  |}),\n  map wftyph TS US.\n");V("/./examples/big/veriml.makam","%use utils.\n%use bindutils.\n%use generic.\n\n\n(* Load \xce\xbbHOL. \"import\" means that types/terms of hol must be used with their qualified names. *)\n%import hol.\n\n(* Load OCaml. \"use\" means that types/terms of ocaml should not be qualified. this\n               makes sense since VeriML is essentially an OCaml extension. *)\n%use ocaml.\n\n(* Contextual types as in VeriML/Beluga. The presentation follows as much as possible\n   my dissertation titled \"VeriML: A dependently-typed, user-extensible and language-centric\n   approach to proof assistants.\"\n\n   The main departures are:\n   - context variables can only appear at the head of a context\n   - contexts and substitutions are formed through cons-like cells rather than snoc-like\n     cells (which is what the dissertation uses) *)\n\n(* Contextual variables, expressions and types *)\n\ncvar  : type. (* contextual variable is either a metavariable or a context variable *)\nsvar  : type. (* a substitution variable represents the identity substitution of a context variable *)\ncexpr : type. (* contextual expressions are either contextual terms (what metavariables stand for)\n\t\t                                or contexts (what context variables stand for) *)\nctype : type. (* contextual type is either a contextual term (classifying a contextual term) [this is due to PTS-style presentation of \xce\xbbHOL,\n\t\t                                                                              where pseudoterms of different sorts are collapsed]\n\t\t                        or a well-formedness sort (classifying a context) *)\n\nsubst : type.           (* explicit substitution *)\nctx   : type -> type.   (* context type constructor. is to be interpreted as a telescope (potentially with context variables) with a body\n\t                   of type A *)\n\ncterm : ctx hol.term -> cexpr.   (* contextual term     T := [\xce\xa6]t *)\ncctx  : ctx unit -> cexpr.       (* contextual context  T := \xce\xa6.\n                                    encoded as [\xce\xa6]() *)\n\nctype  : ctx hol.term -> ctype.  (* contextual type            K := [\xce\xa6]t *)\ncctxwf : ctype.                  (* contextual well-formedness K := wf *)\n\nmvar  : cvar -> subst -> hol.term.  (* the X/\xcf\x83 term constructor; a metavariable used together with an explicit substitution, transporting\n\t\t\t               variables of the contextual term's context into the currently valid context *)\n\n(* explicit substitutions *)\nsubstconcrete : list hol.term -> subst.           (* \xcf\x83 := t\xe2\x82\x80, t\xe2\x82\x81, t\xe2\x82\x82, ... *)\nsubstparam    : svar -> list hol.term -> subst.   (* \xcf\x83 := id_\xcf\x86, t\xe2\x82\x80, t\xe2\x82\x81, t\xe2\x82\x82, ... *)\n\n(* contexts *)\nctxconcrete : listbindmany hol.term hol.term A -> ctx A.                   (* \xce\xa6 := (\xe2\x80\x93 : t\xe2\x82\x80) x\xe2\x82\x80. (\xe2\x80\x93 : t\xe2\x82\x81) x\xe2\x82\x81. ... a *)\n                                                                           (* this essentially means:\n                                                                              \xce\xa6 := (x\xe2\x82\x80 : t\xe2\x82\x80). (x\xe2\x82\x81 : t\xe2\x82\x81). ... a *)\nctxparam    : cvar -> (svar -> listbindmany hol.term hol.term A) -> ctx A. (* \xce\xa6 := (\xe2\x80\x93 : \xcf\x86) id_\xcf\x86. (\xe2\x80\x93 : t\xe2\x82\x80) x\xe2\x82\x80. ... a *)\n\n\n(* Typing judgements *)\nctxofsubst_var : svar -> cvar -> prop.            (* \xe2\x8a\xa2 id_\xcf\x86 : [\xcf\x86]() *)\nctxofsubst     : subst -> ctx A -> prop.      (* \xe2\x8a\xa2 \xcf\x83 : \xce\xa6    \xe2\x80\x93 actually \xe2\x8a\xa2 \xcf\x83 : () *)\nctypeof_var    : cvar -> ctype -> prop.           (* \xe2\x8a\xa2 X : K *)\nctypeof        : cexpr -> ctype -> prop.          (* \xe2\x8a\xa2 T : K *)\n\n(* \xe2\x8a\xa2 \xe2\x80\xa2 : \xe2\x80\xa2 *)\nctxofsubst (substconcrete nil) (ctxconcrete (lbnil _)).\n\n(* \xe2\x8a\xa2 t : t'\n   \xe2\x8a\xa2 \xcf\x83 : \xce\xa6[t/x]\n   \xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\n   \xe2\x8a\xa2 (t, \xcf\x83) : (\xe2\x80\x93 : t') x.\xce\xa6\n*)\nctxofsubst (substconcrete (cons HD TL)) (ctxconcrete (lbcons HDt Rest)) <-\n  hol.tmof HD HDt,\n  ctxofsubst (substconcrete TL) (ctxconcrete (Rest HD)).\n\n(* \xe2\x8a\xa2 \xcf\x86 wf\n   \xe2\x8a\xa2 id_\xcf\x86 : \xcf\x86\n   \xe2\x8a\xa2 \xce\xa6[id_\xcf\x86 / \xcf\x82]\n   \xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\xe2\x80\x94\n   \xe2\x8a\xa2 (id_\xcf\x86, \xcf\x83) : (\xe2\x80\x93 : \xcf\x86) \xcf\x82.\xce\xa6\n*)\nctxofsubst (substparam ID_Phi TL) (ctxparam Phi Rest) <-\n  ctypeof_var Phi cctxwf,\n  ctxofsubst_var ID_Phi Phi,\n  ctxofsubst (substconcrete TL) (ctxconcrete (Rest ID_Phi)).\n\n(* Context manipulation functions *)\n\n(* ctx_open ([\xce\xa6]a) P\n     introduces fresh variables for the ones bound in \xce\xa6\n     produces the identity substitution for \xce\xa6 based on these fresh variables\n     and runs P with that identity substitution *)\n\nctx_open : ctx A -> (subst -> prop) -> prop.\nctx_open (ctxconcrete Phi) F <-\n  listbindmany_newvars Phi (fun vars => {prop| [Typs]\n   listbindmany_getinfo Phi vars Typs,\n   many_assume hol.tmof vars Typs (F (substconcrete vars)) |}).\nctx_open (ctxparam Phi Rest) F <-\n  (id_phi:svar -> ctxofsubst_var id_phi Phi ->\n   listbindmany_newvars (Rest id_phi) (fun vars => {prop| [Typs]\n     listbindmany_getinfo (Rest id_phi) vars Typs,\n     many_assume hol.tmof vars Typs (F (substparam id_phi vars)) |})).\n\n(* ctx_body ([\xce\xa6]a) \xcf\x83 a\n     given an explicit substitution for \xce\xa6,\n     return the body of the contextual term *)\n\nctx_body : ctx A -> subst -> A -> prop.\nctx_body (ctxconcrete PhiA) (substconcrete Sigma) A <-\n   listbindmany_apply PhiA Sigma A.\nctx_body (ctxparam Phi Rest) (substparam IDPhi RestSigma) A <-\n   listbindmany_apply (Rest IDPhi) RestSigma A.\n\n(* ctx_get ([\xce\xa6]a) id{\xce\xa6} ([\xce\xa6]())\n     removes the body of the context, useful for testing contexts for equality *)\nctx_get : ctx A -> subst -> ctx unit -> prop.\nctx_get (ctxconcrete (lbnil _)) (substconcrete nil) (ctxconcrete (lbnil unit)).\nctx_get (ctxconcrete (lbcons HDt Rest)) (substconcrete (cons HD TL))\n        (ctxconcrete (lbcons HDt Rest')) <-\n  ctx_get (ctxconcrete (Rest HD)) (substconcrete TL) (ctxconcrete (Rest' HD)).\nctx_get (ctxparam Phi Rest) (substparam IDphi Sigma')\n        (ctxparam Phi Rest') <-\n  ctx_get (ctxconcrete (Rest IDphi)) (substconcrete Sigma') (ctxconcrete (Rest' IDphi)).\n\n\nctx_get_partial : ctx A -> subst -> ctx unit -> ctx A -> prop.\nctx_get_partial A (substconcrete nil) (ctxconcrete (lbnil unit)) A.\nctx_get_partial (ctxconcrete (lbcons HDt Rest)) (substconcrete (cons HD TL))\n        (ctxconcrete (lbcons HDt Rest')) RestEnd <-\n  ctx_get_partial (ctxconcrete (Rest HD)) (substconcrete TL) (ctxconcrete (Rest' HD)) RestEnd.\nctx_get_partial (ctxparam Phi Rest) (substparam IDphi Sigma')\n        (ctxparam Phi Rest') RestEnd <-\n  ctx_get_partial (ctxconcrete (Rest IDphi)) (substconcrete Sigma') (ctxconcrete (Rest' IDphi)) RestEnd.\n\n(* ctx_append ([\xce\xa6]a) ([\xce\xa6']b) ([\xce\xa6, \xce\xa6']b) *)\nctx_append : ctx A -> listbindmany hol.term hol.term B -> ctx B -> prop.\nctx_append (ctxconcrete L) L' (ctxconcrete L'') <-\n  listbindmany_append L L' L''.\nctx_append (ctxparam Phi L) L' (ctxparam Phi L'') <-\n  (id_phi:svar -> listbindmany_append (L id_phi) L' (L'' id_phi)).\n\n\nsubst_append : subst -> list hol.term -> subst -> prop.\nsubst_append (substconcrete L) L' (substconcrete L'') <-\n  append L L' L''.\nsubst_append (substparam IDPhi L) L' (substparam IDPhi L'') <-\n  append L L' L''.\n\n(* Actual contextual judgements *)\n\nctypeof (cterm CtxT) (ctype CtxT') <-\n  ctx_open CtxT (fun (idCtx : subst) =>  {prop| [Ctx T T']\n  ctx_get CtxT  idCtx Ctx,\n  ctx_get CtxT' idCtx Ctx,\n  ctx_body CtxT idCtx T,\n  ctx_body CtxT' idCtx T',\n  hol.tmof T T' |}).\n\nctypeof (cctx (ctxconcrete (lbnil _))) cctxwf.\nctypeof (cctx (ctxconcrete (lbcons HD TL))) cctxwf <-\n  hol.tmof HD (hol.sort S),\n  (x:hol.term -> hol.tmof x HD -> ctypeof (cctx (ctxconcrete (TL x))) cctxwf).\nctypeof (cctx (ctxparam Phi Rest)) cctxwf <-\n  ctypeof_var Phi cctxwf,\n  (id_phi : svar -> ctxofsubst_var id_phi Phi ->\n     ctypeof (cctx (ctxconcrete (Rest id_phi))) cctxwf).\n  \n(* Now for the difficult part: substitution for\n   contextual variables. *)\n\ncvar_subst_aux   : cvar -> cexpr -> dyn -> dyn -> prop.\nsvar_subst_aux   : svar -> subst -> dyn -> dyn -> prop.\n\ncvar_subst       : (cvar -> A) -> cexpr -> A -> prop.\nsvar_subst       : (svar -> A) -> subst -> A -> prop.\n\nsvar_subst_aux Var What (dyn Tin) (dyn Tout) <-\n  defcase (dyn Tin)\n     (structural (svar_subst_aux Var What) (dyn Tin) (dyn Tout))\n     [ (dyn (substparam Var Rest), {prop|\n\tsvar_subst_aux Var What (dyn Rest) (dyn Rest'),\n\tsubst_append What Rest' Result,\n\tdyneq Result Tout |}) ].\n\ncvar_subst_aux Var What (dyn Tin) (dyn Tout) <-\n  defcase (dyn Tin)\n     (structural (cvar_subst_aux Var What) (dyn Tin) (dyn Tout))\n     [ (dyn (mvar Var Sigma),\n\t  {prop| cvar_subst_aux Var What (dyn Sigma) (dyn Sigma'),\n\t         eq What (cterm PhiT),\n\t         ctx_body PhiT Sigma' T',\n\t         dyneq Tout T' |}),\n       (dyn (ctxparam Var Rest),\n\t  {prop| eq What (cctx PhiA),\n\t         ctx_open PhiA (fun sigma => {prop| [Rest' Phi Rest'']\n\t         svar_subst Rest sigma Rest',\n\n\t         listbindmany_newvars Rest' (fun sigma' => {prop| [Sigma'' Body PhiRest]\n\t\t subst_append sigma sigma' Sigma'',\n\n\t\t ctx_body (ctxconcrete Rest') (substconcrete sigma') Body,\n\t\t ctx_body Phi'A' Sigma'' Body,\n\n\t         ctx_get PhiA sigma Phi,\n\t         ctx_get (ctxconcrete Rest') (substconcrete sigma') PhiRest,\n\n\t\t ctx_get_partial Phi'A' sigma Phi Rest'',\n\t\t ctx_get         Rest'' (substconcrete sigma') PhiRest,\n\n\t         dyneq Tout Phi'A' |}) |}) |}) ].\n\ncvar_subst F What Res <- (x:cvar -> structural (cvar_subst_aux x What) (dyn (F x)) (dyn Res)).\nsvar_subst F What Res <- (x:svar -> structural (svar_subst_aux x What) (dyn (F x)) (dyn Res)).\n\n(* We are ready to add contextual terms to \xce\xbbHOL. *)\n\nhol.tmof (mvar X Sigma) T' <-\n  ctypeof_var X (ctype PhiT),\n  ctxofsubst Sigma PhiT,\n  ctx_body PhiT Sigma T'.\n\ncwftype : ctype -> prop.\ncwftype (ctype PhiT) <-\n  ctx_open PhiT (fun idPhi => {prop| [Phi T]\n    ctx_get PhiT idPhi Phi,\n    ctx_get PhiS idPhi Phi,\n    ctx_body PhiT idPhi T,\n    ctx_body PhiS idPhi (hol.sort S),\n    hol.tmof T (hol.sort S) |}).\ncwftype cctxwf.\n\n\n(* ---------------------------------- *)\n(* VeriML constructs extending OCaml. *)\n\npihol  : ctype -> (cvar -> typ) -> typ.\nsighol : ctype -> (cvar -> typ) -> typ.\n\nlamhol    : ctype -> (cvar -> term) -> term.\napphol    : term -> cexpr -> term.\npackhol   : cexpr -> term -> typ -> term.\nunpackhol : term -> (cvar -> term -> term) -> term.\n\nvalrestr (lamhol _ _).\nvalrestr (packhol _ _ _).\n\nphol      : cexpr -> patt -> patt.\n\nkindof (pihol T F) ktype <-\n  guard T (cwftype T),\n  (x:cvar -> ctypeof_var x T -> kindof (F x) ktype).\n\nkindof (sighol T F) ktype <-\n  guard T (cwftype T),\n  (x:cvar -> ctypeof_var x T -> kindof (F x) ktype).\n\n\ntypeof (lamhol T EF) (pihol T TF) <-\n  guard T (cwftype T),\n  (x:cvar -> ctypeof_var x T -> typeof (EF x) (TF x)).\n\ntypeof (apphol E CT) T' <-\n  typeof E (pihol CTt TF),\n  cvar_subst TF CT T',\n  ctypeof CT CTt.\n\ntypeof (packhol CT E Et) Et <-\n  eq Et (sighol CTt Tf),\n  ctypeof CT CTt,\n  cvar_subst Tf CT T',\n  typeof E T',\n  guard CTt (kindof Et ktype).\n\ntypeof (unpackhol E EF) T' <-\n  typeof E (sighol Tt TF),\n  (u:cvar -> x:term ->\n   ctypeof_var u Tt ->\n   typeof x (TF u) ->\n   typeof (EF u x) T').\n\n\n\n(* ------------------ *)\n(* HOL pattern typing *)\n\nctypeof_patt : cexpr -> ctype -> prop.\n\nctx_id_subst   : subst -> prop.\n \nmodify_id_subst : (subst -> subst -> prop) -> prop -> prop.\nmodify_id_subst Mod Next <-\n  ctx_id_subst Cur, Mod Cur Cur',\n  refl.assume_reset ctx_id_subst {prop| (ctx_id_subst Cur' -> Next) |}.\n\nsubst_snoc : hol.term -> subst -> subst -> prop.\nsubst_snoc X S S' <- subst_append S [X] S'.\n\nsubst_prefix : subst -> subst -> prop.\nsubst_prefix S S' <- subst_append S _ S'.\n\ncpatt_unif_var : cvar -> prop.\nsubst_wf_patt  : subst -> prop.\n\n%extend hol.\n\nwf_patt    : term -> prop.\nwellsorted_patt : term -> prop.\n\nwellsorted_patt X <-\n  tmof X T, tmof T (sort S), not(eq S sprop).\n\nwf_patt X <-\n   newvmeta (fun x => eq x X),\n   wellsorted_patt X.\n\nwf_patt (sort _).\n\nwf_patt (pi S T1 T2) <-\n   wf_patt T1,\n   (x:term -> tmof x T1 -> modify_id_subst (subst_snoc x) (wf_patt (T2 x)) ).\n\nwf_patt (lam T E) <- \n   wellsorted_patt (lam T E),\n   (x:term -> tmof x T -> modify_id_subst (subst_snoc x) (wf_patt (E x))).\n\nwf_patt (app E1 K E2) <-\n   tmof (app E1 K E2) _, tmof K (sort S), not(eq S sprop),\n   wf_patt E1,\n   wf_patt E2.\n\nwf_patt (eqp T1 T2) <-\n   tmof T1 T',\n   tmof T' (sort stype),\n   wf_patt T1,\n   wf_patt T2.\n\nwf_patt (mvar X Sigma) <-\n   not(cpatt_unif_var X),\n   wellsorted_patt (mvar X Sigma),\n   subst_wf_patt Sigma.\n\n\nwf_patt (mvar X Sigma) <-\n   cpatt_unif_var X,\n   ctypeof_var X (ctype CtxT),\n   bindrel_wf X,\n\n   ctx_open CtxT (fun idPhi => {prop| [T']\n      ctx_body CtxT idPhi T',\n      tmof T' (sort S),\n      not(eq S sprop) |}),\n\n   ctx_id_subst CurSigma,\n   subst_prefix Sigma CurSigma.\n\n%end.\n\nsubst_wf_patt (substconcrete L) <- map0 hol.wf_patt L.\nsubst_wf_patt (substparam _ L)  <- map0 hol.wf_patt L.\n\nctypeof_patt (cterm CtxT) (ctype CtxT') <-\n  \n   ctypeof (cterm CtxT) (ctype CtxT'),\n   ctx_open CtxT (fun idCtx => {prop| [T]\n    ctx_body CtxT idCtx T,\n    (ctx_id_subst idCtx -> hol.wf_patt T) |}).\n\n(ctypeof_patt (cctx CtxU) (cctxwf)) when eq CtxU (ctxparam Phi (fun idPhi => lbcons (T idPhi) (fun x => lbnil unit))) <-\n\n   ctypeof (cctx CtxU) (cctxwf),\n   ctx_open (ctxparam Phi (fun idPhi => lbnil unit)) (fun idCtx => {prop| [IdPhi]\n   eq idCtx (substparam IdPhi []),\n   (ctx_id_subst idCtx -> hol.wf_patt (T IdPhi)) |}).\n\nctypeof_patt (cctx (ctxconcrete (lbnil unit))) (cctxwf).\n\n\nnf_ (sighol T TF) (sighol T TF') <- (x:cvar -> nf_ (TF x) (TF' x)).\nnf_ (pihol T TF)  (pihol  T TF') <- (x:cvar -> nf_ (TF x) (TF' x)).\n\n\n(* ------------------------- *)\n(* VeriML dependent matching *)\n\nmatchhol : cexpr -> (cvar -> typ) -> list (bindrel (tuple cexpr term)) -> term.\n\ndynamic_assumption (dyn (X : cvar)) [ cpatt_unif_var X, ctypeof_var X CT ] [ ctypeof_var X CT ].\n\ndepbranch_wf : ctype -> (cvar -> typ) -> bindrel (tuple cexpr term) -> prop.\ndepbranch_wf CT RetT Branch <-\n  bindrel_newvars Branch (fun unifs => {prop| [Patt Body PattAssume BodyAssume ExpT]\n   bindrel_apply Branch unifs (Patt, Body),\n   dynamic_assumptions unifs PattAssume BodyAssume,\n   assumemany PattAssume (ctypeof_patt Patt CT),\n   cvar_subst RetT Patt ExpT,\n   assumemany BodyAssume (typeof Body ExpT) |}).\n\ntypeof (matchhol CT RetT Branches) Tsubst <-\n  ctypeof CT CT',\n  (x:cvar -> ctypeof_var x CT' -> kindof (RetT x) ktype),\n  cvar_subst RetT CT Tsubst,\n  map0 (depbranch_wf CT' RetT) Branches.\n\n");V("/./examples/big/testveriml.makam","%use veriml.\n\ntypeof (lamhol cctxwf (fun phi =>\n        lamhol (ctype (ctxparam phi (fun idphi => lbnil (hol.sort hol.stype)))) (fun T =>\n        lamhol (ctype (ctxparam phi (fun idphi => lbnil (mvar T (substparam idphi nil))))) (fun t =>\n        tuple [ packhol\n                   (cterm (ctxparam phi (fun idphi => lbnil (hol.refl (mvar t (substparam idphi nil))))))\n\t\t   (construn \"Unit\")\n\t\t   #TYP,\n\t\tintconst 5 ])))) X ?\n\n(* matchhyp tactic:\n   \xce\xbb\xcf\x86.\xce\xbbH : [\xcf\x86]Prop.\xce\xbbH' : [\xcf\x86]Prop.\xce\xbbx : [\xcf\x86]H.\n   holapp\n   (holmatch H return H.(\xce\xa0x:H.option <[\xcf\x86]H'>) with\n\t[\xcf\x86]H'/id_\xcf\x86 |-> \xce\xbbx.some < x >\n      | [\xcf\x86]H''/id_\xcf\x86 |-> \xce\xbbx.none) x *)\n\ntypeof \n    (lamhol cctxwf (fun phi =>\n    (lamhol (ctype (ctxparam phi (fun idphi => lbnil (hol.sort hol.sprop)))) (fun H =>\n    (lamhol (ctype (ctxparam phi (fun idphi => lbnil (hol.sort hol.sprop)))) (fun H' =>\n    (lamhol (ctype (ctxparam phi (fun idphi => lbnil (mvar H (substparam idphi nil))))) (fun pf =>\n    (apphol\n       (matchhol (cterm (ctxparam phi (fun idphi => lbnil (mvar H (substparam idphi nil)))))\n\t(fun H'' => pihol (ctype (ctxparam phi (fun idphi => lbnil (mvar H'' (substparam idphi nil))))) (fun x => tbase \"option\" [ sighol (ctype (ctxparam phi (fun idphi => lbnil (mvar H' (substparam idphi nil))))) (fun hh => tbase \"unit\" []) ]))\n\n       [  bindrel (bnil (\n\t    (cterm (ctxparam phi (fun idphi => lbnil (mvar H' (substparam idphi []))))),\n\t    (lamhol (ctype (ctxparam phi (fun idphi => lbnil (mvar H' (substparam idphi []))))) (fun pf' =>\n\t    (constr \"Some\" (packhol (cterm (ctxparam phi (fun idphi => lbnil (mvar pf' (substparam idphi []))))) (construn \"Unit\") #_)\n\t    ))))),\n\t  bindrel (bcons (fun h'' => bnil (\n\t    (cterm (ctxparam phi (fun idphi => lbnil (mvar h'' (substparam idphi []))))),\n\t    (lamhol (ctype (ctxparam phi (fun idphi => lbnil (mvar h'' (substparam idphi []))))) (fun pf' =>\n\t    (construn \"None\")))))) ])\n\n     (cterm (ctxparam phi (fun idphi => lbnil (mvar pf (substparam idphi nil))))) ))))))))) X ?\n\n\n\n(* the following is the --very useful-- tactic:\n\n   letrec auto \xcf\x86 (P : [\xcf\x86]Prop) =\n\tholmatch P return P.< [\xcf\x86]P > with\n\t   \xe2\x88\x80x:T/id_\xcf\x86.P'/[id_\xcf\x86, x] |-> unpack < pf, _ > = auto [\xcf\x86, x] [\xcf\x86, x]P'/[id_\xcf\x86, x] in\n\t                               < [\xcf\x86]\xce\xbbx:T.pf/[id_\xcf\x86, x], () >\n\t| P\xe2\x82\x81/id_\xcf\x86 -> P\xe2\x82\x82/id_\xcf\x86 |-> unpack < pf, _ > = auto [\xcf\x86, x] [\xcf\x86, x]P'/[id_\xcf\x86] in\n\t                          < [\xcf\x86]\xce\xbbx:P1.pf/[id_\xcf\x86, x], () >\n        | True |-> < [\xcf\x86]triv, () >\n*)\n\n(* %trace+ typeof. *)\n\ntypeof\n  (letrec (bindmutrec (bcons (fun auto => bnil [\n\tlamhol cctxwf (fun phi =>\n        lamhol (ctype (ctxparam phi (fun idphi => lbnil (hol.sort hol.sprop)))) (fun P =>\n\n\tmatchhol (cterm (ctxparam phi (fun idphi => lbnil (mvar P (substparam idphi nil)))))\n\t(fun P' => sighol (ctype (ctxparam phi (fun idphi => lbnil (mvar P' (substparam idphi nil))))) (fun x => tbase \"unit\" []))\n\t[bindrel (bcons (fun T => bcons (fun Body => bnil (\n\t   (cterm (ctxparam phi (fun idphi => lbnil (\n            hol.pi hol.stype (mvar T (substparam idphi []))\n\t\t   (fun x => mvar Body (substparam idphi [x])))))),\n\n           unpackhol (apphol (apphol auto (cctx\n\t\t                            (ctxparam phi (fun idphi => lbcons (mvar T (substparam idphi nil)) (fun x => lbnil unit))))\n\t\t\t     ) (cterm (ctxparam phi (fun idphi => lbcons (mvar T (substparam idphi nil)) (fun x =>\n\t\t\t\t  lbnil (mvar Body (substparam idphi [x])))))))\n\t\t     (fun pf u =>\n\t\t      packhol (cterm (ctxparam phi (fun idphi => lbnil (\n\t\t\t       hol.lam #_ (fun x => mvar pf (substparam idphi [x]) )))))\n\t\t              (construn \"Unit\")\n\t\t\t      #_\n\t\t\t      ))))),\n\n\n\t  bindrel (bcons (fun P1 => bcons (fun P2 => bnil (\n\t   (cterm (ctxparam phi (fun idphi => lbnil (\n            hol.pi hol.sprop (mvar P1 (substparam idphi []))\n\t\t   (fun x => mvar P2 (substparam idphi [])))))),\n\n           unpackhol (apphol (apphol auto (cctx\n\t\t                            (ctxparam phi (fun idphi => lbcons (mvar P1 (substparam idphi nil)) (fun x => lbnil unit))))\n\t\t\t     ) (cterm (ctxparam phi (fun idphi => lbcons (mvar P1 (substparam idphi nil)) (fun x =>\n\t\t\t\t  lbnil (mvar P2 (substparam idphi [])))))))\n\t\t     (fun pf u =>\n\t\t      packhol (cterm (ctxparam phi (fun idphi => lbnil (\n\t\t\t       hol.lam #_ (fun x => mvar pf (substparam idphi [x]) )))))\n\t\t              (construn \"Unit\")\n\t\t\t      #_\n\t\t\t      ))))),\n\n          bindrel (bnil\n\t    (cterm (ctxparam phi (fun idphi => lbnil hol.true)),\n\t     packhol (cterm (ctxparam phi (fun idphi => lbnil hol.triv)))\n\t             (construn \"Unit\")\n\t\t     #_\n\t\t     )) ]))])))\n          (bcons (fun auto => bnil auto))) Tresult ?\n\n\n");V("/./examples/big/ocaml.makam","%use utils.\n%use bindutils.\n%use subbindutils.\n%use extutils.\n%use maps.\n\n(* kinds *)\nknd     : type.\n\nktype   : knd.\nkarrow  : list knd -> knd -> knd.\n\n(* types *)\ntyp       : type.\ntypconstr : type.\ntarrow    : typ -> typ -> typ .\ntprod     : list typ -> typ.\ntbase     : string -> list typ -> typ.\ntpi       : knd -> (typ -> typ) -> typ.\ntypconstr : bindmany typ typ -> typconstr.\n\nconstrdef   : type.\ncsdef       : typconstr -> constrdef.\ncsdefunit   : constrdef.\n\n(* terms *)\nterm        : type.\npatt        : type.\nfield       : type.\n\nlam      : (term -> term) -> term.\napp      : term -> term -> term .\nlamt     : (typ -> term) -> term.\nappt     : term -> typ -> term.\nlet      : term -> (term -> term) -> term.\nletrec   : bindmutrec term term -> bindmany term term -> term.\nconstr   : string -> term -> term.\nconstrun : string -> term.\nascribe  : term -> typ -> term.\nmatch    : term -> list (bindrel (tuple patt term)) -> term.\ntuple    : list term -> term.\nraise    : term -> term.\ntrycatch : term -> list (bindrel (tuple patt term)) -> term.\nrecord   : map string term -> term.\nprojrec  : term -> string -> term.\nnamed    : string -> term.\n\n(* patterns *)\nptuple    : list patt -> patt.\npconstr   : string -> patt -> patt.\npconstrun : string -> patt.\npvar      : term -> patt.\npwild     : patt.\npas       : patt -> patt -> patt.\nprecord   : map string patt -> patt.\n\n\n(* ----------------------------------------------------------- *)\n(* type system. *)\n\n\n(* context declarations *)\nkindofbase         : string -> knd -> prop. (* base constructor *)\n\ntype_eq_def        : string -> list knd -> typconstr -> prop.\ntype_variant_def   : string -> list knd -> list (tuple string constrdef) -> prop.\ntype_record_def    : string -> list knd -> map string typconstr -> prop.\n\nconstructor_def : string -> constrdef -> string -> prop.\nfield_def       : string -> typconstr -> string -> prop.\n\nnamed_gentypeof : string -> typ -> prop.\n\n\n(* kinds *)\nkindof       : typ -> knd -> prop .\nkindofg      : typ -> knd -> prop .\nkindofall    : list typ -> knd -> prop.\nkindofconstr : typconstr -> knd -> prop.\n\n\nkindof T K <- guard T (kindofg T K).\nkindofg (tarrow T1 T2) ktype <- kindof T1 ktype, kindof T2 ktype.\nkindofg (tpi K TF)     ktype <- (x:typ -> kindofg x K -> kindof (TF x) ktype).\nkindofg (tprod TS)     ktype <- kindofall TS ktype.\nkindofg (tbase T TS)   K     <- guard T (kindofbase T (karrow KS K)), map kindof TS KS.\n\nkindofall TS K <- map (fun t res => kindof t K) TS _.\n\n(* normal form of types *)\ntypapply : typconstr -> list typ -> typ -> prop.\ntypapply (typconstr TC) TS T <- bindmany_apply TC TS T.\n\nnf         : typ -> typ -> prop.\nnf_        : typ -> typ -> prop.\n\nnf X Y <- if (refl.isunif X; refl.isunif Y) then eq X Y else nf_ X Y.\n\n(nf_ X X) when newnmeta (fun x => eq x X).\nnf_ (tbase TypConstr TypArgs) (tbase TypConstr TypArgs') <-\n  map nf TypArgs TypArgs'.\nnf_ (tbase TypConstr TypArgs) T <-\n  type_eq_def TypConstr _ Def,\n  typapply Def TypArgs T.\nnf_ (tbase TypConstr TypArgs) T <-\n  type_eq_def TypConstr _ Def,\n  typapply Def TypArgs T0,\n  nf T0 T.\nnf_ (tarrow T1 T2) (tarrow T1' T2') <- nf T1 T1', nf T2 T2'.\nnf_ (tpi K TF)     (tpi K TF')      <- (x:typ -> nf (TF x) (TF' x)).\nnf_ (tprod TS)     (tprod TS')      <- map nf TS TS'.\n\n\n(* term typing *)\n\ntypeof    : term -> typ -> prop.\n\n\ntypeof (lam E) (tarrow T1 T2) <-\n  (x:term -> typeof x T1 -> typeof (E x) T2), kindof T1 ktype.\n\ntypeof (app E1 E2) T2 <-\n  typeof E1 (tarrow T1 T2), typeof E2 T1.\n\ntypeof (lamt E) (tpi K TF) <-\n  (x:typ -> kindofg x K -> typeof (E x) (TF x)).\n\ntypeof (appt E T) (TF T) <-\n  typeof E (tpi K TF), kindof T K.\n\ntypeof (tuple ES) (tprod TS) <- map typeof ES TS.\n\ntypeof (ascribe E T) T <- typeof E T.\n\ntypeof (raise E) T     <- typeof E (tbase \"exn\" nil), kindof T ktype.\n\ngentypeof : term -> typ -> prop.\n\n(* implicit generalization/instantiation and so on *)\ntypinst : typ -> typ -> prop.\ntypinst (tpi K TF) T' <- typinst (TF Tnew) T'.\ntypinst T T' <- not(eq T (tpi _ _)), (eq T T'; nf T T').\n\nnotinenv : typ -> prop.\nnotinenv X <- refl.assume_get typeof Assumptions,\n\t      refl.assume_get gentypeof MoreAssumptions,\n\t      append Assumptions MoreAssumptions AS,\n\t      gather_all_unifs (dyn AS) (X : typ) (XS : list typ),\n\t      not(find_benign X XS).\n\nnext_typgen : typ -> (typ -> typ) -> prop.\nnext_typgen T F <- refl.getunif T (X : typ),\n\t           notinenv X,\n\t           refl.absunif T X F.\n\ntypgen : typ -> typ -> prop.\ntypgen T T <- not(next_typgen T _).\ntypgen T (tpi K F') <-\n  next_typgen T F,\n  (x:typ -> kindofg x K -> typgen (F x) (F' x)).\n\ntpimany : knd -> (typ -> list typ) -> list typ -> prop.\ntpimany K (fun x => nil) nil.\ntpimany K (fun x => cons (T x) (TS x)) (cons (tpi K T) TS') <-\n  tpimany K TS TS'.\n\ntypgenlist : list typ -> list typ -> prop.\ntypgenlist TS TS' <- map typgen TS TS'.\n\n(typeof X T) when newvmeta (fun x => eq x X), gentypeof X T.\n(typeof X T') when newvmeta (fun x => eq x X), gentypeof X T <- typinst T T'.\n\ntypeof (named X) T <- named_gentypeof X T.\ntypeof (named X) T' <- named_gentypeof X T, typinst T T'.\n\ntypeof (app E1 E2) T2 <-\n  typeof E1 (tarrow T1 T2),\n  typeof E2 T1.\n\nvalrestr : term -> prop.\nvalrestr (constr _ _).\nvalrestr (construn _).\nvalrestr (lam      _).\nvalrestr (lamt     _).\nvalrestr (tuple _).\nvalrestr (record _).\nvalrestr (ascribe E _) <- valrestr E.\n(valrestr X) when newnmeta (fun x => eq x X).\n\ntypeof (let E E') T' <-\n  typeof E T, \n  if valrestr E\n  then (typgen T Tgen, kindof Tgen ktype, (x:term -> gentypeof x Tgen -> typeof (E' x) T'))\n  else (kindof T ktype, (x:term -> typeof x T -> typeof (E' x) T')).\n\n(* let rec *)\ntypeof (letrec ES E') T' <-\n\n  bindmutrec_newvars ES (fun xs => {prop| [Bodies Rest Assumption]\n    many_assume typeof xs TS ({prop|\n\n     bindmutrec_apply ES xs Bodies,\n     bindmany_apply E' xs Rest,\n\n     map typeof Bodies TS,\n\n     if map0 valrestr Bodies then eq DoGen true else eq DoGen false\n    |}),\n    if eq DoGen true then\n       (typgenlist TS TSgen, kindofall TSgen ktype,\n\t   eq Assumption (many_assume gentypeof xs TSgen))\n    else\n        (kindofall TS ktype,\n   \t   eq Assumption (many_assume typeof xs TS)),\n\n    Assumption (typeof Rest T') |}).\n     \n(* constructors *)\ntypeof (construn C) (tbase Tbase TS) <-\n  constructor_def C csdefunit Tbase,\n  type_variant_def Tbase KS _,\n  map kindof TS KS.\n\ntypeof (constr C Params) (tbase Tbase TS) <-\n  constructor_def C (csdef PolyParamsT) Tbase,\n  type_variant_def Tbase KS _,\n  map kindof TS KS,\n  typapply PolyParamsT TS ParamsT,\n  typeof Params ParamsT.\n\n(* records *)\ntypeof (projrec E Field) T <-\n\n  field_def Field PolyT Tbase,\n  type_record_def Tbase KS _,\n  map kindof TS KS,\n  typapply TC TS T,\n  once (typeof E (tbase Tbase TS)).\n\nguess_type : map string A -> string -> prop.\nguess_type (map ( (Key, _) :: _ )) Tbase <-\n  field_def Key _ Tbase.\n\nteq : typ -> typ -> prop.\nteq X Y <- (eq X Y; (nf X Z, nf Y Z)).\n\ntypeof (record FieldsTerms) (tbase Tbase TS) <-\n\n  guess_type FieldsTerms Tbase,\n  type_record_def Tbase KS FieldsSpec,\n  map kindof TS KS,\n\n  map_map (fun a => typapply a TS) FieldsSpec FieldsTypes',\n  map_param_eq teq FieldsTypes FieldsTypes',\n\n  map_map typeof FieldsTerms FieldsTypes.\n\n\n\n(* matching. *)\n\ntypebranch   : typ -> typ -> bindrel (tuple patt term) -> prop.\ntypeofpatt   : patt -> typ -> prop.\n\n\ntypeofpatt (pvar X) T <- bindrel_wf X, typeof X T.\n\ntypeofpatt (ptuple PS) (tprod TS) <- map typeofpatt PS TS.\n\ntypeofpatt (pconstr C P) (tbase Tbase TS) <-\n\n  constructor_def C (csdef PolyParamsT) Tbase,\n  type_variant_def Tbase KS _,\n  map kindof TS KS,\n\n  typapply PolyParamsT TS T',\n  typeofpatt P T'.\n\ntypeofpatt (pconstrun C) (tbase Tbase TS) <-\n\n  constructor_def C csdefunit Tbase,\n  type_variant_def Tbase KS _,\n  map kindof TS KS.\n\ntypeofpatt pwild T.\n\ntypeofpatt (pas P P') T <- typeofpatt P T, typeofpatt P' T.\n\ntypeofpatt (precord FieldsPatts) (tbase Tbase TS) <-\n  \n  guess_type FP Tbase,\n  type_record_def Tbase KS FieldsSpec,\n  map_map typeofpatt FieldsPatts FieldsTypes,\n  map kindof TS KS,\n  map_map (fun a => typapply a TS) FieldsSpec FieldsTypes',\n  map_param_eq teq FieldsTypes FieldsTypes'.\n\n\ndynamic_assumption : dyn -> list prop -> list prop -> prop.\ndynamic_assumptions : list dyn -> list prop -> list prop -> prop.\n\ndynamic_assumption (dyn (X : term)) [typeof X T] [typeof X T].\ndynamic_assumptions Vars PS QS <-\n  map2 dynamic_assumption Vars PattAssume BodyAssume,\n  flatten PattAssume PS, flatten BodyAssume QS.\n\ntypebranch T T' Branch <-\n\n  bindrel_newvars Branch (fun unifs => {prop| [Patt Body PattAssume BodyAssume]\n    bindrel_apply Branch unifs (Patt, Body),\n    dynamic_assumptions unifs PattAssume BodyAssume,\n    assumemany PattAssume (typeofpatt Patt T),\n    assumemany BodyAssume (typeof Body T') |}).\n  \n\ntypeof (match E Branches) T' <-\n  typeof E T, not(refl.isunif T),\n  map0 (typebranch T T') Branches.\n\ntypeof (match E Branches) T' <-\n  typeof E T, not(refl.isunif T), nf T Tnf,\n  map0 (typebranch Tnf T') Branches.\n\ntypeof (match E Branches) T' <-\n  map0 (typebranch T T') Branches,\n  typeof E T.\n\ntypeof (trycatch E Handlers) T <-\n  typeof E T,\n  map0 (typebranch (tbase \"exn\" []) T) Handlers.\n\n\n(* conversion *)\n(typeof X Tnf) when isnvar X, once(typeof X T) <- nf T Tnf.\n(typeof E T) when not (isnvar E), not (refl.isunif T), once(typeof E T') <- nf T' Z, nf T Z.\n\n\n(* ---------------------------- *)\n(* module structures/signatures *)\n\nstritem        : type.\nsigitem        : type.\n\n\n(* type definitions *)\ntypdef         : type.\n\ntypdef_variant : list (tuple string constrdef) -> typdef.\ntypdef_record  : list (tuple string typconstr) -> typdef.\ntypdef_eq      : typconstr -> typdef.\n\n(* structure items *)\nstrlet    : string -> term -> stritem.\nstrlet_   : term -> stritem.\nstrletrec : bindmutrec term term -> stritem.\nstrtype   : list string -> list (list knd) -> list typdef -> stritem.\nstrtypesingle : string -> list knd -> typdef -> stritem.\nstrexn    : string -> constrdef -> stritem.\nstrmany   : list stritem -> stritem.\n\n(* signature items *)\nsigval    : string -> typ -> sigitem.\nsigtypedecl : string -> list knd -> sigitem.\nsigtype   : list string -> list (list knd) -> list typdef -> sigitem.\nsigexn    : string -> constrdef -> sigitem.\nsigmany   : list sigitem -> sigitem.\n\n\n(* signature of structure item *)\n\nsigof : stritem -> sigitem -> prop.\nsigitem_new_assumptions : sigitem -> list prop -> prop.\ntypdef_new_assumptions  : string -> list knd -> typdef -> list prop -> prop.\n\nsigof (strlet Name E)\n      (sigval Name T') <- typeof (let E (fun y => y)) T, teq T T'.\n\nsigof (strlet_ E)\n      (sigmany [])     <- typeof (let E (fun y => y)) T.\n\nsigof (strletrec ES)\n      (sigmany Vals) <-\n  bindmutrec_newvars ES (fun xs => {prop|\n   bindmany_apply BXS xs (tuple xs),\n   map (fun x n => eq n \xe2\x81\xbfx) xs Names,\n   typeof (letrec ES BXS) (tprod TS) |}),\n  map2 (fun n t => eq (sigval n t)) Names TS Vals.\n\n\ntypdef_wf : typdef -> list knd -> prop.\ntypconstr_wf   : typconstr -> list knd -> prop.\nconstructor_wf : constrdef -> list knd -> prop.\n\ntypconstr_wf (typconstr TC) KS <-\n  bindmany_newvars TC (fun ts =>\n    many_assume kindof ts KS {prop| [T]\n\tbindmany_apply TC ts T,\n\tkindof T ktype |}).\n\nconstructor_wf csdefunit KS.\nconstructor_wf (csdef TC) KS <- typconstr_wf TC KS.\n\ntypdef_wf (typdef_variant Constructors) KS <-\n  map0 (fun nc => {prop| [Name Constr] eq nc (Name, Constr), constructor_wf Constr KS |}) Constructors.\n\ntypdef_wf (typdef_record Fields) KS <-\n  map0 (fun nc => {prop| [Name TConstr] eq nc (Name, TConstr), typconstr_wf TConstr KS |}) Fields.\n\ntypdef_wf (typdef_eq TC) KS <-\n  typconstr_wf TC KS.\n\nsigof (strtype Names Arities Defs)\n      (sigtype Names Arities Defs) <-\n  \n  map (fun ks => eq (karrow ks ktype)) Arities Kinds,\n  many_assume kindofbase Names Kinds (map typdef_wf Defs Arities).\n\nsigof (strtypesingle Name Arity Def) S' <- sigof (strtype [Name] [Arity] [Def]) S'.\n      \n\nsigof (strexn Name Constrdef) (sigexn Name Constrdef) <-\n  constructor_wf Constrdef [].\n\nsigof (strmany []) (sigmany []).\nsigof (strmany (HD :: TL)) (sigmany (HDs :: TLs)) <-\n  sigof HD HDs, sigitem_new_assumptions HDs Assum,\n  assumemany Assum (sigof (strmany TL) (sigmany TLs)).\n\n(* assumptions based on signature items *)\n\nsigitem_new_assumptions (sigval Name T) [ named_gentypeof Name T ].\n\nsigitem_new_assumptions (sigtypedecl Name Arity) [ kindofbase Name (karrow Arity ktype) ].\n\nsigitem_new_assumptions (sigtype Names Arities Defs) Assumptions <-\n\n  map (fun ks => eq (karrow ks ktype)) Arities Kinds,\n  map2 (fun n k => eq (kindofbase n k)) Names Kinds Assume_Types,\n  map3 typdef_new_assumptions Names Arities Defs Assume_Typdefs,\n  flatten (Assume_Types :: Assume_Typdefs) Assumptions.\n\nsigitem_new_assumptions (sigexn Name Def) [ constructor_def Name Def \"exn\" ].\n\nsigitem_new_assumptions (sigmany Sigs)  Flattened <-\n  map sigitem_new_assumptions Sigs Assums,\n  flatten Assums Flattened.\n\ntypdef_new_assumptions TName KS (typdef_variant Constructors) ( (type_variant_def TName KS Constructors) ::\n                                                                ConstrAssumptions ) <-\n\n  map (fun nc res => {prop| [Name Csdef] eq nc (Name, Csdef), eq res (constructor_def Name Csdef TName) |})\n      Constructors ConstrAssumptions.\n\ntypdef_new_assumptions TName KS (typdef_record Fields) ( (type_record_def TName KS (map Fields)) ::\n                                                         FieldAssumptions ) <-\n\n  map (fun nt res => {prop| [Name Tconstr] eq nt (Name, Tconstr), eq res (field_def Name Tconstr TName) |})\n      Fields FieldAssumptions.\n\ntypdef_new_assumptions TName KS (typdef_eq TypConstr) [ type_eq_def TName KS TypConstr ].\n\n\n(* adding assumptions to global environment *)\n\nocamldo_sig : sigitem -> cmd -> prop.\nocamldo_sig S (cmd_many Cmds) <-\n   sigitem_new_assumptions S Assumptions,\n   map (fun g => eq (cmd_newclause (clause g success))) Assumptions Cmds.\n\nocamldo : stritem -> cmd -> prop.\nocamldo S C <- sigof S S', ocamldo_sig S' C.\n\n(* ------------------------------------------------------------------------- *)\n\n\n(* Built-in types *)\n\n`( ocamldo_sig (sigtypedecl   \"exn\"  []) ).\ntype_variant_def \"exn\" [] ExnConstructors.\n\n`( ocamldo_sig (sigtypedecl   \"int\"  []) ).\nintconst : int -> term.\ntypeof (intconst N) (tbase \"int\" []).\n\n`( ocamldo_sig (sigtypedecl   \"string\" []) ).\nstringconst : string -> term.\ntypeof (stringconst S) (tbase \"string\" []).\n\n`( ocamldo (strtypesingle \"unit\" [] (typdef_variant [ ( \"Unit\", csdefunit ) ])) ).\n`( ocamldo (strtypesingle \"list\" [ktype] (typdef_variant\n     [ ( \"Nil\", csdefunit ),\n       ( \"Cons\", csdef (typconstr (bcons (fun a => bnil (tprod [ a, tbase \"list\" [a] ])))) ) ])) ).\n`( ocamldo (strtypesingle \"bool\" [] (typdef_variant\n     [ ( \"True\", csdefunit ),\n       ( \"False\", csdefunit ) ])) ).\n\n`( ocamldo (strtypesingle \"option\" [ktype] (typdef_variant\n     [ ( \"None\", csdefunit ),\n       ( \"Some\", csdef (typconstr (bcons (fun a => bnil a))) ) ])) ).\n");V("/./examples/poplmark/challenge.makam",'(* POPLmark challenge -- the simulation part.\n   http://www.seas.upenn.edu/~plclub/poplmark/poplmark.pdf\n*)\n\n\npoplmark_tests : testsuite.\n\ntyp : type.\n\n(* Abstract syntax of types. (page 7) *)\n\nttop : typ.\ntarrow : typ -> typ -> typ.\ntforall : typ -> bindone typ typ -> typ.\n\n(* Subtyping relation. (page 8) *)\nsubtypeof : typ -> typ -> prop.\n\nsubtypeof_var : typ -> typ -> prop.\n\nsubtypeof S ttop.\n\nsubtypeof X X <- subtypeof_var X U.\n\nsubtypeof X T <- subtypeof_var X U, subtypeof U T.\n\nsubtypeof (tarrow S1 S2) (tarrow T1 T2) <-\n  subtypeof T1 S1, subtypeof S2 T2.\n\nsubtypeof (tforall S1 S2) (tforall T1 T2) <-\n  subtypeof T1 S1,\n  bindone.open S2 T2 (pfun x s2 t2 =>\n    (subtypeof_var x T1 ->\n     subtypeof s2 t2)).\n\n(* Adding records. (page 9) *)\n\ntrecord : map string typ -> typ.\n\nsubmap : (B -> B -> prop) -> map A B -> map A B -> map A B -> prop.\nsubmap SubRel MapA MapB MapR <-\n  map.to_list MapB MapBList,\n  foldl (pfun mA keyvalB mA\' =>\n    [Key ValA ValB](eq keyvalB (Key, ValB),\n    map.remove mA Key ValA mA\',\n    SubRel ValA ValB))\n  MapA MapBList MapR. \n\nsubtypeof (trecord Map1) (trecord Map2) <-\n  submap subtypeof Map1 Map2 _.\n\ntestcase poplmark_tests <-\n  (x:typ ->\n    subtypeof (trecord [ ("a", x), ("b", x) ]) (trecord [ ("a", ttop) ])).\n\ntestcase poplmark_tests <-\n  (x:typ -> y:typ ->\n    subtypeof (trecord [ ("a", x), ("c", x), ("b", x) ]) (trecord [ ("b", ttop), ("a", ttop) ])).\n\n\ntestcase poplmark_tests <-\n  (x:typ ->\n    not(subtypeof (trecord [ ("a", x) ]) (trecord [ ("a", ttop), ("b", ttop) ]))).\n\ntestcase poplmark_tests <-\n  (x:typ ->\n    not(subtypeof (trecord [ ("a", ttop) ]) (trecord [ ("a", x) ]))).\n\n\n(* Terms and values. (page 9) *)\n\nterm : type.\n\nlam : typ -> bindone term term -> term.\napp : term -> term -> term.\nlamt : typ -> bindone typ term -> term.\nappt : term -> typ -> term.\n\nis_value : term -> prop.\nis_value (lam _ _).\nis_value (lamt _ _).\n\ntypeof : term -> typ -> prop.\ntypeof_aux : term -> typ -> prop.\ntypeof_var : term -> typ -> prop.\n\ntypeof E T <-\n  unless (typeof_aux E T)\n         {prop| typeof_aux E S, subtypeof S T |}.\n\ntypeof_aux X T <- typeof_var X T.\n\ntypeof_aux (lam T1 E) (tarrow T1 T2) <-\n  bindone.open E (pfun x e =>\n    (typeof_var x T1 ->\n     typeof e T2)).\n\ntypeof_aux (app E1 E2) T2 <-\n  typeof E1 (tarrow T1 T2),\n  typeof E2 T1.\n\ntypeof_aux (lamt T1 E) (tforall T1 T2) <-\n  bindone.open E T2 (pfun a e t2 =>\n   (subtypeof_var a T1 ->\n    typeof e t2)).\n\ntypeof_aux (appt E T2) T\' <-\n  typeof E (tforall T11 T12),\n  subtypeof T2 T11,\n  bindone.apply T12 T2 T\'.\n\n\n%extend typ.\nto_string : typ -> string -> prop.\n\nto_string ttop "\xe2\x8a\xa4".\nto_string X V when refl.isnvar X <- nameofvar X V.\nto_string (tarrow T1 T2) S <-\n  to_string T1 T1s, to_string T2 T2s,\n  string.concat [ "(", T1s , " \xe2\x86\x92 ", T2s, ")" ] S.\nto_string (tforall T1 T2) S <-\n  to_string T1 T1s, bindone.open T2 (pfun x t2 => to_string t2 T2s, nameofvar x V),\n  string.concat [ "\xe2\x88\x80", V, "<:", T1s, ".", T2s ] S.\n%end.\n\n\n(*\n (lambda X <: Top. \n                    lambda S <: X. \n                     lambda Z <: X. \n                      lambda s : X->S. \n                       lambda z:Z. s z) : (All X21 <: Top. (All X46 <: X21. (All X71 <: X21. (X21 -> X46) -> X71 -> X46)))\n*)\n\n\ntestcase poplmark_tests <-\n  typeof (lamt ttop (bindone "X" (fun X =>\n          lamt X (bindone "S" (fun S =>\n          lamt X (bindone "Z" (fun Z =>\n          lam (tarrow X S) (bindone "s" (fun s =>\n          lam Z            (bindone "z" (fun z =>\n          app s z))))))))))) T,\n(* typ.to_string T "\xe2\x88\x80X<:\xe2\x8a\xa4.\xe2\x88\x80S<:X.\xe2\x88\x80Z<:X.((X \xe2\x86\x92 S) \xe2\x86\x92 (Z \xe2\x86\x92 S))", *)\n (eq_nounif T\n        (tforall ttop (bindone "X" (fun aX =>\n         tforall aX    (bindone "S" (fun aS =>\n         tforall aX    (bindone "Z" (fun aZ =>\n         (tarrow (tarrow aX aS) (tarrow aZ aS)))))))))).\n\n\nevalstep : term -> term -> prop.\nevalstep (app (lam T E) V) E\' <-\n  is_value V, bindone.apply E V E\'.\nevalstep (appt (lamt T E) T\') E\' <-\n  bindone.apply E T\' E\'.\n\nctxdecompose : term -> (term -> term) -> term -> prop.\nctxdecompose E (fun x => x) E.\nctxdecompose (app E1 E2) (fun x => app (Ectx x) E2) E1\' <- ctxdecompose E1 Ectx E1\'.\nctxdecompose (app V1 E2) (fun x => app V1 (Ectx x)) E2\' <- is_value V1, ctxdecompose E2 Ectx E2\'.\nctxdecompose (appt E T)  (fun x => appt (Ectx x) T) E\' <- ctxdecompose E Ectx E\'.\n\nevalstepfull : term -> term -> prop.\nevalstepfull E1 E2 <- ctxdecompose E1 Ectx Focus, evalstep Focus Focus\', eq E2 (Ectx Focus\').\n\neval : term -> term -> prop.\neval V V <- is_value V.\neval E E\' <- evalstepfull E E\'\', eval E\'\' E\'.\n\n\n\n(* Adding records and pattern matching *)\n\n(*\nerecord : list (string * term) -> term.\nproj : term -> string -> term.\nlet : term -> patt A -> binddep A term.\n\npatt : type.\npvar : term -> patt.\n*)\n\n\nrun_tests [poplmark_tests] ?\n');V("/./examples/tests/test_meta_arg_expansion.makam","%use utils.\n\n(dyneq Y (F X),\n dyneq X not,\n dyneq Y Z) ?\n\n\n\n(* this needs further minimization: *)\n\ntestpred : (string -> string) -> string -> prop.\ntestpred2 : (string -> string -> string) -> string -> prop.\n\ndup_head : A -> B -> prop.\ndup_head P P' <- refl.headargs P Head _, refl.headname P PName, refl.lookup PName P'.\n\ndyncall : (A -> prop) -> dyn -> prop.\ndyncall P (dyn X) <- dup_head (P _) P', P' X.\n\n(map0 (dyncall printhead) [dyn testpred, dyn testpred2]) ?\n");V("/./examples/lib/lmcomp.makam","%use utils.\n%use ipred.\n\n(* (A -> B -> ipred) ~ (LMarrow A B) ~ (A -> LMcomp B) *)\n\nlm_arrow : type -> type -> type.\nlm_comp  : type -> type.\nlm_pattbody : type -> type -> type.\n\nlm_fun      : (A -> lm_comp B) -> lm_arrow A B.\n\nlm_forward  : lm_arrow A B -> (A -> B -> prop) -> prop.\nlm_backward : lm_arrow A B -> (B -> A -> prop) -> prop.\n\nlm_lift     : (A -> B -> prop) -> A -> lm_comp B.\nlm_liftback : (A -> B -> prop) -> B -> lm_comp A.\nlm_liftbi   : (A -> B -> prop) -> (B -> A -> prop) -> A -> lm_comp B.\nlm_app      : (lm_arrow A B) -> A -> lm_comp B.\nlm_match    : A -> lm_pattbody A B -> lm_comp B -> lm_comp B.\nlm_fail     : lm_comp A.\n\nlm_val       : B -> lm_comp B.\nlm_let       : lm_comp A -> (A -> lm_comp B) -> lm_comp B.\n\nlm_patt_newunif : (X -> lm_pattbody A B) -> lm_pattbody A B.\nlm_patt_end     : A -> lm_comp B -> lm_pattbody A B.\n\nlm_recarrow     : type -> type -> type.\nlm_recapp       : (lm_recarrow A B) -> A -> lm_comp B.\nlm_recdef       : lm_recarrow A B -> lm_arrow A B -> prop.\n\n\n(* Compile from lmcomp's into ipred's        *)\n(* ----------------------------------------- *)\n\nlm_to_ipred         : lm_arrow A B -> (A -> B -> ipred) -> prop.\nlmcomp_to_ipred     : lm_comp B -> (B -> ipred) -> prop.\nlmpattbody_to_ipred : lm_pattbody A B -> lm_comp B -> (A -> B -> ipred) -> prop.\n\nlm_to_ipred (lm_fun (Comp : A -> lm_comp B)) IPred <-\n  (input:A -> lmcomp_to_ipred (Comp input\xe2\x81\xbf_) (IPred input\xe2\x81\xbf_)).\n\nlmcomp_to_ipred (lm_val X)    (fun output => ilift (eq output X)).\nlmcomp_to_ipred (lm_lift P X) (fun output => ilift (P X output\xe2\x81\xbf_)).\nlmcomp_to_ipred (lm_liftback P X) (fun output => ilift (P output\xe2\x81\xbf_ X)).\nlmcomp_to_ipred (lm_liftbi P P' X) (fun output => iliftbi (P X output\xe2\x81\xbf_) (P' output^n_ X)).\nlmcomp_to_ipred (lm_let (E : lm_comp A) K)\n\t\t              (fun output => inewmeta (fun interm\xe2\x81\xbf_ =>\n\t\t\t        iand (IPredE interm\xe2\x81\xbf_) (Rest interm\xe2\x81\xbf_ output\xe2\x81\xbf_))) <-\n  lmcomp_to_ipred E IPredE,\n  (x:A -> lmcomp_to_ipred (K x\xe2\x81\xbf_) (Rest x\xe2\x81\xbf_)).\nlmcomp_to_ipred (lm_fail) (fun output => ilift (failure)).\nlmcomp_to_ipred (lm_match Scrutinee PattBody OtherWise) Result' <-\n  lmpattbody_to_ipred PattBody OtherWise Res,\n  eq Result' (Res Scrutinee).\nlmpattbody_to_ipred (lm_patt_newunif (F : X -> lm_pattbody A B)) OtherWise\n\t\t    (fun scr output =>\n\t\t     inewmeta (fun (x^n_ : X) => Rest x^n_ scr output)) <-\n  (x:X -> lmpattbody_to_ipred (F x^n_) OtherWise (Rest x^n_)).\nlmpattbody_to_ipred (lm_patt_end Patt Body) Otherwise\n\t\t    (fun scr output => iifte (ilift (eq scr Patt))\n\t\t                             (Body' output)\n\t\t\t\t\t     (Otherwise' output)) <-\n  lmcomp_to_ipred Body Body',\n  lmcomp_to_ipred Otherwise Otherwise'.\n\nlm_forward : lm_arrow A B -> (A -> B -> prop) -> prop.\nlm_forward (Comp : lm_arrow A B) (P : A -> B -> prop) <-\n  lm_to_ipred Comp IP,\n  (input:A -> (output:B -> ipred_forward (IP input\xe2\x81\xbf_ output\xe2\x81\xbf_) (P input\xe2\x81\xbf_ output\xe2\x81\xbf_))).\n\nlm_backward : lm_arrow A B -> (B -> A -> prop) -> prop.\nlm_backward Comp (P : B -> A -> prop) <-\n  lm_to_ipred Comp IP,\n  (input:A -> (output:B -> ipred_backward (IP input\xe2\x81\xbf_ output\xe2\x81\xbf_) (P output\xe2\x81\xbf_ input\xe2\x81\xbf_))).\n\nlmcomp_to_ipred (lm_app F X) Res <-\n  lm_forward F P, lm_backward F P',\n  eq Res (fun output => iliftbi (P X output) (P' output X)).\n\nlmcomp_to_ipred (lm_recapp F X) Res <-\n  lm_recdef F F',\n  eq Res (fun output => inewmeta (fun P =>\n                        inewmeta (fun P' =>\n\t\t\tiliftbi (and (lm_forward F' P) (P X output))\n\t\t\t        (and (lm_backward F' P') (P' output X))))).\n\nlm_foldl : (lm_arrow (tuple A B) A) -> A -> list B -> lm_comp A.\nlmcomp_to_ipred (lm_foldl F Start List) (fun output => iliftbi (foldl P Start List output)\n\t\t                                               (foldlinv P' output List Start)) <-\n  lm_forward F PF, lm_backward F PB,\n  eq P  (fun cur elm res => PF (tuple cur elm) res),\n  eq P' (fun cur elm res => PB res (tuple cur elm)).\n\nlm_foldr : (lm_arrow (tuple B A) A) -> list B -> A -> lm_comp A.\nlmcomp_to_ipred (lm_foldr F List End) (fun output => iliftbi (foldr P List End output)\n\t\t                                             (foldrinv P' output List End)) <-\n  lm_forward F PF, lm_backward F PB,\n  eq P  (fun elm cur res => PF (tuple elm cur) res),\n  eq P' (fun elm cur res => PB res (tuple elm cur)).\n\nlm_map : (lm_arrow A B) -> list A -> lm_comp (list B).\nlmcomp_to_ipred (lm_map F List) (fun output => iliftbi (map P List output)\n\t\t                                       (map P' output List)) <-\n  lm_forward F P, lm_backward F P'.\n\nlm_split : list (tuple A B) -> lm_comp (tuple (list A) (list B)).\nlmcomp_to_ipred (lm_split List) (fun output => ilift (split List output)).\n\n\n");V("/./examples/lib/generic.makam","%use utils.\n\nstructural : (dyn -> dyn -> prop) -> dyn -> dyn -> prop.\n\n(* defer if both input and output are uninstantiated metavariables *)\n(structural Rec (dyn (X : A)) (dyn (Y : A))) when refl.isunif X, refl.isunif Y <-\n  guardmany [ dyn X , dyn Y ] (Rec (dyn X) (dyn Y)).\n\n(* deal with built-in types *)\nstructural Rec (dyn (X : string)) (dyn (X : string)).\nstructural Rec (dyn (X : int)) (dyn (X : int)).\nstructural Rec (dyn (X : A -> B)) (dyn (Y : A -> B)) <-\n  (x:A -> Rec (dyn (X x)) (dyn (Y x))).\n\n(* the essence: forward and backward destructuring *)\n\n(structural Rec (dyn (X : A)) (dyn (Y : A)))\nwhen not(typeq X (B : C -> D)), not(refl.isunif X) <-\n  refl.headargs X Hd Args,\n  map Rec Args Args',\n  refl.headargs Y Hd Args'.\n\n(structural Rec (dyn (X : A)) (dyn (Y : A)))\nwhen not(typeq X (B : C -> D)), refl.isunif X, not(refl.isunif Y) <-\n  refl.headargs Y Hd Args',\n  map Rec Args Args',\n  refl.headargs X Hd Args.\n\n(* Generic fold *)\n\ngeneric_fold : (dyn -> A -> A -> prop) -> dyn -> A -> A -> prop.\n(generic_fold F (dyn (X : A)) Cur Res) when refl.isunif X <-\n  guard X (F (dyn X) Cur Res).\ngeneric_fold F (dyn (X : string)) Cur Cur.\ngeneric_fold F (dyn (X : int)) Cur Cur.\ngeneric_fold F (dyn (X : A -> B)) Cur Res <-\n  (x:A -> F (dyn (X x)) Cur Res).\n(generic_fold F (dyn (X : A)) Cur Res)\nwhen not(typeq X (B : C -> D)), not(refl.isunif X) <-\n  refl.headargs X Hd Args,\n  foldl (fun cur elm res => F elm cur res) Cur Args Res.  \n\n\n(* eq_benign: no instantiation goes on. *)\neq_benign : A -> A -> prop.\neq_benign_aux : dyn -> dyn -> prop.\n\neq_benign X Y <- eq_benign_aux (dyn X) (dyn Y).\n\n(eq_benign_aux (dyn (X : A)) (dyn (Y : A))) when refl.isunif X, refl.isunif Y, refl.decomposeunif X I Xargs, refl.decomposeunif Y I Yargs <-\n  map eq_benign_aux Xargs Yargs.\n(eq_benign_aux (dyn (X : string)) (dyn (Y : string))) when not(refl.isunif X), not(refl.isunif Y) <- eq X Y.\n(eq_benign_aux (dyn (X : int)) (dyn (Y : int))) when not(refl.isunif X), not(refl.isunif Y) <- eq X Y.\n(eq_benign_aux (dyn (X : A -> B)) (dyn (Y : A -> B))) when not(refl.isunif X), not(refl.isunif Y) <-\n  (x:A -> eq_benign_aux (dyn (X x)) (dyn (Y x))).\n\nbuiltintyp : [A] A -> prop.\nbuiltintyp (X : A -> B).\nbuiltintyp (X : string).\nbuiltintyp (X : int).\n\n(eq_benign_aux (dyn X) (dyn Y)) when not(refl.isunif X), not(refl.isunif Y), not(builtintyp X) <-\n  refl.headargs X Hd Args,\n  refl.headargs Y Hd Args',\n  map eq_benign_aux Args Args'.\n\n");V("/./examples/lib/utils.makam","(* useful predicates *)\n\neq : A -> A -> prop.\neq X X.\n\nnot : prop -> prop.\nnot P <- if once P then failure else success.\n\nis : A -> (A -> prop) -> prop.\nis X F <- F X.\n\n\n(* list stuff *)\nmap0 : (A -> prop) -> list A -> prop.\nmap0 P nil.\nmap0 P (cons HD TL) <- P HD, map0 P TL.\n\nmap : (A -> B -> prop) -> list A -> list B -> prop.\nmap P nil nil.\nmap P (cons HD TL) (cons HD' TL') <- P HD HD', map P TL TL'.\n\nmap2 : (A -> B -> C -> prop) -> list A -> list B -> list C -> prop.\nmap2 P nil nil nil.\nmap2 P (cons HD TL) (cons HD' TL') (cons HD'' TL'') <- P HD HD' HD'', map2 P TL TL' TL''.\n\nmap3 : (A -> B -> C -> D -> prop) -> list A -> list B -> list C -> list D -> prop.\nmap3 P nil nil nil nil.\nmap3 P (cons HDA TLA) (cons HDB TLB) (cons HDC TLC) (cons HDD TLD) <- P HDA HDB HDC HDD, map3 P TLA TLB TLC TLD.\n\nsnoc : list A -> A -> list A -> prop.\nsnoc nil Last (cons Last nil).\nsnoc (cons Hd Tl) Last (cons Hd Tl') <- snoc Tl Last Tl'.\n\nfoldr : (A -> B -> B -> prop) -> list A -> B -> B -> prop.\nfoldr P nil S S.\nfoldr P (cons HD TL) S S'' <- foldr P TL S S', P HD S' S''.\n\nfoldrinv : (A -> B -> B -> prop) -> B -> list A -> B -> prop.\nfoldrinv P SStart Res SEnd <-\n  if P Hd SNext SStart\n  then (foldrinv P SNext Tl SEnd, eq Res (cons Hd Tl))\n  else (eq Res nil, eq SStart SEnd).\n\n\nfoldl : (B -> A -> B -> prop) -> B -> list A -> B -> prop.\nfoldl P S nil S.\nfoldl P S (cons HD TL) S'' <- P S HD S', foldl P S' TL S''.\n\nfind : list A -> A -> prop.\nfind (HD :: TL) HD.\nfind (HD' :: TL) HD <- find TL HD.\n\nfoldlinv : (B -> A -> B -> prop) -> B -> list A -> B -> prop.\nfoldlinv P SEnd Res SStart <-\n  if P SPrev Last SEnd\n  then (foldlinv P SPrev Res' SStart, snoc Res' Last Res)\n  else (eq Res nil, eq SStart SEnd).\n\nreverse : list A -> list A -> prop.\nreverse_aux : list A -> (list A -> list A) -> list A -> prop.\nreverse_aux nil L (L nil).\nreverse_aux (cons HD TL) L L' <- reverse_aux TL (fun x => cons HD (L x)) L'.\nreverse L L' <- reverse_aux L (fun x => x) L'.\n\nappend : list A -> list A -> list A -> prop.\nappend nil Y Y.\nappend (cons HD TL) Y (cons HD TL') <- append TL Y TL'.\n\nflatten : list (list A) -> list A -> prop.\nflatten LS L <- foldl (fun cur elm res => newmeta (fun rev => and (reverse elm rev) (append rev cur res))) nil LS Lrev, reverse Lrev L.\n\n\n\n(* other basic data types *)\n\noption : type -> type.\nnone : option A.\nsome : A -> option A.\n\nmap : (A -> C -> prop) -> (B -> D -> prop) -> tuple A B -> tuple C D -> prop.\nmap P Q (tuple X Y) (tuple X' Y') <- P X X', Q Y Y'.\n\nsplit : (list (tuple A B)) -> tuple (list A) (list B) -> prop.\nsplit nil (tuple nil nil).\nsplit (cons (tuple HD1 HD2) TL) (tuple (cons HD1 TL1) (cons HD2 TL2)) <- split TL (tuple TL1 TL2).\n\nfilterlist : list (option A) -> list A -> prop.\nfilterlist nil nil.\nfilterlist (cons (some HD) TL) (cons HD TL') <- filterlist TL TL'.\nfilterlist (cons none TL) TL' <- filterlist TL TL'.\n\n\n(* other predicates *)\n\nis_constructor : A -> prop.\nis_constructor X <- newfmeta (fun c => eq c X).\n\nrenamebinder : (A -> B) -> string -> (A -> B) -> prop.\nrenamebinder F ID (fun newbinder\xe2\x81\xbfID => F newbinder\xe2\x81\xbfID).\n\nprinthead : [A] A -> prop.\nprinthead (X : A -> B) <- (x:A -> printhead (X x)).\n(printhead (X : A)) when not(eq (dyn(X : A)) (dyn(Y : B -> C))) <- refl.headargs X HD _, refl.headname HD S, print S.\n\n\nassumemany : list prop -> prop -> prop.\nassumemany (cons HD TL) P <- (HD -> assumemany TL P).\nassumemany nil P <- P.\n\nassumemanyclauses : list clause -> prop -> prop.\nassumemanyclauses (cons HD TL) P <- assume HD (assumemanyclauses TL P).\nassumemanyclauses nil P <- P.\n\ndefine : (A -> prop) -> (A -> prop) -> cmd -> prop.\ndefine Pred How (cmd_newclause (clause (Pred Res) success)) <- How Res.\n\n\ncase : A -> (list (tuple A prop)) -> prop.\ncase Scrutinee ( (Pattern, Body) :: Rest ) <-\n  if eq Scrutinee Pattern then Body else case Scrutinee Rest.\n\ncaseguard : A -> (list (tuple A (tuple prop prop))) -> prop.\ncaseguard Scrutinee ( (Pattern, Guard, Body) :: Rest ) <-\n  if (eq Scrutinee Pattern, Guard) then Body else caseguard Scrutinee Rest.\n\n\nisdeepunif : A -> prop.\nisdeepunif A <-\n  if refl.isunif A then success else\n   case (dyn A)\n          [ (dyn (dyn X), isdeepunif X),\n            (dyn (tuple X Y), {prop| isdeepunif X, isdeepunif Y |}) ].\n\ndefcase : A -> prop -> (list (tuple A prop)) -> prop.\ndefcase Scrutinee Default Branches <-\n  if isdeepunif Scrutinee then Default\n  else ((case Scrutinee nil <- Default) ->\n         case Scrutinee Branches ).\n\n(* dynamic types *)\ndyneq : [B] A -> B -> prop.\ndyneq X X.\n\ndynmap : (dyn -> dyn -> prop) -> list dyn -> list dyn -> prop.\ndynmap P nil nil.\ndynmap P (cons (dyn HD) TL) (cons (dyn HD') TL') <- P (dyn HD) (dyn HD'), dynmap P TL TL'.\n\napplymany : [A B] A -> list dyn -> B -> prop.\napplymany X ( ( dyn (HD : A) ) :: TL ) RES <-\n  applymany (X HD) TL RES.\napplymany X [] X.\n\ntypeq : [B] A -> B -> prop.\ntypeq (X : A) (Y : A).\n\nappmany : [A B] A -> list dyn -> B -> prop.\nappmany (X : A) nil (X : A).\nappmany (X : A -> B) (cons (dyn (HD : A)) TL) Res <- appmany (X HD) TL Res.\n\nnewvmeta : (A -> prop) -> prop.\nnewvmeta P <- if newfmeta P then success else newnmeta P.\n\nisnvar : A -> prop.\n(isnvar X) when newnmeta (fun x => eq x X).\n\nuserdef_headargs : [A B] A -> B -> list dyn -> prop.\nuserdef_headargs (X : A) C List <- newvmeta (fun (Y : A) => {prop|\n                            eq X Y, eq C Y, eq List [] |}).\nuserdef_headargs (X : A) C List <- newvmeta (fun (Y : A1 -> A) => {prop|\n\t                    eq X (Y A1), eq C Y, eq List [dyn A1] |}).\nuserdef_headargs (X : A) C List <- newvmeta (fun (Y : A1 -> A2 -> A) => {prop|\n\t                    eq X (Y A1 A2), eq C Y, eq List [dyn A1, dyn A2] |}).\nuserdef_headargs (X : A) C List <- newvmeta (fun (Y : A1 -> A2 -> A3 -> A) => {prop|\n\t                    eq X (Y A1 A2 A3), eq C Y, eq List [dyn A1, dyn A2, dyn A3] |}).\nuserdef_headargs (X : A) C List <- newvmeta (fun (Y : A1 -> A2 -> A3 -> A4 -> A) => {prop|\n\t                    eq X (Y A1 A2 A3 A4), eq C Y, eq List [dyn A1, dyn A2, dyn A3, dyn A4] |}).\nuserdef_headargs (X : A) C List <- newvmeta (fun (Y : A1 -> A2 -> A3 -> A4 -> A5 -> A) => {prop|\n\t                    eq X (Y A1 A2 A3 A4 A5), eq C Y, eq List [dyn A1, dyn A2, dyn A3, dyn A4, dyn A5] |}).\n\n\n(* guard *)\ndynguard : A -> prop -> prop.\n(dynguard X P) when dyneq X (dyn Y) <- guard Y P.\n\ndynremovableguard : unit -> A -> prop -> prop.\n(dynremovableguard RT X P) when dyneq X (dyn Y) <- removableguard RT Y P.\n\nguardmany : list dyn -> prop -> prop.\nguardmany [] P <- P.\nguardmany XS P <-\n  not(eq XS []),\n  map0 (fun elm => dynremovableguard RemoveTrigger elm (and P (eq RemoveTrigger unit))) XS.\n\n\n\nguardall : list dyn -> prop -> prop.\nguardall XS P <-\n  reverse XS XS',\n  foldl (fun cur elm => eq (dynguard elm cur)) P XS' Q, Q.\n");V("/./examples/lib/bindutils.makam","%use utils.\n\n(* This file defines a number of binding structures. *)\n\n(* bindmany A B\n   ----------------------------------------------------\n\n   Binds any number of A's into B.\n   Conceptually equivalent to\n   A -> (A -> (A -> ... B))\n   \n   Example:\n     The single-argument lambda abstraction is represented in HOAS as\n        lam : (term -> term) -> term.\n     Bindmany allows us to generalize this to multiple-argument functions\n        lammany : bindmany term term -> term.\n\n     \n   For example, the body of a multiple-argument function could be represented as:\n   lammany : bindmany term term -> term.\n\n*)\n\nbindmany : type -> type -> type.\nbcons    : (A -> bindmany A B) -> bindmany A B.\nbnil     : B -> bindmany A B.\n\n\n(* \n   bindmany_cast\n     an auxiliary function to convert terms like\n       (fun x y z => body)\n     into a bindmany value of the form\n       (bcons (fun x => bcons (fun y => bcons (fun z => body))))\n *)\n\nbindmanycast : [T] T -> bindmany A B -> prop.\nbindmanycast_aux : [T] T -> bindmany A B -> prop.\n\nbindmanycast X R <- once(bindmanycast_aux X R).\nbindmanycast_aux (fun (x : A) => P x) (bcons (fun (x : A) => R x)) <-\n  (x:A -> once(bindmanycast_aux (P x) (R x))).\nbindmanycast_aux (X : B) ((bnil X) : bindmany A B).\n\n\n\nbindmany_map : (A -> C -> prop) -> (B -> D -> prop) ->\n\t       bindmany A B -> list C -> D -> prop.\nbindmany_map P Q (bnil X)  nil          X' <- Q X X'.\nbindmany_map P Q (bcons (F : A -> bindmany A B)) (cons HD TL) X' <-\n  (x:A -> P x HD -> bindmany_map P Q (F x) TL X').\n\nbindmany_endmap : (B -> C -> prop) ->\n\t\t  bindmany A B -> C -> prop.\nbindmany_endmap P (bnil X) X' <- P X X'.\nbindmany_endmap P (bcons (F : A -> bindmany A B)) X' <-\n  (x:A -> bindmany_endmap P (F x) X').\n\nbindmany_apply : bindmany A B -> list A -> B -> prop.\nbindmany_apply (bnil X)  nil          X.\nbindmany_apply (bcons F) (cons HD TL) X' <- bindmany_apply (F HD) TL X'.\n\n\nbindmany_newvars : bindmany A B -> (list A -> prop) -> prop.\nbindmany_newvars_aux : bindmany A B -> list A -> (list A -> prop) -> prop.\nbindmany_newvars_aux (bnil _)                        Vars P <- reverse Vars Vars', P Vars'.\nbindmany_newvars_aux (bcons (F : A -> bindmany A B)) Vars P <-\n  (x:A -> bindmany_newvars_aux (F x) (cons x Vars) P).\nbindmany_newvars X P <- bindmany_newvars_aux X nil P.\n\n\nbindmany_changetype : bindmany A B -> bindmany C unit -> prop.\nbindmany_changetype (bnil X) (bnil unit).\nbindmany_changetype (bcons (fun (x : A) => R x)) (bcons (fun (x : C) => R')) <-\n  (x:A -> bindmany_changetype (R x) R').\n\nbindmany_fromlist : list A -> bindmany B unit -> prop.\nbindmany_fromlist (nil) (bnil unit).\nbindmany_fromlist (cons HD TL) ( (bcons (fun (x : A) => TL' x))\n                                 : bindmany A unit ) <-\n  (x:A -> bindmany_fromlist TL (TL' x)).\n\n\nmany_assume : (A -> B -> prop) -> list A -> list B -> prop -> prop.\nmany_assume P AS BS Q <-\n map2 (fun a b => eq (P a b)) AS BS PS,\n assumemany PS Q.\n\n\n(* bindmutrec A B\n   ----------------------------------------------------\n  \n   Used for recursive binding of A into B.\n   This means that we bind a number of A's which can be used\n   in the definition of the same number of B's.\n   e.g. letrec x = y + x and y = x + y \n          would be represented as (conceptually)\n        letrec x.y.[ x |-> y + x ; y |-> x + y ]\n\t  or concretely as\n\tbcons (fun x => bcons (fun y => [ y + x ; x + y ]))\n *)\n\nbindmutrec : type -> type -> type.\nbindmutrec : bindmany A (list B) -> bindmutrec A B.\nbindmutrec_map : (A -> C -> prop) -> (B -> D -> prop) ->\n\t         bindmutrec A B -> list C -> list D -> prop.\nbindmutrec_map P Q (bindmutrec BS) Ins Outs <-\n  bindmany_map P (map Q) BS Ins Outs.\nbindmutrec_endmap : (B -> C -> prop) ->\n\t\t    bindmutrec A B -> list C -> prop.\nbindmutrec_endmap P (bindmutrec BS) Out <-\n  bindmany_endmap (map P) BS Out.\n\nbindmutrec_newvars : bindmutrec A B -> (list A -> prop) -> prop.\nbindmutrec_newvars (bindmutrec BS) P <- bindmany_newvars BS P.\n\nbindmutrec_apply   : bindmutrec A B -> list A -> list B -> prop.\nbindmutrec_apply (bindmutrec BS) XS ES <- bindmany_apply BS XS ES.\n\n\n\n(* bindany T\n   ----------------------------------------------------\n\n   Binds any type any number of times with the body being of type T\n *)\n\nbindany : type -> type.\nbcons  : (A -> bindany T) -> bindany T.\nbnil   : T -> bindany T.\n\nbindany_cast     : [T] T -> bindany A -> prop.\nbindany_cast_aux : [T] T -> bindany A -> prop.\n\nbindany_cast X R <- once(bindany_cast_aux X R).\nbindany_cast_aux (fun (x : B) => P x) (bcons (fun (x : B) => R x)) <-\n  (x:B -> once(bindany_cast_aux (P x) (R x))).\nbindany_cast_aux (X : A) ((bnil X) : bindany A).\n\nbindany_newvars : bindany A -> (list dyn -> prop) -> prop.\nbindany_newvars_aux : bindany A -> list dyn -> (list dyn -> prop) -> prop.\nbindany_newvars_aux (bnil _)                     Vars P <- reverse Vars Vars', P Vars'.\nbindany_newvars_aux (bcons (F : T -> bindany A)) Vars P <-\n  (x:T -> bindany_newvars_aux (F x) (cons (dyn x) Vars) P).\nbindany_newvars X P <- bindany_newvars_aux X nil P.\n\nbindany_apply : bindany A -> list dyn -> A -> prop.\nbindany_apply (bnil Body) (nil) Body.\nbindany_apply (bcons (F : T -> bindany A)) (cons (dyn (X : T)) XS) Body <-\n  bindany_apply (F X) XS Body.\n\nbindany_apply_sametype : bindany A -> list B -> A -> prop.\nbindany_apply_sametype (bnil Body) (nil) Body.\nbindany_apply_sametype (bcons F) (cons X XS) Body <-\n  bindany_apply_sametype (F X) XS Body.\n\nbindany_apply_partial : bindany A -> list dyn -> bindany A -> prop.\nbindany_apply_partial End nil End.\nbindany_apply_partial (bcons (fun (x : T) => F x)) (cons (dyn (X : T)) XS) End <-\n  bindany_apply_partial (F X) XS End.\n\nbindany_apply_partial_sametype : bindany A -> list B -> bindany A -> prop.\nbindany_apply_partial_sametype End nil End.\nbindany_apply_partial_sametype (bcons F) (cons X XS) End <-\n  bindany_apply_partial_sametype (F X) XS End.\n\nbindany_endmap : (B -> C -> prop) ->\n\t\t bindany B -> C -> prop.\nbindany_endmap P (bnil X) X' <- P X X'.\nbindany_endmap P (bcons (F : A -> bindany B)) X' <-\n  (x:A -> bindany_endmap P (F x) X').\n\nbindany_modifybody : (B -> C -> prop) ->\n\t\t     bindany B -> bindany C -> prop.\nbindany_modifybody P (bnil X) (bnil X') <- P X X'.\nbindany_modifybody P (bcons (F : A -> bindany B)) (bcons (G : A -> bindany C)) <-\n  (x:A -> bindany_modifybody P (F x) (G x)).\n\n(* TODO: fix this *)\nbindany_list_flatten : list (bindany A) -> bindany (list A) -> prop.\nbindany_list_flatten_aux : list (bindany A) -> bindany (list A) -> list A -> prop.\nbindany_list_flatten_aux nil          (bnil Rev) Acc <- reverse Acc Rev.\nbindany_list_flatten_aux (cons HD TL) BHDRest Acc <-\n  bindany_newvars HD (fun xs =>\n  newmeta (fun hdBody => newmeta (fun rest =>\n  (and (bindany_apply HD xs hdBody)\n  (and (bindany_apply_partial BHDRest xs rest)\n       (bindany_list_flatten_aux TL rest (cons hdBody Acc))))))).\nbindany_list_flatten L B <- bindany_list_flatten_aux L B nil.\n  \n\n(* listbindmany A B C\n   ----------------------------------------------------\n\n   A list of type A, where each element introduces a new binding for type B,\n   with a body of type C. *)\n\nlistbindmany : type -> type -> type -> type.\nlbcons   : A -> (B -> listbindmany A B C) -> listbindmany A B C.\nlbnil    : C -> listbindmany A B C.\n\nlistbindmany_binding : listbindmany A B C -> bindmany B C -> prop.\n\nlistbindmany_binding (lbnil C) (bnil C).\nlistbindmany_binding (lbcons _ (F : B -> listbindmany A B C)) (bcons F') <-\n  (x:B -> listbindmany_binding (F x) (F' x)).\n\nlistbindmany_newvars : listbindmany A B C -> (list B -> prop) -> prop.\nlistbindmany_newvars LB XSF <- listbindmany_binding LB B,\n                               bindmany_newvars B XSF.\n\nlistbindmany_apply : listbindmany A B C -> list B -> C -> prop.\nlistbindmany_apply LB XS Body <- listbindmany_binding LB B,\n                                 bindmany_apply B XS Body.\n\nlistbindmany_getinfo : listbindmany A B C -> list B -> list A -> prop.\nlistbindmany_getinfo (lbnil Body) nil nil.\nlistbindmany_getinfo (lbcons HD F) (cons X XS) (cons HD TL) <-\n  listbindmany_getinfo (F X) XS TL.\n\nlistbindmany_append : listbindmany A B C -> listbindmany A B D ->\n                      listbindmany A B D -> prop.\nlistbindmany_append (lbnil _) Rest Rest.\nlistbindmany_append (lbcons HD (TL : B -> listbindmany A B C)) Rest (lbcons HD TL') <-\n  (x:B -> listbindmany_append (TL x) Rest (TL' x)).\n\n\n(* listbindany T\n   ----------------------------------------------------\n\n   A list of type T, where each element might bind any number and type of stuff *)\n\nlistbindany : type -> type.\nlbcons   : A -> bindany (listbindany A) -> listbindany A.\nlbnil    : listbindany A.\n\nlistbindany_append : listbindany A -> bindany (listbindany A) -> listbindany A -> prop.\nlistbindany_append lbnil (bnil Y) Y.\nlistbindany_append (lbcons HD BTL) BY (lbcons HD BR) <-\n  bindany_newvars       BTL (fun vars =>\n  newmeta (fun TL => newmeta (fun Y => newmeta (fun R => \n  and  (bindany_apply BTL vars TL)\n  (and (bindany_apply_partial BY  vars Y)\n  (and (bindany_apply BR  vars R)\n       (listbindany_append TL Y R))))))).\n\nmklistbindany : list (tuple dyn B) -> listbindany B -> prop.\nmklistbindany nil lbnil.\nmklistbindany (cons (tuple (dyn (X : A)) Elm)\n\t       TL)\n\t      (lbcons Elm (bcons XRest)) <-\n  eq (XRest X) (bnil Rest),\n  mklistbindany TL Rest.\n\n\n");V("/./examples/lib/maps.makam","%use generic.\n\nmap : type -> type -> type.\n\nmap : list (tuple A B) -> map A B.\n\n\nmap_param_find : (B -> B -> prop) -> tuple A B -> map A B -> map A B -> prop.\nmap_param_find ParamEq (Key, Val) (map ( (Key', Val') :: Rest )) (map Rest) <-\n  eq_benign Key Key', ParamEq Val Val'.\nmap_param_find ParamEq (Key, Val) (map ( (Key', Val') :: Rest ))\n                       (map ( (Key', Val') :: Rest' )) <-\n  not(eq_benign Key Key'), map_param_find ParamEq (Key, Val) (map Rest) (map Rest').\n\nmap_param_sub : (B -> B -> prop) -> map A B -> map A B -> map A B -> prop.\nmap_param_sub ParamEq (map nil) X X.\nmap_param_sub ParamEq\n        (map ( (Key,  Val)  :: Rest1 ))\n        Map2 Res <-\n  map_param_find ParamEq (Key, Val) Map2 Rest2,\n  map_param_sub ParamEq (map Rest1) Rest2 Res.\n\nmap_param_eq : (B -> B -> prop) -> map A B -> map A B -> prop.\nmap_param_eq ParamEq S1 S2 <- map_param_sub ParamEq S1 S2 (map nil).\n\nmap_find : tuple A B -> map A B -> map A B -> prop.\nmap_find A B C <- map_param_find eq A B C.\n\nmap_sub  : map A B -> map A B -> map A B -> prop.\nmap_sub A B C <- map_param_sub eq A B C.\n\nmap_eq   : map A B -> map A B -> prop.\nmap_eq A B <- map_param_eq eq A B.\n\nmap_map : (A -> B -> prop) -> map K A -> map K B -> prop.\nmap_map P (map ( (Key, ValA) :: RestA ))\n          (map ( (Key, ValB) :: RestB )) <-\n  P ValA ValB, map_map P (map RestA) (map RestB).\n\nmap_add : map K A -> tuple K A -> map K A -> prop.\nmap_add (map M) (K, V) (map M') <-\n  ifte (map_find (K, _) (map M) _) (eq M' M) (eq M' ((K, V) :: M)).\n\nmap_union : map K A -> map K A -> map K A -> prop.\nmap_union M (map L') M'' <-\n  foldl map_add M L' M''.\n");V("/./examples/lib/subbindutils.makam","%use utils.\n%use bindutils.\n\nbindrel : type -> type.\n\nbindrel : bindany A -> bindrel A.\n\nbindrel_wf : A -> prop.\n\nbindrel_newvars : bindrel A -> (list dyn -> prop) -> prop.\nbindrel_newvars (bindrel Bind) Q <-\n  bindany_newvars Bind (fun vars => {prop| [Props]\n  map (fun v (u : unit) => newmeta (fun u' => eq u u')) vars Unifs,\n  map2 (fun v u res => {prop| [v'] eq v (dyn v'), eq res (clause (bindrel_wf v') (eq u unit)) |}) vars Unifs Props,\n  assumemanyclauses Props (and (Q vars) (map0 (fun u => not(refl.isunif u)) Unifs)) |}).\n\nbindrel_apply : bindrel A -> list dyn -> A -> prop.\nbindrel_apply (bindrel Bind) Vars Body <- bindany_apply Bind Vars Body.\n\n  \nbindlin : type -> type.\n\nbindlin : bindany A -> bindlin A.\n\nbindlin_wf : A -> prop.\n\nbindlin_newvars : bindlin A -> (list dyn -> prop) -> prop.\nbindlin_newvars (bindlin Bind) Q <-\n  bindany_newvars Bind (fun vars => {prop| [Props]\n  map (fun v (u : unit) => newmeta (fun u' => eq u u')) vars Unifs,\n  map2 (fun v u res => {prop| [v'] eq v (dyn v'), eq res (clause (bindlin_wf v') (and (refl.isunif u) (eq u unit))) |}) vars Unifs Props,\n  assumemanyclauses Props (and (Q vars) (map0 (fun u => not(refl.isunif u)) Unifs)) |}).\n\nbindlin_apply : bindlin A -> list dyn -> A -> prop.\nbindlin_apply (bindlin Bind) Vars Body <- bindany_apply Bind Vars Body.\n\n  \n");V("/./examples/lib/extutils.makam","%use generic.\n\nfind_benign : A -> list A -> prop.\nfind_benign Elm (HD :: TL) <-\n  ifte (eq_benign Elm HD)\n       (success)\n       (find_benign Elm TL).\n\nunique : list A -> list A -> prop.\nunique Input Output <-\n foldl (fun cur elm res =>\n        ifte (find_benign elm cur)\n             (eq res cur)\n             (eq res (elm :: cur)))\n       [] Input Output', reverse Output' Output.\n\nfv : A -> list B -> prop.\nfv_aux : dyn -> list B -> list B -> prop.\nfv_avoid : A -> prop.\n\nfv_aux Root Cur Res <-\n  caseguard Root\n    [ (dyn X, {prop| refl.headargs X V Args, isnvar V, not(fv_avoid V) |}, generic_fold fv_aux (dyn Args) (V :: Cur) Res),\n      (dyn (fun (x : A) => Body x), {prop| success |}, {prop| (x:A -> fv_avoid x -> generic_fold fv_aux (dyn (Body x)) Cur Res)  |}),\n      (_, success, generic_fold fv_aux Root Cur Res) ].\n  \nfv Root FV <-\n  generic_fold fv_aux (dyn Root) [] FV', unique FV' FV.\n\n\n\ngetunif : A -> B -> prop.\n\ngetunif_aux : dyn -> option B -> option B -> prop.\ngetunif_aux Root Cur (Res : option T) <-\n  caseguard (Cur, Root)\n    [ ( (some Cur', _), success, (eq Res Cur) ),\n      ( (none, (dyn X)), refl.isunif X,\n        (ifte (typeq (some X) Res)\n              (eq (dyn Res) (dyn (some X)))\n              (eq Res none)) ),\n      ( (_, _), success, generic_fold getunif_aux Root Cur Res ) ].\n\ngetunif Root Unif <- getunif_aux (dyn Root) none (some Unif).\n\nabsunif : A -> B -> (B -> A) -> prop.\nabsunif_aux : B -> B -> dyn -> dyn -> prop.\nabsunif_aux Unif Replace Root Res <-\n  caseguard Root\n    [ ( (dyn X), {prop| refl.isunif X, refl.decomposeunif X I _ |},\n                 {prop| ifte (refl.decomposeunif Unif I _) (eq Res (dyn Replace)) (eq Res (dyn X)) |}),\n      ( _, success, structural (absunif_aux Unif Replace) Root Res) ].\n\nabsunif Root (Unif : A) Res <-\n  (x:A -> absunif_aux Unif x (dyn Root) (dyn (Res x))).\n\n\n\n(* gather_all_unifs *)\ngather_all_unifs : dyn -> A -> list A -> prop.\n\ngather_all_unifs_aux : A -> dyn -> list A -> list A -> prop.\n\ngather_all_unifs_aux (Typ : A) Root Cur Res <-\n  caseguard Root\n   [ ( (dyn X), refl.isunif X,\n                {prop| ifte (typeq Typ X) (and (dyneq X Y) (eq Res (Y :: Cur))) (eq Res Cur) |} ),\n     ( _, success, generic_fold (gather_all_unifs_aux Typ) Root Cur Res ) ].\n\n\ngather_all_unifs Root Typ Res <-\n  gather_all_unifs_aux Typ Root [] Res.\n\n\n");V("/./examples/lib/ipred.makam","ipred : type.\n\nipred_forward  : ipred -> prop -> prop.\nipred_backward : ipred -> prop -> prop.\n\niand : ipred -> ipred -> ipred.\nipred_forward  (iand P1 P2) (and P1' P2') <- ipred_forward P1 P1', ipred_forward P2 P2'.\nipred_backward (iand P1 P2) (and P2' P1') <- ipred_backward P1 P1', ipred_backward P2 P2'.\n\nior : ipred -> ipred -> ipred.\nipred_forward  (ior P1 P2) (or P1' P2') <- ipred_forward P1 P1', ipred_forward P2 P2'.\nipred_backward (ior P1 P2) (or P1' P2') <- ipred_backward P1 P1', ipred_backward P2 P2'.\n\nilift : prop -> ipred.\nipred_forward  (ilift P) P.\nipred_backward (ilift P) P.\n\niliftbi : prop -> prop -> ipred.\nipred_forward  (iliftbi F B) F.\nipred_backward (iliftbi F B) B.\n\niifte : ipred -> ipred -> ipred -> ipred.\nipred_forward (iifte P1 P2 P3) (ifte P1' P2' P3') <- ipred_forward P1 P1', ipred_forward P2 P2', ipred_forward P3 P3'.\nipred_backward (iifte P1 P2 P3) (ifte P2' P1' P3') <- ipred_backward P1 P1', ipred_backward P2 P2', ipred_backward P3 P3'.\n(*\nThe following is more accurate: \n\nipred_backward (iifte P1 P2 P3)\n\t       (or (and P2' P1') (and P3' (once(not P1')))) <-\n   ipred_backward P1 P1', ipred_backward P2 P2', ipred_backward P3 P3'.\n*)\n\n\nisuccess : ipred.\nipred_forward  (isuccess) (success).\nipred_backward (isuccess) (success).\n\nifailure : ipred.\nipred_forward  (ifailure) (failure).\nipred_backward (ifailure) (failure).\n\ninewmeta : (A -> ipred) -> ipred.\nipred_forward  (inewmeta F) (newmeta Result) <-\n  (x:A -> ipred_forward (F x\xe2\x81\xbf_) (Result x\xe2\x81\xbf_)).\nipred_backward (inewmeta F) (newmeta Result) <-\n  (x:A -> ipred_backward (F x\xe2\x81\xbf_) (Result x\xe2\x81\xbf_)).\n\ninewvar : (A -> ipred) -> ipred.\nipred_forward  (inewvar F) (newvar Result) <-\n  (x:A -> ipred_forward (F x\xe2\x81\xbf_) (Result x\xe2\x81\xbf_)).\nipred_backward (inewvar F) (newvar Result) <-\n  (x:A -> ipred_backward (F x\xe2\x81\xbf_) (Result x\xe2\x81\xbf_)).\n\niknown : prop -> ipred -> ipred.\nipred_forward  (iknown W I) (assume (clause W success) P') <- ipred_forward I P'.\nipred_backward (iknown W I) (assume (clause W success) P') <- ipred_backward I P'.\n\nionce : ipred -> ipred.\nipred_forward  (ionce I) (once P) <- ipred_forward I P.\nipred_backward (ionce I) (once P) <- ipred_backward I P.\n");V("/./examples/lib/envlift.makam","%use utils.\n%use bindutils.\n%use lmcomp.\n\nctx         : type -> type.\nctx_lookup  : ctx A -> string -> A -> prop.\nctx_guess   : string -> A -> ctx A -> prop.\n\ninenv : type -> type.\n\ninenv_lift0 : A -> inenv A.\ninenv_lift1 : (T1 -> A) -> inenv T1 -> inenv A.\ninenv_lift2 : (T1 -> T2 -> A) -> inenv T1 -> inenv T2 -> inenv A.\ninenv_lift3 : (T1 -> T2 -> T3 -> A) -> inenv T1 -> inenv T2 -> inenv T3 -> inenv A.\ninenv_var  : ctx A -> string -> inenv A.\ninenv_nu   : ctx A -> string -> inenv B -> inenv (A -> B).\ninenv_numany : ctx A -> list string -> inenv B -> inenv (bindmany A B).\ninenv_nurec  : ctx A -> list string -> list (inenv B) -> inenv (bindmutrec A B).\n\ninenv_run      : inenv A -> A -> prop.\n\n\ninenv_run (inenv_nu (Ctx : ctx A) Id Body) (fun x => Body' x) <-\n  eq ^nx Id,\n  (x:A -> ctx_lookup Ctx Id x -> (ctx_guess Id x Ctx, inenv_run Body (Body' x))).\n\ninenv_run (inenv_numany Ctx nil Body)          (bnil  Body') <- inenv_run Body Body'.\ninenv_run (inenv_numany Ctx (cons HD TL) Body) (bcons (fun x => Body' x))  <-\n  eq ^nx HD,\n  (x:A -> ctx_lookup Ctx HD x -> (ctx_guess HD x Ctx, inenv_run (inenv_numany Ctx TL Body) (Body' x))).\n\ninenv_run (inenv_nurec Ctx nil nil) (bindmutrec (bnil nil)).\ninenv_run (inenv_nurec Ctx nil (cons HD TL)) (bindmutrec (bnil (cons HD' TL'))) <-\n  inenv_run HD HD', inenv_run (inenv_nurec Ctx nil TL) (bindmutrec (bnil TL')).\ninenv_run (inenv_nurec Ctx (cons HD TL) Bodies) (bindmutrec (bcons (fun x => Rest x))) <-\n  eq ^nx HD,\n  (x:A -> ctx_lookup Ctx HD x -> (ctx_guess HD x Ctx, inenv_run (inenv_nurec Ctx TL Bodies) (bindmutrec (Rest x)))).\n\ninenv_run (inenv_var Ctx Id) (V' : A) <-\n  newnmeta (fun (n : A) => and (eq n V') (ctx_lookup Ctx Id V')).\n\ninenv_run (inenv_lift0 C) E' <-\n  newfmeta (fun c => and (eq E' c) (eq C c)).\n\ninenv_run (inenv_lift1 C A1) E' <-\n  newfmeta (fun c => and (and (eq C c) (eq E' (c A1')))\n                     (inenv_run A1 A1')).\n\ninenv_run (inenv_lift2 C A1 A2) E' <-\n  newfmeta (fun c => and (and (eq C c) (eq E' (c A1' A2')))\n                     (and (inenv_run A1 A1') (inenv_run A2 A2'))).\n\ninenv_run (inenv_lift3 C A1 A2 A3) E' <-\n  newfmeta (fun c => and (and (eq C c) (eq E' (c A1' A2' A3')))\n                     (and (and (inenv_run A1 A1') (inenv_run A2 A2')) (inenv_run A3 A3'))).\n\nlm_valenv : A -> lm_comp (inenv A).\nlmcomp_to_ipred (lm_valenv C) IPred <- is_constructor C, lmcomp_to_ipred (lm_val (inenv_lift0 C)) IPred.\n\nlm_valenv : (T1 -> A) -> inenv T1 -> lm_comp (inenv A).\nlmcomp_to_ipred (lm_valenv C A1) IPred <- is_constructor C, lmcomp_to_ipred (lm_val (inenv_lift1 C A1)) IPred.\n\nlm_valenv : (T1 -> T2 -> A) -> inenv T1 -> inenv T2 -> lm_comp (inenv A).\nlmcomp_to_ipred (lm_valenv C A1 A2) IPred <- is_constructor C, lmcomp_to_ipred (lm_val (inenv_lift2 C A1 A2)) IPred.\n\nlm_valenv : (T1 -> T2 -> T3 -> A) -> inenv T1 -> inenv T2 -> inenv T3 -> lm_comp (inenv A).\nlmcomp_to_ipred (lm_valenv C A1 A2 A3) IPred <- is_constructor C, lmcomp_to_ipred (lm_val (inenv_lift3 C A1 A2 A3)) IPred.\n\nlm_valenvget : ctx A -> string -> lm_comp (inenv A).\nlmcomp_to_ipred (lm_valenvget Ctx Id) IPred <- lmcomp_to_ipred (lm_val (inenv_var Ctx Id)) IPred.\n\nlm_envrun : inenv B -> lm_comp B.\nlmcomp_to_ipred (lm_envrun X) IPred <- lmcomp_to_ipred (lm_lift inenv_run X) IPred.\n\n\n\n");V("/./examples/lib/extensions.makam","(* Redefine basic predicates before loading anything, so that\n   extensions are supported properly. *)\n\nbuiltin_known : clause -> prop -> prop.\nbuiltin_known C G <- known C G.\n\nbuiltin_resetknown : A -> prop -> prop.\nbuiltin_resetknown P G <- resetknown P G.\n\nknown : clause -> prop -> prop.\nresetknown : A -> prop -> prop.\n\n%use utils.\n%use generic.\n\n(* --------------------------------------------------------- *)\n(*  mode declarations                                        *)\n(* --------------------------------------------------------- *)\n\nguarded : type -> type.\n\ntransform_guarded : A -> B -> list dyn -> list dyn -> list dyn -> list dyn ->prop.\ntransform_guarded (X : (guarded A -> B)) (Y : A -> B') Res Res' Guards Guards' <-\n  transform_guarded (X' : B) (Y' : B') ( (dyn (Z : A)) :: Res ) Res' ( (dyn (Z : A)) :: Guards ) Guards'.\ntransform_guarded (X : A -> B) (Y : A -> B') Res Res' Guards Guards' <-\n  not(typeq (Q : A) (W : guarded C)),\n  transform_guarded (X' : B) (Y' : B') ( (dyn (Z : A)) :: Res ) Res' Guards Guards'.\ntransform_guarded X Y Res Res' Guards Guards' <-\n  not(typeq (X : A) (W : B -> C)), typeq X Y, reverse Res Res', reverse Guards Guards'.\n\ntransform_modedecl_preds : A -> A -> prop.\n\nmodedecl : cmd -> cmd -> prop.\n\ntransform_modedecl_clause : clause -> clause -> prop.\n\ntransform_modedecl_clause ClauseIn ClauseOut <-\n\n  caseguard ClauseIn\n   [ (clause G1 P1,\n        {prop| headargs G1 X1 Args1, transform_modedecl_preds X1 X1' |},\n        {prop| headargs G1' X1' Args1, eq ClauseOut (clause G1' P1) |}),\n     (whenclause G2 Pre2 P2,\n        {prop| headargs G2 X2 Args2, transform_modedecl_preds X2 X2' |},\n        {prop| headargs G2' X2' Args2, eq ClauseOut (whenclause G2' Pre2 P2) |}),\n     (C3,\n        {prop| success |},\n        {prop| eq ClauseOut ClauseIn |}) ].\n\n   \n\nmodedecl CmdIn CmdOut <-\n\n  caseguard CmdIn\n   [ (cmd_newterm X T,\n        {prop| transform_guarded T T' [] Params [] Guards, not(typeq T T') |},\n\t{prop| append X \"_guarded\" CX,\n\t       eq CmdOut (cmd_many\n\t         [ cmd_newterm X T' ,\n                   cmd_newterm CX T',\n                   cmd_stage (fun res =>\n\t\t     {prop| lookup X Xt, lookup CX CXt,\n                            headargs G Xt Params, headargs CG CXt Params,\n\t\t            eq res (cmd_many\n\t\t\t     [ cmd_newclause (clause (transform_modedecl_preds Xt CXt) (success)),\n\t\t\t       cmd_newclause (clause G (guardall Guards CG)) ]) |}) ]) |}),\n     (cmd_newclause C,\n        {prop| transform_modedecl_clause C C' |},\n        {prop| eq CmdOut (cmd_newclause C') |}),\n     (Cmd, success, eq CmdOut Cmd) ].\n\n\n\n(* --------------------------------------------------------- *)\n(*  otherwise clauses                                        *)\n(* --------------------------------------------------------- *)\n\notherwise : A -> prop.\notherwise X <- print \"The otherwise predicate is just an annotation -- it should not be used directly. Make sure you are using the owise extension.\", failure.\n\ntransform_owise_preds : A -> A -> A -> prop.\n\nowise : cmd -> cmd -> prop.\n\nget_goal : clause -> prop -> prop.\nget_goal (clause G _) G.\nget_goal (whenclause G _ _) G.\n\nset_goal : clause -> prop -> clause -> prop.\nset_goal (clause _ Q) G (clause G Q).\nset_goal (whenclause _ Q R) G (whenclause G Q R).\n\ntransform_owise_clause : clause -> clause -> prop.\n\ntransform_owise_clause ClauseIn ClauseOut <-\n\n  get_goal ClauseIn Goal,\n\n  caseguard Goal\n   [ (otherwise G1,\n        {prop| success |},\n        {prop| headargs G1 X1 Args1, transform_owise_preds X1 _ X1', headargs G1' X1' Args1,\n\t       set_goal ClauseIn G1' ClauseOut |}),\n     (G2,\n        {prop| headargs G2 X2 Args2, transform_owise_preds X2 X2' _ |},\n        {prop| headargs G2' X2' Args2, set_goal ClauseIn G2' ClauseOut |}),\n     (C3,\n        {prop| success |},\n        {prop| eq ClauseOut ClauseIn |}) ].\n\nappmany_all : A -> list dyn -> B -> prop.\nappmany_all (X : A -> B) (cons (dyn (HD : A)) TL) Res <- appmany_all (X HD) TL Res.\nappmany_all (X : A) nil (X : A) <- not(typeq X (Z : B -> C)).\n\nowise CmdIn CmdOut <-\n\n  caseguard CmdIn\n   [ (cmd_newterm X T,\n        {prop| success |},\n\t{prop| append X \"_normal\" X1,\n\t       append X \"_otherwise\" X2,\n\t       eq CmdOut (cmd_many\n\t         [ cmd_newterm X T,\n\t\t   cmd_newterm X1 T,\n\t\t   cmd_newterm X2 T,\n                   cmd_stage (fun res =>\n\t\t     {prop| lookup X Xt, lookup X1 X1t, lookup X2 X2t,\n\t\t            appmany_all Xt Unifs XtUnifs, appmany_all X1t Unifs X1tUnifs, appmany_all X2t Unifs X2tUnifs,\n\t\t            eq res (cmd_many\n\t\t\t     [ cmd_newclause (clause (transform_owise_preds Xt X1t X2t) success),\n\t\t\t       cmd_newclause (clause XtUnifs (ifte X1tUnifs success X2tUnifs)) ]) |}) ]) |}),\n     (cmd_newclause C,\n        {prop| transform_owise_clause C C' |},\n        {prop| eq CmdOut (cmd_newclause C') |}),\n     (Cmd, success, eq CmdOut Cmd) ].\n\n\n\n(* ------------------------------------------------ *)\n(*  transformation of clauses for known/resetknown  *)\n(* ------------------------------------------------ *)\n\ntransform_clause : clause -> clause -> prop.\ntransform_clause C C'' <- transform_modedecl_clause C C', transform_owise_clause C' C''.\n\n\nknown C Q <- \n  transform_clause C C', builtin_known C' Q.\nresetknown C Q <-\n  transform_clause C C', builtin_known C' Q.\n\n\n\n(* test *)\n\nknd            : type.\nktype          : knd.\nkname          : knd.\nkarrow         : knd -> knd -> knd.\nkmap           : knd -> knd.\ntyp            : type.\ntarrow         : typ -> typ -> typ .\ntbase          : string -> typ.\ntpi            : knd -> (typ -> typ) -> typ.\n\nkindof_var : string -> knd -> prop.\n\n`( modedecl (cmd_newterm \"kindof\" (X : guarded typ -> knd -> prop)) ).\n`( modedecl (cmd_newclause (clause (kindof (tarrow T1 T2) ktype) {prop| kindof T1 ktype, kindof T2 ktype |}))).\n`( modedecl (cmd_newclause (clause (kindof (tbase T) K) {prop| kindof_var T K |}))).\n`( modedecl (cmd_newclause (clause (kindof (tpi K TF) ktype) {prop| (x:typ -> kindof x K -> kindof (TF x) ktype) |}))).\n\n\n`( owise (cmd_newterm \"test\" (X : knd -> prop))).\n`( owise (cmd_newclause (clause (test ktype) (print \"lala\"))) ).\n`( owise (cmd_newclause (clause (otherwise (test X)) {prop| print \"babu\", eq X ktype, print \"bare\" |}))).\n\n\n");V("/./examples/lib/builtins.makam","(* These are all the built-in types and predicates for Makam.\n   Included here for documentation. *)\n\n(* ----- Builtin types. *)\n\n(*\n\nint : type.\n(integer literal) : int.\n\nstring : type.\n(string literal) : string.\n\nlist : type -> type.\nnil : list A.\ncons : A -> list A -> list A.\n\nunit : type.\nunit : unit.\n\nbool : type.\ntrue : bool.\nfalse : bool.\n\ndyn : type.\ndyn : A -> dyn.\n\n*)\n\n(* ----- Logic programming engine. *)\n\n(*\n\nprop : type.\n\nclause : type.\n\nclause : prop -> prop -> clause. (* P <- Q. where P is goal and Q is premise *)\nwhenclause : prop -> prop -> prop -> clause.\n                                 (* (P) when P' <- Q. P is the goal, P' is an\n                                    extra premise to see if the rule applies,\n                                    and Q is the actual premise.\n                                    behaves exactly like P <- and P' Q, but the\n                                    tracing behavior is different, so just useful for\n                                    debugging *)\n\n\nsuccess : prop.\nfailure : prop.\nand : prop -> prop -> prop.\nor  : prop -> prop -> prop.\nnewvar : (A -> prop) -> prop.  (* allocate fresh variable of type A locally *)\nnewmeta : (A -> prop) -> prop. (* allocate fresh metavariable of type A (globally) *)\nnewfmeta : (A -> prop) -> prop. (* allocate parameter metavariable of type A (globally),\n                                   matching only free variables (top-level constants) *)\nnewnmeta : (A -> prop) -> prop. (* allocate parameter metavariable of type A (globally),\n                                   matching only locally introduced variables *)\nassume : clause -> prop -> prop. (* assume C P adds a local rule C while evaluating P *)\nifte : prop -> prop -> prop -> prop.\n         (* logical conditional. ifte P Q R first attempts to find a solution for P.\n            if any solution exists, then continues with Q, preserving backtracking\n            points for P (so additional solutions will still be tried out).\n            if no solution for P is found, then continues with R *)\nonce : prop -> prop.\n         (* once P continues with evaluation of P. if successful, all backtracking\n            points spawned while evaluating P are discarded. *)\nguard : A -> prop -> prop.\n         (* guard X P executes P if X is concrete; if it is an uninstantiated\n            metavariable, it defers P until X actually becomes instantiated. *)\nremovableguard : unit -> A -> prop -> prop.\n         (* removableguard Trigger X P is like guard, but allows you to remove\n            the guard through the Trigger metavariable: forcing instantiation\n            of Trigger removes the deferred predicate P even if X is uninstantiated.\n            useful as a building block, e.g. for implementing guarding on multiple\n            variables. *)\n*)\n\n(* ----- External predicates. *)\n\n(*\n\nplus : int -> int -> int -> prop.\nmult : int -> int -> int -> prop.\n       (* integer operations. these are bidirectional, so work like minus and div as well. *)\n\nlessthan : int -> int -> bool -> prop.\n\n\nappend : string -> string -> string -> prop.\nexplode : string -> list string -> prop.\n          (* explode a string into a list of characters. we don't have a specialized char type; the strings in the second list are guaranteed to be single UTF8 characters. works bidirectionally *)\n\nprint : A -> prop.\n          (* generic printing predicate *)\nprint_string : string -> prop.\n          (* print a string *)\nshow : A -> string -> prop.\n          (* print any term as a string *)\n*)\n\n\n\n(* ----- Reflective predicates. *)\n\n(*\n\n%extend refl.\n         (* all of these are in the 'refl' module, so must be prefixed with 'refl.' *)\n\nisunif : A -> prop.\n         (* isunif X succeeds if X is an uninstantiated metavariable *)\n\nlookup : string -> A -> prop.\n         (* lookup S C looks up the constant C with name S. works bidirectionally. *)\n\nheadargs : A -> B -> list dyn -> prop.\n           (* headargs E HD ARGS splits the term E, presumed to be of base type,\n              and of the form (constant) A1 A2 ... An, into its head and\n              arguments (A1 through An).\n              works bidirectionally for term formation. *)\n\ndecomposeunif : A -> int -> list dyn -> prop.\n                (* decomposeunif E ID ARGS splits the term E, which is supposed to\n                   be a use of an uninstantiated metavariable of the form X A1 .. An,\n                   into a unique identifier for X and a list of arguments -- understood\n                   to be the explicit substitution X is used with. Useful for figuring\n                   out whether two metavariables refer to the same uninstantiated meta.\n                   Works in one direction only, as the other direction would lead to\n                   all sorts of trouble. *)\n\nrecomposeunif : A -> list dyn -> A -> prop.\n                (* recomposeunif E ARGS' E' assumes that E is a use of an uninstantiated\n                   metavariable of the form X A1 .. An. It changes the explicit\n                   substitution A1 .. An into ARGS' to form E' := X A'1 ... A'n *)\n\nassume_reset : A -> prop -> prop.\n         (* assume_reset P Q expects that P is a predicate (has a type of the form\n            ... -> prop). It removes all local assumptions (introduced through assume)\n            for the P predicate; this happens locally while evaluating Q. This predicate\n            is useful for implementing modal typing and related type system features. *)\n\n\n%end.\n*)\n\n(* ----- Staging. *)\n\n(*\n\ncmd : type.\n(* top-level Makam commands. *)\n\ncmd_newclause : clause -> cmd.\ncmd_newterm   : string -> A -> cmd.\ncmd_many      : list cmd -> cmd.\ncmd_stage     : (cmd -> prop) -> cmd.\ncmd_none      : cmd.\n\n*)");V("/./examples/experiments/testing.makam",'%use utils.\n\n%extend testing.\n\n%extend private.\n\ntest_result : prop -> bool -> prop.\ntest_result Test true.\ntest_result Test false <- print "!!!!!! test", print Test, print "!!!!! failed".\n\nreify_success : prop -> bool -> prop.\nreify_success P R <- ifte P (eq R true) (eq R false).\n\nequiv : bool -> bool -> bool -> prop.\nequiv true true true.\nequiv false false true.\nequiv false true false.\nequiv true false false.\n\n%end.\n\nexpect : prop -> prop -> cmd -> prop.\nexpect P1 P2 (cmd_query (private.test_result P2 Res)) <-\n  private.reify_success P1 R1, private.reify_success P2 R2,\n  private.equiv R1 R2 Res.\n\n%end.\n');V("/./examples/experiments/stlc_strategies.makam",'%use utils.\n\nmemoized : A -> prop.\nmemoized_aux : (A -> prop) -> A -> prop.\nmemoized_aux P V <-\n  ifte (refl.isunif V) (P V) success.\nmemoized X <-\n  refl.headargs X Hd Args,\n  reverse Args ( (dyn (Last : A)) :: RArgs\'),\n  reverse RArgs\' Args\',\n  appmany Hd Args\' P,\n  memoized_aux P Last.\n\nterm : type.\n\nlam : (term -> term) -> term.\napp : term -> term -> term.\n\n\neval : term -> term -> prop.\n\nstrategy : type.\neval_strategy : strategy -> prop.\ncbval : strategy.\ncbneed : strategy.\ncbname : strategy.\n\neval (app E1 E2) V <-\n   eval_strategy cbval,\n   eval E1 (lam (fun x => Body x)),\n   eval E2 V2,\n   eval (Body V2) V.\n\neval (lam E) (lam E).\n\neval (app E1 E2) V <-\n   eval_strategy cbname,\n   eval E1 (lam (fun x => Body x)),\n   eval (Body E2) V.\n\neval (app E1 E2) V <-\n  eval_strategy cbneed,\n  eval E1 (lam Body),\n  ( thunk:term ->\n    (eval thunk V2 <- memoized(eval E2 V2)) ->\n    eval (Body thunk) V ).\n\ntuple : list term -> term.\neval (tuple ES) (tuple VS) <-\n  map eval ES VS.\n\nside_effect : term.\neval (side_effect) (tuple []) <- print "evaluation".\n\neval_cbv : term -> term -> prop.\neval_cbnd : term -> term -> prop.\neval_cbnm : term -> term -> prop.\neval_cbv X Y <- (eval_strategy cbval -> eval X Y).\neval_cbnm X Y <- (eval_strategy cbname -> eval X Y).\neval_cbnd X Y <- (eval_strategy cbneed -> eval X Y).\n\n\n(eq TERM (app (lam (fun x => tuple [x, x])) side_effect),\n print_string "cbv eval\\n", eval_cbv TERM CBV_VAL, print CBV_VAL,\n print_string "cbname eval\\n", eval_cbnm TERM CBNM_VAL, print CBNM_VAL,\n print_string "cbneed eval\\n", eval_cbnd TERM CBND_VAL, print CBND_VAL) ?\n\n');V("/./examples/experiments/refactoring.makam","%use utils.\n\n%extend refltype.\n\nresult : [A B] A -> B -> prop.\n(result X Y) when refl.isfun X <- (x:A -> result (X x) Y).\n(result X Y) when not(refl.isfun X) <- typeq X Y.\n\nispred : [A] A -> prop.\nispred X <- result X (Z : prop).\n\n%end.\n\n\ndup_head : [A B] A -> B -> prop.\n(dup_head P P') when refl.isfun P <- (x:T -> dup_head (P x) P').\n(dup_head P P') when refl.isbaseterm P <- refl.headargs P Head _, refl.headname P PName, refl.lookup PName P'.\n\ndyncall : [A] (A -> prop) -> dyn -> prop.\ndyncall P (dyn X) <- refl.duphead P P', P' X.\n\ndyncall : [A B] (A -> B -> prop) -> dyn -> dyn -> prop.\ndyncall P (dyn X) (dyn Y) <- refl.duphead P P', P' X Y.\n\n(* ([X]allheads X, print X, map0 (dyncall printhead) X) ? *)\n\n\nfilter : (A -> prop) -> list A -> list A -> prop.\nfilter P (HD :: TL) (HD :: TL') <- P HD, filter P TL TL'.\nfilter P (HD :: TL) TL' <- not(P HD), filter P TL TL'.\nfilter P nil nil.\n\nallrules : list clause -> prop.\nallrules Rules <- refl.allconstants XS, filter (dyncall refltype.ispred) XS PS, map (dyncall refl.rules_get) PS RulesCD,\n                  map (fun x y => eq x (dyn y)) RulesCD RulesC,\n                  foldl append [] RulesC Rules.\n\n%use generic.\n\nprintlocsof_aux : A -> dyn -> dyn -> prop.\nprintlocsof_aux Head (dyn X) (dyn Y) <-\n  (if refl.headargs X Head' _\n   then (if dyneq Head' Head\n         then (locget X L, print L, structural (printlocsof_aux Head) (dyn X) (dyn Y))\n         else structural (printlocsof_aux Head) (dyn X) (dyn Y))\n   else (if refl.isunif X\n         then dyneq X Y\n         else structural (printlocsof_aux Head) (dyn X) (dyn Y))).\n\nprintlocsof : A -> B -> prop.\nprintlocsof Head What <- printlocsof_aux Head (dyn What) _.\n\n\nprintloc : A -> prop.\nprintloc X.\n(* printloc X <- print X, locget X L, print L. *)\n\nfinduses : A -> prop.\nfinduses X <- allrules Rules, \n\t      map0 (printlocsof X) Rules.\n\nfinduses not ?\n");V("/./examples/experiments/structural_rules.makam",'(* This experiment is an exploration of the following ideas:\n\n     - can we have predicates where the evaluation strategy for rules is\n       different than the built-in one?\n       e.g. a predicate where the first rule that applies gets used (sequence rules together with IFTE instead of OR)\n            a predicate with an otherwise clause\n            a predicate that only has the rules where structural recursion does not apply\n     - an initial approach to testing\n     - reflecting on rules: a getrules predicate that gives us all the rules of a specificate predicate.\n                            for the time being we fake this; we need to implement a built-in operator\n                            that pulls all rules, instantiates each one with new metavariables,\n                            and returns them as a list of clauses. \n     - avoiding dyn when defining/using structural.\n       this requires a hack right now, since we do not have rank-N polymorphism. basically, the correct\n       type for structural is:\n         structural : (forall A. A -> A -> prop) -> forall A. A -> A -> prop\n       unfortunately this is not supported in Makam, since we only have prenex polymorphism. so we get\n       instead\n         structural : forall A B. (A -> A -> prop) -> (B -> B -> prop)\n       however, we have dynamic typing. if we avoid runtime type unification by indirecting calls to\n        the recursive predicate, we might be able to fake the behavior of the \'correct\' type.\n\n*)\n\n\n\n%use utils.\n%use testing.\n%use generic.\n\n\ngetrules : [A] A -> list clause -> prop.\n\n\nclausegoal : clause -> (prop -> prop) -> prop.\nclausegoal (clause Goal Premise) (eq Goal).\nclausegoal (whenclause Goal When Premise) (fun g => and (eq Goal g) (When)).\n\nclausepremise : clause -> prop -> prop.\nclausepremise (clause Goal Premise) Premise.\nclausepremise (whenclause Goal When Premise) Premise.\n\n\ndemand_ifte : prop -> prop -> prop -> prop.\n(* compose rules with ifte instead of or, and add an otherwise clause *)\n\ndemand_ifte P OW Res <-\n  refl.headargs P Predicate _,\n  getrules Predicate Rules,\n  foldr (fun elm cur res => {prop| [G Pr]\n        clausegoal elm G, \n        clausepremise elm Pr,\n        eq res (ifte (G P) Pr cur) |}) Rules OW Res.\n\n\ntest : string -> prop.\n\ntest X <- demand_ifte (test X)\n                      (and (print ("test did not work for", X)) failure) P, P.\n\n(* fake reflection of rules.\n   still need to figure out a way to differentiate between the \'actual\' rule that changes what\n   demanding the predicate means (as above), and the real rules as the ones below.\n   easiest solution is to just have the real rules live in a different predicate. *)\n\ngetrules test [ clause (test "aaa") success,\n                whenclause (test Z) {prop| eq X "b", string.append (X : string) Y Z |} success\n              ].\n\n`( testing.expect success (test "aaa") ).\n`( testing.expect success (test "baa") ).\n`( testing.expect failure (test "caa") ).\n\n\n\nchange_strings : dyn -> dyn -> prop.\n\ngetrules change_strings [ clause (change_strings (dyn (X : string)) (dyn "q")) success ].\n\nchange_strings X Y <-\n  demand_ifte ( change_strings X Y )\n              ( structural change_strings X Y ) P,\n  P.\n\n\n`( testing.expect success (change_strings (dyn [ "lala", "dada" ]) (dyn [ "q", "q" ])) ).\n\nchange_strings (dyn [ "lala", "dada" ]) X ?\n\n\n\n(* try out a version of structural without explicit dyn wrappping *)\n\n\n(* fake rank-N polymorphism by duplicating a polymorphic head.\n   (this forces generation of fresh type variables, which can be instantiated independently) *)\n\ndup_head : [A B] A -> B -> prop.\n(dup_head P P\') when refl.isfun P <- (x:T -> dup_head (P x) P\').\n(dup_head P P\') when refl.isbaseterm P <- refl.headargs P Head _, refl.headname P PName, refl.lookup PName P\'.\n\npolyrec : (A -> B -> prop) -> C -> D -> prop.\npolyrec P X Y <- dup_head P P\', P\' X Y.\n\ndyncall : (A -> B -> prop) -> dyn -> dyn -> prop.\ndyncall P (dyn X) (dyn Y) <- polyrec P X Y.\n\ngentest : [A B] A -> B -> prop.\ngentest "lala" 15.\ngentest 20 "qwerty".\n\n`( testing.expect success {prop| map (dyncall gentest) [dyn "lala", dyn 20] [dyn 15, dyn "qwerty"] |} ).\n\n\nstructural : [A B] (A -> A -> prop) -> B -> B -> prop.\n\n(structural Rec X Y) when refl.isunif X, refl.isunif Y <-\n  guardmany [ dyn X , dyn Y ] (polyrec Rec X Y).\n\n(structural Rec X X) when refl.isconst X.\n\n(structural Rec X Y) when refl.isfun X <-\n  (x:A -> polyrec Rec (X x) (Y x)).\n\n\n(structural Rec X Y) when refl.isbaseterm X <-\n  refl.headargs X Hd Args,\n  map (dyncall Rec) Args Args\',\n  refl.headargs Y Hd Args\'.\n\n(structural Rec X Y) when refl.isunif X, refl.isbaseterm Y <-\n  refl.headargs Y Hd Args\',\n  map (dyncall Rec) Args Args\',\n  refl.headargs X Hd Args.\n\n\nnicer_change_strings : A -> A -> prop.\n\ngetrules nicer_change_strings [ clause (nicer_change_strings X "q") success ].\n\ndemand_structural : prop -> prop -> prop.\ndemand_structural P P\' <-\n  refl.headargs P Pred _,\n  demand_ifte P ( structural Pred X Y ) P\'.\n\nnicer_change_strings X Y <-\n  demand_structural (nicer_change_strings X Y) P, \n  P.\n\n\n`( testing.expect success (nicer_change_strings [ "lala", "dada" ] [ "q", "q" ]) ).\n\n\n\n\n(* OK cool. Now we need to figure out:\n    - what happens with local rules and assume?\n    - how should the demand rule actually be implemented?\n*)');V("/./examples/experiments/demo.makam","%use utils.\n%use bindutils.\n\nexpr : type.\n\nintconst : int -> expr.\nplus : expr -> expr -> expr.\nminus : expr -> expr -> expr.\nmult : expr -> expr -> expr.\nlt : expr -> expr -> expr.\n\nboolconst : bool -> expr.\nifthenelse : expr -> expr -> expr -> expr.\n\nstringconst : string -> expr.\nprintstring : expr -> expr.\n\n\n\n\n%type (ifthenelse (lt (intconst 15) (intconst 20)) (printstring (stringconst \"less\")) (printstring (stringconst \"greater\"))).\n\n\n\n\neval : expr -> expr -> prop.\n\neval (intconst N) (intconst N).\neval (boolconst B) (boolconst B).\neval (stringconst S) (stringconst S).\n\neval (plus E1 E2) (intconst N) <-\n  eval E1 (intconst N1), eval E2 (intconst N2), plus N1 N2 N.\n\neval (minus E1 E2) (intconst N) <-\n  eval E1 (intconst N1), eval E2 (intconst N2), plus N N2 N1.\n\neval (mult E1 E2) (intconst N) <-\n  eval E1 (intconst N1), eval E2 (intconst N2), mult N1 N2 N.\n\neval (lt E1 E2) (boolconst B) <-\n  eval E1 (intconst N1), eval E2 (intconst N2), lessthan N1 N2 B.\n\neval (ifthenelse Cond If Else) V <-\n  eval Cond (boolconst true),\n  eval If V.\n\neval (ifthenelse Cond If Else) V <-\n  eval Cond (boolconst false),\n  eval Else V.\n\neval (printstring E) (boolconst true) <-\n  eval E (stringconst S),\n  print S.\n\n\n\n\n\n(* let's add let: *)\nlet : expr -> (expr -> expr) -> expr.\n(* let x = e in e'\n   let e (fun x => e' x)\n*)\n\neval (let Def Body) V <-\n  eval Def V',\n  eval (Body V') V.\n\n\n(* let's add multiple-argument non-recursive functions: *)\nnrfunction : bindmany expr expr -> expr.\n(* function (a, b, c...) => e  is written as\n   function (bcons (fun a => bcons (fun b => bcons (fun c => bnil e)))) *)\n\ncall : expr -> (list expr -> expr).\n\neval (nrfunction FDef) (nrfunction FDef).\n\neval (call F Args) V <-\n  eval F (nrfunction FDef),\n  map eval Args VArgs,\n  bindmany_apply FDef VArgs Body',\n  eval Body' V.\n\n\n(* let's add multiple-argument recursive functions: *)\n\nfunction : (expr -> bindmany expr expr) -> expr.\n(* function f(a, b, c...) => e  is written as\n   function (fun f => bcons (fun a => bcons (fun b => bcons (fun c => bnil e)))) *)\n\neval (function FDef) (function FDef).\n\neval (call F Args) V <-\n  eval F (function FDef),\n  map eval Args VArgs,\n  (frec:expr -> \n   eval frec (function FDef) ->\n   (bindmany_apply (FDef frec) VArgs (E frec),\n    eval (E frec) V)).\n\n\n\neval (let (function (fun fact => bcons (fun n => bnil (\n              ifthenelse (lt n (intconst 1))\n                         (intconst 1)\n                         (mult n (call fact [minus n (intconst 1)]))))))\n      (fun fact => call fact [intconst 5])) X ?\n\n\n\n\n\n(* how about a type system? *)\ntyp : type.\n\ntypeof : expr -> typ -> prop.\n\ntint : typ.\ntstring : typ.\ntbool : typ.\n\ntypeof (intconst I) tint.\ntypeof (stringconst S) tstring.\ntypeof (boolconst B) tbool.\n\ntypeof (plus E1 E2) tint <- typeof E1 tint, typeof E2 tint.\ntypeof (minus E1 E2) tint <- typeof E1 tint, typeof E2 tint.\ntypeof (mult E1 E2) tint <- typeof E1 tint, typeof E2 tint.\n\ntypeof (lt E1 E2) tbool <- typeof E1 tint, typeof E2 tint.\n\n\ntypeof (ifthenelse Cond If Else) T <- typeof Cond tbool, typeof If T, typeof Else T.\n\ntypeof (printstring S) tbool.\n\ntypeof (let E E') T' <-\n  typeof E T,\n  (x:expr -> typeof x T -> typeof (E' x) T').\n\n\n(* ok now something harder: *)\n\ntfun : list typ -> typ -> typ.\n\n(* e.g. (int, int, string) returns bool *)\n\n\n(* ok, let's do the easy part first: function call. *)\ntypeof (call F Args) TReturn <-\n  typeof F (tfun TArgs TReturn),\n  map typeof Args TArgs.\n\n(* now for the hard thing. *)\ntypeof (function FDef) TFun <-\n  eq TFun (tfun TArgs TReturn),\n  (f:expr ->\n    typeof f TFun ->\n    bindmany_newvars (FDef f) (fun args =>\n      many_assume typeof args TArgs {prop| [Body]\n        bindmany_apply (FDef f) args Body,\n        typeof Body TReturn |})).\n\n\ntypeof (function (fun fact => bcons (fun n => bnil (\n              ifthenelse (lt n (intconst 1))\n                         (intconst 1)\n                         (mult n (call fact [minus n (intconst 1)])))))) T ?\n\n\n\n\n\n\n\n\n(* ok, what about a function with generics? :-) *)\n\n\n(* first, let's have a type that actually uses generics. *)\n(*\nlist : list expr -> expr.\ntlist : typ -> typ.\n\neval (list ES) (list VS) <- map eval ES VS.\n\ntypeof (list ES) (tlist T) <- map0 (fun expr => typeof expr T) ES.\n\nlistcase : expr -> expr -> (expr -> expr -> expr) -> expr.\n\neval (listcase E NilCase ConsCase) V <- eval E (list []), eval NilCase V.\neval (listcase E NilCase ConsCase) V <- eval E (list (HD :: TL)), eval (ConsCase HD TL) V.\n\ntypeof (listcase E NilCase ConsCase) T <-\n  typeof E (tlist A),\n  typeof NilCase T,\n  (hd:expr -> tl:expr ->\n   typeof hd A -> typeof tl (tlist A) ->\n   typeof (ConsCase hd tl) T).\n*)\n(* ok, now let's move on to functions. *)\n(*\ngenfunction : (expr -> (bindmany expr expr)) ->\n              typ ->\n              expr.\n\ntgen : bindmany typ typ -> typ.\n*)\n(* function f<A, B>(a : A -> B, b : list A) : list B => e   is written as\n    genfunction (fun f => bcons (fun a => bcons (fun b => bnil e)))\n                <A, B>(A -> B, list A) -> list B *)\n\n(*\neval (genfunction FDef Typ) (genfunction FDef Typ).\n\ntypeof (call GF Args) TRet <-\n  typeof GF (tgen GenTyp),\n  map typeof Args TArgs,\n  bindmany_apply GenTyp Instantiations (tfun TArgs TRet).\n\n\n\n*)");V("/./examples/experiments/benchmark.makam","%benchmark+.\n%use testocaml.\n");V("/./examples/new/testocaml.makam",'%use ocaml.\n%use ocamlpretty.\n\n(* examples *)\n\n(typeof (let\n         (lam (bindone "f" (fun f => lam (bindone "g" (fun g => lam (bindone "x" (fun x =>\n          app f (app g x))))))))\n         (bindone "compose" (fun compose => compose))) X, ocaml.print_type X) ?\n\n(typeof (letrec\n        (bindnext "compose" (fun compose => bindend ([\n           (lam (bindone "f" (fun f => lam (bindone "g" (fun g => lam (bindone "x" (fun x =>\n            app f (app g x))))))))\n         ], compose)))) X, ocaml.print_type X) ?\n\n(typeof (letrec\n           (bindnext "append" (fun \n           append => bindend ([\n             lam (bindone "x" (fun x => lam (bindone "y" (fun y =>\n             match x\n               [ bindnext "hd" (fun hd => bindnext "tl" (fun tl => bindend\n                 (pconstr "Cons" (ptuple [ pvar hd, pvar tl ]),\n                  constr "Cons" (tuple [ hd, app (app append tl) y ])))),\n\n                 bindend\n                 (pconstrun "Nil", y) ])))) ],\n            append)))) Y, ocaml.print_type Y) ?\n\nsigof (strmany\n         [ strletrec\n           (bindnext "append" (fun append => bindend [\n           lam (bindone "x" (fun x => lam (bindone "y" (fun y => \n           match x\n             [ bindnext "hd" (fun hd => bindnext "tl" (fun tl => bindend\n                ( pconstr "Cons" (ptuple [pvar hd, pvar tl]),\n                  constr "Cons" (tuple [hd, app (app append tl) y])))),\n               bindend\n                ( pconstrun "Nil",\n                  y ) ])))) ])),\n           strlet "g" (named "append") ]) S ?\n\nsigof (strmany\n        [strtypesingle "tree" [ktype] (typdef_variant\n           [ ("Leaf", csdefunit),\n             ("Node", csdef (typconstr (bindnext "a" (fun a => bindend (tprod [tbase "tree" [a], a, tbase "tree" [a]]))))) ]),\n         strlet "isempty"\n           (lam (bindone "t" (fun t => match t\n              [ bindnext "top" (fun top => bindend\n                   ( pconstr "Node" (ptuple [pwild, pvar top, pwild]),\n                     top ))] ))) ]) S ?\n\nsigof (strmany\n         [ strtypesingle "test1" [ktype, ktype] (typdef_eq\n            (typconstr (bindnext "a" (fun a => bindnext "b" (fun b => bindend (\n                   tprod [ tbase "list" [a],\n                           tbase "list" [ tbase "list" [ tprod [b, a] ] ] ])))))),\n           strtypesingle "test2" [ktype] (typdef_eq\n            (typconstr (bindnext "a" (fun a => bindend (\n                   tbase "test1" [a, a]))))),\n           strlet "f" (lam (bindone "x" (fun x => ascribe x (tbase "test2" [tbase "unit" []])))),\n           strlet "g" (app (named "f")\n                          (tuple [ construn "Nil",\n                                  constr "Cons" (tuple [ (constr "Cons" (tuple [tuple [construn "Unit", construn "Unit"], construn "Nil"])) ,\n                                                         constr "Cons" (tuple [construn "Nil", construn "Nil"])])])) ]) S ?\n\n\n');V("/./examples/new/ocamlpretty.makam",'%extend string.\n\nconcat : list string -> string -> prop.\nconcat SS S <- foldr string.append SS "" S.\n\n%end.\n\n\ngracewithnames : [A] A -> A -> prop.\ngracewithnames : [A] int -> A -> A -> prop.\ngracewithnames_ : [A] int -> A -> A -> prop.\n\ngracewithnames X Y <-\n  gracewithnames 0 X Y.\n\ngracewithnames N X Y <-\n  demand.case_otherwise (gracewithnames_ N X Y) (structural (gracewithnames N) X Y).\n\ngracewithnames_ N (X : bindone typ A) Y when bindone.varname X S, refl.isunif S <-\n  tostring N Suffix, string.append "a" Suffix S,\n  plus N 1 N\',\n  bindone.open X Y (fun x body body\' => gracewithnames N\' body body\').\n\n\nlistdo : list (A -> prop) -> list A -> prop.\nlistdo L L\' <- map (fun p => p) L L\'.\n\ndoconcat : list (string -> prop) -> string -> prop.\ndoconcat SS S <- listdo SS SS\', string.concat SS\' S.\n\n%extend string.\nintersperse : string -> list string -> string -> prop.\nintersperse _ [] "".\nintersperse _ [Last] Last.\nintersperse D (HD :: TL) S <- intersperse D TL TL\', string.concat [HD, D, TL\'] S.\n%end.\n\npretty, pretty_ : typ -> string -> prop.\npretty T S <- demand.case (pretty_ T S).\n\npretty_ (tarrow T1 T2) S <-\n  doconcat [ eq "(", pretty T1, eq " => ", pretty T2, eq ")" ] S.\n\npretty_ (tprod TS) S <-\n  map pretty TS TS\',\n  string.intersperse " * " TS\' TS\'\',\n  string.concat [ "(", TS\'\', ")" ] S.\n\npretty_ (tbase X []) X.\n\npretty_ (tbase X L) S <-\n  map pretty L L\',\n  string.intersperse " " L\' L\'\',\n  string.concat [ X, " ", L\'\' ] S.\n\npretty_ (tpi K F) S <-\n  bindone.open F (fun x body =>\n    doconcat [ eq "(", eq "forall ", nameofvar x, eq ".", pretty body, eq ")" ] S\n  ).\n\npretty_ X S when refl.isnvar X <- nameofvar X S.\n\n%extend ocaml.\n\nprint_type : typ -> prop.\nprint_type T <-\n  gracewithnames T T\',\n  pretty T\' S,\n  string.concat [ "\\n\\n", S, "\\n\\n" ] S\',\n  print_string S\'.\n\n%end.\n');V("/./examples/new/ocaml.makam","(* kinds *)\nknd     : type.\n\nktype   : knd.\nkarrow  : list knd -> knd -> knd.\n\n(* types *)\ntyp       : type.\ntypconstr : type.\ntarrow    : typ -> typ -> typ .\ntprod     : list typ -> typ.\ntbase     : string -> list typ -> typ.\ntpi       : knd -> bindone typ typ -> typ.\ntypconstr : bindmany typ typ -> typconstr.\n\nconstrdef   : type.\ncsdef       : typconstr -> constrdef.\ncsdefunit   : constrdef.\n\n(* terms *)\nterm        : type.\npatt        : type.\nfield       : type.\n\nlam      : bindone term term -> term.\napp      : term -> term -> term .\nlamt     : bindone typ term -> term.\nappt     : term -> typ -> term.\nlet      : term -> bindone term term -> term.\nletrec   : bindmany term (list term * term) -> term.\nconstr   : string -> term -> term.\nconstrun : string -> term.\nascribe  : term -> typ -> term.\nmatch    : term -> list (bindmany term (patt * term)) -> term.\ntuple    : list term -> term.\nraise    : term -> term.\ntrycatch : term -> list (bindmany term (patt * term)) -> term.\nrecord   : map string term -> term.\nprojrec  : term -> string -> term.\nnamed    : string -> term.\n\n(* patterns *)\nptuple    : list patt -> patt.\npconstr   : string -> patt -> patt.\npconstrun : string -> patt.\npvar      : term -> patt.\npwild     : patt.\npas       : patt -> patt -> patt.\nprecord   : map string patt -> patt.\n\n\n(* ----------------------------------------------------------- *)\n(* type system. *)\n\n\n(* context declarations *)\nkindofbase         : string -> knd -> prop. (* base constructor *)\n\ntype_eq_def        : string -> list knd -> typconstr -> prop.\ntype_variant_def   : string -> list knd -> list (string * constrdef) -> prop.\ntype_record_def    : string -> list knd -> map string typconstr -> prop.\n\nconstructor_def : string -> constrdef -> string -> prop.\nfield_def       : string -> typconstr -> string -> prop.\n\nnamed_gentypeof : string -> typ -> prop.\n\n\n(* kinds *)\nkindof       : typ -> knd -> prop .\nkindofg      : typ -> knd -> prop .\nkindofall    : list typ -> knd -> prop.\nkindofconstr : typconstr -> knd -> prop.\n\n\nkindof T K <- guard T (kindofg T K).\nkindofg (tarrow T1 T2) ktype <- kindof T1 ktype, kindof T2 ktype.\nkindofg (tpi K TF)     ktype <- bindone.open TF (pfun x t => (kindofg x K -> kindof t ktype)).\nkindofg (tprod TS)     ktype <- kindofall TS ktype.\nkindofg (tbase T TS)   K     <- guard T (kindofbase T (karrow KS K)), map kindof TS KS.\n\nkindofall TS K <- map (fun t res => kindof t K) TS _.\n\n(* normal form of types *)\ntypapply : typconstr -> list typ -> typ -> prop.\ntypapply (typconstr TC) TS T <- bindmany.apply TC TS T.\n\nnf         : typ -> typ -> prop.\nnf_        : typ -> typ -> prop.\n\nnf X Y <- if refl.isunif X then eq X Y else nf_ X Y.\n\n(nf_ X X) when refl.isnvar X.\nnf_ (tbase TypConstr TypArgs) (tbase TypConstr TypArgs') <-\n  map nf TypArgs TypArgs'.\nnf_ (tbase TypConstr TypArgs) T <-\n  type_eq_def TypConstr _ Def,\n  typapply Def TypArgs T.\nnf_ (tbase TypConstr TypArgs) T <-\n  type_eq_def TypConstr _ Def,\n  typapply Def TypArgs T0,\n  nf T0 T.\nnf_ X Y when (refl.isbaseterm X, not(eq X (tbase _ _))) <-\n  structural nf X Y.\n\n\n(* term typing *)\n\ntypeof    : term -> typ -> prop.\n\n\ntypeof (lam E) (tarrow T1 T2) <-\n  bindone.open E (pfun x e =>\n    (typeof x T1 -> typeof e T2)\n  ), kindof T1 ktype.\n\ntypeof (app E1 E2) T2 <-\n  typeof E1 (tarrow T1 T2), typeof E2 T1.\n\ntypeof (lamt E) (tpi K TF) <-\n  bindone.open E TF (pfun a e t =>\n    (kindofg a K -> typeof e t)\n  ).\n\ntypeof (appt E T) T' <-\n  typeof E (tpi K TF), bindone.apply TF T T', kindof T K.\n\ntypeof (tuple ES) (tprod TS) <- map typeof ES TS.\n\ntypeof (ascribe E T) T <- typeof E T.\n\ntypeof (raise E) T     <- typeof E (tbase \"exn\" nil), kindof T ktype.\n\ngentypeof : term -> typ -> prop.\n\n(* implicit generalization/instantiation and so on *)\ntypinst : typ -> typ -> prop.\ntypinst (tpi K TF) T' <- bindone.apply TF Tnew Tres, typinst Tres T'.\ntypinst T T' when not(eq T (tpi _ _)) <- (eq T T'; nf T T').\n\nnotinenv : typ -> prop.\nnotinenv X <- refl.assume_get typeof Assumptions,\n\t      refl.assume_get gentypeof MoreAssumptions,\n\t      append Assumptions MoreAssumptions AS,\n              unifvars AS (XS : list typ),\n              not(find (refl.sameunif X) XS _).\n\nnext_typgen : typ -> (typ -> typ) -> prop.\nnext_typgen T F <- refl.getunif T (X : typ),\n\t           notinenv X,\n\t           refl.absunif T X F.\n\ntypgen : typ -> typ -> prop.\ntypgen T T <- not(next_typgen T _).\ntypgen T (tpi K F') <-\n  next_typgen T F,\n  bindone.open F' (pfun x f' => (kindofg x K -> typgen (F x) f')).\n\ntypgenlist : list typ -> list typ -> prop.\ntypgenlist TS TS' <- map typgen TS TS'.\n\n(typeof X T) when refl.isnvar X, gentypeof X T.\n(typeof X T') when refl.isnvar X, gentypeof X T <- typinst T T'.\n\ntypeof (named X) T <- named_gentypeof X T.\ntypeof (named X) T' <- named_gentypeof X T, typinst T T'.\n\ntypeof (app E1 E2) T2 <-\n  typeof E1 (tarrow T1 T2),\n  typeof E2 T1.\n\nvalrestr : term -> prop.\nvalrestr (constr _ _).\nvalrestr (construn _).\nvalrestr (lam      _).\nvalrestr (lamt     _).\nvalrestr (tuple _).\nvalrestr (record _).\nvalrestr (ascribe E _) <- valrestr E.\n(valrestr X) when refl.isnvar X.\n\ntypeof (let E E') T' <-\n  typeof E T, \n  if valrestr E\n  then (typgen T Tgen, kindof Tgen ktype, bindone.open E' (pfun x e' => (gentypeof x Tgen -> typeof e' T')))\n  else (kindof T ktype, bindone.open E' (pfun x e' => (typeof x T -> typeof e' T') )).\n\n(* let rec *)\ntypeof (letrec ESE') T' <-\n\n  bindmany.open ESE' (pfun xs defsBody => [Defs Body]\n    eq defsBody (Defs, Body),\n    assume_many typeof xs TS (map typeof Defs TS),\n    if map valrestr Defs\n    then (typgenlist TS TSgen, kindofall TSgen ktype,\n          assume_many gentypeof xs TSgen (typeof Body T'))\n    else (assume_many typeof xs TS (typeof Body T'))\n  ).\n  \n(* constructors *)\ntypeof (construn C) (tbase Tbase TS) <-\n  constructor_def C csdefunit Tbase,\n  type_variant_def Tbase KS _,\n  map kindof TS KS.\n\ntypeof (constr C Params) (tbase Tbase TS) <-\n  constructor_def C (csdef PolyParamsT) Tbase,\n  type_variant_def Tbase KS _,\n  map kindof TS KS,\n  typapply PolyParamsT TS ParamsT,\n  typeof Params ParamsT.\n\n(* records *)\ntypeof (projrec E Field) T <-\n\n  field_def Field PolyT Tbase,\n  type_record_def Tbase KS _,\n  map kindof TS KS,\n  typapply TC TS T,\n  once (typeof E (tbase Tbase TS)).\n\nguess_type : map string A -> string -> prop.\nguess_type ((Key, _) :: _) Tbase <-\n  print \"guessing!\",\n  field_def Key _ Tbase.\n\neqv X Y <- (nf X Z, nf Y Z).\n\ntypeof (record FieldsTerms) (tbase Tbase TS) <-\n\n  guess_type FieldsTerms Tbase,\n  type_record_def Tbase KS FieldsSpec,\n  map kindof TS KS,\n\n  map.mapvalues (fun a => typapply a TS) FieldsSpec FieldsTypes',\n  eqv FieldsTypes FieldsTypes',\n  map.mapvalues typeof FieldsTerms FieldsTypes.\n\n\n\n(* matching. *)\n\ntypebranch   : typ -> typ -> bindmany term (patt * term) -> prop.\ntypeofpatt   : patt -> typ -> prop.\n\n\ntypeofpatt (pvar X) T <- typeof X T.\n\ntypeofpatt (ptuple PS) (tprod TS) <- map typeofpatt PS TS.\n\ntypeofpatt (pconstr C P) (tbase Tbase TS) <-\n\n  constructor_def C (csdef PolyParamsT) Tbase,\n  type_variant_def Tbase KS _,\n  map kindof TS KS,\n\n  typapply PolyParamsT TS T',\n  typeofpatt P T'.\n\ntypeofpatt (pconstrun C) (tbase Tbase TS) <-\n\n  constructor_def C csdefunit Tbase,\n  type_variant_def Tbase KS _,\n  map kindof TS KS.\n\ntypeofpatt pwild T.\n\ntypeofpatt (pas P P') T <- typeofpatt P T, typeofpatt P' T.\n\ntypeofpatt (precord FieldsPatts) (tbase Tbase TS) <-\n  \n  guess_type FP Tbase,\n  type_record_def Tbase KS FieldsSpec,\n  map.mapvalues typeofpatt FieldsPatts FieldsTypes,\n  map kindof TS KS,\n  map.mapvalues (fun a => typapply a TS) FieldsSpec FieldsTypes',\n  eqv FieldsTypes FieldsTypes'.\n\n\ntypebranch T T' Branch <-\n  bindmany.open Branch (pfun pattvars branch => [Patt Body]\n    eq branch (Patt, Body),\n    assume_many typeof pattvars TS {prop|\n      typeofpatt Patt T,\n      typeof Body T'\n    |}).\n  \n\ntypeof (match E Branches) T' <-\n  typeof E T, not(refl.isunif T),\n  map (typebranch T T') Branches.\n\ntypeof (match E Branches) T' <-\n  typeof E T, not(refl.isunif T), nf T Tnf,\n  map (typebranch Tnf T') Branches.\n\ntypeof (match E Branches) T' <-\n  map (typebranch T T') Branches,\n  typeof E T.\n\ntypeof (trycatch E Handlers) T <-\n  typeof E T,\n  map (typebranch (tbase \"exn\" []) T) Handlers.\n\n\n(* conversion *)\n(* TODO: move this in an otherwise block *)\n(typeof X Tnf) when refl.isnvar X, once(typeof X T) <- nf T Tnf.\n(typeof E T) when not (refl.isnvar E), not (refl.isunif T), once(typeof E T') <- nf T' Z, nf T Z.\n\n\n(* ---------------------------- *)\n(* module structures/signatures *)\n\nstritem        : type.\nsigitem        : type.\n\n\n(* type definitions *)\ntypdef         : type.\n\ntypdef_variant : list (string * constrdef) -> typdef.\ntypdef_record  : list (string * typconstr) -> typdef.\ntypdef_eq      : typconstr -> typdef.\n\n(* structure items *)\nstrlet    : string -> term -> stritem.\nstrlet_   : term -> stritem.\nstrletrec : bindmany term (list term) -> stritem.\nstrtype   : list string -> list (list knd) -> list typdef -> stritem.\nstrtypesingle : string -> list knd -> typdef -> stritem.\nstrexn    : string -> constrdef -> stritem.\nstrmany   : list stritem -> stritem.\n\n(* signature items *)\nsigval    : string -> typ -> sigitem.\nsigtypedecl : string -> list knd -> sigitem.\nsigtype   : list string -> list (list knd) -> list typdef -> sigitem.\nsigexn    : string -> constrdef -> sigitem.\nsigmany   : list sigitem -> sigitem.\n\n\n(* signature of structure item *)\n\nsigof : stritem -> sigitem -> prop.\nsigitem_new_assumptions : sigitem -> list prop -> prop.\ntypdef_new_assumptions  : string -> list knd -> typdef -> list prop -> prop.\n\nsigof (strlet Name E)\n      (sigval Name T') <- typeof (let E (bindone _ (fun y => y))) T, eqv T T'.\n\nsigof (strlet_ E)\n      (sigmany [])     <- typeof (let E (bindone _ (fun y => y))) T.\n\nsigof (strletrec ES)\n      (sigmany Vals) <-\n  bindmany.open ES ESE' (pfun xs es ese' => eq ese' (es, tuple xs)),\n  bindmany.varnames ES Names,\n  typeof (letrec ESE') (tprod TS),\n  map (fun n t => eq (sigval n t)) Names TS Vals.\n\n\ntypdef_wf : typdef -> list knd -> prop.\ntypconstr_wf   : typconstr -> list knd -> prop.\nconstructor_wf : constrdef -> list knd -> prop.\n\ntypconstr_wf (typconstr TC) KS <-\n  bindmany.open TC (fun ts t =>\n    assume_many kindofg ts KS (kindof t ktype)\n  ).\n\nconstructor_wf csdefunit KS.\nconstructor_wf (csdef TC) KS <- typconstr_wf TC KS.\n\ntypdef_wf (typdef_variant Constructors) KS <-\n  map (pfun nc => [Name Constr] eq nc (Name, Constr), constructor_wf Constr KS ) Constructors.\n\ntypdef_wf (typdef_record Fields) KS <-\n  map (pfun nc => [Name TConstr] eq nc (Name, TConstr), typconstr_wf TConstr KS ) Fields.\n\ntypdef_wf (typdef_eq TC) KS <-\n  typconstr_wf TC KS.\n\nsigof (strtype Names Arities Defs)\n      (sigtype Names Arities Defs) <-\n  \n  map (fun ks => eq (karrow ks ktype)) Arities Kinds,\n  assume_many kindofbase Names Kinds (map typdef_wf Defs Arities).\n\nsigof (strtypesingle Name Arity Def) S' <- sigof (strtype [Name] [Arity] [Def]) S'.\n      \n\nsigof (strexn Name Constrdef) (sigexn Name Constrdef) <-\n  constructor_wf Constrdef [].\n\nsigof (strmany []) (sigmany []).\nsigof (strmany (HD :: TL)) (sigmany (HDs :: TLs)) <-\n  sigof HD HDs, sigitem_new_assumptions HDs Assum,\n  assume_many Assum (sigof (strmany TL) (sigmany TLs)).\n\n(* assumptions based on signature items *)\n\nsigitem_new_assumptions (sigval Name T) [ named_gentypeof Name T ].\n\nsigitem_new_assumptions (sigtypedecl Name Arity) [ kindofbase Name (karrow Arity ktype) ].\n\nsigitem_new_assumptions (sigtype Names Arities Defs) Assumptions <-\n\n  map (fun ks => eq (karrow ks ktype)) Arities Kinds,\n  map (fun n k => eq (kindofbase n k)) Names Kinds Assume_Types,\n  map typdef_new_assumptions Names Arities Defs Assume_Typdefs,\n  concat (Assume_Types :: Assume_Typdefs) Assumptions.\n\nsigitem_new_assumptions (sigexn Name Def) [ constructor_def Name Def \"exn\" ].\n\nsigitem_new_assumptions (sigmany Sigs)  Flattened <-\n  map sigitem_new_assumptions Sigs Assums,\n  concat Assums Flattened.\n\ntypdef_new_assumptions TName KS (typdef_variant Constructors) ( (type_variant_def TName KS Constructors) ::\n                                                                ConstrAssumptions ) <-\n\n  map (pfun nc res => [Name Csdef] eq nc (Name, Csdef), eq res (constructor_def Name Csdef TName) )\n      Constructors ConstrAssumptions.\n\ntypdef_new_assumptions TName KS (typdef_record Fields) ( (type_record_def TName KS Map) ::\n                                                         FieldAssumptions ) <-\n  map.from_list Fields Map,\n  map (pfun nt res => [Name Tconstr] eq nt (Name, Tconstr), eq res (field_def Name Tconstr TName) )\n      Fields FieldAssumptions.\n\ntypdef_new_assumptions TName KS (typdef_eq TypConstr) [ type_eq_def TName KS TypConstr ].\n\n\n(* adding assumptions to global environment *)\n\nocamldo_sig : sigitem -> cmd -> prop.\nocamldo_sig S (cmd_many Cmds) <-\n   sigitem_new_assumptions S Assumptions,\n   map (fun g => eq (cmd_newclause (clause g success))) Assumptions Cmds.\n\nocamldo : stritem -> cmd -> prop.\nocamldo S C <- sigof S S', ocamldo_sig S' C.\n\n(* ------------------------------------------------------------------------- *)\n\n\n(* Built-in types *)\n\n`( ocamldo_sig (sigtypedecl   \"exn\"  []) ).\ntype_variant_def \"exn\" [] ExnConstructors.\n\n`( ocamldo_sig (sigtypedecl   \"int\"  []) ).\nintconst : int -> term.\ntypeof (intconst N) (tbase \"int\" []).\n\n`( ocamldo_sig (sigtypedecl   \"string\" []) ).\nstringconst : string -> term.\ntypeof (stringconst S) (tbase \"string\" []).\n\n`( ocamldo (strtypesingle \"unit\" [] (typdef_variant [ ( \"Unit\", csdefunit ) ])) ).\n`( ocamldo (strtypesingle \"list\" [ktype] (typdef_variant\n     [ ( \"Nil\", csdefunit ),\n       ( \"Cons\", csdef (typconstr (bindnext \"a\" (fun a => bindend (tprod [ a, tbase \"list\" [a] ])))) ) ])) ).\n`( ocamldo (strtypesingle \"bool\" [] (typdef_variant\n     [ ( \"True\", csdefunit ),\n       ( \"False\", csdefunit ) ])) ).\n\n`( ocamldo (strtypesingle \"option\" [ktype] (typdef_variant\n     [ ( \"None\", csdefunit ),\n       ( \"Some\", csdef (typconstr (bindnext \"a\" (fun a => bindend a))) ) ])) ).\n");V("/./examples/new/testcases_ocaml.makam",'%use ocaml.\n%use ocamlpretty.\n\nocaml_test_suite : testsuite.\n\ntestcase ocaml_test_suite <-\n  typeof (let (lam (bindone "x" (fun x => x))) (bindone "id" (fun id => id))) X,\n  gracewithnames X X\',\n  eq_nounif X\' (tpi ktype (bindone "a0" (fun a => tarrow a a))).\n\nrun_tests [ocaml_test_suite] ?\n');V("/./examples/small/systemf.makam","%use utils.\n%use extutils.\n\nterm : type.\ntyp  : type.\n\nlam : (term -> term) -> term .\napp : term -> term -> term .\neunit : term .\n\narrow : typ -> typ -> typ .\ntunit : typ .\n\ntypeof : term -> typ -> prop .\ntypeof eunit tunit .\n\ntypeof (lam E) (arrow T1 T2) <-\n  (x:term -> typeof x T1 -> typeof (E x) T2) .\n\ntypeof (app E1 E2) T2 <-\n  typeof E1 (arrow T1 T2),\n  typeof E2 T1 .\n\ntypeof (lam (fun x => app x eunit)) T ?\n\n\nintconst : int -> term.\ntint  : typ.\ntypeof (intconst _) tint.\n\n(* System F *)\n\npolylam : (typ -> term) -> term .\npolyinst : term -> typ -> term .\npi : (typ -> typ) -> typ .\n\n\ntypeof (polylam EF) (pi TF) <-\n  (x : typ -> typeof (EF x) (TF x)).\n\ntypeof (polyinst E T) (TF T) <-\n  typeof E (pi TF).\n\nascribe : term -> typ -> term.\ntypeof (ascribe E T) T <-\n  typeof E T.\n\nsigma : (typ -> typ) -> typ.\npack  : typ -> term -> term.\nunpack : term -> (typ -> term -> term) -> term.\n\ntypeof (pack T E) (sigma F) <-\n  typeof E (F T).\n\ntypeof (unpack E F) T' <-\n  typeof E (sigma TF),\n  (x:typ -> y:term ->\n   typeof y (TF x) ->\n   typeof (F x y) T').\n\ngentypeof : term -> typ -> prop.\ngentype : typ -> typ -> prop.\ngentypeof E T' <-\n  typeof E T,\n  gentype T T'.\ngentype T T <- not(getunif T (T' : typ)).\ngentype T (pi TF') <-\n  getunif T (T' : typ),\n  absunif T (T' : typ) TF,\n  (x:typ -> gentype (TF x) (TF' x)).\n");V("/./examples/peg/pegstaged.makam","%use utils.\n%use bindutils.\n\n\npeg : type -> type.\n\nexactchar : string -> peg string.\n\nany       : peg string.\nconcat    : peg A -> peg B -> peg (tuple A B).\nchoice    : peg A -> peg A -> peg A.\nlookahd   : peg A -> peg A.\nnotp      : peg A -> peg unit.\nepsilon   : peg unit.\nfailp     : peg A.\n\nexternalclass : (string -> prop) -> peg string.\nsemaction : peg A -> (A -> B -> prop) -> peg B.\ncompiled  : (list string -> option (tuple (list string) A) -> prop) ->\n\t    (list string -> option (tuple (list string) A) -> prop) ->\n\t    peg A.\n\npeginline        : [A] peg A -> peg A -> prop.\npeginline_parse  : [A] peg A -> peg A -> prop.\npeginline_pretty : [A] peg A -> peg A -> prop.\n\npegrule        : [A] peg A -> peg A -> cmd -> prop.\npegrule_parse  : [A] peg A -> peg A -> cmd -> prop.\npegrule_pretty : [A] peg A -> peg A -> cmd -> prop.\n\nxparse  : [A] peg A -> (list string -> option (tuple (list string) A) -> prop) -> prop.\nxxparse  : [A] peg A -> (list string -> option (tuple (list string) A) -> prop) -> prop.\nxuparse  : [A] peg A -> (list string -> option (tuple (list string) A) -> prop) -> prop.\nxpretty : [A] peg A -> (list string -> option (tuple (list string) A) -> prop) -> prop.\nxxpretty : [A] peg A -> (list string -> option (tuple (list string) A) -> prop) -> prop.\nxupretty : [A] peg A -> (list string -> option (tuple (list string) A) -> prop) -> prop.\n\npegbuiltin : [A] peg A -> prop.\n\nparse : [A] peg A -> (string -> option (tuple string A) -> prop) -> prop.\nparse P (fun S Res' => {prop| [Chars Res RestChars RealRes S']\n        string.explode S Chars,\n\tP' Chars Res,\n        (if (eq Res (some (tuple RestChars RealRes)))\n\t then  (string.explode S' RestChars, eq Res' (some (tuple S' RealRes)))\n\t else  (eq Res' none)) |}\n\t) <-\n  xparse P P'.\n\npretty : [A] peg A -> (option (tuple string A) -> string -> prop) -> prop.\npretty P (fun FullRes Input => {prop| [Output Res OutputC InputC]\n  eq FullRes (some (tuple Output Res)),\n  string.explode Output OutputC,\n  P' InputC (some (tuple OutputC Res)),\n  string.explode Input InputC |}) <-\n  xpretty P P'.\n\n\nxxparse X Y  <- (if refl.isunif X then (if xuparse X Y then success else success) else xparse X Y).\nxxpretty X Y <- (if refl.isunif X then (if xupretty X Y then success else success) else xpretty X Y).\n\npegbuiltin (exactchar _).\nxparse (exactchar S) (fun Input Result => {prop| [Output]\n   (if (eq Input (cons S Output))\n    then eq Result (some (tuple Output S))\n    else eq Result none) |}).\nxpretty (exactchar S) (fun Input Result => {prop| [Output]\n    eq Input (cons S Output),\n    eq Result (some (tuple Output S)) |}).\n\n\npegbuiltin (any).\nxparse (any) (fun Input Result => {prop| [Hd Output]\n   (if (eq Input (cons Hd Output))\n    then eq Result (some (tuple Output Hd))\n    else eq Result none) |}).\nxpretty (any) (fun Input Result => {prop| [Hd Output]\n    eq Input (cons Hd Output),\n    eq Result (some (tuple Output Hd)) |}).\n\npegbuiltin (concat _ _).\nxparse (concat P1 P2) (fun Input Result => {prop| [Input1 Input2 Res1 Res2]\n   (if (P1' Input (some (tuple Input1 Res1)),\n        P2' Input1 (some (tuple Input2 Res2)))\n    then eq Result (some (tuple Input2 (tuple Res1 Res2)))\n    else eq Result none) |}) <-\n  xxparse P1 P1', xxparse P2 P2'.\nxpretty (concat P1 P2) (fun Input Result => {prop| [Input1 Input2 Res1 Res2]\n   eq Result (some (tuple Input2 (tuple Res1 Res2))),\n   P2' Input1 (some (tuple Input2 Res2)),\n   P1' Input  (some (tuple Input1 Res1)) |}) <-\n   xxpretty P1 P1', xxpretty P2 P2'.\n\npegbuiltin (choice _ _).\nxparse (choice P1 P2) (fun Input Result => {prop| [Res1 U0]\n  (if (P1' Input Res1, eq Res1 (some U0))\n   then (eq Result Res1)\n   else (P2' Input Result)) |}) <-\n  xxparse P1 P1', xxparse P2 P2'.\nxpretty (choice P1 P2) (fun Input Result => {prop| [Input' Res]\n  eq Result (some (tuple Input' Res)),\n  (if P1' Input (some (tuple Input' Res))\n   then success\n   else P2' Input (some (tuple Input' Res))) |}) <-\n  xxpretty P1 P1', xxpretty P2 P2'.\n\npegbuiltin (lookahd _).\nxparse (lookahd P) (fun Input Result => {prop| [Res U0]\n  (if (P' Input (some (tuple U0 Res)))\n   then (eq Result (some (tuple Input Res)))\n   else (eq Result none)) |}) <-\n  xxparse P P'.\nxpretty (lookahd P) (fun Input Result => {prop| [Res U0]\n  eq Result (some (tuple Input Res)),\n  P' Input (some (tuple U0 Res)) |}) <-\n  xxparse P P'.\n\npegbuiltin (notp _).\nxparse (notp P) (fun Input Result => {prop|\n  (if P' Input none\n   then eq Result (some (tuple Input unit))\n   else eq Result none) |}) <-\n  xxparse P P'.\nxpretty (notp P) (fun Input Result => {prop| [U0]\n  eq Result (some (tuple Input U0)),\n  P' Input none |}) <-\n  xxparse P P'.\n\npegbuiltin (semaction _ _).\nxparse (semaction P F) (fun Input Result => {prop| [Input' Res Res']\n  (if P' Input (some (tuple Input' Res))\n   then (F Res Res', eq Result (some (tuple Input' Res')))\n   else (eq Result none)) |}) <-\n  xxparse P P'.\nxpretty (semaction P F) (fun Input Result => {prop| [Input' Res Res']\n  eq Result (some (tuple Input' Res')),\n  F Res Res',\n  P' Input (some (tuple Input' Res)) |}) <-\n  xxpretty P P'.\n\npegbuiltin (externalclass _).\nxparse (externalclass P) (fun Input Result => {prop| [Hd Tl]\n  (if (eq Input (cons Hd Tl), P Hd)\n   then eq Result (some (tuple Tl Hd))\n   else eq Result none) |}).\nxpretty (externalclass P) (fun Input Result => {prop| [Hd Tl]\n  eq Input (cons Hd Tl),\n  eq Result (some (tuple Tl Hd)),\n  P Hd |}).\n\npegbuiltin (epsilon).\nxparse (epsilon) (fun Input Result => eq Result (some (tuple Input unit))).\nxpretty (epsilon) (fun Input Result => eq Result (some (tuple Input unit))).\n\npegbuiltin (failp).\nxparse (failp) (fun Input Result => eq Result none).\nxpretty (failp) (fun Input Result => eq Result none).\n\npegbuiltin (compiled _ _).\nxparse  (compiled Parse Pretty) Parse.\nxpretty (compiled Parse Pretty) Pretty.\n\npeginline_xparse  : [A] peg A -> peg A -> prop.\npeginline_xpretty : [A] peg A -> peg A -> prop.\n\npeginline_xparse  P Def <- (if peginline_parse P Def then success else peginline P Def).\npeginline_xpretty P Def <- (if peginline_pretty P Def then success else peginline P Def).\n\nxparse (P : peg A) Prop <-\n  not(pegbuiltin P), peginline_xparse P Def, xxparse Def Prop.\nxpretty (P : peg A) Prop <-\n  not(pegbuiltin P), peginline_xpretty P Def, xxpretty Def Prop.\n\n\n(* the difficult part starts: user-defined PEGs with\n   recursion and parameters *)\n\n\npegcompile_parse : dyn -> dyn -> prop.\npegcompile_pretty : dyn -> dyn -> prop.\n\npegcompile_parse (dyn (X : peg A)) (dyn Y) <- xxparse X Y.\npegcompile_pretty (dyn (X : peg A)) (dyn Y) <- xxpretty X Y.\n\npegcompile_parse (dyn (X : string)) (dyn X).\npegcompile_pretty (dyn (X : string)) (dyn X).\n\npegknowns_parse : dyn -> dyn -> option prop -> prop.\npegknowns_pretty : dyn -> dyn -> option prop -> prop.\n\npegknowns_parse (dyn (X : peg A)) (dyn Y) (some (xuparse X Y)).\npegknowns_pretty (dyn (X : peg A)) (dyn Y) (some (xupretty X Y)).\n\npegknowns_parse (dyn (X : string)) (dyn Y) (none).\npegknowns_pretty (dyn (X : string)) (dyn Y) (none).\n\nxparse (Peg : peg A) (fun Input Result => {prop| [U0]\n             (if (once( P'' Input Result, eq Result (some U0) ))\n\t      then success\n\t      else eq Result none)\n         |}) <-\n  not(pegbuiltin Peg), not(peginline Peg _),\n  refl.headname Peg Name,\n  refl.headargs Peg _ Args,\n  string.append Name \"~xparse\" XParseName,\n  refl.lookup XParseName P',\n  map pegcompile_parse Args Args',\n  appmany P' Args' P''.\n\nxpretty (Peg : peg A) (fun Input Result => once(P'' Input Result)) <-\n  not(pegbuiltin Peg), not(peginline Peg _),\n  refl.headname Peg Name,\n  refl.headargs Peg _ Args,\n  string.append Name \"~xpretty\" XPrettyName,\n  refl.lookup XPrettyName P',\n  map pegcompile_pretty Args Args',\n  appmany P' Args' P''.\n\nmkclause : [A] A -> A -> clause -> prop.\nmkclause (G : prop) (P : prop) (clause G P).\nmkclause (G : A -> B) (P : A -> B) X <- mkclause (G Y) (P Y) X.\n\nmkclausecmd : [A] string -> A -> cmd -> prop.\nmkclausecmd GName P (cmd_newclause Clause) <- refl.lookup GName G, mkclause G P Clause.\n\nmkclausecmd2 : [B] string -> list dyn -> list prop -> (B -> prop) -> cmd -> prop.\nmkclausecmd2 GName Args Knowns Proc (cmd_newclause Clause) <-\n  refl.lookup GName G,\n  appmany G Args G',\n  assumemany Knowns (Proc X),\n  mkclause G' X Clause.\n\nweirdappmanyrev : [A B] A -> list dyn -> B -> prop.\nweirdappmanyrev (X : A) nil (Y : A).\nweirdappmanyrev (X : A) (cons (dyn (HD : B)) TL) Z <- weirdappmanyrev (Y : B -> A) TL Z.\nweirdappmanyrevreal : A -> list dyn -> B -> prop.\nweirdappmanyrevreal X L Y <- reverse L L', weirdappmanyrev X L' Y.\n\n\npegdeclare   : [A] peg A -> cmd -> prop.\npegdeclare (Peg : peg A) Cmd <-\n  refl.headname Peg Name,\n  refl.headargs Peg _ Args,\n  string.append Name \"~xparse\" XParseName,\n  string.append Name \"~xpretty\" XPrettyName,\n\n  eq (Parse  : list string -> option (tuple (list string) A) -> prop) Parse,\n  eq (Pretty : list string -> option (tuple (list string) A) -> prop) Pretty,\n\n  map pegcompile_parse Args ArgsParse, (* this is to get the right type *)\n  map pegcompile_pretty Args ArgsPretty, \n\n  weirdappmanyrevreal Parse ArgsParse Parse',\n  weirdappmanyrevreal Pretty ArgsPretty Pretty',\n\n  (if (refl.lookup XParseName Parse', refl.lookup XPrettyName Pretty')\n   then eq CmdPredDef cmd_none\n   else eq CmdPredDef (cmd_many [ cmd_newterm XParseName  Parse' ,\n                                  cmd_newterm XPrettyName Pretty' ])),\n\n  eq Cmd CmdPredDef.\n\npegrule_full : bool -> bool -> peg A -> peg A -> cmd -> prop.\npegrule_full GenParse GenPretty (Peg : peg A) Def Cmd <-\n\n  refl.headname Peg Name,\n  refl.headargs Peg _ Args,\n  string.append Name \"~xparse\" XParseName,\n  string.append Name \"~xpretty\" XPrettyName,\n\n  eq (Parse  : list string -> option (tuple (list string) A) -> prop) Parse,\n  eq (Pretty : list string -> option (tuple (list string) A) -> prop) Pretty,\n\n  map pegcompile_parse Args ArgsParse, (* this is to get the right type *)\n  map pegcompile_pretty Args ArgsPretty, \n\n  weirdappmanyrevreal Parse ArgsParse Parse',\n  weirdappmanyrevreal Pretty ArgsPretty Pretty',\n\n  map2 pegknowns_parse Args ArgsParse KnownsParse0,\n  map2 pegknowns_pretty Args ArgsPretty KnownsPretty0,\n\n  filterlist KnownsParse0 KnownsParse,\n  filterlist KnownsPretty0 KnownsPretty,\n\n  (if (refl.lookup XParseName Parse', refl.lookup XPrettyName Pretty')\n   then eq CmdPredDef cmd_none\n   else eq CmdPredDef (cmd_many [ cmd_newterm XParseName  Parse' ,\n                                  cmd_newterm XPrettyName Pretty' ])),\n  eq CmdList [ CmdPredDef ],\n\n  (if (eq GenParse true)\n   then append CmdList [ cmd_stage (mkclausecmd2 XParseName ArgsParse KnownsParse (xparse Def)) ] CmdList2\n   else eq CmdList CmdList2 ),\n\n  (if (eq GenPretty true)\n   then append CmdList2 [ cmd_stage (mkclausecmd2 XPrettyName ArgsPretty KnownsPretty (xpretty Def)) ] CmdList3\n   else eq CmdList2 CmdList3 ), \n\n  eq Cmd (cmd_many CmdList3).\n\npegrule        Peg Def Cmd <- pegrule_full true true  Peg Def Cmd.\npegrule_parse  Peg Def Cmd <- pegrule_full true false Peg Def Cmd.\npegrule_pretty Peg Def Cmd <- pegrule_full false true Peg Def Cmd.\n\n\npegexport : peg A -> cmd -> prop.\npegexport (Peg : peg A) Cmd <-\n  parse Peg Prop1,\n  pretty Peg Prop2,\n  refl.headname Peg Name,\n  string.append Name \"_parse\" ParseName,\n  string.append Name \"_pretty\" PrettyName,\n  eq Cmd (cmd_many [ cmd_newterm ParseName  (X : string -> option (tuple string A) -> prop),\n                     cmd_newterm PrettyName (Y : option (tuple string A) -> string -> prop),\n\t             cmd_stage (mkclausecmd ParseName Prop1),\n\t             cmd_stage (mkclausecmd PrettyName Prop2) ]).\n\npegexport : string -> peg A -> cmd -> prop.\npegexport Name (Peg : peg A) Cmd <-\n  parse Peg Prop1,\n  pretty Peg Prop2,\n  string.append Name \"_parse\" ParseName,\n  string.append Name \"_pretty\" PrettyName,\n  eq Cmd (cmd_many [ cmd_newterm ParseName  (X : string -> option (tuple string A) -> prop),\n                     cmd_newterm PrettyName (Y : option (tuple string A) -> string -> prop),\n\t             cmd_stage (mkclausecmd ParseName Prop1),\n\t             cmd_stage (mkclausecmd PrettyName Prop2) ]).\n\n\n\n(* useful parsers *)\nclass : string -> peg string.\npeginline (class S) P <-\n   string.explode S Chars,\n   foldl (fun cur elm res => eq res (choice cur (exactchar elm)))\n         failp Chars P.\n\nignorep : peg A -> peg unit.\npeginline (ignorep P) (semaction P (fun a res => eq res unit)).\n\nexactstr : string -> peg unit.\npeginline (exactstr S) P <-\n  string.explode S Chars,\n  foldr (fun elm cur res => eq res (ignorep (concat (exactchar elm) cur)))\n        Chars epsilon P.\n\nrep : peg A -> peg (list A).\n`( pegrule (rep P)\n                (choice\n                  (semaction\n\t\t    (concat P (rep P))\n\t\t    (fun a b => and ( eq a (tuple HD TL) ) ( eq b (cons HD TL ) )) )\n\t\t  (semaction\n\t\t    epsilon\n\t\t    (fun a b => eq b nil))) ).\n\nrepplus : peg A -> peg (tuple A (list A)).\npeginline (repplus P) (concat P (rep P)).\n\nwhitechar   : peg unit.\ncommentchar : peg unit.\nwhite       : peg unit.\n\n`( pegdeclare whitechar ).\n`( pegdeclare commentchar ).\n\n`( pegrule commentchar whitechar ).\n`( pegrule commentchar \n           (ignorep (concat (notp (lookahd (exactstr \"*)\")))\n                \tany)) ).\n\n`( pegrule whitechar (ignorep(class \" \\n\\r\\t\")) ).\n`( pegrule whitechar\n           (ignorep (concat (concat\n                    (exactstr \"(*\")\n \t\t    (rep(commentchar)))\n \t\t    (exactstr \"*)\")))).\n\npeginline_parse white (ignorep(rep(whitechar))).\npeginline_pretty white (choice epsilon (exactstr \" \")).\n\nprefw : peg A -> peg A.\npeginline_parse (prefw P) P.\npeginline_pretty (prefw P) (semaction (concat (exactchar \" \") P)\n\t\t                      (fun a b => {prop| [X Y] eq a (X, Y), eq b Y |})).\n\ntoken : peg A -> peg A.\npeginline (token P) (semaction (concat white (concat P white))\n\t                       (fun a b => {prop| [U0 U1] eq a (U0, (b, U1)) |} )).\n\nidentfstchar : peg string.\nidentrstchar : peg string.\nident        : peg string.\npeginline (identfstchar) (semaction (concat (lookahd (externalclass char_latin1))\n                                            (externalclass char_letter))\n\t     \t           (fun a b => {prop| [U0] eq a (U0, b) |})).\npeginline (identrstchar) (choice identfstchar (class \"0123456789\")).\npeginline (ident) \n\t     (semaction\n               (concat identfstchar (rep identrstchar))\n\t       (fun a b => {prop| [HD TL] eq a (HD, TL), string.explode b (cons HD TL) |})).\n\nparenthesized : peg A -> peg A.\npeginline (parenthesized P) (semaction (concat (concat\n                                       (token (exactchar \"(\")) P) (token (exactchar \")\")))\n\t   \t\t\t       (fun a b => {prop| [U0 U1] eq a ((U0, b), U1) |})).\n\nconcati1 : peg A -> peg B -> peg B.\nconcati2 : peg A -> peg B -> peg A.\npeginline (concati1 P Q) (semaction (concat P Q) (fun a b => {prop| [U0] eq a (U0, b) |})).\npeginline (concati2 P Q) (semaction (concat P Q) (fun a b => {prop| [U0] eq a (b, U0) |})).\n\nrepsep : peg A -> string -> peg (list A).\npeginline (repsep P S) (choice (semaction (concat P (rep (concati1 (token (exactstr S)) P)))\n\t\t\t\t\t  (fun a b => {prop| [HD TL] eq a (HD, TL), eq b (HD :: TL) |}))\n\t\t\t       (semaction epsilon (fun a b => {prop| eq b [] |}))).\n\n");V("/./examples/peg/peg.makam","%use utils.\n\npeg : type -> type.\n\nexactchar : string -> peg string.\n\nany       : peg string.\nconcat    : peg A -> peg B -> peg (tuple A B).\nchoice    : peg A -> peg A -> peg A.\nlookahd   : peg A -> peg A.\nnotp      : peg A -> peg unit.\nepsilon   : peg unit.\nfailp     : peg A.\n\nexternalclass : (string -> prop) -> peg string.\nsemaction : peg A -> (A -> B -> prop) -> peg B.\n\npegdef : peg A -> peg A -> prop.\npegdefpretty : peg A -> peg A -> prop.\n\npegdefpretty_real : peg A -> peg A -> prop.\npegbuiltin : peg A -> prop.\n\nxparse  : peg A -> list string -> option (tuple (list string) A) -> prop.\nxpretty : peg A -> list string -> option (tuple (list string) A) -> prop.\n\nparse : peg A -> string -> option (tuple string A) -> prop.\nparse P S Res' <-\n  string.explode S Chars,\n  xparse P Chars Res,\n  (if (eq Res (some (tuple RestChars RealRes)))\n   then (string.explode S' RestChars, eq Res' (some (tuple S' RealRes)))\n   else (eq Res' none)).\n\npretty : peg A -> option (tuple string A) -> string -> prop.\npretty P (some (tuple Output Res)) Input <-\n  string.explode Output OutputC,\n  xpretty P InputC (some (tuple OutputC Res)),\n  string.explode Input InputC.\n\t  \n\npegbuiltin (exactchar _).\nxparse (exactchar S) Input Result <-\n   (if (eq Input (cons S Output))\n    then eq Result (some (tuple Output S))\n    else eq Result none).\nxpretty (exactchar S) (cons S Output) (some (tuple Output _)).\n\n\npegbuiltin (any).\nxparse (any) Input Result <-\n   (if (eq Input (cons Hd Output))\n    then eq Result (some (tuple Output Hd))\n    else eq Result none).\nxpretty (any) (cons Hd Output) (some (tuple Output Hd)).\n\n\npegbuiltin (concat _ _).\nxparse (concat P1 P2) Input Result <-\n   (if (xparse P1 Input (some (tuple Input1 Res1)),\n        xparse P2 Input1 (some (tuple Input2 Res2))),\n    then eq Result (some (tuple Input2 (tuple Res1 Res2)))\n    else eq Result none).\nxpretty (concat P1 P2) Input (some (tuple Input2 (tuple Res1 Res2))) <-\n   xpretty P2 Input1 (some (tuple Input2 Res2)),\n   xpretty P1 Input  (some (tuple Input1 Res1)).\n\n\npegbuiltin (choice _ _).\nxparse (choice P1 P2) Input Result <-\n  (if   (xparse P1 Input Res1, eq Res1 (some _))\n   then (eq Result Res1)\n   else (xparse P2 Input Result)).\nxpretty (choice P1 P2) Input (some (tuple Input' Res)) <-\n  (if xpretty P1 Input (some (tuple Input' Res))\n   then success\n   else xpretty P2 Input (some (tuple Input' Res))).\n\n\npegbuiltin (lookahd _).\nxparse (lookahd P) Input Result <-\n  (if (xparse P Input (some (tuple _ Res)))\n   then (eq Result (some (tuple Input Res)))\n   else (eq Result none)).\nxpretty (lookahd P) Input (some (tuple Input Res)) <-\n  xparse P Input (some (tuple _ Res)).\n\n\npegbuiltin (notp _).\nxparse (notp P) Input Result <-\n  (if xparse P Input none\n   then eq Result (some (tuple Input unit))\n   else eq Result none).\nxpretty (notp P) Input (some (tuple Input _)) <-\n  xparse P Input none.\n\n\npegbuiltin (semaction _ _).\nxparse (semaction P F) Input Result <-\n  (if xparse P Input (some (tuple Input' Res))\n   then (F Res Res', eq Result (some (tuple Input' Res')))\n   else (eq Result none)).\nxpretty (semaction P F) Input (some (tuple Input' Res')) <-\n  F Res Res',\n  xpretty P Input (some (tuple Input' Res)).\n\n\npegbuiltin (externalclass _).\nxparse (externalclass P) Input Result <-\n  (if (eq Input (cons Hd Tl), P Hd)\n   then eq Result (some (tuple Tl Hd))\n   else eq Result none).\nxpretty (externalclass P) (cons Hd Tl) (some (tuple Tl Hd)) <-\n  P Hd.\n\n\n\npegbuiltin (epsilon).\nxparse (epsilon) Input (some (tuple Input unit)).\nxpretty (epsilon) Input (some (tuple Input unit)).\n\npegbuiltin (failp).\nxparse (failp)   Input none.\nxpretty (failp)  Input none.\n\n\nxparse P Input Result <- \n  not(pegbuiltin P),\n  (if (once( (pegdef P P', xparse P' Input Result, eq Result (some _))) )\n   then success\n   else eq Result none).\nxpretty P Input Result <-\n  not(pegbuiltin P),\n  once( (pegdefpretty_real P P', xpretty P' Input Result) ).\n\npegdefpretty_real P P' <- (if pegdefpretty P P' then success else pegdef P P').\n\n\n\n(* useful parsers *)\nclass : string -> peg string.\npegdef (class S) P <-\n  string.explode S Chars,\n  foldl (fun cur elm res => eq res (choice cur (exactchar elm)))\n        failp Chars P.\n\nignorep : peg A -> peg unit.\npegdef (ignorep P) (semaction P (fun a res => eq res unit)).\n\nexactstr : string -> peg unit.\npegdef (exactstr S) P <-\n  string.explode S Chars,\n  foldr (fun elm cur res => eq res (ignorep (concat (exactchar elm) cur)))\n        Chars epsilon P.\n\nrep : peg A -> peg (list A).\npegdef (rep P) (choice\n                  (semaction\n\t\t    (concat P (rep P))\n\t\t    (fun a b => and ( eq a (tuple HD TL) ) ( eq b (cons HD TL ) )) )\n\t\t  (semaction\n\t\t    epsilon\n\t\t    (fun a b => eq b nil))).\n\n\nrepplus : peg A -> peg (tuple A (list A)).\npegdef (repplus P)\n                (choice\n                  (semaction\n\t\t    (concat P (rep P))\n\t\t    (fun a b => and ( eq a (tuple HD TL) ) ( eq b (tuple HD TL ) )) )\n\t\t  (semaction\n\t\t    P\n\t\t    (fun a b => eq b (tuple a nil)))).\n\n\nwhitechar   : peg unit.\ncommentchar : peg unit.\nwhite       : peg unit.\npegdef commentchar whitechar.\npegdef commentchar\n       (ignorep (concat (notp (lookahd (exactstr \"*)\")))\n                \tany)).\npegdef whitechar\n       (ignorep (class \" \\n\\r\\t\")).\npegdef whitechar\n       (ignorep (concat (concat\n                   (exactstr \"(*\")\n\t\t   (rep(commentchar)))\n\t\t   (exactstr \"*)\"))).\n                \npegdef white (ignorep(rep(whitechar))).\npegdefpretty white (choice epsilon (exactstr \" \")).\n\nprefw : peg A -> peg A.\npegdef (prefw P) P.\npegdefpretty (prefw P) (semaction (concat (exactchar \" \") P)\n\t                          (fun a b => and (eq a (tuple X Y)) (eq b Y))).\n\ntoken : peg A -> peg A.\npegdef (token P) (semaction\n                    (concat white (concat P white))\n\t\t    (fun a b => eq a (tuple _ (tuple b _)))).\n\n\n\nidentfstchar : peg string.\nidentrstchar : peg string.\nident : peg string.\npegdef (identfstchar) (semaction (concat (lookahd (externalclass char_latin1))\n                                         (externalclass char_letter))\n\t\t       (fun a b => eq a (tuple _ b))).\npegdef (identrstchar) (choice identfstchar (class \"0123456789\")).\npegdef (ident) (semaction\n                 (concat identfstchar (rep identrstchar))\n\t\t (fun a b => and (eq a (tuple HD TL)) (string.explode b (cons HD TL)))).\n\nparenthesized : peg A -> peg A.\npegdef (parenthesized P) (semaction (concat (concat\n                                      (token (exactchar \"(\")) P) (token (exactchar \")\")))\n\t\t\t\t    (fun a b => eq a (tuple (tuple _ b) _))).\n");V("/./examples/peg/dbt.makam","%use utils.\n%use generic.\n%use bindutils.\n%use extutils.\n\n(* Dynamically-typed binding trees.\n\n   (A generic syntax for Makam terms.) *)\n\n\ndbt : type.\n\ndbt_lam     : (A -> dbt) -> dbt.\ndbt_int     : int -> dbt.\ndbt_string  : string -> dbt.\ndbt_nu      : string -> dbt -> dbt.\ndbt_magicnu : dbt -> dbt.\ndbt_list    : list dbt -> dbt.\n\ndbt_constr  : A -> list dbt -> dbt.\ndbt_comp    : A -> list dbt -> dbt.\ndbt_lookup  : string -> list dbt -> dbt.\ndbt_auto    : A -> list dbt -> dbt.\n\ndbtrun : dbt -> dyn -> prop.\ndbtrun (dbt_constr HD ARGS) (dyn E) <-\n  map dbtrun ARGS ARGS',\n  applymany HD ARGS' E.\n\ndbtrun (dbt_comp F ARGS) (dyn E) <-\n  map dbtrun ARGS ARGS',\n  applymany F ARGS' (F' : A -> prop),\n  F' E.\n\ndbtrun (dbt_lam (F : A -> dbt)) (dyn E) <-\n  (x:A -> dbtrun (F x) (dyn (E x))).\n\ndbtrun (dbt_int I) (dyn (I : int)).\ndbtrun (dbt_string S) (dyn (S : string)).\n\ndbtenv : [A] string -> A -> prop.\ndbtmagicenv : list string -> prop.\ndbtmagic : list dyn -> A.\n\nfindbenign : list A -> A -> prop.\nfindbenign L HD <-\n  (if refl.isunif L\n   then failure\n   else (eq L (HD' :: TL),\n         if eq_benign HD HD'\n\t then success\n         else findbenign TL HD)).\n\ndbtenv X dbtmagic <-\n  dbtmagicenv XS,\n  ifte (findbenign XS X)\n       (success)\n       {prop| \n\tgetunif XS (Last : list string),\n\teq Last (X :: Last') |}.\n\nheadargs' : A -> B -> list dyn -> prop.\nheadargs' E HD ARGS <-\n  (if eq (dyn HD) (dyn dbtmagic)\n   then eq E (dbtmagic ARGS)\n   else refl.headargs E HD ARGS).\n\ndbtrun (dbt_lookup S ARGS) (dyn E) <-\n  dbtenv S HD,\n  map dbtrun ARGS ARGS',\n  headargs' E HD ARGS'.\n\ndbtrun (dbt_nu X D) (dyn (E : A -> B)) <-\n  (x:A -> dbtenv X x -> \n     (eq ^nx X, dbtrun D (dyn (E x)))).\n\ndbtrun (dbt_magicnu D) E <-\n  (dbtmagicenv XS -> dbtrun D _),\n  getunif XS (Last : list string),\n  eq Last [],\n  foldr (fun elm cur => eq (dbt_nu elm cur)) XS D D',\n  dbtrun D' E.\n\nargtyps : [A] A -> list dyn -> prop.\nargtyps (X : unit -> B) TL <-\n  (x:unit -> argtyps (X x) TL).\nargtyps (X : A -> B) ( (dyn (Z : A)) :: TL ) <-\n  not(typeq X (W : unit)), (x:A -> argtyps (X x) TL).\nargtyps (X : A) [] <- not(typeq (X : A) (Z : B -> C)).\n\n\n\ndbtguess : dyn -> dbt -> dbt -> prop.\n\n\ndbtrun (dbt_auto HD ARGS) E <-\n  argtyps HD TYPS,\n  map2 dbtguess TYPS ARGS ARGS',\n  dbtrun (dbt_constr HD ARGS') E.\n\n\ndbtrun (dbt_list ARGS) (dyn ARGS'') <-\n  map dbtrun ARGS ARGS',\n  map (fun elm res => eq (dyn res) elm) ARGS' ARGS''.\n\n(* dbtguess *)\ndbtguess (dyn (X : A -> B)) D D.\n\ndbt_mk_bindmany : C -> bindmany A B -> prop.\ndbt_mk_bindmany (X : C) (B : bindmany A B) <-\n  (if refl.isunif X\n   then eq (dyn B) (dyn X)\n   else (if typeq (X : C) (Z : A -> C')\n         then (eq B (bcons R), eq (dyn X) (dyn Z'), (x:A -> dbt_mk_bindmany (Z' x) (R x)))\n         else (eq (dyn X) (dyn (X' : B)), eq B (bnil X')))).\n\ndbtguess (dyn (X : bindmany A B)) D (dbt_comp dbt_mk_bindmany [ D ]).\n\n\ndbtguess (dyn (X : bindmutrec A B)) (dbt_list L)\n  (dbt_constr bindmutrec [ L' ]) <-\n  map2 (fun elm x body => eq elm (dbt_nu x body)) L XS Bodies,\n  foldr (fun elm cur => eq (dbt_constr (bcons : (A -> bindmany A (list B)) -> bindmany A (list B)) [ dbt_nu elm cur ]))\n        XS (dbt_constr (bnil : list B -> bindmany A (list B)) [ dbt_list Bodies ]) L'.\n\n\n\ndbtquery : dbt -> cmd -> prop.\ndbtquery D (cmd_query P) <- dbtrun D (dyn P).\n");V("/./examples/peg/pegstaged_lam.makam",'%use pegstaged.\n%use lmcomp.\n%use envlift.\n\nisemaction : peg A -> lm_arrow A B -> peg B.\npeginline_parse  (isemaction P C) (semaction P C\') <- lm_forward C C\'.\npeginline_pretty (isemaction P C) (semaction P (fun output input => C\' input output)) <- lm_backward C C\'.\n\nterm : type.\napp  : term -> term -> term.\nlam  : (term -> term) -> term.\nunit : term.\nvars : ctx term.\n\npterm : peg (inenv term).\npbaseterm : peg (inenv term).\npterm_let : peg (inenv term).\n\nctx_guess S (X : term) vars.\n\n`( pegdeclare pterm ).\n`( pegdeclare pterm_let ).\n`( pegdeclare pbaseterm ).\n\n`( pegrule pterm (isemaction (concat (concat (concat (\n                          (token (exactstr "\xce\xbb")))\n\t\t\t  (repplus (prefw (token ident))))\n\t\t\t  (token (exactstr ".")))\n\t\t\t  (token pterm))\n\t\t\t  \n\t\t\t (lm_fun (fun input =>\n\t\t\t  lm_match input\n\t\t\t  (lm_patt_newunif (fun t1 => lm_patt_newunif (fun t2_idhd => lm_patt_newunif (fun t3_idtl => lm_patt_newunif (fun t4 => lm_patt_newunif (fun t5_body =>\n \t\t\t  lm_patt_end\n\t\t\t  (tuple (tuple (tuple t1 (tuple t2_idhd t3_idtl)) t4) t5_body)\n\t\t\t  (lm_let (lm_val (cons t2_idhd t3_idtl))\n\t\t\t  (fun ids =>\n \t\t\t  (lm_foldr (lm_fun (fun elmcur =>\n\t\t\t             lm_match elmcur (lm_patt_newunif (fun elm => lm_patt_newunif (fun cur =>\n\t\t\t\t     lm_patt_end (tuple elm cur) (lm_valenv lam (inenv_nu vars elm cur))))) lm_fail))\n\t\t\t\t     ids t5_body)))))))))\n\t\t\t  lm_fail))) ).\n\n`( pegrule pterm pterm_let ).\n`( pegrule pterm (isemaction (concat pbaseterm (rep (prefw pbaseterm)))\n                         (lm_fun (fun input =>\n\t\t\t  lm_match input\n\t\t\t  (lm_patt_newunif (fun t1_fun => lm_patt_newunif (fun t2_args =>\n\t\t\t   lm_patt_end (tuple t1_fun t2_args)\n\t\t\t   (lm_foldl (lm_fun (fun curelm =>\n\t\t\t              lm_match curelm (lm_patt_newunif (fun cur => lm_patt_newunif (fun elm =>\n\t\t\t\t      lm_patt_end (tuple cur elm) (lm_valenv app cur elm)))) lm_fail)) t1_fun t2_args))))\n\t\t\t  lm_fail))) ).\n\n`( pegrule pbaseterm (isemaction (token ident)\n                             (lm_fun (fun ID =>\n\t\t\t      lm_valenvget vars ID))) ).\n\n`( pegrule pbaseterm (isemaction (token (exactstr "()"))\n                             (lm_fun (fun any => lm_valenv unit))) ).\n\n\n`( pegrule pbaseterm (parenthesized pterm) ).\n\n\n\n\npclosedterm : peg term.\npeginline pclosedterm (isemaction pterm (lm_fun (fun in => lm_envrun in))).\n\n`( pegexport pclosedterm ).\n');V("/./examples/peg/testpegstaged.makam",'%use pegstaged_lam.\n\ntest1 : A -> prop.\ntest1 X <-\n   pclosedterm_parse "\xce\xbbx.\xce\xbby.\xce\xbbz.y x" (some (tuple "" X)).\n\ntest2 : string -> prop.\ntest2 R <- \n   eq X "x",\n   eq Y "y",\n   eq Z "z",\n   pclosedterm_pretty (some (tuple "" (lam (fun x^nX => lam (fun y^nY => lam (fun z^nZ => app y^nY x^nX)))))) R.\n\ntest1 X ?\ntest2 X ?\n');V("/./examples/peg/pegstaged_peg.makam",'%use pegstaged.\n%use lmcomp.\n%use envlift.\n\n\nisemaction : peg A -> lm_arrow A B -> peg B.\npeginline_parse  (isemaction P C) (semaction P C\') <- lm_forward C C\'.\npeginline_pretty (isemaction P C) (semaction P (fun output input => C\' input output)) <- lm_backward C C\'.\n\nppeg : string -> peg (peg A).\n\n`( pegdeclare (ppeg X) ).\n\n`( pegrule (ppeg "top") (isemaction (repsep (ppeg "concat") "/")\n                                    (lm_fun (fun in =>\n\t\t\t\t       lm_match in\n\t\t\t\t        (lm_patt_newunif (fun hd => lm_patt_newunif (fun tl =>\n\t\t\t\t\t lm_patt_end (hd :: tl)\n\t\t\t\t\t     (lm_foldl (lm_fun (fun tup =>\n\t\t\t\t\t         lm_match tup\n\t\t\t\t\t         (lm_patt_newunif (fun cur =>\n\t\t\t\t\t\t  lm_patt_newunif (fun elm =>\n\t\t\t\t\t\t  lm_patt_end (cur, elm) (lm_val (choice cur elm)))))\n\t\t\t\t\t\t (lm_fail)))\n\t\t\t\t\t        hd tl))))\n\t\t\t\t        (lm_val failp))))).\n\ndynp : peg A -> peg dyn.\npeginline (dynp P) (semaction P (fun a b => eq b (dyn a))).\n\nconcatpegfw : list dyn -> peg A -> prop.\nconcatpegbw : peg A -> list dyn -> prop.\n\nconcatpegfw nil epsilon.\nconcatpegfw (cons (dyn HD) nil) HD.\nconcatpegfw (cons (dyn HD) TL) (concat HD TL\') <- concatpegfw TL TL\'.\nconcatpegbw epsilon nil.\nconcatpegbw (concat HD TL\') (cons (dyn HD) TL) <- concatpegbw TL\' TL.\nconcatpegbw HD (cons (dyn HD) nil).\n\n`( pegrule (ppeg "concat") (isemaction (rep (dynp (ppeg "prim")))\n                                    (lm_fun (fun in =>\n\t\t\t\t       lm_let (lm_liftbi concatpegfw concatpegbw in)\n\t\t\t\t       (fun res => lm_val res))))).\n\n`( pegrule (ppeg "prim") (semaction (token (exactchar ".")) (fun a => eq any)) ).\n`( pegrule (ppeg "prim") (semaction (token (concati1 (exactchar "\\"") (concati2 any (exactchar "\\""))))\n\t\t\t            (fun a => eq (exactchar a))) ).\n`( pegrule (ppeg "prim") (isemaction (token ident)\n\t\t\t \t     (lm_fun (fun in => lm_let (lm_liftbi lookup headname in)\n\t\t\t\t\t                (fun res =>\n\t\t\t\t\t\t\tlm_let (lm_lift (fun a b => and (not(pegbuiltin a)) (eq b unit)) res)\n\t\t\t\t\t\t\t(fun u =>\n\t\t\t\t\t\t\t lm_val res)))))).\n`( pegrule (ppeg "prim") (parenthesized (ppeg "top")) ).\n\nppegtop : peg (peg A).\npeginline ppegtop (ppeg "top").\n\n`( pegexport ppegtop ).\n\ntest1 : peg int.\ntest2 : peg int.\n');var
sa=[N,a(xH),-1],sI=[N,a(Av),-2],bz=[N,a(ze),-3],ct=[N,a(wC),-4],d3=[N,a(zf),-5],x=[N,a(yb),-7],bG=[N,a(qk),-8],Cf=[N,a(wL),-9],tv=[N,a(xo),lM],r=[N,a(A0),-11],Cg=[N,a(xM),-12],BR=[at,0,0,0],rV=[at,1,0,0],m3=[0,a(q),1,0,0],Cc=[0,0,a(q)],r_=[0,[11,a(Q8),[2,0,[11,a(N4),[4,0,0,0,[11,a(wy),[4,0,0,0,[12,45,[4,0,0,0,[11,a(eT),[2,0,0]]]]]]]]]],a('File "%s", line %d, characters %d-%d: %s')],sF=a(as),sG=a(as),sK=[0,[0,0,[0,[0,1],0]],[0,0,[0,[0,5],0]],[0,0,0]],sL=a("Caml1999I021"),sO=a(xn),dL=[0,0,0],Dz=[0,0,0],bCm=[2,0,[17,0,0]],bCn=[17,0,0],ti=a(q),bCo=[1,[0,36,36,cT],0,37,39,w],bCp=[1,[0,0,31,Pv],0,32,32,h4],bCq=[1,[0,44,44,w],0,45,45,cR],bCr=[1,[0,41,41,$],0,42,42,w],bCs=[1,[0,63,64,w],0,65,90,e],bCt=[1,[0,48,57,ao],0,58,59,w],bCu=[1,[0,95,95,j3],0,96,96,bp],bCv=[1,[0,92,92,w],0,93,93,$],bCw=[1,[0,dW,dW,aa],0,cU,jF,Pv],bCx=[1,[0,ck,ck,Z],0,ep,ep,aa],bCy=[1,[0,l0,l0,w],0,lJ,lJ,bp],bCz=[1,[0,lY,lY,w],0,o5,qe,cT],bCA=[1,[0,lC,lC,cF],0,l2,l2,v],bCB=[1,[0,ml,ml,h],0,mG,mG,eM],bCC=[1,[0,wv,wv,bp],0,fB,fB,d],bCD=[1,[0,mI,mI,v],0,j0,j0,aa],bCE=[1,[0,qK,qK,fs],0,oZ,jy,ac],bCF=[1,[0,p8,p8,bp],0,p6,p6,ac],bCG=[1,[0,h2,J,d],0,lQ,lQ,aa],bCH=[1,[0,jT,y1,e],0,qS,qS,aa],bCI=[1,[0,p3,p3,d],0,wM,wM,e],bCJ=[1,[0,cX,cX,e],0,jA,jA,d],bCK=[1,[0,pZ,pZ,d],0,xk,xk,e],bCL=[1,[0,AI,AI,e],0,AP,AP,d],bCM=[1,[0,ws,ws,d],0,yn,yn,e],bCN=[1,[0,Ad,Ad,e],0,xa,xa,d],bCO=[1,[0,x2,x2,d],0,w0,w0,e],bCP=[1,[0,qR,qR,e],0,yO,yO,d],bCQ=[1,[0,zZ,zZ,d],0,xS,xS,e],bCR=[1,[0,o1,o1,e],0,pM,pM,d],bCS=[1,[0,v6,v6,d],0,pJ,pJ,e],bCT=[1,[0,wP,wP,e],0,wK,wK,d],bCU=[1,[0,wT,wT,d],0,ps,ps,e],bCV=[1,[0,w8,w8,e],0,A8,A8,d],bCW=[1,[0,qt,qt,d],0,x5,x5,e],bCX=[1,[0,wI,wI,e],0,w5,w5,d],bCY=[1,[0,w9,w9,d],0,wS,wS,e],bCZ=[1,[0,zI,zI,e],0,vW,vW,d],bC0=[1,[0,zL,zL,d],0,xX,xX,e],bC1=[1,[0,yH,yH,e],0,x0,WY,d],bC2=[1,[0,v2,v2,d],0,AF,AF,e],bC3=[1,[0,qw,qw,e],0,xj,xj,d],bC4=[1,[0,pq,pq,d],0,q7,q7,e],bC5=[1,[0,wu,wu,e],0,w1,w1,d],bC6=[1,[0,xN,xN,d],0,xv,xv,e],bC7=[1,[0,we,we,e],0,AG,AG,d],bC8=[1,[0,vK,vK,d],0,xp,xp,e],bC9=[1,[0,zt,zt,e],0,qW,qW,d],bC_=[1,[0,yK,yK,d],0,AB,AB,e],bC$=[1,[0,AM,AM,e],0,AS,AS,d],bDa=[1,[0,zj,zj,d],0,zR,zR,e],bDb=[1,[0,wb,wb,e],0,pj,pj,d],bDc=[1,[0,yP,yP,d],0,xz,xz,e],bDd=[1,[0,y7,y7,e],0,wl,wl,d],bDe=[1,[0,vU,vU,d],0,Ar,Ar,e],bDf=[1,[0,yW,yW,e],0,yz,yz,d],bDg=[1,[0,zY,zY,d],0,vR,vR,e],bDh=[1,[0,yv,yv,e],0,vN,vN,d],bDi=[1,[0,z_,z_,d],0,aoJ,ahO,e],bDj=[1,[0,zw,zw,e],0,yi,yi,d],bDk=[1,[0,Pk,aai,d],0,qC,ajP,e],bDl=[1,[0,pL,pL,e],0,AJ,AJ,d],bDm=[0,Ah,Ah,d],bDn=[1,[0,yA,yA,e],0,o9,o9,d],bDo=[1,[0,X0,ajQ,e],0,Ao,Ao,d],bDp=[1,[0,XU,UW,d],0,Z_,aiL,e],bDq=[1,[0,415,416,e],0,pb,pb,d],bDr=[1,[0,xJ,x6,d],0,YF,wg,e],bDs=[1,[0,422,423,e],0,aoI,aoI,d],bDt=[1,[0,y0,y0,d],0,z5,z5,e],bDu=[1,[0,430,431,e],0,$k,$k,d],bDv=[1,[0,426,427,d],0,zG,zG,e],bDw=[1,[0,afc,440,e],0,441,442,d],bDx=[1,[0,adp,adp,d],0,Aj,Aj,e],bDy=[1,[0,yh,yh,e],0,xK,xK,ej],bDz=[1,[0,xi,xi,e],0,445,447,d],bDA=[1,[0,xT,xT,e],0,vO,vO,ej],bDB=[1,[0,w_,w_,e],0,AE,AE,ej],bDC=[1,[0,q3,q3,d],0,qT,qT,e],bDD=[1,[0,wU,wU,e],0,zo,zo,d],bDE=[1,[0,xW,xW,d],0,zP,zP,e],bDF=[1,[0,xB,xB,e],0,xt,xt,d],bDG=[1,[0,476,477,d],0,yM,yM,e],bDH=[1,[0,xf,xf,e],0,Yy,Yy,d],bDI=[1,[0,zS,zS,d],0,vS,vS,e],bDJ=[1,[0,yS,yS,e],0,yX,yX,d],bDK=[1,[0,Up,Up,d],0,aj_,aj_,e],bDL=[1,[0,Xm,Xm,e],0,aeh,aeh,d],bDM=[1,[0,495,496,d],0,ae4,ae4,e],bDN=[1,[0,ac_,ac_,e],0,XT,XT,d],bDO=[1,[0,502,504,e],0,Tl,Tl,d],bDP=[1,[0,N3,N3,d],0,ago,ago,e],bDQ=[1,[0,aoB,aoB,e],0,acH,acH,d],bDR=[1,[0,z0,z0,d],0,abH,abH,e],bDS=[1,[0,aah,aah,e],0,xY,xY,d],bDT=[1,[0,_8,_8,d],0,ans,ans,e],bDU=[1,[0,wD,wD,e],0,AT,AT,d],bDV=[1,[0,pQ,pQ,d],0,qE,qE,e],bDW=[1,[0,zg,zg,e],0,yD,yD,d],bDX=[1,[0,pT,pT,d],0,zA,zA,e],bDY=[1,[0,y5,y5,e],0,zd,zd,d],bDZ=[1,[0,zD,zD,d],0,qm,qm,e],bD0=[1,[0,zl,zl,e],0,x3,x3,d],bD1=[1,[0,xw,xw,d],0,xl,xl,e],bD2=[1,[0,xy,xy,e],0,zU,zU,d],bD3=[1,[0,A7,A7,d],0,zn,zn,e],bD4=[1,[0,wX,wX,e],0,ahN,ahN,d],bD5=[1,[0,ym,ym,d],0,xe,xe,e],bD6=[1,[0,aej,aej,e],0,xU,xU,d],bD7=[1,[0,pk,pk,d],0,TY,TY,e],bD8=[1,[0,_q,UN,e],0,py,py,d],bD9=[1,[0,Tv,Tv,d],0,akH,akH,e],bD_=[1,[0,ZF,aeC,e],0,aiI,aiI,d],bD$=[1,[0,OU,amC,d],0,yt,yt,e],bEa=[1,[0,adI,adI,e],0,aoE,aoE,d],bEb=[1,[0,ads,ads,d],0,adV,adV,e],bEc=[1,[0,688,705,ak],0,706,709,bp],bEd=[1,[0,591,659,d],0,Z1,Z1,h],bEe=[1,[0,ajA,ajA,ak],0,R7,R7,bp],bEf=[1,[0,722,735,bp],0,736,740,ak],bEg=[1,[0,O7,O7,d],0,amd,amd,e],bEh=[1,[0,751,767,bp],0,768,879,n],bEi=[1,[0,Ly,Ly,d],0,RU,RU,ak],bEj=[1,[0,$o,$o,ak],0,RJ,RJ,bp],bEk=[1,[0,MG,MG,e],0,xb,xb,w],bEl=[1,[0,L$,L$,w],0,_z,_z,e],bEm=[0,913,929,e],bEn=[1,[0,_C,_C,e],0,910,911,e],bEo=[1,[0,978,980,e],0,981,983,d],bEp=[1,[0,940,974,d],0,Zh,Zh,e],bEq=[1,[0,SN,SN,e],0,aas,aas,d],bEr=[1,[0,ack,ack,d],0,NH,NH,e],bEs=[1,[0,ahb,ahb,e],0,akQ,akQ,d],bEt=[1,[0,acx,acx,d],0,alt,alt,e],bEu=[1,[0,g1,g1,e],0,Zs,Zs,d],bEv=[1,[0,aod,aod,d],0,ahI,ahI,e],bEw=[1,[0,VE,VE,e],0,1007,1011,d],bEx=[1,[0,WJ,WJ,d],0,Kj,Kj,e],bEy=[1,[0,ahM,ahM,d],0,1017,1018,e],bEz=[1,[0,ajx,ajx,d],0,afC,afC,aa],bEA=[1,[0,wf,wf,d],0,Wv,Wv,e],bEB=[1,[0,1021,1071,e],0,YZ,1119,d],bEC=[1,[0,Wf,Wf,d],0,LK,LK,e],bED=[1,[0,adN,adN,e],0,aaS,aaS,d],bEE=[1,[0,S_,S_,d],0,aop,aop,e],bEF=[1,[0,anz,anz,e],0,OP,OP,d],bEG=[1,[0,zy,zy,d],0,agQ,agQ,e],bEH=[1,[0,Nx,Nx,e],0,$C,$C,d],bEI=[1,[0,ahe,ahe,d],0,ai$,ai$,e],bEJ=[1,[0,_B,_B,e],0,N5,N5,d],bEK=[1,[0,V5,V5,d],0,Zd,Zd,e],bEL=[1,[0,amB,amB,e],0,adf,adf,d],bEM=[1,[0,akq,akq,e],0,wt,wt,d],bEN=[1,[0,ae2,ae2,v],0,1155,1159,n],bEO=[1,[0,OE,OE,e],0,alb,alb,d],bEP=[1,[0,LY,LY,d],0,V1,V1,e],bEQ=[1,[0,an2,an2,e],0,Qq,Qq,d],bER=[1,[0,P1,P1,d],0,$I,$I,e],bES=[1,[0,Tm,Tm,e],0,M6,M6,d],bET=[1,[0,Ki,Ki,d],0,TD,TD,e],bEU=[1,[0,anY,anY,e],0,alv,alv,d],bEV=[1,[0,K6,K6,d],0,RG,RG,e],bEW=[1,[0,ac1,ac1,e],0,Pj,Pj,d],bEX=[1,[0,abE,abE,d],0,OB,OB,e],bEY=[1,[0,$X,$X,e],0,Ae,Ae,d],bEZ=[1,[0,Xk,Xk,d],0,O_,O_,e],bE0=[1,[0,_n,_n,e],0,ajk,ajk,d],bE1=[1,[0,ZS,ZS,d],0,TZ,TZ,e],bE2=[1,[0,_2,_2,e],0,_f,_f,d],bE3=[1,[0,afT,afT,d],0,K3,K3,e],bE4=[1,[0,1216,1217,e],0,afv,afv,d],bE5=[1,[0,wB,wB,d],0,acB,acB,e],bE6=[1,[0,akM,akM,e],0,Y9,Y9,d],bE7=[1,[0,VF,VF,d],0,Yn,Yn,e],bE8=[1,[0,SH,SH,e],0,1230,1231,d],bE9=[1,[0,ahq,ahq,d],0,Zo,Zo,e],bE_=[1,[0,Oc,Oc,e],0,Pa,Pa,d],bE$=[1,[0,ad7,ad7,d],0,amP,amP,e],bFa=[1,[0,YQ,YQ,e],0,Rr,Rr,d],bFb=[1,[0,akY,akY,d],0,amZ,amZ,e],bFc=[1,[0,adl,adl,e],0,ad0,ad0,d],bFd=[1,[0,zq,zq,d],0,ab6,ab6,e],bFe=[1,[0,alR,alR,e],0,Xg,Xg,d],bFf=[1,[0,aio,aio,d],0,ao6,ao6,e],bFg=[1,[0,yf,yf,e],0,anh,anh,d],bFh=[1,[0,Pl,Pl,d],0,_D,_D,e],bFi=[1,[0,Kz,Kz,e],0,anC,anC,d],bFj=[1,[0,_E,_E,d],0,N9,N9,e],bFk=[1,[0,Qt,Qt,e],0,VP,VP,d],bFl=[1,[0,zs,zs,d],0,Ll,Ll,e],bFm=[0,$M,$M,e],bFn=[1,[0,YM,YM,d],0,WU,WU,e],bFo=[1,[0,aeD,aeD,d],0,Oe,Oe,e],bFp=[1,[0,Kh,Kh,e],0,Sn,Sn,d],bFq=[1,[0,_p,_p,d],0,Sl,Sl,e],bFr=[1,[0,L6,L6,e],0,Tx,Tx,d],bFs=[1,[0,W4,W4,d],0,abU,abU,e],bFt=[1,[0,anS,anS,e],0,ag1,ag1,d],bFu=[1,[0,WC,WC,d],0,anu,anu,e],bFv=[1,[0,MA,MA,e],0,O6,O6,d],bFw=[1,[0,Kn,Kn,d],0,ajp,ajp,e],bFx=[1,[0,ajd,ajd,e],0,Ou,Ou,d],bFy=[1,[0,K$,K$,d],0,ajt,ajt,e],bFz=[1,[0,Sg,Sg,e],0,Ox,Ox,d],bFA=[1,[0,aaU,aaU,d],0,LM,LM,e],bFB=[1,[0,Xt,Xt,e],0,Lg,Lg,d],bFC=[1,[0,akz,akz,d],0,T2,T2,e],bFD=[1,[0,Y4,Y4,e],0,all,all,d],bFE=[1,[0,1377,1415,d],0,Tu,Tu,w],bFF=[1,[0,1329,1366,e],0,ajz,ajz,ak],bFG=[1,[0,Uq,Uq,cR],0,X_,X_,n],bFH=[1,[0,1421,1422,v],0,$t,$t,cT],bFI=[1,[0,Qs,Qs,w],0,ME,ME,n],bFJ=[1,[0,1473,1474,n],0,aav,aav,w],bFK=[1,[0,1542,1544,aa],0,1545,1546,w],bFL=[1,[0,N8,1522,h],0,1523,1524,w],bFM=[1,[0,ajU,ajU,w],0,Z3,Z3,cF],bFN=[1,[0,1548,1549,w],0,1550,1551,v],bFO=[1,[0,ai5,1631,n],0,1632,1641,ao],bFP=[1,[0,1568,1599,h],0,acz,acz,ak],bFQ=[1,[0,NX,NX,w],0,QT,QT,h],bFR=[1,[0,1646,1647,h],0,N7,N7,n],bFS=[1,[0,1765,1766,ak],0,1767,1768,n],bFT=[1,[0,XP,XP,cF],0,Nk,Nk,v],bFU=[1,[0,1786,alx,h],0,1789,1790,v],bFV=[1,[0,1770,1773,n],0,1774,1775,h],bFW=[1,[0,Qj,Qj,n],0,1810,1839,h],bFX=[1,[0,1792,1805,w],0,KA,KA,cF],bFY=[1,[0,1984,1993,ao],0,1994,2026,h],bFZ=[1,[0,1869,1957,h],0,1958,1968,n],bF0=[1,[0,P9,P9,ak],0,qQ,2069,h],bF1=[1,[0,2036,2037,ak],0,X5,X5,v],bF2=[1,[0,2085,2087,n],0,aiZ,aiZ,ak],bF3=[1,[0,KF,KF,ak],0,2075,2083,n],bF4=[1,[0,Lt,Lt,w],0,2144,2154,h],bF5=[1,[0,2096,2110,w],0,ac0,2136,h],bF6=[1,[0,2275,2306,n],0,aek,aek,y],bF7=[1,[0,2230,2237,h],0,2260,2273,n],bF8=[1,[0,aeL,aeL,h],0,2366,2368,y],bF9=[1,[0,afZ,afZ,n],0,WO,WO,y],bF_=[1,[0,YX,YX,h],0,2385,2391,n],bF$=[1,[0,2377,2380,y],0,Vy,Vy,n],bGa=[1,[0,$f,$f,w],0,Xd,Xd,ak],bGb=[1,[0,2402,2403,n],0,2404,2405,w],bGc=[1,[0,2447,2448,h],0,2451,2472,h],bGd=[1,[0,akT,akT,n],0,2434,2435,y],bGe=[1,[0,akP,akP,h],0,2494,2496,y],bGf=[1,[0,WW,WW,h],0,2486,2489,h],bGg=[1,[0,afe,afe,h],0,ag_,ag_,y],bGh=[1,[0,2503,2504,y],0,2507,2508,y],bGi=[1,[0,2544,2545,h],0,2546,2547,cT],bGj=[1,[0,2527,2529,h],0,2530,2531,n],bGk=[1,[0,Ku,Ku,w],0,2561,2562,n],bGl=[1,[0,S2,S2,v],0,My,My,cT],bGm=[0,2602,2608,h],bGn=[1,[0,2565,2570,h],0,2575,2576,h],bGo=[1,[0,2622,2624,y],0,2625,2626,n],bGp=[1,[0,2613,2614,h],0,2616,2617,h],bGq=[1,[0,Pq,Pq,h],0,UI,2671,ao],bGr=[1,[0,2635,2637,n],0,UB,UB,n],bGs=[1,[0,aaK,aaK,y],0,2693,2701,h],bGt=[1,[0,2674,2676,h],0,Ow,Ow,n],bGu=[1,[0,aim,2745,h],0,ahc,ahc,n],bGv=[1,[0,2707,2728,h],0,2730,2736,h],bGw=[1,[0,Kx,Kx,y],0,2763,2764,y],bGx=[1,[0,2750,2752,y],0,2753,2757,n],bGy=[1,[0,2790,2799,ao],0,Lk,Lk,w],bGz=[1,[0,Qr,Qr,h],0,2784,2785,h],bGA=[1,[0,2818,2819,y],0,2821,2828,h],bGB=[1,[0,ZR,ZR,h],0,2810,2815,n],bGC=[1,[0,2869,2873,h],0,W3,W3,n],bGD=[1,[0,2835,2856,h],0,aaE,2864,h],bGE=[1,[0,2881,2884,n],0,2887,2888,y],bGF=[1,[0,ZL,ZL,y],0,UH,UH,n],bGG=[1,[0,2908,2909,h],0,2911,2913,h],bGH=[1,[0,aeN,aeN,n],0,amc,amc,n],bGI=[1,[0,2930,2935,ac],0,Yc,Yc,n],bGJ=[1,[0,2918,2927,ao],0,Yp,Yp,v],bGK=[1,[0,WL,abI,h],0,Os,Os,h],bGL=[1,[0,2949,2954,h],0,2958,2960,h],bGM=[1,[0,3006,3007,y],0,Sc,Sc,n],bGN=[1,[0,2979,2980,h],0,2984,2986,h],bGO=[1,[0,afH,afH,h],0,ade,ade,y],bGP=[1,[0,3014,3016,y],0,3018,3020,y],bGQ=[1,[0,RE,RE,v],0,YO,YO,n],bGR=[1,[0,3056,3058,ac],0,3059,3064,v],bGS=[1,[0,3114,3129,h],0,zV,zV,h],bGT=[1,[0,3077,3084,h],0,3086,3088,h],bGU=[1,[0,3157,3158,n],0,3160,3162,h],bGV=[1,[0,3137,3140,y],0,3142,3144,n],bGW=[1,[0,akB,akB,v],0,abc,abc,h],bGX=[1,[0,3170,3171,n],0,3174,3183,ao],bGY=[1,[0,3218,3240,h],0,3242,3251,h],bGZ=[1,[0,3202,3203,y],0,3205,3212,h],bG0=[1,[0,ant,ant,n],0,3264,3268,y],bG1=[1,[0,Ln,Ln,n],0,$N,$N,h],bG2=[1,[0,3285,3286,y],0,M1,M1,h],bG3=[1,[0,3271,3272,y],0,3274,3275,y],bG4=[1,[0,3328,3329,n],0,3330,3331,y],bG5=[1,[0,3298,3299,n],0,3302,3311,ao],bG6=[1,[0,VC,VC,h],0,3390,3392,y],bG7=[1,[0,3342,3344,h],0,3346,3386,h],bG8=[1,[0,Uy,Uy,h],0,SK,SK,v],bG9=[1,[0,3398,3400,y],0,3402,3404,y],bG_=[1,[0,3426,3427,n],0,3430,3439,ao],bG$=[1,[0,afd,afd,y],0,3416,3422,ac],bHa=[1,[0,3461,3478,h],0,3482,3505,h],bHb=[1,[0,SD,SD,v],0,3450,3455,h],bHc=[1,[0,3535,3537,y],0,3538,3540,n],bHd=[1,[0,aik,aik,h],0,3520,3526,h],bHe=[1,[0,PA,PA,w],0,3585,3632,h],bHf=[1,[0,3544,3551,y],0,3558,3567,ao],bHg=[1,[0,3648,3653,h],0,air,air,ak],bHh=[1,[0,3634,3635,h],0,3636,3642,n],bHi=[1,[0,3713,3714,h],0,agD,agD,h],bHj=[1,[0,agB,agB,w],0,3664,3673,ao],bHk=[1,[0,3737,3743,h],0,3745,3747,h],bHl=[1,[0,Sy,Sy,h],0,QV,QV,h],bHm=[0,adO,adO,n],bHn=[1,[0,abo,abo,h],0,3754,3755,h],bHo=[1,[0,3776,3780,h],0,Z6,Z6,ak],bHp=[1,[0,3764,3769,n],0,3771,3772,n],bHq=[1,[0,3841,3843,v],0,3844,3858,w],bHr=[1,[0,3792,3801,ao],0,3804,3807,h],bHs=[1,[0,3866,3871,v],0,3872,3881,ao],bHt=[1,[0,Q3,Q3,w],0,3861,3863,v],bHu=[1,[0,UV,UV,n],0,KQ,KQ,v],bHv=[1,[0,agV,agV,v],0,SE,SE,n],bHw=[1,[0,P8,P8,$],0,3902,3903,y],bHx=[1,[0,$O,$O,Z],0,M_,M_,$],bHy=[1,[0,3968,3972,n],0,aaD,aaD,w],bHz=[1,[0,3913,3948,h],0,3953,3966,n],bHA=[1,[0,4030,4037,v],0,Za,Za,n],bHB=[1,[0,3976,3980,h],0,3981,3991,n],bHC=[1,[0,4057,4058,w],0,adj,4138,h],bHD=[1,[0,4046,4047,v],0,4048,4052,w],bHE=[1,[0,Qb,Qb,y],0,4153,4154,n],bHF=[1,[0,4141,4144,n],0,ahH,ahH,y],bHG=[1,[0,4170,4175,w],0,4176,4181,h],bHH=[1,[0,4157,4158,n],0,aeu,aeu,h],bHI=[1,[0,O8,O8,h],0,4194,4196,y],bHJ=[1,[0,4184,4185,n],0,4186,4189,h],bHK=[1,[0,4213,4225,h],0,ait,ait,n],bHL=[1,[0,4199,4205,y],0,4206,4208,h],bHM=[1,[0,agn,agn,h],0,al8,al8,y],bHN=[1,[0,4229,4230,n],0,4231,4236,y],bHO=[1,[0,4256,4293,e],0,$U,$U,e],bHP=[1,[0,4250,4252,y],0,KL,KL,n],bHQ=[1,[0,4349,4680,h],0,4682,4685,h],bHR=[1,[0,4304,4346,h],0,WG,WG,w],bHS=[1,[0,4746,4749,h],0,4752,4784,h],bHT=[1,[0,$B,$B,h],0,4698,4701,h],bHU=[1,[0,4808,4822,h],0,4824,4880,h],bHV=[1,[0,4792,4798,h],0,PW,PW,h],bHW=[1,[0,4969,4988,ac],0,4992,5007,h],bHX=[1,[0,4888,4954,h],0,4957,4959,n],bHY=[1,[0,5121,5740,h],0,5741,5742,w],bHZ=[1,[0,5024,5109,e],0,5112,5117,d],bH0=[1,[0,Ns,Ns,$],0,5792,5866,h],bH1=[1,[0,aey,aey,h4],0,5761,5786,h],bH2=[1,[0,5902,5905,h],0,5906,5908,n],bH3=[1,[0,5870,5872,ei],0,5873,5880,h],bH4=[1,[0,5970,5971,n],0,5984,5996,h],bH5=[1,[0,5938,5940,n],0,5941,5942,w],bH6=[1,[0,agl,agl,y],0,6071,6077,n],bH7=[1,[0,6002,6003,n],0,6016,6067,h],bH8=[1,[0,6100,6102,w],0,$E,$E,ak],bH9=[1,[0,akZ,akZ,n],0,6087,6088,y],bH_=[1,[0,6112,6121,ao],0,6128,6137,ac],bH$=[1,[0,ajS,ajS,cT],0,akN,akN,h],bIa=[1,[0,TE,TE,cF],0,6160,6169,ao],bIb=[1,[0,ZZ,ZZ,cR],0,6151,6154,w],bIc=[1,[0,6277,6278,n],0,6279,6312,h],bId=[1,[0,aer,aer,ak],0,6212,6263,h],bIe=[1,[0,6432,6434,n],0,6435,6438,y],bIf=[1,[0,agI,agI,h],0,6320,6389,h],bIg=[1,[0,6451,6456,y],0,6457,6459,n],bIh=[1,[0,6441,6443,y],0,6448,6449,y],bIi=[1,[0,6512,6516,h],0,6528,6571,h],bIj=[1,[0,6468,6469,w],0,6470,6479,ao],bIk=[1,[0,6656,6678,h],0,6679,6680,n],bIl=[1,[0,6608,6617,ao],0,Qg,Qg,ac],bIm=[0,aj2,aj2,y],bIn=[1,[0,ail,ail,n],0,6686,6687,w],bIo=[1,[0,LG,LG,y],0,acE,acE,n],bIp=[1,[0,alA,alA,y],0,6744,6750,n],bIq=[1,[0,SV,SV,n],0,6784,6793,ao],bIr=[1,[0,6757,6764,n],0,6765,6770,y],bIs=[1,[0,6832,6845,n],0,af_,af_,mC],bIt=[1,[0,6816,6822,w],0,afG,afG,ak],bIu=[1,[0,af$,af$,y],0,6966,6970,n],bIv=[1,[0,ac8,ac8,y],0,6917,6963,h],bIw=[1,[0,6979,6980,y],0,6981,6987,h],bIx=[1,[0,OQ,OQ,n],0,6973,6977,y],bIy=[1,[0,7028,7036,v],0,7040,7041,n],bIz=[1,[0,7002,7008,w],0,7009,7018,v],bIA=[1,[0,7078,7079,y],0,7080,7081,n],bIB=[1,[0,7043,7072,h],0,afI,afI,y],bIC=[1,[0,7098,7141,h],0,WK,WK,n],bID=[1,[0,7083,7085,n],0,7086,7087,h],bIE=[1,[0,ac2,ac2,y],0,7151,7153,n],bIF=[1,[0,7144,7145,n],0,7146,7148,y],bIG=[1,[0,7212,7219,n],0,7220,7221,y],bIH=[1,[0,7164,7167,w],0,7168,7203,h],bII=[1,[0,7248,7257,ao],0,7258,7287,h],bIJ=[1,[0,7227,7231,w],0,7232,7241,ao],bIK=[1,[0,7376,7378,n],0,ag8,ag8,w],bIL=[1,[0,7294,7295,w],0,7296,7304,d],bIM=[1,[0,W2,W2,n],0,7406,7409,h],bIN=[1,[0,aca,aca,y],0,7394,7400,n],bIO=[1,[0,7416,7417,n],0,7424,7467,d],bIP=[1,[0,KB,KB,n],0,7413,7414,h],bIQ=[1,[0,7579,7615,ak],0,7616,7673,n],bIR=[1,[0,7531,7543,d],0,X3,X3,ak],bIS=[1,[0,T_,T_,d],0,ace,ace,e],bIT=[1,[0,ald,ald,e],0,$x,$x,d],bIU=[1,[0,Ql,Ql,d],0,SC,SC,e],bIV=[1,[0,alW,alW,e],0,aie,aie,d],bIW=[1,[0,Kf,Kf,d],0,aj1,aj1,e],bIX=[1,[0,anv,anv,e],0,abj,abj,d],bIY=[1,[0,O0,O0,d],0,Uv,Uv,e],bIZ=[1,[0,alF,alF,e],0,OD,OD,d],bI0=[1,[0,aaz,aaz,d],0,We,We,e],bI1=[1,[0,aiT,aiT,e],0,amj,amj,d],bI2=[1,[0,NL,NL,d],0,abs,abs,e],bI3=[1,[0,acm,acm,e],0,adt,adt,d],bI4=[1,[0,aet,aet,d],0,abv,abv,e],bI5=[1,[0,ajK,ajK,e],0,abf,abf,d],bI6=[1,[0,Sx,Sx,d],0,al6,al6,e],bI7=[1,[0,ag7,ag7,e],0,VJ,VJ,d],bI8=[1,[0,anM,anM,d],0,Tt,Tt,e],bI9=[1,[0,$j,$j,e],0,LD,LD,d],bI_=[1,[0,Mq,Mq,d],0,afX,afX,e],bI$=[1,[0,alq,alq,e],0,YL,YL,d],bJa=[1,[0,Xr,Xr,d],0,LE,LE,e],bJb=[1,[0,alM,alM,e],0,an1,an1,d],bJc=[1,[0,_w,_w,d],0,agS,agS,e],bJd=[1,[0,amm,amm,e],0,LX,LX,d],bJe=[1,[0,KN,KN,d],0,aoZ,aoZ,e],bJf=[1,[0,ajB,ajB,e],0,$G,$G,d],bJg=[1,[0,Ts,Ts,d],0,aac,aac,e],bJh=[1,[0,aj0,aj0,e],0,add,add,d],bJi=[1,[0,ahQ,ahQ,d],0,Oo,Oo,e],bJj=[1,[0,_s,_s,e],0,Ym,Ym,d],bJk=[1,[0,Yo,Yo,d],0,afU,afU,e],bJl=[1,[0,T3,T3,e],0,aih,aih,d],bJm=[0,ahr,ahr,d],bJn=[1,[0,acj,acj,e],0,abN,abN,d],bJo=[1,[0,NF,NF,e],0,ak8,ak8,d],bJp=[1,[0,aa_,aa_,d],0,P3,P3,e],bJq=[1,[0,K0,K0,e],0,T5,T5,d],bJr=[1,[0,$y,$y,d],0,aen,aen,e],bJs=[1,[0,aad,aad,e],0,_x,_x,d],bJt=[1,[0,Yd,Yd,d],0,aoK,aoK,e],bJu=[1,[0,adL,adL,e],0,anP,anP,d],bJv=[1,[0,PZ,PZ,d],0,abr,abr,e],bJw=[1,[0,NC,NC,e],0,Pw,Pw,d],bJx=[1,[0,Q9,Q9,d],0,KZ,KZ,e],bJy=[1,[0,aaZ,aaZ,e],0,Tp,Tp,d],bJz=[1,[0,YC,YC,d],0,MC,MC,e],bJA=[1,[0,V0,V0,e],0,adi,adi,d],bJB=[1,[0,K2,K2,d],0,ajj,ajj,e],bJC=[1,[0,S7,S7,e],0,ajl,ajl,d],bJD=[1,[0,afA,afA,d],0,ST,ST,e],bJE=[1,[0,aj3,aj3,e],0,QG,QG,d],bJF=[1,[0,7829,7837,d],0,$H,$H,e],bJG=[1,[0,Lz,Lz,e],0,ang,ang,d],bJH=[1,[0,XN,XN,d],0,Zw,Zw,e],bJI=[1,[0,akV,akV,e],0,agJ,agJ,d],bJJ=[1,[0,aiN,aiN,d],0,agR,agR,e],bJK=[1,[0,ab3,ab3,e],0,aal,aal,d],bJL=[1,[0,aj4,aj4,d],0,PG,PG,e],bJM=[1,[0,anF,anF,e],0,aef,aef,d],bJN=[1,[0,aeZ,aeZ,d],0,O1,O1,e],bJO=[1,[0,acl,acl,e],0,Rh,Rh,d],bJP=[1,[0,Tw,Tw,d],0,YA,YA,e],bJQ=[1,[0,ac7,ac7,e],0,Og,Og,d],bJR=[1,[0,RR,RR,d],0,aew,aew,e],bJS=[1,[0,MK,MK,e],0,YS,YS,d],bJT=[1,[0,K9,K9,d],0,QM,QM,e],bJU=[1,[0,aaL,aaL,e],0,aaW,aaW,d],bJV=[1,[0,akU,akU,d],0,agW,agW,e],bJW=[1,[0,Ra,Ra,e],0,an8,an8,d],bJX=[1,[0,ajT,ajT,d],0,Zx,Zx,e],bJY=[1,[0,QI,QI,e],0,Mn,Mn,d],bJZ=[1,[0,acU,acU,d],0,aax,aax,e],bJ0=[1,[0,amg,amg,e],0,aaF,aaF,d],bJ1=[1,[0,R2,R2,d],0,Sa,Sa,e],bJ2=[1,[0,abz,abz,e],0,adh,adh,d],bJ3=[1,[0,NG,NG,d],0,Ub,Ub,e],bJ4=[1,[0,Pg,Pg,e],0,QN,QN,d],bJ5=[1,[0,UA,UA,d],0,abg,abg,e],bJ6=[1,[0,ag4,ag4,e],0,alP,alP,d],bJ7=[1,[0,YE,YE,d],0,akw,akw,e],bJ8=[1,[0,QB,QB,e],0,aiE,aiE,d],bJ9=[1,[0,ahv,ahv,d],0,OG,OG,e],bJ_=[1,[0,7944,7951,e],0,7952,7957,d],bJ$=[1,[0,agb,agb,d],0,OI,OI,e],bKa=[1,[0,7992,7999,e],0,8e3,8005,d],bKb=[1,[0,7968,7975,d],0,7976,7983,e],bKc=[1,[0,U1,U1,e],0,Sr,Sr,e],bKd=[1,[0,8016,8023,d],0,NT,NT,e],bKe=[1,[0,8072,8079,ej],0,8080,8087,d],bKf=[1,[0,8040,8047,e],0,8048,8061,d],bKg=[1,[0,8118,8119,d],0,8120,8123,e],bKh=[1,[0,8096,8103,d],0,8104,8111,ej],bKi=[1,[0,8130,8132,d],0,8134,8135,d],bKj=[1,[0,afR,afR,bp],0,OC,OC,d],bKk=[1,[0,8150,8151,d],0,8152,8155,e],bKl=[1,[0,_i,_i,ej],0,8141,8143,bp],bKm=[0,8178,8180,d],bKn=[1,[0,8160,8167,d],0,8168,8172,e],bKo=[1,[0,8192,8202,h4],0,8203,8207,cF],bKp=[1,[0,8184,8187,e],0,anH,anH,ej],bKq=[1,[0,ah_,ah_,Z],0,8219,8220,eM],bKr=[1,[0,8214,8215,w],0,ajZ,ajZ,eM],bKs=[1,[0,Of,Of,20178],0,amE,amE,20182],bKt=[1,[0,Y2,Y2,Z],0,adz,adz,eM],bKu=[1,[0,Q7,Q7,fs],0,8251,8254,w],bKv=[1,[0,agL,agL,h4],0,8240,8248,w],bKw=[1,[0,acb,acb,$],0,8263,8273,w],bKx=[1,[0,8257,8259,w],0,Y6,Y6,aa],bKy=[1,[0,ahp,ahp,h4],0,8288,8292,cF],bKz=[1,[0,Rc,Rc,w],0,Q6,Q6,j3],bKA=[1,[0,8314,8316,aa],0,akD,akD,Z],bKB=[1,[0,St,St,ac],0,aj6,aj6,ak],bKC=[1,[0,aba,aba,Z],0,aoC,aoC,$],bKD=[1,[0,abG,abG,ak],0,8320,8329,ac],bKE=[1,[0,Zt,Zt,n],0,8418,8420,mC],bKF=[1,[0,8352,8383,cT],0,8400,8412,n],bKG=[1,[0,W_,W_,e],0,8456,8457,v],bKH=[1,[0,8448,8449,v],0,aaJ,aaJ,e],bKI=[1,[0,Zj,Zj,d],0,aok,aok,v],bKJ=[1,[0,8459,8461,e],0,8462,8463,d],bKK=[1,[0,8478,8483,v],0,aox,aox,e],bKL=[1,[0,8470,8471,v],0,ah1,ah1,aa],bKM=[1,[0,aoL,aoL,v],0,8490,8493,e],bKN=[1,[0,abD,abD,e],0,akx,akx,v],bKO=[1,[0,8501,8504,h],0,TX,TX,d],bKP=[1,[0,ajY,ajY,d],0,8496,8499,e],bKQ=[1,[0,alC,alC,e],0,8518,8521,d],bKR=[1,[0,8508,8509,d],0,8510,8511,e],bKS=[1,[0,Rw,Rw,v],0,8528,8543,ac],bKT=[1,[0,M3,M3,aa],0,8524,8525,v],bKU=[1,[0,YT,YT,ac],0,8586,8587,v],bKV=[1,[0,aoz,aoz,e],0,act,act,d],bKW=[1,[0,V4,V4,aa],0,8609,8610,v],bKX=[1,[0,8597,8601,v],0,8602,8603,aa],bKY=[1,[0,any,any,aa],0,8623,8653,v],bKZ=[1,[0,8612,8613,v],0,LF,LF,aa],bK0=[1,[0,SL,SL,aa],0,8661,8691,v],bK1=[1,[0,8656,8657,v],0,_h,_h,aa],bK2=[1,[0,KO,KO,Z],0,TS,TS,$],bK3=[1,[0,8960,8967,v],0,Sf,Sf,Z],bK4=[1,[0,U0,U0,$],0,9003,9083,v],bK5=[1,[0,8992,8993,aa],0,8994,9e3,v],bK6=[1,[0,9180,9185,aa],0,9186,9254,v],bK7=[1,[0,9085,9114,v],0,9115,9139,aa],bK8=[1,[0,9472,9654,v],0,_d,_d,aa],bK9=[1,[0,9312,9371,ac],0,9372,9449,v],bK_=[1,[0,9728,9838,v],0,NE,NE,aa],bK$=[1,[0,ahy,ahy,aa],0,9666,9719,v],bLa=[1,[0,S1,S1,$],0,R9,R9,Z],bLb=[1,[0,amK,amK,Z],0,ajV,ajV,$],bLc=[1,[0,UZ,UZ,$],0,amY,amY,Z],bLd=[1,[0,aff,aff,Z],0,MD,MD,$],bLe=[1,[0,10132,10175,v],0,10176,10180,aa],bLf=[1,[0,Xj,Xj,Z],0,acd,acd,$],bLg=[1,[0,aoQ,aoQ,$],0,aeA,aeA,Z],bLh=[1,[0,adQ,adQ,$],0,10183,10213,aa],bLi=[1,[0,ajc,ajc,$],0,am_,am_,Z],bLj=[1,[0,aht,aht,Z],0,WS,WS,$],bLk=[1,[0,alp,alp,Z],0,Qd,Qd,$],bLl=[1,[0,10224,10239,aa],0,10240,10495,v],bLm=[0,KT,KT,Z],bLn=[1,[0,Py,Py,$],0,VM,VM,Z],bLo=[1,[0,K5,K5,$],0,Tg,Tg,Z],bLp=[1,[0,Qc,Qc,Z],0,NQ,NQ,$],bLq=[1,[0,alL,alL,$],0,aiP,aiP,Z],bLr=[1,[0,Xp,Xp,Z],0,$q,$q,$],bLs=[1,[0,ad1,ad1,Z],0,af9,af9,$],bLt=[1,[0,akG,akG,Z],0,amt,amt,$],bLu=[1,[0,adE,adE,$],0,10750,11007,aa],bLv=[1,[0,agr,agr,$],0,10716,10747,aa],bLw=[1,[0,11085,11123,v],0,11126,11157,v],bLx=[1,[0,11056,11076,aa],0,11077,11078,v],bLy=[1,[0,11264,11310,e],0,11312,11358,d],bLz=[1,[0,11197,11208,v],0,11210,11218,v],bLA=[1,[0,MN,MN,e],0,$P,$P,d],bLB=[1,[0,MZ,MZ,d],0,11362,11364,e],bLC=[1,[0,11373,11376,e],0,agE,agE,d],bLD=[1,[0,Z2,Z2,d],0,_k,_k,e],bLE=[1,[0,11388,11389,ak],0,11390,11392,e],bLF=[1,[0,11379,11380,d],0,abm,abm,e],bLG=[1,[0,aoH,aoH,d],0,SZ,SZ,e],bLH=[1,[0,alH,alH,e],0,Vg,Vg,d],bLI=[1,[0,TC,TC,d],0,afm,afm,e],bLJ=[1,[0,anc,anc,e],0,abR,abR,d],bLK=[1,[0,$s,$s,d],0,alh,alh,e],bLL=[1,[0,aeT,aeT,e],0,aez,aez,d],bLM=[1,[0,aa9,aa9,d],0,N6,N6,e],bLN=[1,[0,MT,MT,e],0,KM,KM,d],bLO=[1,[0,afi,afi,d],0,_1,_1,e],bLP=[1,[0,aoR,aoR,e],0,af1,af1,d],bLQ=[1,[0,Qw,Qw,d],0,K1,K1,e],bLR=[1,[0,Qx,Qx,e],0,XJ,XJ,d],bLS=[1,[0,aeG,aeG,d],0,Ws,Ws,e],bLT=[1,[0,L0,L0,e],0,L5,L5,d],bLU=[1,[0,Zl,Zl,d],0,Qp,Qp,e],bLV=[1,[0,agA,agA,e],0,aij,aij,d],bLW=[1,[0,ahZ,ahZ,d],0,acG,acG,e],bLX=[1,[0,Xf,Xf,e],0,Pf,Pf,d],bLY=[1,[0,af0,af0,d],0,LW,LW,e],bLZ=[1,[0,Vi,Vi,e],0,RM,RM,d],bL0=[1,[0,anT,anT,d],0,af4,af4,e],bL1=[1,[0,Zc,Zc,e],0,Rt,Rt,d],bL2=[1,[0,amN,amN,d],0,Zf,Zf,e],bL3=[1,[0,Tz,Tz,e],0,Xl,Xl,d],bL4=[1,[0,WI,WI,d],0,ab7,ab7,e],bL5=[1,[0,M5,M5,e],0,abA,abA,d],bL6=[1,[0,aje,aje,d],0,Vx,Vx,e],bL7=[1,[0,aaB,aaB,e],0,Q2,Q2,d],bL8=[1,[0,YD,YD,d],0,Ug,Ug,e],bL9=[1,[0,ajo,ajo,e],0,Lw,Lw,d],bL_=[1,[0,amv,amv,d],0,XI,XI,e],bL$=[1,[0,$_,$_,e],0,Pm,Pm,d],bMa=[1,[0,abJ,abJ,e],0,On,On,d],bMb=[1,[0,SP,SP,e],0,11491,11492,d],bMc=[1,[0,aeq,aeq,d],0,11513,11516,w],bMd=[1,[0,Nq,Nq,d],0,11503,11505,n],bMe=[1,[0,PK,PK,d],0,11568,11623,h],bMf=[1,[0,11518,11519,w],0,11520,11557,d],bMg=[1,[0,11680,11686,h],0,11688,11694,h],bMh=[1,[0,al_,al_,w],0,TH,TH,n],bMi=[1,[0,11728,11734,h],0,11736,11742,h],bMj=[1,[0,11704,11710,h],0,11712,11718,h],bMk=[1,[0,$2,$2,eM],0,akf,akf,fs],bMl=[1,[0,11776,11777,w],0,UQ,UQ,eM],bMm=[0,RD,RD,eM],bMn=[1,[0,Ww,Ww,eM],0,Z5,Z5,fs],bMo=[1,[0,Ux,Ux,cR],0,Rp,Rp,w],bMp=[1,[0,11790,11798,w],0,aby,aby,cR],bMq=[1,[0,$F,$F,fs],0,aks,aks,Z],bMr=[1,[0,Kc,Kc,fs],0,11806,11807,w],bMs=[1,[0,ahL,ahL,$],0,agH,agH,Z],bMt=[1,[0,ah9,ah9,Z],0,al5,al5,$],bMu=[1,[0,11834,11835,cR],0,11836,11839,w],bMv=[1,[0,11818,11822,w],0,XG,XG,ak],bMw=[1,[0,11904,11929,v],0,11931,12019,v],bMx=[1,[0,Lv,Lv,w],0,Y0,Y0,Z],bMy=[1,[0,afb,afb,v],0,aoh,aoh,ak],bMz=[1,[0,12272,12283,v],0,Ue,Ue,h4],bMA=[1,[0,SO,SO,Z],0,Xa,Xa,$],bMB=[1,[0,aaV,aaV,ei],0,Us,Us,Z],bMC=[1,[0,VB,VB,Z],0,VZ,VZ,$],bMD=[1,[0,aap,aap,$],0,ao9,ao9,Z],bME=[1,[0,anA,anA,$],0,QH,QH,Z],bMF=[1,[0,S0,S0,Z],0,XD,XD,$],bMG=[1,[0,TG,TG,Z],0,12318,12319,$],bMH=[1,[0,Yr,Yr,Z],0,Mz,Mz,$],bMI=[1,[0,aoP,aoP,cR],0,12337,12341,ak],bMJ=[1,[0,12321,12329,ei],0,12330,12333,n],bMK=[1,[0,ae0,ae0,w],0,12350,12351,v],bML=[1,[0,12344,12346,ei],0,Mi,Mi,ak],bMM=[1,[0,Xq,Xq,h],0,am2,am2,cR],bMN=[1,[0,12441,12442,n],0,12443,12444,bp],bMO=[1,[0,12549,12590,h],0,12593,12686,h],bMP=[1,[0,Qv,Qv,w],0,12540,12542,ak],bMQ=[1,[0,12736,12771,v],0,12784,12799,h],bMR=[1,[0,12690,12693,ac],0,12694,12703,v],bMS=[1,[0,Or,Or,v],0,12881,12895,ac],bMT=[1,[0,12832,12841,ac],0,12842,12871,v],bMU=[1,[0,12992,13054,v],0,13056,13311,v],bMV=[1,[0,12928,12937,ac],0,12938,12976,v],bMW=[1,[0,VS,VS,ak],0,40982,42124,h],bMX=[1,[0,19904,19967,v],0,19968,40938,h],bMY=[1,[0,42240,42507,h],0,ahf,ahf,ak],bMZ=[1,[0,42192,42231,h],0,42232,42237,ak],bM0=[1,[0,Kl,Kl,e],0,$1,$1,d],bM1=[1,[0,42512,42527,h],0,42528,42537,ao],bM2=[1,[0,RN,RN,e],0,R1,R1,d],bM3=[1,[0,PC,PC,d],0,Mu,Mu,e],bM4=[1,[0,W1,W1,e],0,XO,XO,d],bM5=[1,[0,Sq,Sq,d],0,ab$,ab$,e],bM6=[1,[0,afw,afw,e],0,Zv,Zv,d],bM7=[1,[0,amV,amV,d],0,agj,agj,e],bM8=[1,[0,KW,KW,e],0,aho,aho,d],bM9=[1,[0,af6,af6,d],0,Lf,Lf,e],bM_=[1,[0,ai3,ai3,e],0,O9,O9,d],bM$=[1,[0,PY,PY,d],0,ai2,ai2,e],bNa=[1,[0,RO,RO,e],0,R$,R$,d],bNb=[1,[0,ah7,ah7,d],0,aev,aev,e],bNc=[1,[0,abZ,abZ,e],0,aa4,aa4,d],bNd=[1,[0,TU,TU,d],0,ah3,ah3,e],bNe=[1,[0,42608,42610,mC],0,PQ,PQ,w],bNf=[1,[0,aiQ,aiQ,d],0,adS,adS,h],bNg=[1,[0,aeb,aeb,d],0,aiy,aiy,e],bNh=[1,[0,ab5,ab5,w],0,Vz,Vz,ak],bNi=[1,[0,Wl,Wl,d],0,Wn,Wn,e],bNj=[1,[0,So,So,e],0,Wy,Wy,d],bNk=[1,[0,WX,WX,d],0,ahS,ahS,e],bNl=[1,[0,$L,$L,e],0,ab8,ab8,d],bNm=[0,aaX,aaX,d],bNn=[1,[0,Kd,Kd,e],0,anp,anp,d],bNo=[1,[0,ake,ake,e],0,aoU,aoU,d],bNp=[1,[0,ahn,ahn,d],0,aoN,aoN,e],bNq=[1,[0,42656,42725,h],0,42726,42735,ei],bNr=[1,[0,acZ,acZ,d],0,42652,42653,ak],bNs=[1,[0,42784,42785,bp],0,Nv,Nv,e],bNt=[1,[0,42738,42743,w],0,42752,42774,bp],bNu=[1,[0,Se,Se,d],0,_P,_P,e],bNv=[1,[0,_r,_r,e],0,Pc,Pc,d],bNw=[1,[0,PR,PR,d],0,anm,anm,e],bNx=[1,[0,$n,$n,e],0,akk,akk,d],bNy=[1,[0,KG,KG,d],0,L4,L4,e],bNz=[1,[0,adr,adr,e],0,ahw,ahw,d],bNA=[1,[0,acT,acT,d],0,amz,amz,e],bNB=[1,[0,agx,agx,e],0,afN,afN,d],bNC=[1,[0,UE,UE,d],0,Qn,Qn,e],bND=[1,[0,akm,akm,e],0,MB,MB,d],bNE=[1,[0,WQ,WQ,d],0,aoi,aoi,e],bNF=[1,[0,YB,YB,e],0,Mt,Mt,d],bNG=[1,[0,ai0,ai0,d],0,P7,P7,e],bNH=[1,[0,PM,PM,e],0,Wo,Wo,d],bNI=[1,[0,Zb,Zb,d],0,Om,Om,e],bNJ=[1,[0,Ms,Ms,e],0,Vr,Vr,d],bNK=[1,[0,ZD,ZD,d],0,RK,RK,e],bNL=[1,[0,af7,af7,e],0,Li,Li,d],bNM=[1,[0,amI,amI,d],0,VL,VL,e],bNN=[1,[0,ane,ane,e],0,Un,Un,d],bNO=[1,[0,Ss,Ss,d],0,YY,YY,e],bNP=[1,[0,alX,alX,e],0,_m,_m,d],bNQ=[1,[0,XS,XS,d],0,TN,TN,e],bNR=[1,[0,agP,agP,e],0,aha,aha,d],bNS=[1,[0,42865,42872,d],0,Od,Od,e],bNT=[1,[0,Yv,Yv,e],0,alK,alK,d],bNU=[1,[0,XZ,XZ,d],0,ady,ady,e],bNV=[1,[0,am8,am8,e],0,ali,ali,d],bNW=[1,[0,and,and,d],0,ajn,ajn,e],bNX=[1,[0,aae,aae,e],0,O$,O$,d],bNY=[1,[0,QS,QS,d],0,afz,afz,e],bNZ=[1,[0,aot,aot,ak],0,42889,42890,bp],bN0=[1,[0,PJ,PJ,e],0,42899,42901,d],bN1=[1,[0,aes,aes,h],0,Rq,Rq,e],bN2=[1,[0,aep,aep,e],0,LP,LP,d],bN3=[1,[0,RH,RH,d],0,Yf,Yf,e],bN4=[1,[0,Km,Km,e],0,X8,X8,d],bN5=[1,[0,an7,an7,d],0,Um,Um,e],bN6=[1,[0,N0,N0,e],0,MM,MM,d],bN7=[1,[0,ajw,ajw,d],0,aj9,aj9,e],bN8=[1,[0,Ol,Ol,d],0,aa6,aa6,e],bN9=[1,[0,ZA,ZA,d],0,42922,42926,e],bN_=[1,[0,43003,43009,h],0,aiu,aiu,n],bN$=[1,[0,acO,acO,h],0,43e3,43001,ak],bOa=[1,[0,43020,43042,h],0,43043,43044,y],bOb=[1,[0,Vq,Vq,n],0,43015,43018,h],bOc=[1,[0,43062,43063,v],0,QW,QW,cT],bOd=[1,[0,afl,afl,y],0,43048,43051,v],bOe=[1,[0,43138,43187,h],0,43188,43203,y],bOf=[1,[0,43072,43123,h],0,43124,43127,w],bOg=[1,[0,43250,43255,h],0,43256,43258,w],bOh=[1,[0,43214,43215,w],0,43216,43225,ao],bOi=[1,[0,43274,43301,h],0,43302,43309,n],bOj=[1,[0,ad9,ad9,w],0,aan,aan,h],bOk=[1,[0,abM,abM,w],0,43360,43388,h],bOl=[1,[0,43312,43334,h],0,43335,43345,n],bOm=[0,43444,43445,y],bOn=[1,[0,KV,KV,y],0,43396,43442,h],bOo=[1,[0,43457,43469,w],0,Kk,Kk,ak],bOp=[1,[0,43450,43451,y],0,Oi,Oi,n],bOq=[1,[0,KC,KC,ak],0,43495,43503,h],bOr=[1,[0,43486,43487,w],0,43488,43492,h],bOs=[1,[0,43567,43568,y],0,43569,43570,n],bOt=[1,[0,43514,43518,h],0,43520,43560,h],bOu=[1,[0,43588,43595,h],0,aaN,aaN,n],bOv=[1,[0,43573,43574,n],0,43584,43586,h],bOw=[1,[0,abL,abL,ak],0,43633,43638,h],bOx=[1,[0,43600,43609,ao],0,43612,43615,w],bOy=[1,[0,T4,T4,y],0,43646,43695,h],bOz=[1,[0,Lh,Lh,h],0,QL,QL,y],bOA=[1,[0,43703,43704,n],0,43705,43709,h],bOB=[1,[0,LR,LR,h],0,43698,43700,n],bOC=[1,[0,43739,43740,h],0,am7,am7,ak],bOD=[1,[0,akd,akd,h],0,ML,ML,n],bOE=[1,[0,43758,43759,y],0,43760,43761,w],bOF=[1,[0,43744,43754,h],0,_9,_9,y],bOG=[1,[0,43777,43782,h],0,43785,43790,h],bOH=[1,[0,43763,43764,ak],0,SB,SB,y],bOI=[1,[0,UK,UK,bp],0,43868,43871,ak],bOJ=[1,[0,43808,43814,h],0,43816,43822,h],bOK=[1,[0,PI,PI,n],0,44006,44007,y],bOL=[1,[0,43888,43967,d],0,43968,44002,h],bOM=[1,[0,amn,amn,n],0,44016,44025,ao],bON=[1,[0,44009,44010,y],0,ah0,ah0,w],bOO=[1,[0,63744,64109,h],0,64112,64217,h],bOP=[1,[0,55216,55238,h],0,55243,55291,h],bOQ=[1,[0,64287,64296,h],0,ag3,ag3,aa],bOR=[1,[0,64275,64279,d],0,aeX,aeX,h],bOS=[1,[0,64323,64324,h],0,64326,64433,h],bOT=[1,[0,64312,64316,h],0,al2,al2,h],bOU=[1,[0,64848,64911,h],0,64914,64967,h],bOV=[1,[0,64467,64829,h],0,Wb,Wb,$],bOW=[1,[0,65040,65046,w],0,Vb,Vb,Z],bOX=[1,[0,acN,acN,cT],0,an$,an$,v],bOY=[1,[0,65073,65074,cR],0,65075,65076,j3],bOZ=[1,[0,adY,adY,w],0,65056,65071,n],bO0=[1,[0,Th,Th,Z],0,XY,XY,$],bO1=[1,[0,alQ,alQ,$],0,acv,acv,Z],bO2=[1,[0,UM,UM,Z],0,anN,anN,$],bO3=[1,[0,X4,X4,$],0,aoS,aoS,Z],bO4=[1,[0,65093,65094,w],0,ai7,ai7,Z],bO5=[1,[0,ak7,ak7,$],0,Yx,Yx,Z],bO6=[1,[0,65108,65111,w],0,OF,OF,cR],bO7=[1,[0,65097,65100,w],0,65101,65103,j3],bO8=[1,[0,amT,amT,Z],0,afQ,afQ,$],bO9=[1,[0,ZG,ZG,$],0,N$,N$,Z],bO_=[1,[0,Z7,Z7,w],0,acF,acF,cT],bO$=[1,[0,Nj,Nj,aa],0,acs,acs,cR],bPa=[1,[0,65281,65283,w],0,ajv,ajv,cT],bPb=[1,[0,65136,65140,h],0,65142,65276,h],bPc=[1,[0,Sm,Sm,aa],0,NN,NN,w],bPd=[1,[0,R5,R5,Z],0,aiv,aiv,$],bPe=[1,[0,65308,65310,aa],0,65311,65312,w],bPf=[1,[0,65294,65295,w],0,65296,65305,ao],bPg=[1,[0,RC,RC,bp],0,Kq,Kq,j3],bPh=[1,[0,XW,XW,Z],0,ahX,ahX,w],bPi=[1,[0,_$,_$,$],0,an4,an4,aa],bPj=[1,[0,65345,65370,d],0,ZI,ZI,Z],bPk=[1,[0,Rd,Rd,$],0,65380,65381,w],bPl=[1,[0,La,La,$],0,aa8,aa8,w],bPm=[0,65440,65470,h],bPn=[1,[0,Wp,Wp,ak],0,65393,65437,h],bPo=[1,[0,65504,65505,cT],0,amJ,amJ,aa],bPp=[1,[0,65482,65487,h],0,65490,65495,h],bPq=[1,[0,65513,65516,aa],0,65517,65518,v],bPr=[1,[0,ajH,ajH,v],0,65509,65510,cT],bPs=[1,[0,65576,65594,h],0,65596,65597,h],bPt=[1,[0,65532,65533,v],0,v5,65547,h],bPu=[1,[0,65799,65843,ac],0,65847,65855,v],bPv=[1,[0,65616,65629,h],0,65664,65786,h],bPw=[1,[0,65932,65934,v],0,65936,65947,v],bPx=[1,[0,65909,65912,ac],0,65913,65929,v],bPy=[1,[0,66208,66256,h],0,WF,WF,n],bPz=[1,[0,66e3,66044,v],0,NA,NA,n],bPA=[1,[0,ak1,ak1,ei],0,66370,66377,h],bPB=[1,[0,66304,66335,h],0,66336,66339,ac],bPC=[1,[0,Kw,Kw,w],0,66464,66499,h],bPD=[1,[0,66384,66421,h],0,66422,66426,n],bPE=[1,[0,66600,66639,d],0,66640,66717,h],bPF=[1,[0,amp,amp,w],0,66513,66517,ei],bPG=[1,[0,66864,66915,h],0,akO,akO,w],bPH=[1,[0,66736,66771,e],0,66776,66811,d],bPI=[1,[0,_0,_0,h],0,67594,67637,h],bPJ=[1,[0,67392,67413,h],0,67424,67431,h],bPK=[1,[0,67672,67679,ac],0,67680,67702,h],bPL=[1,[0,amX,amX,h],0,67647,67669,h],bPM=[1,[0,67808,67826,h],0,67828,67829,h],bPN=[1,[0,67705,67711,ac],0,67712,67742,h],bPO=[1,[0,67872,67897,h],0,WN,WN,w],bPP=[1,[0,67840,67861,h],0,67862,67867,ac],bPQ=[1,[0,68050,68095,ac],0,agU,agU,h],bPR=[1,[0,68028,68029,ac],0,68030,68031,h],bPS=[1,[0,68117,68119,h],0,68121,68147,h],bPT=[1,[0,68101,68102,n],0,68108,68111,n],bPU=[1,[0,68192,68220,h],0,68221,68222,ac],bPV=[1,[0,aj5,aj5,n],0,68160,68167,ac],bPW=[1,[0,aid,aid,v],0,68297,68324,h],bPX=[1,[0,68224,68252,h],0,68253,68255,ac],bPY=[1,[0,68409,68415,w],0,68416,68437,h],bPZ=[1,[0,68331,68335,ac],0,68336,68342,w],bP0=[1,[0,68505,68508,w],0,68521,68527,ac],bP1=[1,[0,68448,68466,h],0,68472,68479,ac],bP2=[1,[0,69216,69246,ac],0,ag0,ag0,y],bP3=[1,[0,68736,68786,e],0,68800,68850,d],bP4=[1,[0,69703,69709,w],0,69714,69733,ac],bP5=[1,[0,OW,OW,y],0,69635,69687,h],bP6=[1,[0,69808,69810,y],0,69811,69814,n],bP7=[1,[0,69759,69761,n],0,Z9,Z9,y],bP8=[1,[0,69822,69825,w],0,69840,69864,h],bP9=[1,[0,69817,69818,n],0,69819,69820,w],bP_=[1,[0,amk,amk,y],0,69933,69940,n],bP$=[1,[0,69888,69890,n],0,69891,69926,h],bQa=[1,[0,70004,70005,w],0,Xc,Xc,h],bQb=[1,[0,69952,69955,w],0,69968,70002,h],bQc=[1,[0,70070,70078,n],0,70079,70080,y],bQd=[1,[0,ZK,ZK,y],0,70019,70066,h],bQe=[1,[0,70096,70105,ao],0,Lc,Lc,h],bQf=[1,[0,70085,70089,w],0,70090,70092,n],bQg=[1,[0,70144,70161,h],0,70163,70187,h],bQh=[1,[0,U$,U$,h],0,70109,70111,w],bQi=[1,[0,QF,QF,y],0,70198,70199,n],bQj=[1,[0,70191,70193,n],0,70194,70195,y],bQk=[1,[0,70282,70285,h],0,70287,70301,h],bQl=[1,[0,Ve,Ve,n],0,70272,70278,h],bQm=[0,70368,70370,y],bQn=[1,[0,KJ,KJ,w],0,70320,70366,h],bQo=[1,[0,70405,70412,h],0,70415,70416,h],bQp=[1,[0,70384,70393,ao],0,70400,70401,n],bQq=[1,[0,YN,YN,n],0,KY,KY,h],bQr=[1,[0,70442,70448,h],0,70450,70451,h],bQs=[1,[0,70475,70477,y],0,YU,YU,h],bQt=[1,[0,RQ,RQ,n],0,70465,70468,y],bQu=[1,[0,70512,70516,n],0,70656,70708,h],bQv=[1,[0,70493,70497,h],0,70498,70499,y],bQw=[1,[0,al9,al9,y],0,KR,KR,n],bQx=[1,[0,70712,70719,n],0,70720,70721,y],bQy=[1,[0,abF,abF,w],0,70784,70831,h],bQz=[1,[0,70731,70735,w],0,70736,70745,ao],bQA=[1,[0,70843,70846,y],0,70847,70848,n],bQB=[1,[0,70835,70840,n],0,aeH,aeH,y],bQC=[1,[0,ao5,ao5,h],0,70864,70873,ao],bQD=[1,[0,70850,70851,n],0,70852,70853,h],bQE=[1,[0,71100,71101,n],0,Ni,Ni,y],bQF=[1,[0,71087,71089,y],0,71090,71093,n],bQG=[1,[0,71168,71215,h],0,71216,71218,y],bQH=[1,[0,71105,71127,w],0,71128,71131,h],bQI=[1,[0,71231,71232,n],0,71233,71235,w],bQJ=[1,[0,71227,71228,y],0,aag,aag,n],bQK=[1,[0,Ud,Ud,n],0,VX,VX,y],bQL=[1,[0,71248,71257,ao],0,71264,71276,w],bQM=[1,[0,aiF,aiF,n],0,71360,71369,ao],bQN=[1,[0,71342,71343,y],0,71344,71349,n],bQO=[1,[0,U6,U6,y],0,71463,71467,n],bQP=[1,[0,71453,71455,n],0,71456,71457,y],bQQ=[1,[0,71840,71871,e],0,71872,71903,d],bQR=[1,[0,71482,71483,ac],0,71484,71486,w],bQS=[1,[0,72193,72198,n],0,72199,72200,y],bQT=[1,[0,71914,71922,ac],0,Wc,Wc,h],bQU=[1,[0,SF,SF,h],0,72251,72254,n],bQV=[1,[0,72203,72242,h],0,72243,72248,n],bQW=[1,[0,72279,72280,y],0,72281,72283,n],bQX=[1,[0,abl,abl,n],0,ak$,ak$,h],bQY=[1,[0,72344,72345,n],0,72346,72348,w],bQZ=[1,[0,72326,72329,h],0,72330,72342,n],bQ0=[1,[0,acu,acu,y],0,72752,72758,n],bQ1=[1,[0,72384,72440,h],0,72704,72712,h],bQ2=[1,[0,72769,72773,w],0,72784,72793,ao],bQ3=[1,[0,ad6,ad6,y],0,Su,Su,n],bQ4=[1,[0,abu,abu,y],0,72874,72880,n],bQ5=[1,[0,72816,72817,w],0,72818,72847,h],bQ6=[1,[0,72960,72966,h],0,72968,72969,h],bQ7=[1,[0,72882,72883,n],0,Ok,Ok,y],bQ8=[1,[0,73023,73029,n],0,ON,ON,h],bQ9=[1,[0,73009,73014,n],0,afa,afa,n],bQ_=[1,[0,74864,74868,w],0,74880,75075,h],bQ$=[1,[0,73040,73049,ao],0,73728,74649,h],bRa=[1,[0,92768,92777,ao],0,92782,92783,w],bRb=[1,[0,82944,83526,h],0,92160,92728,h],bRc=[1,[0,92976,92982,n],0,92983,92987,w],bRd=[1,[0,92912,92916,n],0,Y7,Y7,w],bRe=[1,[0,93008,93017,ao],0,93019,93025,ac],bRf=[1,[0,92992,92995,ak],0,ako,ako,w],bRg=[1,[0,94033,94078,y],0,94095,94098,n],bRh=[1,[0,93053,93071,h],0,93952,94020,h],bRi=[1,[0,110592,110878,h],0,110960,111355,h],bRj=[1,[0,94176,94177,ak],0,94208,100332,h],bRk=[1,[0,Pu,Pu,v],0,113821,113822,n],bRl=[1,[0,113776,113788,h],0,113792,113800,h],bRm=[0,119081,119140,v],bRn=[1,[0,113824,113827,cF],0,118784,119029,v],bRo=[1,[0,119155,119162,cF],0,119163,119170,n],bRp=[1,[0,119143,119145,n],0,119146,119148,v],bRq=[1,[0,119214,119272,v],0,119296,119361,v],bRr=[1,[0,119173,119179,n],0,119180,119209,v],bRs=[1,[0,119808,119833,e],0,119834,119859,d],bRt=[1,[0,aaG,aaG,v],0,119552,119638,v],bRu=[1,[0,119938,119963,d],0,Nz,Nz,e],bRv=[1,[0,119886,119892,d],0,119894,119911,d],bRw=[1,[0,119982,119989,e],0,119990,119993,d],bRx=[1,[0,Tf,Tf,e],0,119973,119974,e],bRy=[1,[0,120042,120067,d],0,120068,120069,e],bRz=[1,[0,119997,120003,d],0,120005,120015,d],bRA=[1,[0,120120,120121,e],0,120123,120126,e],bRB=[1,[0,120077,120084,e],0,120086,120092,e],bRC=[1,[0,120172,120197,e],0,120198,120223,d],bRD=[1,[0,Nl,Nl,e],0,120138,120144,e],bRE=[1,[0,120328,120353,e],0,120354,120379,d],bRF=[1,[0,120250,120275,d],0,120276,120301,e],bRG=[1,[0,120488,120512,e],0,ac5,ac5,aa],bRH=[1,[0,120406,120431,d],0,120432,120457,e],bRI=[1,[0,Va,Va,aa],0,120572,120596,d],bRJ=[1,[0,WR,WR,aa],0,120540,120545,d],bRK=[1,[0,120630,120654,d],0,aj$,aj$,aa],bRL=[1,[0,120598,120603,d],0,120604,120628,e],bRM=[1,[0,aic,aic,aa],0,120714,120719,d],bRN=[1,[0,120662,120686,e],0,afo,afo,aa],bRO=[1,[0,120772,120777,d],0,Nf,Nf,e],bRP=[1,[0,afn,afn,aa],0,120746,120770,d],bRQ=[1,[0,121399,121402,v],0,121403,121452,n],bRR=[1,[0,120782,120831,ao],0,120832,121343,v],bRS=[0,121477,121478,v],bRT=[1,[0,aga,aga,n],0,121462,121475,v],bRU=[1,[0,122888,122904,n],0,122907,122913,n],bRV=[1,[0,121499,121503,n],0,121505,121519,n],bRW=[1,[0,125136,125142,n],0,125184,125217,e],bRX=[1,[0,122918,122922,n],0,124928,125124,h],bRY=[1,[0,126464,126467,h],0,126469,126495,h],bRZ=[1,[0,125252,125258,n],0,125264,125273,ao],bR0=[1,[0,126516,126519,h],0,akl,akl,h],bR1=[1,[0,abp,abp,h],0,acM,acM,h],bR2=[1,[0,ano,ano,h],0,126541,126543,h],bR3=[1,[0,UY,UY,h],0,ZY,ZY,h],bR4=[1,[0,an0,an0,h],0,_e,_e,h],bR5=[1,[0,ak3,ak3,h],0,akg,akg,h],bR6=[1,[0,126572,126578,h],0,126580,126583,h],bR7=[1,[0,126561,126562,h],0,anj,anj,h],bR8=[1,[0,126625,126627,h],0,126629,126633,h],bR9=[1,[0,Q0,Q0,h],0,126592,126601,h],bR_=[1,[0,127136,127150,v],0,127153,127167,v],bR$=[1,[0,126704,126705,aa],0,126976,127019,v],bSa=[1,[0,127280,127339,v],0,127344,127404,v],bSb=[1,[0,127185,127221,v],0,127232,127244,ac],bSc=[1,[0,127584,127589,v],0,127744,127994,v],bSd=[1,[0,127504,127547,v],0,127552,127560,v],bSe=[1,[0,128768,128883,v],0,128896,128980,v],bSf=[1,[0,128e3,128724,v],0,128736,128748,v],bSg=[1,[0,129168,129197,v],0,129280,129291,v],bSh=[1,[0,129040,129095,v],0,129104,129113,v],bSi=[1,[0,ZB,ZB,v],0,129488,129510,v],bSj=[1,[0,129344,129356,v],0,129360,129387,v],bSk=[1,[0,183984,191456,h],0,194560,195101,h],bSl=[1,[0,173824,177972,h],0,177984,178205,h],bSm=[0,1048576,1114109,wZ],bSn=[1,[0,917536,917631,cF],0,917760,917999,n],nC=[0,15051,[1,[1,[1,[1,[1,[1,[1,[1,[1,[1,bCp,bCo,33,35,w],[1,bCr,bCq,43,43,aa],40,40,Z],[1,[1,bCt,bCs,60,62,aa],[1,bCv,bCu,94,94,bp],91,91,Z],46,47,w],[1,[1,[1,bCx,bCw,cW,cW,$],[1,bCz,bCy,l8,l8,v],jX,jX,h4],[1,[1,bCB,bCA,mi,mi,aa],[1,bCD,bCC,ll,rg,ac],l5,l5,bp],js,js,v],97,fD,d],[1,[1,[1,[1,bCF,bCE,wm,wm,h],[1,bCH,bCG,qg,zi,e],mg,mg,w],[1,[1,bCJ,bCI,xg,xg,e],[1,bCL,bCK,p1,p1,e],x8,x8,d],N,at,d],[1,[1,[1,bCN,bCM,v7,v7,e],[1,bCP,bCO,zE,zE,e],pf,pf,d],[1,[1,bCR,bCQ,wY,wY,e],[1,bCT,bCS,w7,w7,e],yU,yU,d],yg,yg,d],yp,yp,d],mp,L2,w],[1,[1,[1,[1,[1,bCV,bCU,AR,AR,e],[1,bCX,bCW,Ak,Ak,e],xD,xD,d],[1,[1,bCZ,bCY,qZ,qZ,e],[1,bC1,bC0,Az,Az,e],ri,ri,d],xV,xV,d],[1,[1,[1,bC3,bC2,qq,qq,e],[1,bC5,bC4,yc,yc,e],xC,xC,d],[1,[1,bC7,bC6,ya,ya,e],[1,bC9,bC8,AZ,AZ,e],zc,zc,d],U2,V8,d],lO,lO,d],[1,[1,[1,[1,bC$,bC_,wa,wa,e],[1,bDb,bDa,AX,AX,e],my,my,d],[1,[1,bDd,bDc,xc,xc,e],[1,bDf,bDe,ph,ph,e],v0,v0,d],pa,pa,d],[1,[1,[1,bDh,bDg,pP,pP,e],[1,bDj,bDi,wx,wx,e],y4,y4,d],[1,[1,bDl,bDk,vZ,vZ,e],[1,bDn,bDm,abQ,aeV,e],xO,xO,d],w3,w3,d],qy,qy,d],yG,yG,d],wH,wH,d],[1,[1,[1,[1,[1,[1,bDp,bDo,Ax,Ax,d],[1,bDr,bDq,zH,zH,d],yL,As,e],[1,[1,bDt,bDs,ajC,ajC,d],[1,bDv,bDu,vP,vP,d],anQ,anQ,e],adq,adq,e],[1,[1,[1,bDx,bDw,jP,jP,d],[1,bDz,bDy,448,ahd,h],K4,K4,h],[1,[1,bDB,bDA,xr,xr,d],[1,bDD,bDC,At,At,e],AD,AD,d],z7,z7,d],433,435,e],[1,[1,[1,[1,bDF,bDE,Ag,Ag,e],[1,bDH,bDG,XC,XC,e],zK,zK,d],[1,[1,bDJ,bDI,Ay,Ay,e],[1,bDL,bDK,No,No,e],aa0,aa0,d],AO,AO,d],[1,[1,[1,bDN,bDM,Uc,Uc,e],[1,bDP,bDO,WP,WP,d],Xw,Xw,ej],[1,[1,bDR,bDQ,aeF,aeF,d],[1,bDT,bDS,WT,WT,d],jW,jW,e],aoM,aoM,e],ajL,ajL,d],wk,wk,d],[1,[1,[1,[1,[1,bDV,bDU,vT,vT,d],[1,bDX,bDW,z9,z9,d],pY,pY,e],[1,[1,bDZ,bDY,xs,xs,d],[1,bD1,bD0,xd,xd,d],x9,x9,e],wF,wF,e],[1,[1,[1,bD3,bD2,zO,zO,d],[1,bD5,bD4,zX,zX,d],xu,xu,e],[1,[1,bD7,bD6,RW,RW,d],[1,bD9,bD8,563,Ma,d],anV,anV,e],Lm,Lm,e],q1,q1,e],[1,[1,[1,[1,bD$,bD_,yY,yY,d],[1,bEb,bEa,Xu,Xu,d],UX,UX,e],[1,[1,bEd,bEc,661,687,d],[1,bEf,bEe,741,747,bp],710,721,ak],OS,OS,e],[1,[1,[1,bEh,bEg,ao4,ao4,e],[1,bEj,bEi,akX,akX,e],Nb,Nb,d],[1,[1,bEl,bEk,900,901,bp],[1,bEn,bEm,PO,PO,d],904,906,e],891,893,d],ain,ain,ak],ama,ac9,e],wd,wd,e],U9,_g,e],[1,[1,[1,[1,[1,[1,[1,bEp,bEo,976,977,d],[1,bEr,bEq,$i,$i,d],WB,WB,e],[1,[1,bEt,bEs,XX,XX,d],[1,bEv,bEu,xA,xA,d],$w,$w,e],ahA,ahA,e],[1,[1,[1,bEx,bEw,QU,QU,d],[1,bEz,bEy,agp,agp,e],KX,KX,e],[1,[1,bEB,bEA,afL,afL,e],[1,bED,bEC,ahs,ahs,e],T$,T$,d],1019,UD,d],RZ,RZ,e],[1,[1,[1,[1,bEF,bEE,Rx,Rx,e],[1,bEH,bEG,ah2,ah2,e],WZ,WZ,d],[1,[1,bEJ,bEI,ahG,ahG,e],[1,bEL,bEK,Rz,Rz,e],acA,acA,d],al3,al3,d],[1,[1,[1,bEN,bEM,1160,1161,mC],[1,bEP,bEO,akh,akh,d],LQ,LQ,e],[1,[1,bER,bEQ,Zq,Zq,d],[1,bET,bES,Mm,Mm,d],QD,QD,e],anb,anb,e],anL,anL,d],aeU,aeU,d],[1,[1,[1,[1,[1,bEV,bEU,R0,R0,d],[1,bEX,bEW,agt,agt,d],UJ,UJ,e],[1,[1,bEZ,bEY,al1,al1,d],[1,bE1,bE0,ae_,ae_,d],abt,abt,e],Y3,Y3,e],[1,[1,[1,bE3,bE2,aeg,aeg,d],[1,bE5,bE4,aiA,aiA,d],U3,U3,e],[1,[1,bE7,bE6,Xn,Xn,d],[1,bE9,bE8,P_,P_,d],Ld,Ld,e],MY,MY,e],am9,am9,e],[1,[1,[1,[1,bE$,bE_,YP,YP,d],[1,bFb,bFa,PV,PV,d],agy,agy,e],[1,[1,bFd,bFc,aft,aft,d],[1,bFf,bFe,$g,$g,d],SY,SY,e],TO,TO,e],[1,[1,[1,bFh,bFg,Re,Re,d],[1,bFj,bFi,OJ,OJ,d],adu,adu,e],[1,[1,bFl,bFk,ZW,ZW,d],[1,bFn,bFm,NV,NV,d],afW,afW,e],adU,adU,e],ajb,ajb,e],aln,aln,e],acr,acr,e],[1,[1,[1,[1,[1,[1,bFp,bFo,Tb,Tb,e],[1,bFr,bFq,akc,akc,e],aig,aig,d],[1,[1,bFt,bFs,Px,Px,e],[1,bFv,bFu,y3,y3,e],LV,LV,d],Ua,Ua,d],[1,[1,[1,bFx,bFw,M8,M8,e],[1,bFz,bFy,akF,akF,e],zp,zp,d],[1,[1,bFB,bFA,Qa,Qa,e],[1,bFD,bFC,amw,amw,e],zT,zT,d],adR,adR,d],VO,VO,d],[1,[1,[1,[1,bFF,bFE,1370,1375,w],[1,bFH,bFG,1425,1469,n],alS,alS,cR],[1,[1,bFJ,bFI,1476,1477,n],[1,bFL,bFK,1536,1541,cF],1488,1514,h],ai_,ai_,w],[1,[1,[1,bFN,bFM,1552,1562,n],[1,bFP,bFO,1601,1610,h],1566,1567,w],[1,[1,bFR,bFQ,1649,1747,h],[1,bFT,bFS,1759,1764,n],1750,1756,n],1642,1645,w],KK,KK,cT],aco,aco,d],[1,[1,[1,[1,[1,bFV,bFU,1776,1785,ao],[1,bFX,bFW,NR,NR,h],$r,$r,h],[1,[1,bFZ,bFY,VR,VR,h],[1,bF1,bF0,2039,2041,w],2027,2035,n],1840,1866,n],[1,[1,[1,bF3,bF2,PP,PP,ak],[1,bF5,bF4,2137,2139,n],2089,2093,n],[1,[1,bF7,bF6,aaY,aaY,cF],[1,bF9,bF8,ajE,ajE,n],2308,2361,h],2208,2228,h],2070,2073,n],[1,[1,[1,[1,bF$,bF_,2382,2383,y],[1,bGb,bGa,2406,2415,ao],2392,2401,h],[1,[1,bGd,bGc,2437,2444,h],[1,bGf,bGe,Zp,Zp,n],2474,2480,h],2418,2432,h],[1,[1,[1,bGh,bGg,M0,M0,n],[1,bGj,bGi,2534,2543,ao],2524,2525,h],[1,[1,bGl,bGk,aoX,aoX,h],[1,bGn,bGm,2579,2600,h],amq,amq,y],2548,2553,ac],2497,2500,n],2369,2376,n],PF,PF,v],PX,PX,d],am5,939,e],[1,[1,[1,[1,[1,[1,[1,[1,bGp,bGo,afu,afu,n],[1,bGr,bGq,2649,2652,h],2631,2632,n],[1,[1,bGt,bGs,2689,2690,n],[1,bGv,bGu,2738,2739,h],2703,2705,h],2672,2673,n],[1,[1,[1,bGx,bGw,2759,2760,n],[1,bGz,bGy,2786,2787,n],Ov,Ov,n],[1,[1,bGB,bGA,adw,adw,n],[1,bGD,bGC,2866,2867,h],2831,2832,h],alZ,alZ,cT],aea,aea,h],[1,[1,[1,[1,bGF,bGE,adA,adA,y],[1,bGH,bGG,YW,YW,y],aib,2892,y],[1,[1,bGJ,bGI,VV,VV,h],[1,bGL,bGK,2962,2965,h],abd,abd,h],2914,2915,n],[1,[1,[1,bGN,bGM,2990,3001,h],[1,bGP,bGO,_l,_l,n],3009,3010,y],[1,[1,bGR,bGQ,N2,N2,cT],[1,bGT,bGS,3090,acX,h],3073,3075,y],3046,3055,ao],2974,2975,h],PN,PN,h],[1,[1,[1,[1,[1,bGV,bGU,3146,adg,n],[1,bGX,bGW,3192,3198,ac],3168,3169,h],[1,[1,bGZ,bGY,3214,3216,h],[1,bG1,bG0,ags,ags,y],3253,3257,h],ahu,ahu,n],[1,[1,[1,bG3,bG2,3276,3277,n],[1,bG5,bG4,3313,3314,h],3296,3297,h],[1,[1,bG7,bG6,3387,3388,n],[1,bG9,bG8,adT,adT,n],3393,3396,n],3333,3340,h],TT,TT,n],[1,[1,[1,[1,bG$,bG_,3423,3425,h],[1,bHb,bHa,3458,3459,y],3440,3448,ac],[1,[1,bHd,bHc,O4,O4,n],[1,bHf,bHe,3570,3571,y],Rg,Rg,n],3507,3515,h],[1,[1,[1,bHh,bHg,ZO,ZO,cT],[1,bHj,bHi,3674,3675,w],3655,3662,n],[1,[1,bHl,bHk,3732,3735,h],[1,bHn,bHm,3757,3760,h],agm,agm,h],3719,3720,h],ajq,ajq,n],3412,3414,h],3134,3136,n],[1,[1,[1,[1,[1,[1,bHp,bHo,ajy,ajy,h],[1,bHr,bHq,RI,RI,h],3784,3789,n],[1,[1,bHt,bHs,3864,3865,n],[1,bHv,bHu,acD,acD,v],3882,3891,ac],Tk,Tk,v],[1,[1,[1,bHx,bHw,afq,afq,Z],[1,bHz,bHy,TK,TK,y],3904,3911,h],[1,[1,bHB,bHA,3993,4028,n],[1,bHD,bHC,4053,4056,v],4039,4044,v],3974,3975,n],amW,amW,n],[1,[1,[1,[1,bHF,bHE,4146,4151,n],[1,bHH,bHG,4160,4169,ao],4155,4156,y],[1,[1,bHJ,bHI,4190,4192,n],[1,bHL,bHK,4209,4212,n],4197,4198,h],4182,4183,y],[1,[1,[1,bHN,bHM,abY,abY,n],[1,bHP,bHO,4254,4255,v],4240,4249,ao],[1,[1,bHR,bHQ,aku,aku,ak],[1,bHT,bHS,4704,4744,h],4688,4694,h],PB,PB,e],4227,4228,y],4139,4140,y],[1,[1,[1,[1,[1,bHV,bHU,4802,4805,h],[1,bHX,bHW,4960,4968,w],4882,4885,h],[1,[1,bHZ,bHY,ahC,ahC,cR],[1,bH1,bH0,YH,YH,Z],5743,5759,h],5008,5017,v],[1,[1,[1,bH3,bH2,5888,5900,h],[1,bH5,bH4,5952,5969,h],5920,5937,h],[1,[1,bH7,bH6,6068,6069,n],[1,bH9,bH8,6089,6099,n],6078,6085,y],5998,6e3,h],5867,5869,w],[1,[1,[1,[1,bH$,bH_,$S,$S,n],[1,bIb,bIa,6155,6157,n],6144,6149,w],[1,[1,bId,bIc,6272,6276,h],[1,bIf,bIe,6400,6430,h],LH,LH,n],6176,6210,h],[1,[1,[1,bIh,bIg,OM,OM,n],[1,bIj,bIi,6480,6509,h],U5,U5,v],[1,[1,bIl,bIk,6622,6655,v],[1,bIn,bIm,6688,6740,h],6681,6682,y],6576,6601,h],6439,6440,n],6104,6106,w],4786,4789,h],3762,3763,h],[1,[1,[1,[1,[1,[1,[1,bIp,bIo,S5,S5,n],[1,bIr,bIq,6771,6780,n],6755,6756,y],[1,[1,bIt,bIs,6824,6829,w],[1,bIv,bIu,TB,TB,n],6912,6915,n],6800,6809,ao],[1,[1,[1,bIx,bIw,Q1,Q1,n],[1,bIz,bIy,7019,7027,n],6992,7001,ao],[1,[1,bIB,bIA,7074,7077,n],[1,bID,bIC,7088,7097,ao],SA,SA,y],anU,anU,y],alj,alj,y],[1,[1,[1,[1,bIF,bIE,VN,VN,n],[1,bIH,bIG,7204,7211,y],7154,7155,y],[1,[1,bIJ,bII,7245,7247,h],[1,bIL,bIK,7360,7367,w],7288,7293,ak],7222,7223,n],[1,[1,[1,bIN,bIM,7401,7404,h],[1,bIP,bIO,adK,adK,y],7410,7411,y],[1,[1,bIR,bIQ,7545,7578,d],[1,bIT,bIS,RS,RS,e],7675,7679,n],7468,7530,ak],7380,7392,n],afS,afS,y],[1,[1,[1,[1,[1,bIV,bIU,$D,$D,e],[1,bIX,bIW,Uk,Uk,e],Zm,Zm,d],[1,[1,bIZ,bIY,Wr,Wr,e],[1,bI1,bI0,N_,N_,e],agY,agY,d],_N,_N,d],[1,[1,[1,bI3,bI2,abC,abC,e],[1,bI5,bI4,ZQ,ZQ,e],afg,afg,d],[1,[1,bI7,bI6,alo,alo,e],[1,bI9,bI8,XA,XA,e],ah5,ah5,d],QE,QE,d],aei,aei,d],[1,[1,[1,[1,bI$,bI_,WE,WE,e],[1,bJb,bJa,SX,SX,e],agM,agM,d],[1,[1,bJd,bJc,akr,akr,e],[1,bJf,bJe,Ry,Ry,e],ai1,ai1,d],TP,TP,d],[1,[1,[1,bJh,bJg,Xe,Xe,e],[1,bJj,bJi,amu,amu,e],R6,R6,d],[1,[1,bJl,bJk,W0,W0,e],[1,bJn,bJm,aoo,aoo,e],agi,agi,d],ah6,ah6,d],aee,aee,d],Uu,Uu,d],YK,YK,d],[1,[1,[1,[1,[1,[1,bJp,bJo,MS,MS,d],[1,bJr,bJq,NW,NW,d],Nh,Nh,e],[1,[1,bJt,bJs,anl,anl,d],[1,bJv,bJu,akb,akb,d],Zi,Zi,e],SI,SI,e],[1,[1,[1,bJx,bJw,ak6,ak6,d],[1,bJz,bJy,Qf,Qf,d],acc,acc,e],[1,[1,bJB,bJA,KS,KS,d],[1,bJD,bJC,Np,Np,d],Tc,Tc,e],adc,adc,e],S4,S4,e],[1,[1,[1,[1,bJF,bJE,Xz,Xz,d],[1,bJH,bJG,$v,$v,d],aju,aju,e],[1,[1,bJJ,bJI,ao7,ao7,d],[1,bJL,bJK,Uw,Uw,d],Y8,Y8,e],QX,QX,e],[1,[1,[1,bJN,bJM,ai4,ai4,d],[1,bJP,bJO,adZ,adZ,d],Vm,Vm,e],[1,[1,bJR,bJQ,Xo,Xo,d],[1,bJT,bJS,amL,amL,d],LT,LT,e],aak,aak,e],adW,adW,e],alu,alu,e],[1,[1,[1,[1,[1,bJV,bJU,ahT,ahT,d],[1,bJX,bJW,OX,OX,d],ao8,ao8,e],[1,[1,bJZ,bJY,U_,U_,d],[1,bJ1,bJ0,alw,alw,d],Oz,Oz,e],ab_,ab_,e],[1,[1,[1,bJ3,bJ2,UP,UP,d],[1,bJ5,bJ4,X7,X7,d],anK,anK,e],[1,[1,bJ7,bJ6,Vd,Vd,d],[1,bJ9,bJ8,anZ,anZ,d],af3,af3,e],SR,SR,e],Wh,Wh,e],[1,[1,[1,[1,bJ$,bJ_,7935,7943,d],[1,bKb,bKa,7984,7991,d],7960,7965,e],[1,[1,bKd,bKc,aom,aom,e],[1,bKf,bKe,8064,8071,d],8032,8039,d],8008,8013,e],[1,[1,[1,bKh,bKg,8112,8116,d],[1,bKj,bKi,8127,8129,bp],Mv,Mv,ej],[1,[1,bKl,bKk,8144,8147,d],[1,bKn,bKm,8173,8175,bp],8157,8159,bp],8136,8139,e],8088,8095,ej],akn,akn,e],Rv,Rv,e],UU,UU,e],Lj,Lj,n],2610,2611,h],[1,[1,[1,[1,[1,[1,[1,[1,[1,bKp,bKo,8189,8190,bp],[1,bKr,bKq,abq,abq,fs],8208,8213,cR],[1,[1,bKt,bKs,8224,8231,w],[1,bKv,bKu,Ph,Ph,eM],8234,8238,cF],al7,al7,fs],[1,[1,[1,bKx,bKw,PE,PE,Z],[1,bKz,bKy,8277,8286,w],_j,_j,aa],[1,[1,bKB,bKA,8308,8313,ac],[1,bKD,bKC,8330,8332,aa],alg,alg,$],8294,8303,cF],8255,8256,j3],[1,[1,[1,[1,bKF,bKE,8413,8416,mC],[1,bKH,bKG,8451,8454,v],8421,8432,n],[1,[1,bKJ,bKI,8464,8466,e],[1,bKL,bKK,8473,8477,e],V7,V7,e],Wd,Wd,d],[1,[1,[1,bKN,bKM,agX,agX,e],[1,bKP,bKO,LO,LO,d],ajO,ajO,v],[1,[1,bKR,bKQ,8512,8516,aa],[1,bKT,bKS,aaM,aaM,d],KU,KU,v],8506,8507,v],ag5,ag5,v],8336,8348,ak],[1,[1,[1,[1,[1,bKV,bKU,8581,8584,ei],[1,bKX,bKW,8604,8607,v],8592,8596,aa],[1,[1,bKZ,bKY,8615,8621,v],[1,bK1,bK0,abB,abB,v],8654,8655,aa],afJ,afJ,aa],[1,[1,[1,bK3,bK2,Ys,Ys,$],[1,bK5,bK4,ai9,ai9,Z],8972,8991,v],[1,[1,bK7,bK6,9140,9179,v],[1,bK9,bK8,9450,9471,ac],9280,9290,v],aa5,aa5,aa],8692,8959,aa],[1,[1,[1,[1,bK$,bK_,9720,9727,aa],[1,bLb,bLa,aaa,aaa,Z],9840,10087,v],[1,[1,bLd,bLc,ao3,ao3,Z],[1,bLf,bLe,10102,10131,ac],MI,MI,$],$9,$9,$],[1,[1,[1,bLh,bLg,PD,PD,Z],[1,bLj,bLi,Pn,Pn,Z],KP,KP,$],[1,[1,bLl,bLk,10496,10626,aa],[1,bLn,bLm,Op,Op,$],Wa,Wa,Z],afD,afD,$],aeE,aeE,Z],9656,9664,v],8544,8578,ei],[1,[1,[1,[1,[1,[1,bLp,bLo,T7,T7,Z],[1,bLr,bLq,Ny,Ny,Z],ahm,ahm,$],[1,[1,bLt,bLs,10649,10711,aa],[1,bLv,bLu,Sk,Sk,Z],adG,adG,Z],am1,am1,$],[1,[1,[1,bLx,bLw,11079,11084,aa],[1,bLz,bLy,11244,11247,v],11160,11193,v],[1,[1,bLB,bLA,11365,11366,d],[1,bLD,bLC,Vj,Vj,d],NI,NI,e],_3,_3,e],11008,11055,v],[1,[1,[1,[1,bLF,bLE,11382,11387,d],[1,bLH,bLG,aiw,aiw,e],alz,alz,d],[1,[1,bLJ,bLI,Qh,Qh,e],[1,bLL,bLK,Qk,Qk,e],ao1,ao1,d],alJ,alJ,d],[1,[1,[1,bLN,bLM,adm,adm,e],[1,bLP,bLO,ais,ais,e],anG,anG,d],[1,[1,bLR,bLQ,abT,abT,e],[1,bLT,bLS,am6,am6,e],ahx,ahx,d],am0,am0,d],Nc,Nc,d],Yg,Yg,e],[1,[1,[1,[1,[1,bLV,bLU,Zy,Zy,e],[1,bLX,bLW,MU,MU,e],Y1,Y1,d],[1,[1,bLZ,bLY,afE,afE,e],[1,bL1,bL0,ahl,ahl,e],aaR,aaR,d],abV,abV,d],[1,[1,[1,bL3,bL2,alV,alV,e],[1,bL5,bL4,aiS,aiS,e],ae6,ae6,d],[1,[1,bL7,bL6,Vt,Vt,e],[1,bL9,bL8,ajr,ajr,e],anI,anI,d],ani,ani,d],afk,afk,d],[1,[1,[1,[1,bL$,bL_,anw,anw,e],[1,bMb,bMa,11493,11498,v],anE,anE,d],[1,[1,bMd,bMc,Pz,Pz,e],[1,bMf,bMe,NO,NO,d],Nu,Nu,ac],akt,akt,e],[1,[1,[1,bMh,bMg,11648,11670,h],[1,bMj,bMi,11720,11726,h],11696,11702,h],[1,[1,bMl,bMk,X$,X$,fs],[1,bMn,bMm,WM,WM,w],11782,11784,w],11744,11775,n],aiJ,aiJ,ak],_M,_M,d],akA,akA,d],Y_,Y_,$],[1,[1,[1,[1,[1,[1,[1,bMp,bMo,11800,11801,w],[1,bMr,bMq,alr,alr,eM],aiG,aiG,eM],[1,[1,bMt,bMs,YG,YG,Z],[1,bMv,bMu,11824,11833,w],LL,LL,$],R_,R_,$],[1,[1,[1,bMx,bMw,11843,11849,w],[1,bMz,bMy,12289,12291,w],12032,12245,v],[1,[1,bMB,bMA,aiH,aiH,$],[1,bMD,bMC,Vu,Vu,$],P4,P4,Z],ad_,ad_,h],RB,RB,cR],[1,[1,[1,[1,bMF,bME,LI,LI,Z],[1,bMH,bMG,V3,V3,cR],RT,RT,$],[1,[1,bMJ,bMI,12334,12335,y],[1,bML,bMK,VW,VW,h],12342,12343,v],Xi,Xi,v],[1,[1,[1,bMN,bMM,12445,12446,ak],[1,bMP,bMO,ajg,ajg,h],12449,12538,h],[1,[1,bMR,bMQ,12704,12730,h],[1,bMT,bMS,12872,12879,ac],12800,12830,v],12688,12689,v],12353,12438,h],12306,12307,v],[1,[1,[1,[1,[1,bMV,bMU,12977,12991,ac],[1,bMX,bMW,40960,40980,h],13312,19893,h],[1,[1,bMZ,bMY,42238,42239,w],[1,bM1,bM0,42538,42539,h],42509,42511,w],42128,42182,v],[1,[1,[1,bM3,bM2,age,age,d],[1,bM5,bM4,Q4,Q4,d],Z4,Z4,e],[1,[1,bM7,bM6,Mx,Mx,d],[1,bM9,bM8,aol,aol,d],OK,OK,e],akv,akv,e],Rm,Rm,e],[1,[1,[1,[1,bM$,bM_,_o,_o,d],[1,bNb,bNa,aeW,aeW,d],acf,acf,e],[1,[1,bNd,bNc,_v,_v,d],[1,bNf,bNe,OH,OH,n],M$,M$,e],adB,adB,e],[1,[1,[1,bNh,bNg,Wx,Wx,e],[1,bNj,bNi,aa2,aa2,e],akW,akW,d],[1,[1,bNl,bNk,afV,afV,e],[1,bNn,bNm,ahi,ahi,e],$R,$R,d],Nd,Nd,d],42612,42621,n],Yk,Yk,e],12896,12927,v],[1,[1,[1,[1,[1,[1,bNp,bNo,ag$,ag$,d],[1,bNr,bNq,42654,42655,n],afj,afj,e],[1,[1,bNt,bNs,42775,42783,ak],[1,bNv,bNu,Uf,Uf,e],$K,$K,d],42736,42737,n],[1,[1,[1,bNx,bNw,Rl,Rl,e],[1,bNz,bNy,Ng,Ng,e],42799,42801,d],[1,[1,bNB,bNA,ahP,ahP,e],[1,bND,bNC,abK,abK,e],ahW,ahW,d],al0,al0,d],ae9,ae9,d],[1,[1,[1,[1,bNF,bNE,aeO,aeO,e],[1,bNH,bNG,aeM,aeM,e],LZ,LZ,d],[1,[1,bNJ,bNI,alc,alc,e],[1,bNL,bNK,XB,XB,e],PU,PU,d],$3,$3,d],[1,[1,[1,bNN,bNM,Rj,Rj,e],[1,bNP,bNO,ag9,ag9,e],$c,$c,d],[1,[1,bNR,bNQ,aiD,aiD,e],[1,bNT,bNS,W6,W6,ak],R3,R3,d],OR,OR,d],ajD,ajD,d],aeR,aeR,d],[1,[1,[1,[1,[1,bNV,bNU,42877,42878,e],[1,bNX,bNW,afs,afs,e],Nt,Nt,d],[1,[1,bNZ,bNY,K8,K8,e],[1,bN1,bN0,NZ,NZ,d],NU,NU,d],XK,XK,d],[1,[1,[1,bN3,bN2,ahF,ahF,d],[1,bN5,bN4,amr,amr,d],aml,aml,e],[1,[1,bN7,bN6,U8,U8,d],[1,bN9,bN8,42928,42932,e],agC,agC,e],VT,VT,e],Mf,Mf,e],[1,[1,[1,[1,bN$,bN_,Tj,Tj,d],[1,bOb,bOa,acw,acw,n],43011,43013,h],[1,[1,bOd,bOc,43056,43061,ac],[1,bOf,bOe,43136,43137,y],aow,aow,v],43045,43046,n],[1,[1,[1,bOh,bOg,43232,43249,n],[1,bOj,bOi,43264,43273,ao],Pe,Pe,h],[1,[1,bOl,bOk,43346,43347,y],[1,bOn,bOm,aiW,aiW,n],43392,43394,n],43310,43311,w],43204,43205,n],aed,aed,d],alG,alG,d],adF,adF,e],$5,$5,fs],[1,[1,[1,[1,[1,[1,[1,[1,bOp,bOo,43453,43456,y],[1,bOr,bOq,_X,_X,n],43472,43481,ao],[1,[1,bOt,bOs,43561,43566,n],[1,bOv,bOu,S3,S3,n],43571,43572,y],43504,43513,ao],[1,[1,[1,bOx,bOw,43616,43631,h],[1,bOz,bOy,WA,WA,n],43639,43641,v],[1,[1,bOB,bOA,43701,43702,h],[1,bOD,bOC,QA,QA,h],43710,43711,n],Xh,Xh,n],alY,alY,y],[1,[1,[1,[1,bOF,bOE,43756,43757,n],[1,bOH,bOG,abw,abw,n],agT,agT,h],[1,[1,bOJ,bOI,43824,43866,d],[1,bOL,bOK,44003,44004,y],43872,43877,d],43793,43798,h],[1,[1,[1,bON,bOM,aci,aci,y],[1,bOP,bOO,amF,63743,wZ],44032,55203,h],[1,[1,bOR,bOQ,anx,anx,n],[1,bOT,bOS,64320,64321,h],64298,64310,h],64256,64262,d],_5,_5,n],43742,43743,w],[1,[1,[1,[1,[1,bOV,bOU,W5,W5,Z],[1,bOX,bOW,65024,65039,n],65008,65019,h],[1,[1,bOZ,bOY,Mj,Mj,w],[1,bO1,bO0,RA,RA,$],agq,agq,Z],aeI,aeI,$],[1,[1,[1,bO3,bO2,aaq,aaq,$],[1,bO5,bO4,ael,ael,$],ajN,ajN,Z],[1,[1,bO7,bO6,65104,65106,w],[1,bO9,bO8,amG,amG,$],akR,akR,Z],TI,TI,$],alB,alB,Z],[1,[1,[1,[1,bO$,bO_,65124,65126,aa],[1,bPb,bPa,Vn,Vn,cF],65130,65131,w],[1,[1,bPd,bPc,Yt,Yt,w],[1,bPf,bPe,65306,65307,w],aoA,aoA,cR],65285,65287,w],[1,[1,[1,bPh,bPg,VQ,VQ,$],[1,bPj,bPi,QK,QK,aa],Pt,Pt,bp],[1,[1,bPl,bPk,W9,W9,Z],[1,bPn,bPm,65438,65439,ak],65382,65391,h],NK,NK,Z],65313,65338,e],65119,65121,w],64434,64449,bp],[1,[1,[1,[1,[1,[1,bPp,bPo,65498,65500,h],[1,bPr,bPq,adP,adP,v],akK,akK,bp],[1,[1,bPt,bPs,65549,65574,h],[1,bPv,bPu,65792,65794,w],o6,65613,h],65529,65531,cF],[1,[1,[1,bPx,bPw,65930,65931,ac],[1,bPz,bPy,66176,66204,h],aii,aii,v],[1,[1,bPB,bPA,66349,66368,h],[1,bPD,bPC,66432,66461,h],RP,RP,ei],66273,66299,ac],65856,65908,ei],[1,[1,[1,[1,bPF,bPE,66560,66599,e],[1,bPH,bPG,66816,66855,h],66720,66729,ao],[1,[1,bPJ,bPI,67584,67589,h],[1,bPL,bPK,ahk,ahk,w],67639,67640,h],67072,67382,h],[1,[1,[1,bPN,bPM,67751,67759,ac],[1,bPP,bPO,aob,aob,w],67835,67839,ac],[1,[1,bPR,bPQ,68032,68047,ac],[1,bPT,bPS,68112,68115,h],68097,68099,n],67968,68023,h],67703,67704,v],66504,66511,h],[1,[1,[1,[1,[1,bPV,bPU,68176,68184,w],[1,bPX,bPW,68288,68295,h],aaH,aaH,w],[1,[1,bPZ,bPY,68352,68405,h],[1,bP1,bP0,68480,68497,h],68440,68447,ac],68325,68326,n],[1,[1,[1,bP3,bP2,68858,68863,ac],[1,bP5,bP4,69688,69702,n],aja,aja,n],[1,[1,bP7,bP6,69763,69807,h],[1,bP9,bP8,adb,adb,cF],69815,69816,y],69734,69743,ao],68608,68680,h],[1,[1,[1,[1,bP$,bP_,69927,69931,n],[1,bQb,bQa,TV,TV,n],69942,69951,ao],[1,[1,bQd,bQc,70067,70069,y],[1,bQf,bQe,XE,XE,w],70081,70084,h],70016,70017,n],[1,[1,[1,bQh,bQg,70113,70132,ac],[1,bQj,bQi,O5,O5,n],70188,70190,y],[1,[1,bQl,bQk,P6,P6,h],[1,bQn,bQm,agu,agu,n],70303,70312,h],70200,70205,w],agd,agd,w],69872,69881,ao],68152,68154,n],65474,65479,h],[1,[1,[1,[1,[1,[1,[1,bQp,bQo,70402,70403,y],[1,bQr,bQq,70453,70457,h],70419,70440,h],[1,[1,bQt,bQs,70471,70472,y],[1,bQv,bQu,70502,70508,n],_K,_K,y],70462,70463,y],[1,[1,[1,bQx,bQw,70722,70724,n],[1,bQz,bQy,afy,afy,w],70727,70730,h],[1,[1,bQB,bQA,Rn,Rn,n],[1,bQD,bQC,MR,MR,w],Wj,Wj,y],70832,70834,y],70709,70711,y],[1,[1,[1,[1,bQF,bQE,71096,71099,y],[1,bQH,bQG,71132,71133,n],71103,71104,n],[1,[1,bQJ,bQI,ak0,ak0,y],[1,bQL,bQK,71296,71338,h],Ob,Ob,h],71219,71226,n],[1,[1,[1,bQN,bQM,TM,TM,y],[1,bQP,bQO,71458,71461,n],71424,71449,h],[1,[1,bQR,bQQ,agN,agN,v],[1,bQT,bQS,af2,af2,h],71904,71913,ao],71472,71481,ao],ZT,ZT,n],71040,71086,h],[1,[1,[1,[1,[1,bQV,bQU,Yw,Yw,y],[1,bQX,bQW,72273,72278,n],72255,72262,w],[1,[1,bQZ,bQY,aoe,aoe,y],[1,bQ1,bQ0,72714,72750,h],72350,72354,w],72284,72323,h],[1,[1,[1,bQ3,bQ2,ae1,ae1,h],[1,bQ5,bQ4,72850,72871,n],72794,72812,ac],[1,[1,bQ7,bQ6,72885,72886,n],[1,bQ9,bQ8,73020,73021,n],72971,73008,h],Yz,Yz,y],72760,72765,n],[1,[1,[1,[1,bQ$,bQ_,74752,74862,ei],[1,bRb,bRa,92736,92766,h],77824,78894,h],[1,[1,bRd,bRc,92928,92975,h],[1,bRf,bRe,ac6,ac6,v],92988,92991,v],92880,92909,h],[1,[1,[1,bRh,bRg,VD,VD,h],[1,bRj,bRi,100352,101106,h],94099,94111,ak],[1,[1,bRl,bRk,113808,113817,h],[1,bRn,bRm,119040,119078,v],Md,Md,w],113664,113770,h],93027,93047,h],aaI,aaI,n],72201,72202,n],[1,[1,[1,[1,[1,[1,bRp,bRo,119149,119154,y],[1,bRr,bRq,119210,119213,n],119171,119172,v],[1,[1,bRt,bRs,119648,119665,ac],[1,bRv,bRu,119912,119937,e],119860,119885,e],119362,119364,n],[1,[1,[1,bRx,bRw,119977,119980,e],[1,bRz,bRy,120016,120041,e],Yh,Yh,d],[1,[1,bRB,bRA,120094,120119,d],[1,bRD,bRC,120146,120171,d],120128,120132,e],120071,120074,e],119966,119967,e],[1,[1,[1,[1,bRF,bRE,120302,120327,d],[1,bRH,bRG,120458,120485,d],120380,120405,e],[1,[1,bRJ,bRI,120546,120570,e],[1,bRL,bRK,LJ,LJ,aa],anr,anr,aa],120514,120538,d],[1,[1,[1,bRN,bRM,120688,120712,d],[1,bRP,bRO,_T,_T,aa],120720,120744,e],[1,[1,bRR,bRQ,121344,121398,n],[1,bRT,bRS,T1,T1,n],121453,121460,v],anJ,anJ,d],120656,120661,d],120224,120249,e],[1,[1,[1,[1,[1,bRV,bRU,122880,122886,n],[1,bRX,bRW,125127,125135,ac],122915,122916,n],[1,[1,bRZ,bRY,125278,125279,w],[1,bR1,bR0,126505,126514,h],126497,126498,h],125218,125251,d],[1,[1,[1,bR3,bR2,ame,ame,h],[1,bR5,bR4,Mc,Mc,h],126545,126546,h],[1,[1,bR7,bR6,126567,126570,h],[1,bR9,bR8,126603,126619,h],126585,126588,h],V6,V6,h],aa1,aa1,h],[1,[1,[1,[1,bR$,bR_,127024,127123,v],[1,bSb,bSa,127248,127278,v],127169,127183,v],[1,[1,bSd,bSc,127568,127569,v],[1,bSf,bSe,128752,128760,v],127995,127999,bp],127462,127490,v],[1,[1,[1,bSh,bSg,129120,129159,v],[1,bSj,bSi,129408,129431,v],129296,129342,v],[1,[1,bSl,bSk,178208,183969,h],[1,bSn,bSm,983040,1048573,wZ],aab,aab,cF],131072,173782,h],129024,129035,v],126635,126651,h],121479,121483,w],119141,119142,y],70371,70378,n],43446,43449,n],8182,8183,d]],E_=a(yy),E$=a(q),Fa=a(q),Fj=[0,a(pp),a(AW)],Fk=[0,a("put"),a(AK),a(vX)],Fz=a("Negative index not allowed"),tL=a("Index past end of list"),Gc=[0,[12,10,0],a(el)],gJ=[0,a(eW),a(eL),a(gk),a(lI),a(mz),a(eX),a(lk),a(fy),a(AH),a(fC),a(h9),a(g_),a(y2),a(Au),a(w$),a(e0),a(jN),a(io),a(pi),a(eK),a(gl),a(eY),a(A2),a(h3),a(ft),a(g3),a(fq),a(fp),a(gm),a(eQ),a(h8)],Gi=[0,a(lk),a(h9),a(AH),a(eK),a(eY),a(fC),a(Au),a(g_),a(pi),a(h3),a(eX),a(io),a(h8),a(gm),a(fq),a(mz),a(A2),a(w$),a(y2),a(fy),a(jN),a(lI),a(eQ),a(eL),a(g3),a(eW),a(fp),a(gk),a(gl),a(ft),a(e0)],i6=[0,a(e0),a(ft),a(gl),a(gk),a(fp),a(eW),a(g3),a(eL),a(eQ),a(lI),a(jN),a(fy),a(y2),a(w$),a(A2),a(mz),a(fq),a(gm),a(h8),a(io),a(eX),a(h3),a(pi),a(g_),a(Au),a(fC),a(eY),a(eK),a(AH),a(h9),a(lk)],bSo=[12,58,[4,0,0,0,[16,[12,93,0]]]],n5=[0,1,0,0],Gu=[0,a(xn),1,0,-1],fb=[0,a("\0\0\xde\xff\xdf\xff\xe0\0\xe1\xff\xfd\0#\x01H\x01m\x01\x92\x01[\0\xb7\x01D\0\xbe\x01\xda\x01\xe2\xffz\0\x02\x02G\x02n\x02\xb0\0\xf3\xff\xac\x02\x85\x03U\x04%\x05\x04\x06`\x06|\0\x01\0\xff\xff0\x07\xfd\xff\0\b\xfc\xff\xd0\b\xa0\tp\n@\x0b\x19\f\xe9\f\xb9\r\x89\x0eY\x0f)\x10\xf9\x10\xc9\x11\x99\x12[\0y\x13[\0z\0_\0\xf2\xff\xf1\xff\xf0\xff\xf7\x02\xe0\0`\0\xfd\0\xd0\x03\x9a\x13\xdd\x13\x04\x14G\x14n\x14m\0\xee\xff\x81\x14\x96\0\xd5\x14\xfc\x14?\x15\xe7\xff\xe6\xff\xe5\xfff\x15\xa9\x15\xd0\x15\x13\x16:\x16\x18\x01\xe3\xff\xe4\xff\xed\xff]\x16\x82\x16\xa7\x16\xcc\x16\xf1\x16\x16\x17;\x17^\x17\x83\x17\xa8\x17\xcd\x17\xf2\x17\x17\x18<\x18a\x18\xc7\x04\x14\x02\x04\0\xe8\xff\x07\0\x99\x006\x01\b\0\x05\0\xe8\xff\x86\x18\x8d\x18\xb2\x18\xd7\x18\xfc\x18\x03\x19\xb0\x04\x80\x05(\x19\x8b\x07M\x19p\x19\x95\x19\xba\x19\xf8\x19\xf1\xff\x06\0\xf2\xff\xf3\xffH\x02\xfb\xff\xd2\x1ad\0t\0{\0\xff\xff\xfe\xff\xfd\xff\x12\x1b\xd1\x1b\xaa\x1cz\x1dZ\x1e\x80\0\x1b\x01\x81\0\x82\0\xf9\xff\xf8\xff\xf7\xff\xd4\x06\x7f\x02\x8d\0\xf6\xff\x89\x02\x8e\0\xf5\xffK\b\x90\0\xf4\xffD\x02\xf7\xff\xf8\xff\t\0\xf9\xffu\x1e\xff\xff\xfa\xff\x1b\t\x19\x03\xfd\xffJ\x01F\x01.\x03\xfc\xff\xeb\t\xfb\xff\x9c\x1e\xdf\x1e\xbe\x1f\xdc\x1f\xff\xff\xbb \x9a!\xbb!\xfb!\xff\xff\xcb\"\xfe\xff\xc9\x01\xfb\xff\f\0\xfc\xff\xfd\xffz\0+\x01\xff\xff\x0b#\xca#\xa3$s%\xfe\xffs&\xfd\xff\xfe\xff6\x01D'#(\xff\xff[\x01\xf3(\xce\x01\xfb\xffP\x01\r\0\xfd\xff\xfe\xff\xff\xff\xfc\xff3)\xf2)\xcb*\x9b+"),a("\xff\xff\xff\xff\xff\xff\x1f\0\xff\xff\x1d\0\x1f\0\x1f\0\x1f\0\x1f\0\x1d\0\x1d\0\x1d\0\x1d\0\x1d\0\xff\xff\x1d\0\x1f\0\x1f\0\x1d\0\x1d\0\xff\xff\x06\0\x06\0\x05\0\x04\0\x1f\0\x1f\0\x01\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x0b\0\n\0\t\0\b\0\x0b\0\x07\0\x0b\0\x0b\0\x0b\0\x06\0\x06\0\x06\0\x07\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x0f\0\x0f\0\x0f\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x1d\0\x1d\0\x10\0\xff\xff\x1d\0\xff\xff\xff\xff\x1d\0\xff\xff\xff\xff\xff\xff\xff\xff\x1d\0\x1d\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x1f\0\x16\0\x15\0\x13\0\x1f\0\x13\0\x13\0\x13\0\x13\0\x1d\0\x13\0\xff\xff\x14\0\x1f\0\xff\xff\xff\xff\x17\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x17\0\xff\xff\xff\xff\xff\xff\xff\xff\x1d\0\xff\xff\x1d\0\xff\xff\x1d\0\x1d\0\x1d\0\x1d\0\x1f\0\x1f\0\x1f\0\xff\xff\xff\xff\r\0\xff\xff\xff\xff\x0e\0\xff\xff\x03\0\x0e\0\x0e\0\x0e\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x05\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x06\0\xff\xff\b\0\xff\xff\xff\xff\x05\0\x05\0\xff\xff\x01\0\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\0\0\x01\0\x01\0\xff\xff\xff\xff\x02\0\x02\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x03\0\xff\xff\xff\xff\x04\0\x04\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x02\0\x02\0\x02\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x04\0\x02\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff"),a("\x01\0\0\0\0\0\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff2\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\0\0\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff7\0\xff\xff\xff\xff\xff\xff\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffh\0\xff\xff\xff\xff\0\0h\0i\0h\0k\0\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff}\0\0\0\xff\xff\0\0\0\0\x8f\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\0\0\xff\xff\xff\xff\0\0\xa1\0\0\0\0\0\xff\xff\0\0\xa7\0\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\0\0\xbe\0\0\0\xff\xff\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xce\0\0\0\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xd4\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff"),a("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1c\0\x1e\0\x1e\0\x1c\0\x1d\0g\0m\0\x7f\0g\0m\0\xa4\0f\0l\0\xc0\0\xd7\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1c\0\x03\0\x15\0\x10\0\x04\0\t\0\t\0\x14\0\x13\0\x05\0\x12\0\x03\0\x0f\0\x03\0\x0e\0\t\0\x17\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\r\0\f\0\x11\0\x06\0\x07\0\x1a\0\t\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x0b\0\x03\0\x05\0\t\0\x19\0\x0f\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\n\0\b\0\x05\0\x1b\0\x0f\0v\0v\x006\0e\x004\0\x1c\x005\x006\0\x1c\0t\0v\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0w\0C\0u\0t\0t\0e\0v\0\x1c\0\x88\0\x8b\0E\0\x89\x005\0E\0g\0\x8a\0\x87\0f\0\x95\0\x94\0\x93\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0\x99\0\x9c\0E\0\x9f\0\xc9\0v\x004\0k\0\0\x003\0\0\0K\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0w\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\0\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x02\0\x03\0\0\0\0\0\x03\0\x03\0\x03\0\xff\xff\xff\xff\0\0\x03\0\x03\x001\0\x03\0\x03\0\x03\0;\0;\0;\0;\0;\0;\0;\0;\0;\0;\0\x03\0\0\0\x03\0\x03\0\x03\0\x03\0\x03\0Q\0a\0a\0Q\0\x91\0U\0\0\0\0\0\0\0\0\0U\0a\x002\x002\x002\x002\x002\x002\x002\x002\x002\x002\0U\0Q\0U\0U\0U\0\x03\0a\0\x03\0j\0g\0R\0\x94\0f\0\x03\0\0\0\0\0\x03\0\t\0\t\0\0\0\0\0U\0\x03\0\x03\0\xac\0\x03\0\x06\0\t\0\xac\0\xac\0\0\0j\0\xd1\0i\0\0\0U\0a\0\x03\0V\0\x03\0\x06\0\x06\0\x06\0\x03\0\t\0\xd1\0\xc6\0\xac\0\xc4\0\0\0\x03\0\xac\0\xc5\0\x03\0z\0z\0\0\0\xcc\0U\0\x03\0\x03\0\0\0\x03\0\x07\0z\0\0\0U\0U\0\0\0\xd1\0\0\0\0\0\x03\0U\0\t\0y\0\0\0\x07\0\x07\0\x07\0\x03\0z\0\xd1\0\xdc\0\0\0\xda\0\0\0\x03\0\0\0\xdb\0\x03\0\t\0\t\0\0\0\xcc\0\x05\0\x03\0\x03\0\xff\xff\x03\0\x06\0\t\0\0\0\0\0V\0U\0\x03\0\0\0\0\0\x03\0\x05\0z\0V\0\0\0\x06\0\x06\0\x06\0\x03\0\t\0\0\0\0\0\xff\xff\0\0\0\0\x03\0\0\0\0\0\x03\0\t\0\t\0\0\0\0\0_\0\x03\0\x03\0\0\0\x03\0\t\0\t\0\0\0\0\0y\0\x05\0\x03\0\0\0\0\0\x03\0\x05\0\t\0c\0\0\0\t\0\t\0\t\0\x03\0\t\0\xc0\0\0\0\0\0\xbf\0\0\0\xd7\0\0\0\0\0\xd6\0v\0v\0\0\0\0\0\0\0\0\0\0\0p\0p\0t\0v\0\x05\0\0\0V\0\x05\0\x03\0n\0p\0\x03\0_\0\t\0u\0\xd9\0u\0t\0t\0\0\0v\0s\0\0\0n\0q\0q\0\0\0p\0p\0p\0\0\0\0\0U\0\0\0\xc3\0\0\0\xc2\0q\0p\0\xd5\0\0\0\0\0\0\0c\0_\0\x03\0\0\0\0\0\0\0o\0v\0n\0n\0n\0\0\0p\0\x05\0p\0e\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\x03\0\t\0\t\0\0\0\0\0U\0\x03\0\x03\0\0\0\x03\0\x06\0\t\0\0\0u\0e\0\0\0\xff\xffU\0p\0\0\0o\0\x05\0W\0\0\0Y\0\x06\0\x06\0\x03\0X\0\0\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0\xa4\0\0\0\0\0\xa3\0\x91\0\0\0\0\0\x90\0o\0U\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0U\0\t\0\0\0\0\0\0\0\0\0\0\0\xa6\0\0\0\x03\0\0\0\0\0\x03\0\x03\0\x03\0\0\0\x92\0T\0\x03\0\x03\0\0\0\x03\0\x03\0\x03\0=\0\0\0\0\0=\0\0\0\0\0\0\0V\0U\0\x03\0\x03\0\0\0\x03\0\x03\0\x03\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0=\0>\0\0\0\0\0>\0A\0A\0\0\0\0\0\0\0B\0>\0\0\0>\0?\0A\0\0\0\0\0\xa5\0\0\0\0\0\x03\0\x8e\0\x03\0\0\0\0\0@\0\0\0?\0?\0?\0>\0A\0\x9a\0\x9a\0\x9a\0\x9a\0\x9a\0\x9a\0\x9a\0\x9a\0\x9a\0\x9a\0\x9b\0\x9b\0\x9b\0\x9b\0\x9b\0\x9b\0\x9b\0\x9b\0\x9b\0\x9b\0\x03\0\0\0\x03\0\0\0\0\0\0\0\xc1\0>\0\0\0A\0\0\0\xd8\0\0\0\0\0\0\0\0\0#\0\0\0\0\0\0\0\0\0\0\0\0\0(\0\0\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\0\0\0\0\0\0\0\0@\0\0\0>\0#\0#\0#\0#\0'\0#\0#\0#\0#\0#\0#\0%\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\0\0\0\0\0\0\0\0\x16\0\0\0#\0#\0#\0#\0'\0#\0#\0#\0#\0#\0#\0&\0#\0$\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0<\0<\0<\0<\0<\0<\0<\0<\0<\0<\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0<\0<\0<\0<\0<\0<\0\0\0\0\0\0\0\0\0\0\0\0\0\xa2\0\0\0\0\0\0\0\xff\xff\xad\0\xad\0\xad\0\xad\0\xad\0\xad\0\xad\0\xad\0\xad\0\xad\0\0\0\0\0\0\0\0\0\0\0<\0<\0<\0<\0<\0<\0\xae\0\xae\0\xae\0\xae\0\xae\0\xae\0\xae\0\xae\0\xae\0\xae\0\0\0\0\0\0\0\0\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\0\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\0\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\0\0\0\0\0\0\0\0\0\0\0\0(\0\0\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0#\0)\0#\0#\0'\0#\0#\0#\0#\0#\0#\0%\0#\0#\0*\0#\0#\0#\0#\0#\0#\0#\0#\0+\0#\0#\0\0\0\0\0\0\0\0\0\x16\0\0\0#\0)\0#\0#\0'\0#\0#\0#\0#\0#\0#\0&\0#\0$\0*\0#\0#\0#\0#\0#\0#\0#\0#\0+\0#\0#\x002\x002\x002\x002\x002\x002\x002\x002\x002\x002\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x002\x002\x002\x002\x002\x002\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x002\x002\x002\x002\x002\x002\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\0\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\x18\0#\0#\0#\0#\0#\0#\0#\0#\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\0\0\0\0\0\0\0\0\x18\0\0\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0j\0g\0\0\0\0\0f\0v\0v\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0t\0v\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0j\0\0\0i\0t\0\0\0u\0t\0t\0\0\0v\0\0\0\0\0\0\0\0\0\0\0\0\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0v\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0t\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x19\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\0\0\0\0\0\0\0\0\x19\0\0\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\0\0\0\0\0\0\0\0\0\0v\0v\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0t\0v\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0t\0\0\0u\0t\0t\0\0\0v\0\0\0\0\0\0\0\0\0\0\0\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0v\0\0\0\0\0\0\0\0\0\0\0\0\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0t\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\0\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x03\0\0\0\0\0\x03\0\x03\0\x03\0\0\0\0\0\0\0\x03\0\x03\0\0\0\x03\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\x03\0\x03\0\x03\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\x03\0!\0\0\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0\0\0\x03\0\x03\0\x03\0\0\0\x03\0\x03\0\x03\0\0\0\0\0\0\0\x03\0\x03\0\0\0\x03\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\x03\0\x03\0\x03\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\x03\0\x1f\0\0\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\0\0\x03\0\0\0\x03\0\0\0\0\0\0\0\0\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0\0\0!\0!\0!\0!\0!\0!\0!\0!\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\0\0\0\0\0\0\0\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0 \0\0\0\0\0\0\0\0\0\0\0\0\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\0\0\0\0\0\0\0\0\x1f\0\0\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\0\0\0\0\0\0\0\0\0\0x\0x\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0w\0x\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0w\0\0\0w\0w\0w\0\0\0x\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0x\0\0\0\0\0\0\0\0\0\0\0\0\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0w\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0!\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0\"\0\0\0\0\0\0\0\0\0\0\0\0\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0\0\0\0\0\0\0\0\0!\0\0\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0\x9e\0\x9e\0\x9e\0\x9e\0\x9e\0\x9e\0\x9e\0\x9e\0\x9e\0\x9e\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x9e\0\x9e\0\x9e\0\x9e\0\x9e\0\x9e\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x9e\0\x9e\0\x9e\0\x9e\0\x9e\0\x9e\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0\0\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0#\0!\0!\0!\0!\0!\0!\0!\0!\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\0\0\0\0\0\0\0\0#\0\0\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\0\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\0\0\0\0\0\0\0\0#\0\0\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\xb0\0\xb0\0\xb0\0\xb0\0\xb0\0\xb0\0\xb0\0\xb0\0\xb0\0\xb0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb0\0\xb0\0\xb0\0\xb0\0\xb0\0\xb0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb0\0\xb0\0\xb0\0\xb0\0\xb0\0\xbx000\0\0\xx009\x009\x009\x009\x009\x009\x009\x009\x009\x009\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0=\0O\0\0\0\0\0O\0O\0O\0\0\0\0\0\0\0P\0O\0\0\0O\0O\0O\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0O\0:\0O\0O\0O\0O\0O\0:\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0E\0:\0\0\0E\0\0\0:\0\0\0:\0\0\0\0\0\0\x008\0\0\0\0\0\0\0\0\0O\0\0\0O\0\0\0\0\0\0\0\0\0E\0F\0\0\0\0\0F\0F\0F\0\0\0\0\0I\0H\0F\0\0\0F\0F\0F\0E\0\0\0\0\0E\0\0\0\0\0\0\0\0\0\0\0O\0F\0O\0F\0F\0F\0F\0F\0\0\0\0\0\0\0\0\0\0\0\0\0E\0F\0\0\0\0\0F\0G\0G\0\0\0\0\0I\0H\0F\0\0\0F\0N\0G\0\0\0\0\0\0\0\0\0\0\0F\0\0\0F\0\0\0\0\0N\0\0\0N\0N\0N\0F\0G\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0E\0\0\0\0\0E\0\0\0\0\0\0\0\0\0\0\0F\0\0\0F\0\0\0\0\0\0\0\0\0F\0\0\0G\0\0\0\0\0\0\0\0\0E\0F\0\0\0\0\0F\0M\0M\0\0\0\0\0I\0H\0F\0\0\0F\0L\0M\0E\0\0\0\xff\xffE\0\0\0\0\0\0\0\0\0\0\0N\0L\0F\0L\0L\0L\0F\0M\0\0\0\0\0\0\0\0\0\0\0\0\0E\0F\0\0\0\0\0F\0G\0G\0\0\0D\0I\0H\0F\0\0\0F\0G\0G\0\0\0\0\0\0\0\0\0\0\0F\0\0\0M\0D\0D\0G\0D\0G\0G\0G\0F\0G\0D\0D\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0D\0\0\0D\0D\0D\0\0\0D\0\0\0L\0\0\0F\0\0\0\0\0\0\0D\0F\0\0\0G\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0D\0\0\0E\0D\0\0\0E\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0D\0G\0\0\0F\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0E\0F\0\0\0\0\0F\0F\0F\0D\0D\0J\0H\0F\0\0\0F\0F\0F\0E\0\0\0\0\0E\0\0\0\0\0\0\0\0\0\0\0\0\0F\0\0\0F\0F\0F\0F\0F\0\0\0\0\0\0\0\0\0\0\0\0\0E\0F\0\0\0\0\0F\0G\0G\0\0\0D\0J\0H\0F\0\0\0F\0G\0G\0\0\0\0\0\0\0\0\0\0\0F\0\0\0F\0\0\0\0\0G\0\0\0G\0G\0G\0F\0G\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0E\0\0\0\0\0E\0\0\0\0\0\0\0\0\0\0\0F\0\0\0F\0\0\0\0\0\0\0D\0F\0\0\0G\0\0\0\0\0\0\0\0\0E\0F\0\0\0\0\0F\0F\0F\0\0\0\0\0\0\0H\0F\0\0\0F\0F\0F\0E\0\0\0\0\0E\0\0\0\0\0\0\0\0\0D\0G\0F\0F\0F\0F\0F\0F\0F\0\0\0\0\0\0\0\0\0\0\0\0\0E\0F\0\0\0\0\0F\0M\0M\0\0\0\0\0J\0H\0F\0\0\0F\0L\0M\0\0\0\0\0\0\0\0\0\0\0F\0\0\0F\0\0\0\0\0L\0\0\0L\0L\0L\0F\0M\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0E\0\0\0\0\0E\0\0\0\0\0\0\0\0\0\0\0F\0\0\0F\0\0\0\0\0\0\0\0\0F\0\0\0M\0\0\0\0\0\0\0\0\0E\0F\0\0\0\0\0F\0M\0M\0\0\0D\0J\0H\0F\0\0\0F\0M\0M\0E\0\0\0\0\0E\0\0\0\0\0\0\0\0\0\0\0L\0M\0F\0M\0M\0M\0F\0M\0\0\0\0\0\0\0\0\0\0\0\0\0E\0F\0\0\0\0\0F\0G\0G\0\0\0\0\0J\0H\0F\0\0\0F\0N\0G\0\0\0\0\0\0\0\0\0D\0F\0\0\0M\0\0\0\0\0N\0\0\0N\0N\0N\0F\0G\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Q\0\0\0\0\0Q\0\0\0\0\0\0\0\0\0D\0M\0\0\0F\0\0\0\0\0\0\0\0\0F\0\0\0G\0\0\0\0\0\0\0\0\0Q\0O\0\0\0\0\0O\0O\0O\0\0\0\0\0S\0P\0O\0\0\0O\0O\0O\0Q\0\0\0\0\0Q\0\0\0\0\0\0\0\0\0\0\0N\0O\0F\0O\0O\0O\0O\0O\0\0\0\0\0\0\0\0\0\0\0\0\0Q\0O\0\0\0\0\0O\0O\0O\0\0\0\0\0\0\0P\0O\0\0\0O\0O\0O\0\0\0\0\0\0\0\0\0\0\0O\0\0\0O\0\0\0\0\0O\0\0\0O\0O\0O\0O\0O\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0a\0a\0\0\0\0\0U\0\0\0\0\0\0\0\0\0U\0a\0\0\0\0\0O\0\0\0O\0\0\0\0\0\0\0\0\0O\0U\0O\0U\0U\0U\0\0\0a\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\x03\0\t\0\t\0\0\0\0\0\x05\0\x03\0\x03\0\0\0\x03\0\x06\0\t\0\0\0\0\0\0\0\0\0O\0\0\0O\0\0\0U\0a\0V\0\0\0\x06\0\x06\0\x06\0\x03\0\t\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\x03\0\t\0\t\0\0\0\0\0\x05\0\x03\0\x03\0\0\0\x03\0\x06\0\t\0\0\0\0\0U\0U\0\0\0\0\0\0\0\x03\0U\0\t\0V\0\0\0\x06\0\x06\0\x06\0\x03\0\t\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\x03\0\t\0\t\0\0\0\0\0_\0\x03\0\x03\0\0\0\x03\0\t\0\t\0\0\0\0\0V\0\x05\0\x03\0\0\0\0\0\x03\0U\0\t\0c\0\0\0\t\0\t\0\t\0\x03\0\t\0\0\0\0\0\0\0\0\0\0\0[\0\0\0\0\0\x03\0^\0^\0\0\0\0\0U\0[\0[\0\0\0[\0\\\0^\0\0\0\0\0V\0\x05\0\x03\0\0\0\0\0\x03\0_\0\t\0]\0\0\0\x06\0\\\0Z\0[\0^\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\x03\0\t\0\t\0\0\0\0\0U\0\x03\0\x03\0\0\0\x03\0\x06\0\t\0\0\0\0\0c\0_\0\x03\0\0\0\0\0[\0U\0^\0V\0\0\0\x06\0\x06\0b\0\x03\0\t\0\0\0\0\0\0\0\0\0\0\0[\0\0\0\0\0\x03\0[\0[\0\0\0\0\0\0\0[\0[\0\0\0[\0[\0[\0\0\0\0\0]\0U\0[\0\0\0\0\0\x03\0U\0\t\0[\0\0\0\x03\0[\0\x03\0[\0[\0\0\0\0\0\0\0[\0\0\0\0\0\x03\0^\0^\0\0\0\0\0U\0[\0[\0\0\0[\0\\\0^\0\0\0\0\0\0\0\0\0V\0U\0\x03\0\0\0\0\0[\0]\0[\0\x06\0\\\0\x06\0[\0^\0\0\0\0\0\0\0\0\0\0\0[\0\0\0\0\0\x03\0^\0^\0\0\0\0\0\x05\0[\0[\0\0\0[\0\\\0^\0\0\0\0\0\0\0\0\0[\0\0\0[\0[\0U\0^\0]\0\0\0\x06\0\\\0\x06\0[\0^\0\0\0\0\0\0\0\0\0\0\0[\0\0\0\0\0\x03\0^\0^\0\0\0\0\0_\0[\0[\0\0\0[\0^\0^\0\0\0\0\0]\0U\0[\0\0\0\0\0[\0U\0^\0`\0\0\0\t\0^\0\t\0[\0^\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0a\0a\0\0\0\0\0_\0\0\0\0\0\0\0\0\0a\0a\0\0\0\0\0]\0\x05\0[\0\0\0\0\0[\0_\0^\0a\0\0\0a\0a\0a\0\0\0a\0\0\0\0\0\0\0\0\0\0\0[\0\0\0\0\0\x03\0^\0^\0\0\0\0\0_\0[\0[\0\0\0[\0^\0^\0\0\0\0\0`\0_\0[\0\0\0\0\0\0\0_\0a\0`\0\0\0\t\0^\0\t\0[\0^\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0a\0a\0\0\0\0\0_\0\0\0\0\0\0\0\0\0a\0a\0\0\0\0\0a\0_\0\0\0\0\0\0\0[\0_\0^\0a\0\0\0a\0a\0a\0\0\0a\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\x03\0\t\0\t\0\0\0\0\0U\0\x03\0\x03\0\0\0\x03\0\x06\0\t\0\0\0\0\0`\0_\0[\0\0\0\0\0\0\0_\0a\0V\0\0\0\x06\0\x06\0\x06\0\x03\0\t\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\x03\0\t\0\t\0\0\0\0\0_\0\x03\0\x03\0\0\0\x03\0\t\0\t\0\0\0\0\0a\0_\0\0\0\0\0\0\0\x03\0U\0\t\0c\0\0\0\t\0\t\0\t\0\x03\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0p\0p\0\0\0\0\0U\0\0\0\0\0p\0p\0n\0p\0\x05\0\0\0V\0U\0\x03\0n\0p\0\x03\0_\0\t\0o\0\0\0n\0n\0n\0\0\0p\0o\0\0\0n\0n\0n\0\0\0p\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0p\0p\0\0\0\0\0_\0\0\0c\0_\0\x03\0p\0p\0\0\0U\0p\0\0\0\0\0\0\0\0\0\0\0U\0p\0r\0\0\0p\0p\0p\0\0\0p\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0p\0p\0\0\0\0\0U\0\0\0o\0U\0\0\0n\0p\0\0\0\0\0o\0\x05\0\0\0\0\0\0\0\0\0_\0p\0o\0\0\0n\0n\0n\0\0\0p\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0p\0p\0\0\0\0\0_\0\0\0\0\0p\0p\0p\0p\0\x05\0\0\0r\0_\0\0\0n\0p\0\0\0U\0p\0r\0\0\0p\0p\0p\0\0\0p\0o\0\0\0n\0n\0n\0\0\0p\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0v\0v\0\0\0D\0\0\0\0\0o\0U\0\0\0v\0v\0\0\0_\0p\0\0\0\0\0\0\0\0\0\0\0U\0p\0v\0\0\0v\0v\0v\0\0\0v\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0x\0x\0\0\0D\0\0\0\0\0r\0_\0\0\0x\0x\0\0\0\0\0o\0\x05\0\0\0\0\0D\0\0\0\0\0v\0x\0\0\0x\0x\0x\0\0\0x\0\0\0\0\0\0\0\x03\0\0\0\0\0\x03\0z\0z\0\0\0\0\0\x05\0\x03\0\x03\0\0\0\x03\0\x07\0z\0\0\0\0\0\0\0D\0v\0\0\0\0\0\0\0D\0\0\0y\0x\0\x07\0\x07\0\x07\0\x03\0z\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\x03\0z\0z\0\0\0\0\0_\0\x03\0\x03\0\0\0\x03\0z\0z\0\0\0\0\0\0\0D\0x\0\0\0\0\0\x03\0\x05\0z\0{\0\0\0z\0z\0z\0\x03\0z\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\x03\0z\0z\0\0\0\0\0_\0\x03\0\x03\0\0\0\x03\0z\0z\0\0\0\0\0y\0\x05\0\x03\0\0\0\0\0\x03\0_\0z\0{\0\0\0z\0z\0z\0\x03\0z\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x7f\0\0\0\0\0~\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0{\0_\0\x03\0\0\0\0\0\x03\0_\0z\0\0\0\x82\0\0\0\0\0\0\0\0\0\x81\0\x86\0\0\0\x85\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x84\0\0\0{\0_\0\x03\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\0\0\0\0\0\0\0\0\x83\0\0\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\0\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\0\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x80\0\x83\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\0\0\0\0\0\0\0\0\x83\0\0\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\0\0\0\0\0\0\0\0\0\0\0\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\0\0\0\0\0\0\0\0\x8d\0\0\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\0\0\0\0\0\0\0\0\0\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\0\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\0\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\0\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\0\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\0\0\0\0\0\0\0\0\x8c\0\0\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\0\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\0\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\0\0\0\0\0\0\0\0\0\0\0\0\x8c\0\0\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\0\0\0\0\x89\0\0\0\0\0\0\0\x8a\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\0\0\0\0\0\0\0\0\x8c\0\0\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\0\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8d\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\0\0\0\0\x89\0\0\0\0\0\0\0\0\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\0\0\0\0\0\0\0\0\x8d\0\0\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\0\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\0\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x98\0\0\0\x98\0\0\0\0\0\xac\0\0\0\x98\0\xab\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x97\0\x97\0\x97\0\x97\0\x97\0\x97\0\x97\0\x97\0\x97\0\x97\0\0\0\xaa\0\0\0\xaa\0\0\0\0\0\0\0\0\0\xaa\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa9\0\xa9\0\xa9\0\xa9\0\xa9\0\xa9\0\xa9\0\xa9\0\xa9\0\xa9\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x98\0\0\0\0\0\0\0\0\0\0\0\x98\0\xb1\0\0\0\0\0\xb1\0\xb1\0\xb1\0\0\0\0\0\0\0\xb1\0\xb1\0\x98\0\xb1\0\xb1\0\xb1\0\x98\0\0\0\x98\0\0\0\0\0\xaa\0\x96\0\0\0\0\0\0\0\xb1\0\xaa\0\xb1\0\xb1\0\xb1\0\xb1\0\xb1\0\0\0\0\0\0\0\0\0\0\0\0\0\xaa\0\0\0\0\0\0\0\xaa\0\0\0\xaa\0\0\0\0\0\0\0\xa8\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb1\0\0\0\xb1\0\0\0\0\0\0\0\0\0\0\0\xb3\0\0\0\0\0\xb3\0\xb3\0\xb3\0\0\0\0\0\0\0\xb3\0\xb3\0\0\0\xb3\0\xb3\0\xb3\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb1\0\xb3\0\xb1\0\xb3\0\xb3\0\xb3\0\xb3\0\xb3\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\0\0\xb3\0\0\0\xb3\0\xb4\0\0\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\0\0\xb3\0\0\0\xb3\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\0\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\0\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb3\0\0\0\0\0\xb3\0\xb3\0\xb3\0\0\0\0\0\0\0\xb3\0\xb3\0\0\0\xb3\0\xb3\0\xb3\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb3\0\0\0\xb3\0\xb3\0\xb3\0\xb3\0\xb3\0\0\0\0\0\0\0\0\0\xb4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\0\0\0\0\xb5\0\0\0\xb3\0\0\0\xb3\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\0\0\0\0\0\0\xb3\0\xb4\0\xb3\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\0\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\0\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb7\0\0\0\0\0\xb7\0\xb7\0\xb7\0\0\0\0\0\0\0\xb7\0\xb7\0\0\0\xb7\0\xb7\0\xb7\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb7\0\0\0\xb7\0\xb7\0\xb7\0\xb7\0\xb7\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\0\0\xb7\0\0\0\xb7\0\xb8\0\0\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\0\0\xb7\0\0\0\xb7\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\0\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\0\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb7\0\0\0\0\0\xb7\0\xb7\0\xb7\0\0\0\0\0\0\0\xb7\0\xb7\0\0\0\xb7\0\xb7\0\xb7\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb7\0\0\0\xb7\0\xb7\0\xb7\0\xb7\0\xb7\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb8\0\0\0\0\0\0\0\0\0\0\0\0\0\xb8\0\0\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\0\0\xb7\0\xba\0\xb7\0\0\0\0\0\xb9\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb7\0\0\0\xb7\0\0\0\xb8\0\0\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\0\0\0\0\0\0\0\0\0\0\0\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\0\0\0\0\0\0\0\0\xbb\0\0\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\0\0\0\0\0\0\0\0\0\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\0\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\0\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\0\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\0\0\0\0\xbc\0\0\0\0\0\0\0\0\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\0\0\0\0\0\0\0\0\xbb\0\0\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\0\0\0\0\0\0\0\0\0\0\0\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\0\0\0\0\0\0\0\0\xc8\0\0\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\0\0\0\0\0\0\0\0\0\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\0\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\0\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\0\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\0\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\0\0\0\0\0\0\0\0\xc7\0\0\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\0\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\0\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\0\0\0\0\0\0\0\0\0\0\0\0\xc7\0\0\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\0\0\0\0\xc4\0\0\0\0\0\0\0\xc5\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\0\0\0\0\0\0\0\0\xc7\0\0\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\0\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc8\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\0\0\0\0\xc4\0\0\0\0\0\0\0\0\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\0\0\0\0\0\0\0\0\xc8\0\0\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\0\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\0\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcd\0\xcb\0\xcb\0\xd0\0\xcb\0\xcb\0\0\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcd\0\xcb\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xcc\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xcb\0\xcb\0\xcb\0\xcb\0\0\0\xcf\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\xcb\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xcb\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xcb\0\xd2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xff\xff\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xcc\0\0\0\0\0\0\0\0\0\0\0\0\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\0\0\0\0\0\0\0\0\xd2\0\0\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\0\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\0\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd1\0\0\0\0\0\0\0\0\0\0\0\xd2\0\0\0\0\0\0\0\0\0\0\0\0\0\xd1\0\0\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xcc\0\0\0\0\0\0\0\0\0\0\0\0\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\0\0\0\0\0\0\0\0\xd2\0\0\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\0\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xcc\0\0\0\0\0\0\0\0\0\0\0\0\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\0\0\0\0\0\0\0\0\xd2\0\0\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\0\0\0\0\0\0\0\0\0\0\0\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\0\0\0\0\0\0\0\0\xde\0\0\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\0\0\0\0\0\0\0\0\0\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\0\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\0\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\0\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\0\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\0\0\0\0\0\0\0\0\xdd\0\0\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\0\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\0\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\0\0\0\0\0\0\0\0\0\0\0\0\xdd\0\0\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\0\0\0\0\xda\0\0\0\0\0\0\0\xdb\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\0\0\0\0\0\0\0\0\xdd\0\0\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\0\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xde\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\0\0\0\0\xda\0\0\0\0\0\0\0\0\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\0\0\0\0\0\0\0\0\xde\0\0\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\0\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\0\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\0\0"),a("\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0\x1d\0\0\0\0\0f\0l\0~\0h\0k\0\xa3\0h\0k\0\xbf\0\xd6\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\n\0\n\x002\0\x10\x003\0\x1c\x004\0:\0\x1c\0\n\0\n\x000\x000\x000\x000\x000\x000\x000\x000\x000\x000\0\n\0B\0\n\0\n\0\n\0\x10\0\n\0\x1c\0\x85\0\x84\0E\0\x84\x003\0E\0i\0\x84\0\x86\0i\0\x8f\0\x91\0\x92\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x98\0\x9b\0E\0\x9e\0\xc2\0\n\0\x14\0i\0\xff\xff\x14\0\xff\xffE\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\xff\xff\xff\xff\x03\0\x03\0\x03\0h\0k\0\xff\xff\x03\0\x03\0\x14\0\x03\0\x03\0\x03\x009\x009\x009\x009\x009\x009\x009\x009\x009\x009\0\x03\0\xff\xff\x03\0\x03\0\x03\0\x03\0\x03\0Q\0\x05\0\x05\0Q\0\x90\0\x05\0\xff\xff\xff\xff\xff\xff\xff\xff\x05\0\x05\0;\0;\0;\0;\0;\0;\0;\0;\0;\0;\0\x05\0Q\0\x05\0\x05\0\x05\0\x03\0\x05\0\x03\0j\0j\0Q\0\x90\0j\0\x06\0\xff\xff\xff\xff\x06\0\x06\0\x06\0\xff\xff\xff\xff\x06\0\x06\0\x06\0\xac\0\x06\0\x06\0\x06\0\xab\0\xab\0\xff\xffj\0\xcd\0j\0\xff\xff\x05\0\x05\0\x03\0\x06\0\x03\0\x06\0\x06\0\x06\0\x06\0\x06\0\xcd\0\xc3\0\xac\0\xc3\0\xff\xff\x07\0\xab\0\xc3\0\x07\0\x07\0\x07\0\xff\xff\xcd\0\x07\0\x07\0\x07\0\xff\xff\x07\0\x07\0\x07\0\xff\xff\x05\0\x05\0\xff\xff\xd1\0\xff\xff\xff\xff\x06\0\x06\0\x06\0\x07\0\xff\xff\x07\0\x07\0\x07\0\x07\0\x07\0\xd1\0\xd5\0\xff\xff\xd5\0\xff\xff\b\0\xff\xff\xd5\0\b\0\b\0\b\0\xff\xff\xd1\0\b\0\b\0\b\0i\0\b\0\b\0\b\0\xff\xff\xff\xff\x06\0\x06\0\x06\0\xff\xff\xff\xff\x07\0\x07\0\x07\0\b\0\xff\xff\b\0\b\0\b\0\b\0\b\0\xff\xff\xff\xff\x14\0\xff\xff\xff\xff\t\0\xff\xff\xff\xff\t\0\t\0\t\0\xff\xff\xff\xff\t\0\t\0\t\0\xff\xff\t\0\t\0\t\0\xff\xff\xff\xff\x07\0\x07\0\x07\0\xff\xff\xff\xff\b\0\b\0\b\0\t\0\xff\xff\t\0\t\0\t\0\t\0\t\0\xbd\0\xff\xff\xff\xff\xbd\0\xff\xff\xd3\0\xff\xff\xff\xff\xd3\0\x0b\0\x0b\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\r\0\r\0\x0b\0\x0b\0\r\0\xff\xff\b\0\b\0\b\0\r\0\r\0\t\0\t\0\t\0\x0b\0\xd3\0\x0b\0\x0b\0\x0b\0\xff\xff\x0b\0\r\0\xff\xff\r\0\r\0\r\0\xff\xff\r\0\x0e\0\x0e\0\xff\xff\xff\xff\x0e\0\xff\xff\xbd\0\xff\xff\xbd\0\x0e\0\x0e\0\xd3\0\xff\xff\xff\xff\xff\xff\t\0\t\0\t\0\xff\xff\xff\xff\xff\xff\x0e\0\x0b\0\x0e\0\x0e\0\x0e\0\xff\xff\x0e\0\r\0\r\0e\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x11\0\xff\xff\xff\xff\x11\0\x11\0\x11\0\xff\xff\xff\xff\x11\0\x11\0\x11\0\xff\xff\x11\0\x11\0\x11\0\xff\xff\x0b\0e\0\xff\xffj\0\x0e\0\x0e\0\xff\xff\r\0\r\0\x11\0\xff\xff\x11\0\x11\0\x11\0\x11\0\x11\0\xff\xffe\0e\0e\0e\0e\0e\0e\0e\0e\0e\0\xa0\0\xff\xff\xff\xff\xa0\0\x81\0\xff\xff\xff\xff\x81\0\x0e\0\x0e\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x11\0\x11\0\x11\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xa0\0\xff\xff\x12\0\xff\xff\xff\xff\x12\0\x12\0\x12\0\xff\xff\x81\0\x12\0\x12\0\x12\0\xff\xff\x12\0\x12\0\x12\0\x13\0\xff\xff\xff\xff\x13\0\xff\xff\xff\xff\xff\xff\x11\0\x11\0\x11\0\x12\0\xff\xff\x12\0\x12\0\x12\0\x12\0\x12\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x13\0\x13\0\xff\xff\xff\xff\x13\0\x13\0\x13\0\xff\xff\xff\xff\xff\xff\x13\0\x13\0\xff\xff\x13\0\x13\0\x13\0\xff\xff\xff\xff\xa0\0\xff\xff\xff\xff\x12\0\x81\0\x12\0\xff\xff\xff\xff\x13\0\xff\xff\x13\0\x13\0\x13\0\x13\0\x13\0\x97\0\x97\0\x97\0\x97\0\x97\0\x97\0\x97\0\x97\0\x97\0\x97\0\x9a\0\x9a\0\x9a\0\x9a\0\x9a\0\x9a\0\x9a\0\x9a\0\x9a\0\x9a\0\x12\0\xff\xff\x12\0\xff\xff\xff\xff\xff\xff\xbd\0\x13\0\xff\xff\x13\0\xff\xff\xd3\0\xff\xff\xff\xff\xff\xff\xff\xff\x16\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x16\0\xff\xff\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\xff\xff\xff\xff\xff\xff\xff\xff\x13\0\xff\xff\x13\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\xff\xff\xff\xff\xff\xff\xff\xff\x16\0\xff\xff\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\x008\x008\x008\x008\x008\x008\x008\x008\x008\x008\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff8\x008\x008\x008\x008\x008\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xa0\0\xff\xff\xff\xff\xff\xff\x81\0\xa9\0\xa9\0\xa9\0\xa9\0\xa9\0\xa9\0\xa9\0\xa9\0\xa9\0\xa9\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff8\x008\x008\x008\x008\x008\0\xad\0\xad\0\xad\0\xad\0\xad\0\xad\0\xad\0\xad\0\xad\0\xad\0\xff\xff\xff\xff\xff\xff\xff\xff\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\xff\xff\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\xff\xff\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x16\0\x17\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x17\0\xff\xff\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\xff\xff\xff\xff\xff\xff\xff\xff\x17\0\xff\xff\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0<\0<\0<\0<\0<\0<\0<\0<\0<\0<\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff<\0<\0<\0<\0<\0<\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff<\0<\0<\0<\0<\0<\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\xff\xff\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x18\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x17\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\xff\xff\xff\xff\xff\xff\xff\xff\x18\0\xff\xff\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0d\0d\0\xff\xff\xff\xffd\0t\0t\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfft\0t\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffd\0\xff\xffd\0t\0\xff\xfft\0t\0t\0\xff\xfft\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffd\0d\0d\0d\0d\0d\0d\0d\0d\0d\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfft\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0t\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x19\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x18\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\xff\xff\xff\xff\xff\xff\xff\xff\x19\0\xff\xff\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffu\0u\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffu\0u\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffu\0\xff\xffu\0u\0u\0\xff\xffu\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffd\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffu\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0u\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\xff\xff\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x19\0\x1a\0\xff\xff\xff\xff\x1a\0\x1a\0\x1a\0\xff\xff\xff\xff\xff\xff\x1a\0\x1a\0\xff\xff\x1a\0\x1a\0\x1a\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x1a\0\xff\xff\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x1a\0\xff\xff\x1a\0\x1a\0\xff\xff\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\xff\xff\x1a\0\x1b\0\x1a\0\xff\xff\x1b\0\x1b\0\x1b\0\xff\xff\xff\xff\xff\xff\x1b\0\x1b\0\xff\xff\x1b\0\x1b\0\x1b\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x1b\0\xff\xff\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x1b\0\xff\xff\x1b\0\x1b\0\xff\xff\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\xff\xff\x1b\0\xff\xff\x1b\0\xff\xff\xff\xff\xff\xff\xff\xff\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\xff\xff\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x96\0\x96\0\x96\0\x96\0\x96\0\x96\0\x96\0\x96\0\x96\0\x96\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x96\0\x96\0\x96\0\x96\0\x96\0\x96\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x96\0\x96\0\x96\0\x96\0\x96\0\x96\0\xff\xff\xff\xff\xff\xff\xff\xff\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1f\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\xff\xff\xff\xff\xff\xff\xff\xff\x1f\0\xff\xff\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffw\0w\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffw\0w\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffw\0\xff\xffw\0w\0w\0\xff\xffw\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffw\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0w\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0!\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0\xff\xff\xff\xff\xff\xff\xff\xff!\0\xff\xff!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\x9d\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0\xff\xff!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0!\0#\0!\0!\0!\0!\0!\0!\0!\0!\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\xff\xff\xff\xff\xff\xff\xff\xff#\0\xff\xff#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\xa8\0\xa8\0\xa8\0\xa8\0\xa8\0\xa8\0\xa8\0\xa8\0\xa8\0\xa8\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xa8\0\xa8\0\xa8\0\xa8\0\xa8\0\xa8\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xa8\0\xa8\0\xa8\0\xa8\0\xa8\0\xa8\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0\xff\xff#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0#\0$\0#\0#\0#\0#\0#\0#\0#\0#\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0\xff\xff\xff\xff\xff\xff\xff\xff$\0\xff\xff$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xaf\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0\xff\xff$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0$\0%\0$\0$\0$\0$\0$\0$\0$\0$\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0\xff\xff\xff\xff\xff\xff\xff\xff%\0\xff\xff%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0\xff\xff%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0&\0%\0%\0%\0%\0%\0%\0%\0%\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0\xff\xff\xff\xff\xff\xff\xff\xff&\0\xff\xff&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0\xff\xff&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0\xff\xff&\0&\0&\0&\0&\0&\0&\0&\0'\0\xff\xff\xff\xff\xff\xff'\0\xff\xff'\0\xff\xff\xff\xff'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0\xff\xff\xff\xff\xff\xff\xff\xff'\0\xff\xff'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0\xff\xff'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0(\0'\0'\0'\0'\0'\0'\0'\0'\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0\xff\xff\xff\xff\xff\xff\xff\xff(\0\xff\xff(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0\xff\xff(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0(\0)\0(\0(\0(\0(\0(\0(\0(\0(\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0\xff\xff\xff\xff\xff\xff\xff\xff)\0\xff\xff)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0\xff\xff)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0)\0*\0)\0)\0)\0)\0)\0)\0)\0)\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0\xff\xff\xff\xff\xff\xff\xff\xff*\0\xff\xff*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0\xff\xff*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0*\0+\0*\0*\0*\0*\0*\0*\0*\0*\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0\xff\xff\xff\xff\xff\xff\xff\xff+\0\xff\xff+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0\xff\xff+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0+\0,\0+\0+\0+\0+\0+\0+\0+\0+\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0\xff\xff\xff\xff\xff\xff\xff\xff,\0\xff\xff,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0\xff\xff,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0-\0,\0,\0,\0,\0,\0,\0,\0,\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0\xff\xff\xff\xff\xff\xff\xff\xff-\0\xff\xff-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0\xff\xff-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0-\0.\0-\0-\0-\0-\0-\0-\0-\0-\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0\xff\xff\xff\xff\xff\xff\xff\xff.\0\xff\xff.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0\xff\xff.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0.\0/\0.\0.\0.\0.\0.\0.\0.\0.\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0\xff\xff\xff\xff\xff\xff\xff\xff/\0\xff\xff/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0\xff\xff/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0/\0\xff\xff/\0/\0/\0/\0/\0/\0/\0/\x001\0\xff\xff1\0\xff\xff\xff\xff\xff\xff\xff\xff1\0\xff\xff\xff\xff=\0\xff\xff\xff\xff=\0\xff\xff\xff\xff1\x001\x001\x001\x001\x001\x001\x001\x001\x001\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff=\0=\0\xff\xff\xff\xff=\0=\0=\0\xff\xff\xff\xff\xff\xff=\0=\0\xff\xff=\0=\0=\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff=\x001\0=\0=\0=\0=\0=\x001\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff>\x001\0\xff\xff>\0\xff\xff1\0\xff\xff1\0\xff\xff\xff\xff\xff\xff1\0\xff\xff\xff\xff\xff\xff\xff\xff=\0\xff\xff=\0\xff\xff\xff\xff\xff\xff\xff\xff>\0>\0\xff\xff\xff\xff>\0>\0>\0\xff\xff\xff\xff>\0>\0>\0\xff\xff>\0>\0>\0?\0\xff\xff\xff\xff?\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff=\0>\0=\0>\0>\0>\0>\0>\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff?\0?\0\xff\xff\xff\xff?\0?\0?\0\xff\xff\xff\xff?\0?\0?\0\xff\xff?\0?\0?\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff>\0\xff\xff>\0\xff\xff\xff\xff?\0\xff\xff?\0?\0?\0?\0?\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff@\0\xff\xff\xff\xff@\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff>\0\xff\xff>\0\xff\xff\xff\xff\xff\xff\xff\xff?\0\xff\xff?\0\xff\xff\xff\xff\xff\xff\xff\xff@\0@\0\xff\xff\xff\xff@\0@\0@\0\xff\xff\xff\xff@\0@\0@\0\xff\xff@\0@\0@\0A\0\xff\xff1\0A\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff?\0@\0?\0@\0@\0@\0@\0@\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffA\0A\0\xff\xff\xff\xffA\0A\0A\0\xff\xffA\0A\0A\0A\0\xff\xffA\0A\0A\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff@\0\xff\xff@\0D\0D\0A\0D\0A\0A\0A\0A\0A\0D\0D\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffD\0\xff\xffD\0D\0D\0\xff\xffD\0\xff\xff@\0\xff\xff@\0\xff\xff\xff\xff\xff\xffA\0A\0\xff\xffA\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffD\0\xff\xffF\0D\0\xff\xffF\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffA\0A\0\xff\xffA\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffF\0F\0\xff\xff\xff\xffF\0F\0F\0D\0D\0F\0F\0F\0\xff\xffF\0F\0F\0G\0\xff\xff\xff\xffG\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffF\0\xff\xffF\0F\0F\0F\0F\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffG\0G\0\xff\xff\xff\xffG\0G\0G\0\xff\xffG\0G\0G\0G\0\xff\xffG\0G\0G\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffF\0\xff\xffF\0\xff\xff\xff\xffG\0\xff\xffG\0G\0G\0G\0G\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffH\0\xff\xff\xff\xffH\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffF\0\xff\xffF\0\xff\xff\xff\xff\xff\xffG\0G\0\xff\xffG\0\xff\xff\xff\xff\xff\xff\xff\xffH\0H\0\xff\xff\xff\xffH\0H\0H\0\xff\xff\xff\xff\xff\xffH\0H\0\xff\xffH\0H\0H\0L\0\xff\xff\xff\xffL\0\xff\xff\xff\xff\xff\xff\xff\xffG\0G\0H\0G\0H\0H\0H\0H\0H\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffL\0L\0\xff\xff\xff\xffL\0L\0L\0\xff\xff\xff\xffL\0L\0L\0\xff\xffL\0L\0L\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffH\0\xff\xffH\0\xff\xff\xff\xffL\0\xff\xffL\0L\0L\0L\0L\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffM\0\xff\xff\xff\xffM\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffH\0\xff\xffH\0\xff\xff\xff\xff\xff\xff\xff\xffL\0\xff\xffL\0\xff\xff\xff\xff\xff\xff\xff\xffM\0M\0\xff\xff\xff\xffM\0M\0M\0\xff\xffM\0M\0M\0M\0\xff\xffM\0M\0M\0N\0\xff\xff\xff\xffN\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffL\0M\0L\0M\0M\0M\0M\0M\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffN\0N\0\xff\xff\xff\xffN\0N\0N\0\xff\xff\xff\xffN\0N\0N\0\xff\xffN\0N\0N\0\xff\xff\xff\xff\xff\xff\xff\xffM\0M\0\xff\xffM\0\xff\xff\xff\xffN\0\xff\xffN\0N\0N\0N\0N\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffO\0\xff\xff\xff\xffO\0\xff\xff\xff\xff\xff\xff\xff\xffM\0M\0\xff\xffM\0\xff\xff\xff\xff\xff\xff\xff\xffN\0\xff\xffN\0\xff\xff\xff\xff\xff\xff\xff\xffO\0O\0\xff\xff\xff\xffO\0O\0O\0\xff\xff\xff\xffO\0O\0O\0\xff\xffO\0O\0O\0P\0\xff\xff\xff\xffP\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffN\0O\0N\0O\0O\0O\0O\0O\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffP\0P\0\xff\xff\xff\xffP\0P\0P\0\xff\xff\xff\xff\xff\xffP\0P\0\xff\xffP\0P\0P\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffO\0\xff\xffO\0\xff\xff\xff\xffP\0\xff\xffP\0P\0P\0P\0P\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffU\0U\0\xff\xff\xff\xffU\0\xff\xff\xff\xff\xff\xff\xff\xffU\0U\0\xff\xff\xff\xffO\0\xff\xffO\0\xff\xff\xff\xff\xff\xff\xff\xffP\0U\0P\0U\0U\0U\0\xff\xffU\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffV\0\xff\xff\xff\xffV\0V\0V\0\xff\xff\xff\xffV\0V\0V\0\xff\xffV\0V\0V\0\xff\xff\xff\xff\xff\xff\xff\xffP\0\xff\xffP\0\xff\xffU\0U\0V\0\xff\xffV\0V\0V\0V\0V\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffW\0\xff\xff\xff\xffW\0W\0W\0\xff\xff\xff\xffW\0W\0W\0\xff\xffW\0W\0W\0\xff\xff\xff\xffU\0U\0\xff\xff\xff\xff\xff\xffV\0V\0V\0W\0\xff\xffW\0W\0W\0W\0W\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffX\0\xff\xff\xff\xffX\0X\0X\0\xff\xff\xff\xffX\0X\0X\0\xff\xffX\0X\0X\0\xff\xff\xff\xffV\0V\0V\0\xff\xff\xff\xffW\0W\0W\0X\0\xff\xffX\0X\0X\0X\0X\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffY\0\xff\xff\xff\xffY\0Y\0Y\0\xff\xff\xff\xffY\0Y\0Y\0\xff\xffY\0Y\0Y\0\xff\xff\xff\xffW\0W\0W\0\xff\xff\xff\xffX\0X\0X\0Y\0\xff\xffY\0Y\0Y\0Y\0Y\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffZ\0\xff\xff\xff\xffZ\0Z\0Z\0\xff\xff\xff\xffZ\0Z\0Z\0\xff\xffZ\0Z\0Z\0\xff\xff\xff\xffX\0X\0X\0\xff\xff\xff\xffY\0Y\0Y\0Z\0\xff\xffZ\0Z\0Z\0Z\0Z\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff[\0\xff\xff\xff\xff[\0[\0[\0\xff\xff\xff\xff\xff\xff[\0[\0\xff\xff[\0[\0[\0\xff\xff\xff\xffY\0Y\0Y\0\xff\xff\xff\xffZ\0Z\0Z\0[\0\xff\xff[\0[\0[\0[\0[\0\xff\xff\xff\xff\xff\xff\\\0\xff\xff\xff\xff\\\0\\\0\\\0\xff\xff\xff\xff\\\0\\\0\\\0\xff\xff\\\0\\\0\\\0\xff\xff\xff\xff\xff\xff\xff\xffZ\0Z\0Z\0\xff\xff\xff\xff[\0\\\0[\0\\\0\\\0\\\0\\\0\\\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff]\0\xff\xff\xff\xff]\0]\0]\0\xff\xff\xff\xff]\0]\0]\0\xff\xff]\0]\0]\0\xff\xff\xff\xff\xff\xff\xff\xff[\0\xff\xff[\0\\\0\\\0\\\0]\0\xff\xff]\0]\0]\0]\0]\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff^\0\xff\xff\xff\xff^\0^\0^\0\xff\xff\xff\xff^\0^\0^\0\xff\xff^\0^\0^\0\xff\xff\xff\xff\\\0\\\0\\\0\xff\xff\xff\xff]\0]\0]\0^\0\xff\xff^\0^\0^\0^\0^\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff_\0_\0\xff\xff\xff\xff_\0\xff\xff\xff\xff\xff\xff\xff\xff_\0_\0\xff\xff\xff\xff]\0]\0]\0\xff\xff\xff\xff^\0^\0^\0_\0\xff\xff_\0_\0_\0\xff\xff_\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff`\0\xff\xff\xff\xff`\0`\0`\0\xff\xff\xff\xff`\0`\0`\0\xff\xff`\0`\0`\0\xff\xff\xff\xff^\0^\0^\0\xff\xff\xff\xff\xff\xff_\0_\0`\0\xff\xff`\0`\0`\0`\0`\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffa\0a\0\xff\xff\xff\xffa\0\xff\xff\xff\xff\xff\xff\xff\xffa\0a\0\xff\xff\xff\xff_\0_\0\xff\xff\xff\xff\xff\xff`\0`\0`\0a\0\xff\xffa\0a\0a\0\xff\xffa\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffb\0\xff\xff\xff\xffb\0b\0b\0\xff\xff\xff\xffb\0b\0b\0\xff\xffb\0b\0b\0\xff\xff\xff\xff`\0`\0`\0\xff\xff\xff\xff\xff\xffa\0a\0b\0\xff\xffb\0b\0b\0b\0b\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffc\0\xff\xff\xff\xffc\0c\0c\0\xff\xff\xff\xffc\0c\0c\0\xff\xffc\0c\0c\0\xff\xff\xff\xffa\0a\0\xff\xff\xff\xff\xff\xffb\0b\0b\0c\0\xff\xffc\0c\0c\0c\0c\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffn\0n\0\xff\xff\xff\xffn\0\xff\xff\xff\xffo\0o\0n\0n\0o\0\xff\xffb\0b\0b\0o\0o\0c\0c\0c\0n\0\xff\xffn\0n\0n\0\xff\xffn\0o\0\xff\xffo\0o\0o\0\xff\xffo\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffp\0p\0\xff\xff\xff\xffp\0\xff\xffc\0c\0c\0p\0p\0\xff\xffn\0n\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffo\0o\0p\0\xff\xffp\0p\0p\0\xff\xffp\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffq\0q\0\xff\xff\xff\xffq\0\xff\xffn\0n\0\xff\xffq\0q\0\xff\xff\xff\xffo\0o\0\xff\xff\xff\xff\xff\xff\xff\xffp\0p\0q\0\xff\xffq\0q\0q\0\xff\xffq\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffr\0r\0\xff\xff\xff\xffr\0\xff\xff\xff\xffs\0s\0r\0r\0s\0\xff\xffp\0p\0\xff\xffs\0s\0\xff\xffq\0q\0r\0\xff\xffr\0r\0r\0\xff\xffr\0s\0\xff\xffs\0s\0s\0\xff\xffs\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffv\0v\0\xff\xffv\0\xff\xff\xff\xffq\0q\0\xff\xffv\0v\0\xff\xffr\0r\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffs\0s\0v\0\xff\xffv\0v\0v\0\xff\xffv\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffx\0x\0\xff\xffx\0\xff\xff\xff\xffr\0r\0\xff\xffx\0x\0\xff\xff\xff\xffs\0s\0\xff\xff\xff\xffv\0\xff\xff\xff\xffv\0x\0\xff\xffx\0x\0x\0\xff\xffx\0\xff\xff\xff\xff\xff\xffy\0\xff\xff\xff\xffy\0y\0y\0\xff\xff\xff\xffy\0y\0y\0\xff\xffy\0y\0y\0\xff\xff\xff\xff\xff\xffv\0v\0\xff\xff\xff\xff\xff\xffx\0\xff\xffy\0x\0y\0y\0y\0y\0y\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffz\0\xff\xff\xff\xffz\0z\0z\0\xff\xff\xff\xffz\0z\0z\0\xff\xffz\0z\0z\0\xff\xff\xff\xff\xff\xffx\0x\0\xff\xff\xff\xffy\0y\0y\0z\0\xff\xffz\0z\0z\0z\0z\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff{\0\xff\xff\xff\xff{\0{\0{\0\xff\xff\xff\xff{\0{\0{\0\xff\xff{\0{\0{\0\xff\xff\xff\xffy\0y\0y\0\xff\xff\xff\xffz\0z\0z\0{\0\xff\xff{\0{\0{\0{\0{\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff|\0\xff\xff\xff\xff|\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffz\0z\0z\0\xff\xff\xff\xff{\0{\0{\0\xff\xff|\0\xff\xff\xff\xff\xff\xff\xff\xff|\0|\0\xff\xff|\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff|\0\xff\xff{\0{\0{\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0\xff\xff\xff\xff\xff\xff\xff\xff|\0\xff\xff|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0\xff\xff|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0|\0\xff\xff|\0|\0|\0|\0|\0|\0|\0|\0|\0\x83\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\xff\xff\xff\xff\xff\xff\xff\xff\x83\0\xff\xff\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\xff\xff\xff\xff\xff\xff\xff\xff\x8a\0\xff\xff\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\xff\xff\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\xff\xff\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x83\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\xff\xff\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\xff\xff\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8a\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\xff\xff\xff\xff\xff\xff\xff\xff\x8b\0\xff\xff\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\xff\xff\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\xff\xff\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8b\0\x8c\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x8c\0\xff\xff\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\xff\xff\xff\xff\x8c\0\xff\xff\xff\xff\xff\xff\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\xff\xff\xff\xff\xff\xff\xff\xff\x8c\0\xff\xff\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\xff\xff\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8d\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8c\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\xff\xff\xff\xff\x8d\0\xff\xff\xff\xff\xff\xff\xff\xff\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\xff\xff\xff\xff\xff\xff\xff\xff\x8d\0\xff\xff\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\xff\xff\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\xff\xff\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8d\0\x8e\0\xff\xff\x8e\0\xff\xff\xff\xff\xa5\0\xff\xff\x8e\0\xa5\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x8e\0\x8e\0\x8e\0\x8e\0\x8e\0\x8e\0\x8e\0\x8e\0\x8e\0\x8e\0\xff\xff\xa5\0\xff\xff\xa5\0\xff\xff\xff\xff\xff\xff\xff\xff\xa5\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xa5\0\xa5\0\xa5\0\xa5\0\xa5\0\xa5\0\xa5\0\xa5\0\xa5\0\xa5\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x8e\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x8e\0\xb1\0\xff\xff\xff\xff\xb1\0\xb1\0\xb1\0\xff\xff\xff\xff\xff\xff\xb1\0\xb1\0\x8e\0\xb1\0\xb1\0\xb1\0\x8e\0\xff\xff\x8e\0\xff\xff\xff\xff\xa5\0\x8e\0\xff\xff\xff\xff\xff\xff\xb1\0\xa5\0\xb1\0\xb1\0\xb1\0\xb1\0\xb1\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xa5\0\xff\xff\xff\xff\xff\xff\xa5\0\xff\xff\xa5\0\xff\xff\xff\xff\xff\xff\xa5\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb1\0\xff\xff\xb1\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb2\0\xff\xff\xff\xff\xb2\0\xb2\0\xb2\0\xff\xff\xff\xff\xff\xff\xb2\0\xb2\0\xff\xff\xb2\0\xb2\0\xb2\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb1\0\xb2\0\xb1\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xff\xff\xb2\0\xff\xff\xb2\0\xb2\0\xff\xff\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xff\xff\xb2\0\xff\xff\xb2\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xa5\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xff\xff\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xff\xff\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb2\0\xb3\0\xff\xff\xff\xff\xb3\0\xb3\0\xb3\0\xff\xff\xff\xff\xff\xff\xb3\0\xb3\0\xff\xff\xb3\0\xb3\0\xb3\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb3\0\xff\xff\xb3\0\xb3\0\xb3\0\xb3\0\xb3\0\xff\xff\xff\xff\xff\xff\xff\xff\xb4\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xff\xff\xff\xff\xb4\0\xff\xff\xb3\0\xff\xff\xb3\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xff\xff\xff\xff\xff\xff\xb3\0\xb4\0\xb3\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xff\xff\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xff\xff\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb6\0\xff\xff\xff\xff\xb6\0\xb6\0\xb6\0\xff\xff\xff\xff\xff\xff\xb6\0\xb6\0\xff\xff\xb6\0\xb6\0\xb6\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb6\0\xff\xff\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xff\xff\xb6\0\xff\xff\xb6\0\xb6\0\xff\xff\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xff\xff\xb6\0\xff\xff\xb6\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xff\xff\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xff\xff\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb7\0\xff\xff\xff\xff\xb7\0\xb7\0\xb7\0\xff\xff\xff\xff\xff\xff\xb7\0\xb7\0\xff\xff\xb7\0\xb7\0\xb7\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb7\0\xff\xff\xb7\0\xb7\0\xb7\0\xb7\0\xb7\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb8\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb8\0\xff\xff\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xff\xff\xb7\0\xb8\0\xb7\0\xff\xff\xff\xff\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb7\0\xff\xff\xb7\0\xff\xff\xb8\0\xff\xff\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xff\xff\xff\xff\xff\xff\xff\xff\xb9\0\xff\xff\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xff\xff\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xff\xff\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xff\xff\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xbb\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xff\xff\xff\xff\xbb\0\xff\xff\xff\xff\xff\xff\xff\xff\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xff\xff\xff\xff\xff\xff\xff\xff\xbb\0\xff\xff\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xff\xff\xff\xff\xff\xff\xff\xff\xc5\0\xff\xff\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xff\xff\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xff\xff\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xbb\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xff\xff\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xff\xff\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xff\xff\xff\xff\xff\xff\xff\xff\xc6\0\xff\xff\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xff\xff\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xff\xff\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc7\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xc7\0\xff\xff\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xff\xff\xff\xff\xc7\0\xff\xff\xff\xff\xff\xff\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xff\xff\xff\xff\xff\xff\xff\xff\xc7\0\xff\xff\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xff\xff\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc8\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xff\xff\xff\xff\xc8\0\xff\xff\xff\xff\xff\xff\xff\xff\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xff\xff\xff\xff\xff\xff\xff\xff\xc8\0\xff\xff\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xff\xff\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xff\xff\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xc8\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xff\xff\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xca\0\xca\0\xca\0\xca\0\xff\xff\xca\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xca\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xca\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xca\0\xce\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xca\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xff\xff\xff\xff\xff\xff\xff\xff\xce\0\xff\xff\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xff\xff\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xff\xff\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xce\0\xcf\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xcf\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xcf\0\xff\xff\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xff\xff\xff\xff\xff\xff\xff\xff\xcf\0\xff\xff\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xff\xff\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xd2\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xcf\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xff\xff\xff\xff\xff\xff\xff\xff\xd2\0\xff\xff\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xff\xff\xff\xff\xff\xff\xff\xff\xdb\0\xff\xff\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xff\xff\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xff\xff\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xd2\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xff\xff\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xff\xff\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdb\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xff\xff\xff\xff\xff\xff\xff\xff\xdc\0\xff\xff\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xff\xff\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xff\xff\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdc\0\xdd\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xdd\0\xff\xff\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xff\xff\xff\xff\xdd\0\xff\xff\xff\xff\xff\xff\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xff\xff\xff\xff\xff\xff\xff\xff\xdd\0\xff\xff\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xff\xff\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xde\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xdd\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xff\xff\xff\xff\xde\0\xff\xff\xff\xff\xff\xff\xff\xff\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xff\xff\xff\xff\xff\xff\xff\xff\xde\0\xff\xff\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xff\xff\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xff\xff\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xde\0\xff\xff"),a('\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1b\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0B\0e\0\x88\0\xab\0\xce\0\0\0\0\0\0\0\0\0\xf1\0\x14\x017\x01\0\0\0\0\x12\0Z\x01}\x01\xa0\x01\xc3\x01\xe6\x01\0\0\x15\0\x1a\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf7\x01(\x02\0\0"\0\0\0\0\0\x03\0\0\0\0\x001\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0$\x02\0\0\xfd\x02\0\0\0\0\0\0=\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0'),a('\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"\0\0\0\0\0\0\0\0\0\0\x001\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0=\0=\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0'),aa("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0:\0:\0\0\0:\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\x01\0\x07\0,\0\0\0\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\x04\0\x04\0\x04\0\x04\0\x04\0\x04\0\x04\0\x04\0\x04\0\0\0\x07\0\f\0\0\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\0\0\f\0\0\0\f\0\f\0\f\0\x07\0\0\0\0\0\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0\f\0\f\0\f\0\f\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\x07\0\x0f\0\0\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\x0f\0\x0f\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0\f\0\0\0\0\0\x0f\0\0\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\f\0\0\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\f\0\0\0\f\0\f\0\f\0\0\0\0\0\f\0\0\0\f\0\0\0\0\0\0\0\0\0\x0f\0\f\0\x0f\0\f\0\f\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\0\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\f\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x0f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\0\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\f\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\0\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\f\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\0\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\f\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\0\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\f\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\0\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\f\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\0\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\f\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\0\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\f\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\0\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\f\0\f\0\0\0\f\0\f\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\0\0\0\0\0\0\x0f\0\0\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\x0f\0\x0f\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0\f\0\f\0\x0f\0\f\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\x0f\0\0\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\x0f\0\x0f\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\x1d\0\0\0\0\0\f\0\0\0\f\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\x04\0\x04\0\x04\0\x04\0\x04\0\x04\0\x04\0\x04\0\x04\0\x04\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x0f\0\x0f\0\0\0\x0f\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\x04\0\x04\0\x04\0\x04\0\x04\0\x04\0\x04\0\x04\0\x04\0\x0f\0\0\0\x0fa("\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\0i\0\xa5\0\xab\0i\0\xa5\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\0\xff\xffi\0\0\0\x13\0j\0\xff\xff\x13\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\xff\xff\x13\0\x13\0\xff\xff\xff\xff\x13\0\x13\0\x13\0\xff\xff\xff\xff\xff\xff\xff\xff\x13\0\xff\xff\x13\0\x13\0\x13\0=\0\xff\xff\xff\xff=\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x13\0\xff\xff\x13\0\x13\0\x13\0\x13\0\x13\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff=\0=\0\xff\xff\xff\xff=\0=\0=\0\xff\xff\xff\xff\xff\xff=\0=\0\xff\xff=\0=\0=\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x13\0\xff\xff\x13\0\xff\xff\xff\xff=\0\xff\xff=\0=\0=\0=\0=\0\xff\xff\xff\xff\xff\xff>\0\xff\xff\xff\xff>\0>\0>\0\xff\xff\xff\xff\xff\xff>\0>\0\xff\xff>\0>\0>\0\xff\xff\xff\xff\x13\0\xff\xff\x13\0\xff\xff\xff\xff\xff\xff\xff\xff=\0>\0=\0>\0>\0>\0>\0>\0\xff\xff\xff\xff\xff\xff?\0\xff\xff\xff\xff?\0?\0?\0\xff\xff\xff\xff\xff\xff?\0?\0\xff\xff?\0?\0?\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff=\0\xff\xff=\0>\0?\0>\0?\0?\0?\0?\0?\0\xff\xff\xff\xff\xff\xff@\0\xff\xff\xff\xff@\0@\0@\0\xff\xff\xff\xff\xff\xff@\0@\0\xff\xff@\0@\0@\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff>\0\xff\xff>\0?\0@\0?\0@\0@\0@\0@\0@\0\xff\xff\xff\xff\xff\xffA\0\xff\xff\xff\xffA\0A\0A\0\xff\xff\xff\xff\xff\xffA\0A\0\xff\xffA\0A\0A\0\xff\xff\xff\xffi\0\xff\xff\xff\xff\xff\xff?\0\xff\xff?\0@\0A\0@\0A\0A\0A\0A\0A\0\xff\xff\xff\xff\xff\xffF\0\xff\xff\xff\xffF\0F\0F\0\xff\xff\xff\xff\xff\xffF\0F\0\xff\xffF\0F\0F\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff@\0\xff\xff@\0A\0F\0A\0F\0F\0F\0F\0F\0\xff\xff\xff\xff\xff\xffG\0\xff\xff\xff\xffG\0G\0G\0\xff\xff\xff\xff\xff\xffG\0G\0\xff\xffG\0G\0G\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffA\0\xff\xffA\0F\0G\0F\0G\0G\0G\0G\0G\0\xff\xff\xff\xff\xff\xffH\0\xff\xff\xff\xffH\0H\0H\0\xff\xff\xff\xff\xff\xffH\0H\0\xff\xffH\0H\0H\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffF\0\xff\xffF\0G\0H\0G\0H\0H\0H\0H\0H\0\xff\xff\xff\xff\xff\xffL\0\xff\xff\xff\xffL\0L\0L\0\xff\xff\xff\xff\xff\xffL\0L\0\xff\xffL\0L\0L\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffG\0\xff\xffG\0H\0L\0H\0L\0L\0L\0L\0L\0\xff\xff\xff\xff\xff\xffM\0\xff\xff\xff\xffM\0M\0M\0\xff\xff\xff\xff\xff\xffM\0M\0\xff\xffM\0M\0M\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffH\0\xff\xffH\0L\0M\0L\0M\0M\0M\0M\0M\0\xff\xff\xff\xff\xff\xffN\0\xff\xff\xff\xffN\0N\0N\0\xff\xff\xff\xff\xff\xffN\0N\0\xff\xffN\0N\0N\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffL\0\xff\xffL\0M\0N\0M\0N\0N\0N\0N\0N\0\xff\xff\xff\xff\xff\xffO\0\xff\xff\xff\xffO\0O\0O\0\xff\xff\xff\xff\xff\xffO\0O\0\xff\xffO\0O\0O\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffM\0\xff\xffM\0N\0O\0N\0O\0O\0O\0O\0O\0\xff\xff\xff\xff\xff\xffP\0\xff\xff\xff\xffP\0P\0P\0\xff\xff\xff\xff\xff\xffP\0P\0\xff\xffP\0P\0P\0\xff\xff\xff\xff\xff\xffd\0\xff\xff\xff\xffN\0\xff\xffN\0O\0P\0O\0P\0P\0P\0P\0P\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0e\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffO\0\xff\xffO\0P\0\xff\xffP\0\xff\xff\xff\xff\xff\xffe\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffe\0e\0e\0e\0e\0e\0e\0e\0e\0e\0P\0\xff\xffP\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xff\xff\xff\xff\xff\xff\xff\xff\xb6\0\xff\xff\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xff\xff\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xff\xff\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb8\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb8\0\xff\xff\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xff\xff\xff\xff\xff\xff\xff\xff\xb8\0\xff\xff\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xff\xff\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xff\xff\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xff\xff"),a("\xff\x04\xff\xff\t\xff\xff\x06\xff\x05\xff\xff\x07\xff\xff\b\xff\xff\0\x07\xff\0\x06\x01\b\xff\0\x05\xff\x0b\xff\n\xff\xff\x03\xff\0\x04\x01\t\xff\x0b\xff\xff\n\xff\x0b\xff\xff\0\x04\x01\t\x03\n\x02\x0b\xff\x01\xff\xff\0\x01\xff")],bSp=[15,[12,41,[17,0,[17,[0,a(i),1,0],0]]]],bSq=[17,[0,a(i),1,0],[15,[17,0,0]]],bSr=[17,0,[17,0,0]],bSs=[11,a(j),0],bSt=[15,[17,0,[17,[0,a(i),1,0],[18,[1,[0,[11,a(j),0],a(j)]],[11,a(rj),[17,[0,a(i),1,0],[15,[17,0,[17,0,0]]]]]]]]],bSu=[0,a(i),1,0],bSv=[17,0,[17,[0,a(i),1,0],[11,a(em),[17,0,0]]]],bSw=[17,0,[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[11,a(em),[17,0,0]]]]]]],bSx=[11,a(j),0],bSy=[15,[17,0,0]],bSz=[0,a(i),1,0],bSA=[11,a(ay),0],bSB=[15,[17,0,[17,0,0]]],bSC=[0,a(i),1,0],bSD=[0,[11,a(j),0],a(j)],bSE=[17,[0,a(i),1,0],[15,[17,0,0]]],bSF=[17,0,0],bSG=[11,a(bW),0],bSH=[17,0,[17,0,0]],bSI=[17,0,0],bSJ=[17,[0,a(i),1,0],[15,[17,[0,a(i),1,0],[11,a(wW),[17,0,[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[11,a(wJ),[17,0,0]]]]]]]]]]],bSK=[17,0,[17,[0,a(i),1,0],[12,cW,[17,0,0]]]],bSL=[17,0,0],bSM=[17,0,0],bSN=[15,[12,41,[17,0,[17,0,0]]]],bSO=[0,a(i),1,0],bSP=[12,62,[17,0,0]],bSQ=[0,a(i),1,0],bSR=[12,93,0],bSS=[0,a(i),1,0],bST=[14,0,0,[17,0,0]],bSU=[14,0,0,[17,0,0]],bSV=[14,0,0,[17,0,0]],bSW=[11,a(a7),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]],bSX=[14,0,0,[17,0,0]],bSY=[17,0,0],bSZ=[17,0,[17,[0,a(i),1,0],[11,a(cQ),[17,[0,a(i),1,0],[15,[17,0,0]]]]]],bS0=[11,a(w6),[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[11,a(em),[17,0,0]]]]]]],bS1=[1,[0,[11,a(ay),0],a(ay)]],bS2=[17,0,[17,[0,a(i),1,0],[11,a(cQ),[17,[0,a(i),1,0],[15,[17,0,0]]]]]],bS3=[17,0,0],bS4=[17,0,0],bS5=[17,0,[17,[0,a(i),1,0],[11,a(em),[17,0,0]]]],bS6=[15,0],bS7=[0,a(i),1,0],bS8=[17,0,[17,[0,a(i),1,0],[11,a(em),[17,0,0]]]],bS9=[17,0,0],bS_=[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]],bS$=[17,0,0],bTa=[17,0,0],Gz=[0,a("asr"),[0,a("land"),[0,a("lor"),[0,a("lsl"),[0,a("lsr"),[0,a("lxor"),[0,a("mod"),[0,a(zb),0]]]]]]]],bTb=[17,0,0],bTc=[12,93,0],bTd=[0,a(i),1,0],bTe=[12,93,0],bTf=[0,a(ba),0,0],bTg=[17,0,0],GB=a(q),GK=a('"\\'),GM=[0,[3,0,[10,0]],a("%S%!")],bTh=[10,0],HR=[0,0],GT=[0,a("chars")],GU=[0,a("_const_params"),a("_const_nonterm")],GV=[0,a(ag2),a(ae$)],kW=[0,a(OL),a(Nm),a(amD),a(aoT),a(afr),a(ZC),a(XR),a(_I),a(W$),a(Na),a(S$),a(Mh),a(adJ),a(KE),a(ajM)],GW=[0,a("test"),a(dj)],GX=[0,a(ef)],GY=[0,a(ae$),a(ag2)],kX=[0,a(W$),a(_I),a(afr),a(KE),a(XR),a(S$),a(Nm),a(ZC),a(Na),a(amD),a(aoT),a(adJ),a(Mh),a(OL),a(ajM)],oe=[0,a(Aq)],kY=[0,a("_const_fParam"),a("_const_fMemo"),a("_const_fVoid"),a("_const_fEmpty"),a("_const_fExternal"),a("_const_fNonterm"),a("_const_fConcat"),a("_const_fChoice"),a("_const_fOption"),a("_const_fLookahead"),a("_const_fNeg"),a("_const_fString"),a("_const_fTest"),a("_const_fCharClass"),a("_const_fAnyChar")],GZ=[0,a("id")],G0=[0,a("name"),a(ju)],gM=[0,a(dj)],H4=a(vI),op=a("\xe2\x81\xbf\xe2\x81\xbf"),u3=a("pattToExpr"),Jy=a("pattern unification");eq(11,Cg,xM);eq(10,r,A0);eq(9,tv,xo);eq(8,Cf,wL);eq(7,bG,qk);eq(6,x,yb);eq(5,[N,a(yT),-6],yT);eq(4,d3,zf);eq(3,ct,wC);eq(2,bz,ze);eq(1,sI,Av);eq(0,sa,xH);var
apQ=a("%,"),apO=a("really_input"),apN=a(zM),apM=[0,0,[0,6,0]],apK=a("output_substring"),apJ=a(xL),apH=[0,1,[0,3,[0,4,[0,6,0]]]],apG=[0,1,[0,3,[0,4,[0,7,0]]]],apF=a(z8),apE=a(as),apC=a(fo),apD=a(eh),apB=a("char_of_int"),apA=a("Pervasives.Exit"),apT=a("List.map2"),apU=a("List.iter2"),apX=[0,a("list.ml"),ye,11],apS=a("tl"),apR=a("hd"),apZ=a(MX),ap0=a("\\'"),ap1=a("\\b"),ap2=a("\\t"),ap3=a("\\n"),ap4=a("\\r"),apY=a("Char.chr"),ap8=a("String.blit / Bytes.blit_string"),ap7=a("Bytes.blit"),ap6=a("String.sub / Bytes.sub"),aqe=a("String.contains_from / Bytes.contains_from"),aqb=a("String.index_from / Bytes.index_from"),ap$=a(q),ap_=a("String.concat"),aqk=[0,a("array.ml"),h2,4],aqi=a("Array.blit"),aqh=a("Array.init"),aqj=a("Array.Bottom"),aqp=a(jG),aqy=a(jG),aqw=[at,0,0,0],aqu=[at,1,0,0],aqs=[at,1,0,0],aqE=a(jG),aqG=a("Lexing.lex_refill: cannot grow buffer"),aqM=a(_R),aqN=[0,0,0,0],aqO=[0,0,0],aqP=[0,a("set.ml"),xJ,18],aqI=a(g5),aqJ=a(g5),aqK=a(g5),aqL=a(g5),aqU=a("Map.remove_min_elt"),aqV=[0,0,0,0],aqW=[0,a("map.ml"),qR,10],aqX=[0,0,0],aqQ=a(gZ),aqR=a(gZ),aqS=a(gZ),aqT=a(gZ),aqY=a("Queue.Empty"),aqZ=a("CamlinternalLazy.Undefined"),aq6=[0,a($h),53,12],aq7=[0,0],aq8=[0,a($h),82,12],aq3=a("Stream.Failure"),aq4=a("Stream.Error"),aq$=a("Buffer.add_substring/add_subbytes"),aq_=a("Buffer.add: cannot grow buffer"),aq9=a("Buffer.sub"),arj=a("%c"),ark=a(cA),arl=a(y_),arm=a(aif),arn=a(Qz),aro=a(alk),arp=a(US),arq=a("%B"),arr=a("%{"),ars=a("%}"),art=a("%("),aru=a("%)"),arv=a(dw),arw=a("%t"),arx=a("%?"),ary=a("%r"),arz=a("%_r"),arA=[0,a(bM),845,23],arL=[0,a(bM),809,21],arD=[0,a(bM),810,21],arM=[0,a(bM),813,21],arE=[0,a(bM),814,21],arN=[0,a(bM),817,19],arF=[0,a(bM),818,19],arO=[0,a(bM),821,22],arG=[0,a(bM),822,22],arP=[0,a(bM),826,30],arH=[0,a(bM),827,30],arJ=[0,a(bM),831,26],arB=[0,a(bM),832,26],arK=[0,a(bM),841,28],arC=[0,a(bM),842,28],arI=[0,a(bM),846,23],asT=a(L8),asR=[0,a(bM),N8,4],asS=a("Printf: bad conversion %["),asU=[0,a(bM),1588,39],asV=[0,a(bM),ai5,31],asW=[0,a(bM),1612,31],asX=a("Printf: bad conversion %_"),asZ=[0,a(bM),alx,8],as0=a(aaA),as1=a(vY),as2=a(aaA),as3=a(vY),at6=[0,[11,a("bad input: format type mismatch between "),[3,0,[11,a(amA),[3,0,0]]]],a("bad input: format type mismatch between %S and %S")],atg=[0,[11,a(fA),[3,0,[11,a(h7),[4,0,0,0,[11,a(", duplicate flag "),[1,0]]]]]],a("invalid format %S: at character number %d, duplicate flag %C")],atj=a(cV),ath=a("padding"),ati=[0,1,0],atk=[0,0],atl=a(zQ),atn=[1,0],atm=[1,1],atx=a(aeK),atu=a("'-'"),atv=a("'0'"),atw=a(aeK),atr=a(cV),ats=[1,1],att=a(cV),ato=a(zQ),atp=[1,1],atq=a(zQ),atI=[0,[11,a(fA),[3,0,[11,a(h7),[4,0,0,0,[11,a(", flag "),[1,[11,a(" is only allowed after the '"),[12,37,[11,a("', before padding and precision"),0]]]]]]]]],a("invalid format %S: at character number %d, flag %C is only allowed after the '%%', before padding and precision")],aty=[0,[11,a(fA),[3,0,[11,a(h7),[4,0,0,0,[11,a(', invalid conversion "'),[12,37,[0,[12,34,0]]]]]]]],a('invalid format %S: at character number %d, invalid conversion "%%%c"')],atz=a(jH),atA=a(alU),atB=a(xh),atC=[0,0],atD=a("`padding'"),atE=[0,0],atF=a("`precision'"),atG=a(jH),atH=a("'_'"),atJ=[0,[12,64,0]],atK=[0,a(i),1,0],atL=[0,a(ba),0,0],atM=[0,a("@;"),1,0],atN=[2,60],atO=[0,[11,a(fA),[3,0,[11,a(": '"),[12,37,[11,a("' alone is not accepted in character sets, use "),[12,37,[12,37,[11,a(" instead at position "),[4,0,0,0,[12,46,0]]]]]]]]]],a("invalid format %S: '%%' alone is not accepted in character sets, use %%%% instead at position %d.")],atP=[0,[11,a(fA),[3,0,[11,a(": integer "),[4,0,0,0,[11,a(" is greater than the limit "),[4,0,0,0,0]]]]]],a("invalid format %S: integer %d is greater than the limit %d")],atR=a("digit"),atQ=[0,a(bM),2796,11],atS=[0,[11,a(fA),[3,0,[11,a(': unclosed sub-format, expected "'),[12,37,[0,[11,a('" at character number '),[4,0,0,0,0]]]]]]],a('invalid format %S: unclosed sub-format, expected "%%%c" at character number %d')],atT=a("character ')'"),atU=a("character '}'"),atV=[0,a(bM),aaE,34],at0=a(alU),atZ=a(jH),atY=a(jH),atX=a(xh),atW=[0,a(bM),aib,28],at4=a(jH),at3=a(jH),at2=a(xh),at1=[0,a(bM),2925,25],at5=[0,[11,a(fA),[3,0,[11,a(h7),[4,0,0,0,[11,a(eU),[2,0,[11,a(" is incompatible with '"),[0,[11,a("' in sub-format "),[3,0,0]]]]]]]]]],a("invalid format %S: at character number %d, %s is incompatible with '%c' in sub-format %S")],atf=[0,[11,a(fA),[3,0,[11,a(h7),[4,0,0,0,[11,a(eU),[2,0,[11,a(" expected, read "),[1,0]]]]]]]],a("invalid format %S: at character number %d, %s expected, read %C")],ate=[0,[11,a(fA),[3,0,[11,a(h7),[4,0,0,0,[11,a(", '"),[0,[11,a("' without "),[2,0,0]]]]]]]],a("invalid format %S: at character number %d, '%c' without %s")],atd=a("non-zero widths are unsupported for %c conversions"),atc=a("unexpected end of format"),atb=[0,[11,a(fA),[3,0,[11,a(h7),[4,0,0,0,[11,a(eU),[2,0,0]]]]]],a("invalid format %S: at character number %d, %s")],as6=[0,[11,a("invalid box description "),[3,0,0]],a("invalid box description %S")],as4=a(q),as5=[0,0,4],as7=a(q),as8=a(gb),as9=a(ia),as_=a("hov"),as$=a("hv"),ata=a("v"),asN=a(qJ),asO=a(as),asL=a(aat),asM=a(A3),asG=a(z8),ast=a("%nd"),asu=a("%+nd"),asv=a("% nd"),asw=a(Qz),asx=a("%+ni"),asy=a("% ni"),asz=a("%nx"),asA=a("%#nx"),asB=a("%nX"),asC=a("%#nX"),asD=a("%no"),asE=a("%#no"),asF=a("%nu"),asg=a("%ld"),ash=a("%+ld"),asi=a("% ld"),asj=a(aif),ask=a("%+li"),asl=a("% li"),asm=a("%lx"),asn=a("%#lx"),aso=a("%lX"),asp=a("%#lX"),asq=a("%lo"),asr=a("%#lo"),ass=a("%lu"),ar5=a("%Ld"),ar6=a("%+Ld"),ar7=a("% Ld"),ar8=a(alk),ar9=a("%+Li"),ar_=a("% Li"),ar$=a("%Lx"),asa=a("%#Lx"),asb=a("%LX"),asc=a("%#LX"),asd=a("%Lo"),ase=a("%#Lo"),asf=a("%Lu"),arS=a(jG),arT=a("%+d"),arU=a("% d"),arV=a(y_),arW=a("%+i"),arX=a("% i"),arY=a("%x"),arZ=a("%#x"),ar0=a("%X"),ar1=a("%#X"),ar2=a("%o"),ar3=a("%#o"),ar4=a(L8),arb=a(lU),arc=a("@}"),ard=a("@?"),are=a("@\n"),arf=a(ac4),arg=a("@@"),arh=a("@%"),ari=a(xF),arQ=a("CamlinternalFormat.Type_mismatch"),at7=a("Arg.Bad"),aua=a(q),aub=[0,[11,a(eU),[2,0,[2,0,0]]],a(", %s%s")],auh=a(zh),aui=a("Stack overflow"),auj=a("Pattern matching failed"),auk=a("Assertion failed"),aul=a("Undefined recursive module"),aud=[0,[12,40,[2,0,[2,0,[12,41,0]]]],a(Zg)],aue=a(q),auf=a(q),aug=[0,[12,40,[2,0,[12,41,0]]],a("(%s)")],at$=[0,[4,0,0,0,0],a(jG)],at9=[0,[3,0,0],a(o3)],at_=a(bb),aum=a(lZ),auy=[0,0],aur=[0,a("hashtbl.ml"),gj,23],bCk=a("OCAMLRUNPARAM"),bCi=a("CAMLRUNPARAM"),aun=a(q),auz=a("Weak.Make: hash bucket cannot grow more"),auS=[3,0,3],auT=a(as),auO=a(dU),auP=a("</"),auL=a(dU),auM=a(g9),auJ=a(el),auA=a("Format.Empty_queue"),auF=[0,a(q)],avJ=[0,91],avI=[0,ck],avK=a("end of input not found"),avL=a('scanf: bad conversion "%a"'),avM=a('scanf: bad conversion "%t"'),avN=a("scanf: missing reader"),avO=[0,a(Vf),1456,13],avP=a('scanf: bad conversion "%?" (custom converter)'),avQ=a(wV),avS=a(wV),avR=a('scanf: bad conversion "%-"'),avT=a(wV),avU=a(ch),avV=a(' in format "'),avH=[0,37,a(q)],avF=[0,[11,a("scanf: bad input at char number "),[4,3,0,0,[11,a(eT),[2,0,0]]]],a("scanf: bad input at char number %i: %s")],avD=[0,[11,a("the character "),[1,[11,a(" cannot start a boolean"),0]]],a("the character %C cannot start a boolean")],avy=[0,[11,a("bad character hexadecimal encoding \\"),[0,[0,0]]],a("bad character hexadecimal encoding \\%c%c")],avx=[0,[11,a("bad character decimal encoding \\"),[0,[0,[0,0]]]],a("bad character decimal encoding \\%c%c%c")],avs=a("an"),avu=a(lZ),avt=a("nfinity"),avi=a("digits"),avj=[0,[11,a(ahK),[1,[11,a(" is not a valid "),[2,0,[11,a(" digit"),0]]]]],a("character %C is not a valid %s digit")],avg=a("decimal digits"),avh=[0,[11,a(ahK),[1,[11,a(" is not a decimal digit"),0]]],a("character %C is not a decimal digit")],avc=a("0b"),avd=a("0o"),ave=a("0u"),avf=a(ys),avb=[0,a(Vf),pk,9],au_=a(eh),au$=a(fo),ava=[0,[11,a("invalid boolean '"),[2,0,[12,39,0]]],a("invalid boolean '%s'")],au8=[0,[11,a("looking for "),[1,[11,a(", found "),[1,0]]]],a("looking for %C, found %C")],au7=a("not a valid float in hexadecimal notation"),au6=a("no dot or exponent part found in float token"),au5=[0,[11,a(V$),[2,0,[11,a(" failed: premature end of file occurred before end of token"),0]]],a("scanning of %s failed: premature end of file occurred before end of token")],au4=[0,[11,a(V$),[2,0,[11,a(" failed: the specified length was too short for token"),0]]],a("scanning of %s failed: the specified length was too short for token")],au3=[0,[11,a("illegal escape character "),[1,0]],a("illegal escape character %C")],au1=a(bF),au2=a("Scanf.Scan_failure"),avl=a("binary"),avn=a("octal"),avp=a("hexadecimal"),avz=a("a Char"),avA=a("a String"),av_=[0,a(h$),jP,17],av9=[0,a(h$),z5,13],av8=[0,a(h$),pb,13],av7=[0,a(h$),zH,13],av6=[0,a(h$),x6,13],av5=[0,a(h$),As,13],av4=[0,a(h$),pM,50],av2=a(q),awp=a(q),awm=a("./"),awl=a(".\\"),awk=a("../"),awj=a("..\\"),awa=a(q),av$=a(q),awb=a(jx),bCg=a("TMPDIR"),awe=a("/tmp"),awf=a("'\\''"),awh=a(gd),awi=a(mn),bCe=a("TEMP"),awn=a(as),aws=a(gd),awt=a(jx),aww=a(ZJ),awx=a(o0),awC=a("E2BIG"),awE=a("EACCES"),awF=a("EAGAIN"),awG=a("EBADF"),awH=a("EBUSY"),awI=a("ECHILD"),awJ=a("EDEADLK"),awK=a("EDOM"),awL=a("EEXIST"),awM=a("EFAULT"),awN=a("EFBIG"),awO=a("EINTR"),awP=a("EINVAL"),awQ=a("EIO"),awR=a("EISDIR"),awS=a("EMFILE"),awT=a("EMLINK"),awU=a("ENAMETOOLONG"),awV=a("ENFILE"),awW=a("ENODEV"),awX=a("ENOENT"),awY=a("ENOEXEC"),awZ=a("ENOLCK"),aw0=a("ENOMEM"),aw1=a("ENOSPC"),aw2=a("ENOSYS"),aw3=a("ENOTDIR"),aw4=a("ENOTEMPTY"),aw5=a("ENOTTY"),aw6=a("ENXIO"),aw7=a("EPERM"),aw8=a("EPIPE"),aw9=a("ERANGE"),aw_=a("EROFS"),aw$=a("ESPIPE"),axa=a("ESRCH"),axb=a("EXDEV"),axc=a("EWOULDBLOCK"),axd=a("EINPROGRESS"),axe=a("EALREADY"),axf=a("ENOTSOCK"),axg=a("EDESTADDRREQ"),axh=a("EMSGSIZE"),axi=a("EPROTOTYPE"),axj=a("ENOPROTOOPT"),axk=a("EPROTONOSUPPORT"),axl=a("ESOCKTNOSUPPORT"),axm=a("EOPNOTSUPP"),axn=a("EPFNOSUPPORT"),axo=a("EAFNOSUPPORT"),axp=a("EADDRINUSE"),axq=a("EADDRNOTAVAIL"),axr=a("ENETDOWN"),axs=a("ENETUNREACH"),axt=a("ENETRESET"),axu=a("ECONNABORTED"),axv=a("ECONNRESET"),axw=a("ENOBUFS"),axx=a("EISCONN"),axy=a("ENOTCONN"),axz=a("ESHUTDOWN"),axA=a("ETOOMANYREFS"),axB=a("ETIMEDOUT"),axC=a("ECONNREFUSED"),axD=a("EHOSTDOWN"),axE=a("EHOSTUNREACH"),axF=a("ELOOP"),axG=a("EOVERFLOW"),axH=[0,[11,a("EUNKNOWNERR "),[4,0,0,0,0]],a("EUNKNOWNERR %d")],awD=[0,[11,a("Unix.Unix_error(Unix."),[2,0,[11,a(eU),[3,0,[11,a(eU),[3,0,[12,41,0]]]]]]],a("Unix.Unix_error(Unix.%s, %S, %S)")],awy=a(anq),awz=a(q),awA=a(q),awB=a(anq),axI=a("0.0.0.0"),axJ=a("127.0.0.1"),bCd=a(eo),bCc=a("::1"),ax9=[0,1,0],ax_=a(q),ax7=a(q),ax3=a("error"),ax4=a(jN),ax5=a("warning"),ax0=a(l7),ax1=a(eS),ax2=a("\x1b["),axW=a(Wu),axX=a(cV),axY=a(afx),axZ=a(Wq),axO=a(cV),axP=a(Wu),axQ=a("2"),axR=a(afx),axS=a(Wq),axT=a("5"),axU=a("6"),axV=a("7"),axM=a(">> Fatal error: "),axK=a("Misc.Fatal_error"),ax$=a("Misc.HookExnWrapper"),bCb=a("OCAMLLIB"),bCa=a("CAMLLIB"),ayb=a(o0),bB8=a("OCAML_FLEXLINK"),bB9=a(" %%FLEXLINK_FLAGS%%"),bB_=a(" -maindll"),bB$=a(" -exe"),aye=a(ZJ),ayf=a(Ti),ayg=a(o0),ayq=[0,[15,0],a(dw)],ayo=[0,[17,[0,a(i),1,0],[15,0]],a(qY)],ayp=[0,[18,[1,[0,[11,a(am),0],a(am)]],[12,ck,[18,[1,[0,0,a(q)]],[15,[17,[0,a(i),1,0],[17,0,[12,cW,[17,0,0]]]]]]]],a(Kg)],aym=[0,[15,[12,32,0]],a(amO)],ayl=[0,[11,a(abi),0],a(abi)],ayn=[0,[12,41,0],a(bc)],ayj=[0,[17,[0,a(i),1,0],[12,40,[18,[1,[0,0,a(q)]],[15,[17,[0,a(i),1,0],[15,[17,0,[12,41,0]]]]]]]],a("@ (@[%a@ %a@])")],ayk=[0,[18,[1,[0,[11,a(am),0],a(am)]],[12,ck,[18,[1,[0,0,a(q)]],[15,[17,[0,a(i),1,0],[17,0,[12,cW,[17,0,0]]]]]]]],a(Kg)],ayh=[0,[11,a(Y5),[15,[11,a(aix),[15,[11,a(" <> "),[15,0]]]]]],a("Map.disjoint_union %a => %a <> %a")],ayi=[0,[11,a(Y5),[15,0]],a("Map.disjoint_union %a")],ayx=[0,[8,0,0,0,0],a(US)],ayt=[0,[4,3,0,0,0],a(y_)],ayE=[0,[2,0,[11,a(eT),[2,0,0]]],a("%s: %s")],ayD=[0,a("utils/arg_helper.ml"),78,12],ayC=a("Missing key in argument specification"),ayB=a(q),ayA=a("Arg_helper.Make(S).Parse_failure"),ayF=[0,a(anX),38,11],ayG=[0,a(anX),45,11],ayH=a("Consistbl.Inconsistency"),ayZ=a("Ill-formed list of warnings"),ayJ=[0,a("utils/warnings.ml"),mg,9],ayK=[0,1,[0,2,0]],ayL=[0,3,0],ayM=[0,4,0],ayN=[0,5,0],ayO=[0,32,[0,33,[0,34,[0,35,[0,36,[0,37,[0,38,[0,39,0]]]]]]]],ayP=[0,6,0],ayQ=[0,7,0],ayR=[0,8,0],ayS=[0,9,0],ayT=[0,10,0],ayU=[0,11,[0,12,0]],ayV=[0,13,0],ayW=rx([14,15,16,17,18,19,20,21,22,23,24,30]),ayX=[0,26,0],ayY=[0,27,0],ay0=a("+a-4-6-7-9-27-29-32..39-41..42-44-45-48-50-60"),ay1=a("-a+31"),ay2=a("Warnings.Errors"),ay_=[0,[11,a(alT),[2,0,0]],a("I/O error: %s")],ay$=[0,[11,a("Some fatal warnings were triggered ("),[4,0,0,0,[11,a(" occurrences)"),0]]],a("Some fatal warnings were triggered (%d occurrences)")],aza=[0,[11,a("In hook "),[3,0,[12,58,0]]],a("In hook %S:")],ay9=[0,[15,[17,2,0]],a("%a@?")],ay8=a(q),ay7=a(q),ay6=a(q),ay5=[0,[2,0,0],a(cA)],ay4=a(xn),azb=a("Location.Error"),azl=a(q),azh=a(q),azf=a(q),azg=a(q),azd=a(acn),azi=a(aaf),azm=[0,0],az3=[0,[11,a("Too many `"),[2,0,[11,a("' attributes"),0]]],a("Too many `%s' attributes")],az4=[0,[11,a("Attribute `"),[2,0,[11,a("' does not accept a payload"),0]]],a("Attribute `%s' does not accept a payload")],az0=a("Attr_helper.Error"),az5=a("deprecated"),az6=a("ocaml.deprecated"),az7=[0,a(q)],aAj=[0,a(Te),ck,11],aAk=[0,a(Te),ra,11],aAg=a(ga),aAi=a(q),aAh=[0,[2,0,[12,47,[4,3,0,0,[2,0,0]]]],a("%s/%i%s")],aAf=[0,[2,0,[12,33,0]],a("%s!")],aAe=[0,[2,0,[12,35,0]],a("%s#")],aAa=a(bb),aAq=a(mc),aAr=a(".( "),aAs=a(as),aAt=a(bc),aAu=a(bK),aAv=[0,a(alO),64,16],aAw=a(q),aAx=[0,a(alO),80,2],aAB=[0,[11,a('Cannot use "float" in conjunction with ['),[12,64,[11,a("unboxed]/["),[12,64,[11,a("untagged]"),0]]]]],a('Cannot use "float" in conjunction with [%@unboxed]/[%@untagged]')],aAC=[0,[11,a('Cannot use "noalloc" in conjunction with ['),[12,64,[12,64,[11,a("noalloc]"),0]]]],a('Cannot use "noalloc" in conjunction with [%@%@noalloc]')],aAD=[0,[11,a("The native code version of the primitive is mandatory when attributes ["),[12,64,[11,a("untagged] or ["),[12,64,[11,a("unboxed] are present"),0]]]]],a("The native code version of the primitive is mandatory when attributes [%@untagged] or [%@unboxed] are present")],aAy=a("Primitive.Error"),aAI=[0,1,0],aAK=[0,a(q2),lT,9],aAL=[0,a(q2),vP,26],aAM=[0,0],aAN=[0,a(q2),xi,27],aAO=[0,a(q2),afc,27],aAJ=a("*dummy method*"),aA1=[0,0],aA2=[0,a("typing/subst.ml"),qK,23],aA3=a("Subst.modtype"),aAY=a("Subst.type_path"),aAW=a(ahJ),aAX=a(ahJ),aAR=a("doc"),aAS=a(acn),aAT=a(aaf),aAU=a("text"),aAZ=[0,0],aA0=[9,0],aBM=[0,0],aBN=a("ocaml.warn_on_literal_pattern"),aA4=a(y8),aA5=a("char"),aA6=a("bytes"),aA7=a(_4),aA8=a(T6),aA9=a(xR),aA_=a("exn"),aA$=a("array"),aBb=a(lI),aBc=a("option"),aBe=a(Qm),aBf=a(_L),aBg=a(Zz),aBh=a("lazy_t"),aBj=a(eK),aBk=a("extension_constructor"),aBm=a(qk),aBn=a(xH),aBo=a(wC),aBp=a(ze),aBq=a(yb),aBr=a(Av),aBs=a(zf),aBt=a(yT),aBu=a(wL),aBv=a(xo),aBw=a(A0),aBx=a(xM),aBy=a(eh),aBA=a(fo),aBC=a(dh),aBE=a(cS),aBG=a(eo),aBI=a(adD),aBK=a("Some"),aBT=[0,a("typing/datarepr.ml"),jV,12],aBS=[0,1],aBR=[0,0],aBQ=[0,1],aBU=[2,0],aBV=a(q),aB2=[0,[15,[17,[0,a(i),1,0],[11,a("is not a compiled interface"),0]]],a("%a@ is not a compiled interface")],aB3=[0,[15,[17,[0,a(i),1,0],[11,a("is not a compiled interface for this version of OCaml."),[17,4,[11,a("It seems to be for "),[2,0,[11,a(" version of OCaml."),0]]]]]]],a("%a@ is not a compiled interface for this version of OCaml.@.It seems to be for %s version of OCaml.")],aB4=[0,[11,a("Corrupted compiled interface"),[17,[0,a(i),1,0],[15,0]]],a("Corrupted compiled interface@ %a")],aBZ=a("an older"),aB0=a("a newer"),aBX=a("Cmi_format.Error"),aCp=[0,0,0],aCs=[0,[11,a("Wrong file naming: "),[15,[17,[0,a(i),1,0],[11,a("contains the compiled interface for "),[17,[0,a(i),1,0],[2,0,[11,a(" when "),[2,0,[11,a(" was expected"),0]]]]]]]]],a("Wrong file naming: %a@ contains the compiled interface for @ %s when %s was expected")],aCt=[0,[18,[1,[0,[11,a(gX),0],a(gX)]],[11,a("The files "),[15,[17,[0,a(i),1,0],[11,a(za),[15,[17,[0,a(i),1,0],[11,a("make inconsistent assumptions"),[17,[0,a(i),1,0],[11,a("over interface "),bCm]]]]]]]]]],a("@[<hov>The files %a@ and %a@ make inconsistent assumptions@ over interface %s@]")],aCu=a("The compilation flag -rectypes is required"),aCv=[0,[18,[1,[0,[11,a(gX),0],a(gX)]],[11,a(Zk),[2,0,[11,a(agw),[2,0,[11,a(", which uses recursive types."),[17,[0,a(i),1,0],[2,0,[17,0,0]]]]]]]]],a("@[<hov>Unit %s imports from %s, which uses recursive types.@ %s@]")],aCw=a("This compiler has been configured in strict -safe-string mode"),aCx=[0,[18,[1,[0,[11,a(gX),0],a(gX)]],[11,a(Zk),[2,0,[11,a(agw),[2,0,[11,a(", compiled with -unsafe-string."),[17,[0,a(i),1,0],[2,0,[17,0,0]]]]]]]]],a("@[<hov>Unit %s imports from %s, compiled with -unsafe-string.@ %s@]")],aCy=[0,[18,[1,[0,0,a(q)]],[18,[1,[0,[11,a(gX),0],a(gX)]],0]],a("@[@[<hov>")],aCz=[0,[11,a($Z),[17,[0,a(i),1,0],[2,0,[17,[0,a(i),1,0],[11,a("is dangling."),0]]]]],a("Internal path@ %s@ is dangling.")],aCD=[0,[11,a($Z),[17,[0,a(i),1,0],[2,0,[17,[0,a(i),1,0],[11,a("expands to"),[17,[0,a(i),1,0],[2,0,[17,[0,a(i),1,0],[11,a("which is dangling."),0]]]]]]]]],a("Internal path@ %s@ expands to@ %s@ which is dangling.")],aCA=a("was not found"),aCB=a("The compiled interface for module"),aCC=[0,[17,0,[17,[0,a(i),1,0],[18,[1,[0,0,a(q)]],[2,0,[17,[0,a(i),1,0],[2,0,[17,[0,a(i),1,0],[2,0,[12,46,[17,0,bCn]]]]]]]]]],a("@]@ @[%s@ %s@ %s.@]@]")],aCE=[0,[12,39,[2,0,[11,a("' is not a valid value identifier."),0]]],a("'%s' is not a valid value identifier.")],aCi=a("*predef*"),aCf=a(".cmi"),aCc=[0,a(pS),q7,44],aCa=[0,a(pS),qq,31],aB$=[0,a(pS),lO,41],aB_=[0,a(pS),x0,56],aB5=a("Env.Error"),aCI=[0,[11,a("Reference to undefined global `"),[2,0,[12,39,0]]],a("Reference to undefined global `%s'")],aCJ=[0,[11,a("The external function `"),[2,0,[11,a("' is not available"),0]]],a("The external function `%s' is not available")],aCK=[0,[11,a("Cannot find or execute the runtime system "),[2,0,0]],a("Cannot find or execute the runtime system %s")],aCL=[0,[11,a("The value of the global `"),[2,0,[11,a("' is not yet computed"),0]]],a("The value of the global `%s' is not yet computed")],aCF=a("Symtable.Error"),aCO=a("Unsafe_file"),aCQ=[0,[11,a("Not_a_bytecode_file "),[3,0,0]],a("Not_a_bytecode_file %S")],aCR=[0,[11,a("Inconsistent_import "),[3,0,0]],a("Inconsistent_import %S")],aCS=[0,[11,a("Unavailable_unit "),[3,0,0]],a("Unavailable_unit %S")],aCT=[0,[11,a(xq),[3,0,[11,a(", Dynlink.Undefined_global "),[3,0,[12,41,0]]]]],a("Linking_error (%S, Dynlink.Undefined_global %S)")],aCU=[0,[11,a(xq),[3,0,[11,a(", Dynlink.Unavailable_primitive "),[3,0,[12,41,0]]]]],a("Linking_error (%S, Dynlink.Unavailable_primitive %S)")],aCV=[0,[11,a(xq),[3,0,[11,a(", Dynlink.Uninitialized_global "),[3,0,[12,41,0]]]]],a("Linking_error (%S, Dynlink.Uninitialized_global %S)")],aCW=[0,[11,a("Corrupted_interface "),[3,0,0]],a("Corrupted_interface %S")],aCX=[0,[11,a("File_not_found "),[3,0,0]],a("File_not_found %S")],aCY=[0,[11,a("Cannot_open_dll "),[3,0,0]],a("Cannot_open_dll %S")],aCZ=[0,[11,a("Inconsistent_implementation "),[3,0,0]],a("Inconsistent_implementation %S")],aCP=[0,[11,a("Dynlink.Error(Dynlink."),[2,0,[12,41,0]]],a("Dynlink.Error(Dynlink.%s)")],aCM=a("Dynlink.Error"),aC4=a("nat_of_int"),aC3=a("make_nat"),aC8=[0,a(vJ),78,34],aC_=[0,a(vJ),ck,16],aC9=[0,a(vJ),fD,16],aC7=a("Weaktbl.Stack.push: stack cannnot grow"),aDl=a("BatIO.output"),aDk=a("BatIO.input"),aDj=a("BatIO.really_output"),aDh=a("BatIO.nread"),aDi=a(q),aDc=a("BatInnerIO.No_more_input"),aDd=a("BatInnerIO.Input_closed"),aDe=a("BatInnerIO.Output_closed"),aDU=a(q),aDT=a(q),aDS=a(q),aDR=a(cH),aDQ=a(Ap),aDN=[0,a("src/batEnum.ml"),49,16],aDK=[0,a(aiV),a(ZP),a(abn)],aDL=[0,a(ZP),a(abn),a(aiV)],aDM=a("BatEnum.No_more_elements"),aDY=a(q),aDX=a("String.find_from"),aEc=a(ch),aEd=a(ch),aEa=a(qr),aEb=a(qr),aD$=a("%_"),aD_=[0,a("src/batPrintf.mlv"),cU,8],aD7=a(Ko),aD8=a("printf: premature end of format string ``"),aD3=a(Ko),aD4=a(" in format string ``"),aD5=a(", at char number "),aD6=a("printf: bad conversion %"),aD1=a("index_of_int: negative argument "),aEg=[0,[11,a("Some "),[15,0]],a("Some %a")],aEh=a(adD),aEf=a("Option.get"),aEt=a(q),aEs=a(q),aEr=a(q),aEq=a(q),aEm=[0,a(AK),a(xL),a(vX)],aEn=[0,a(zM),a(AW)],aEo=[0,a(AW),a(zM)],aEp=[0,a(xL),a(AK),a(vX)],aEu=a("BatNumber.Overflow"),aEw=a("BatNumber.NaN"),aFl=a("PMap.max_binding: empty tree"),aFn=a("PMap.remove_min_binding"),aFq=[0,0,0,0],aFx=[0,a(z2),pk,8],aFr=[0,[15,[2,0,[15,0]]],a(am3)],aFv=a(ah8),aFu=a(TA),aFt=a(yB),aFs=a(eT),aFm=[0,a(z2),qo,17],aFk=[0,a(z2),e1,17],aFg=a(gZ),aFh=a(gZ),aFi=a(gZ),aFj=a(gZ),aFz=a("iter2: Different_list_size"),aFA=a("fold_left2: Different_list_size"),aFE=a("Empty List"),aFI=a(dx),aFH=a(dy),aFG=a(rh),aFF=[0,0,0],aFD=a("List.make"),aFC=a("combine: Different_list_size"),aFB=a("for_all2: Different_list_size"),aFy=a("map2: Different_list_size"),aFN=[0,1],aFO=[0,0],aFM=[0,0,[0,6,0]],aFU=a("End of file"),aFQ=[0,0],aFR=[2,[0,0]],aFS=[3,[0,0]],aFP=[2,[0,0]],aFZ=a(ch),aF0=a(ch),aFW=[0,1,1],aF2=a("letter"),aF6=[0,[15,[2,0,[15,0]]],a(am3)],aF_=a(ah8),aF9=a(TA),aF8=a(yB),aF7=a(eT),aF5=a("BatHashtbl.Hashtbl_key_not_found"),aGd=a(_R),aGi=[0,0,0,0],aGj=[0,0,0,0],aGo=[0,0,0],aGk=[0,[15,0],a(dw)],aGn=a(x4),aGm=a(xG),aGl=a(dA),aGg=a("Set.at_rank_exn: negative index not allowed"),aGh=a("Set.at_rank_exn i s: i >= (Set.cardinal s)"),aF$=a(g5),aGa=a(g5),aGb=a(g5),aGc=a(g5),aGe=a("BatSet.Concrete.Found"),aGp=a("BatBase64.Invalid_table"),aGr=[0,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,ci,jB,h_,l1,l9,di,qP,mB,gj,qx,fn,gi,bL,ms,jt,e1,jv,im,jV,md,fr,lE,fD,48,49,50,51,52,53,54,55,56,57,43,47],aHC=a(wn),aHB=a(zv),aHA=a(rh),aHj=a(wj),aHk=a(_y),aHl=a("start"),aHm=a(_y),aG8=a(wj),aG9=a(AV),aG_=a("source index"),aG$=a(AV),aHa=a("dest index"),aHb=a(AV),aG6=a(UG),aG7=a("delete_last"),aG0=a("length"),aG1=a(aeo),aG2=a(lp),aG3=a(aeo),aGX=a(lp),aGY=a("delete"),aGU=a(lp),aGV=a("insert"),aGR=a(lp),aGS=a(wO),aGP=a(UG),aGQ=a("last"),aGM=a(lp),aGN=a(pp),aGH=a(wj),aGI=a("init"),aGE=a("size"),aGF=a("make"),aGz=a("step"),aGA=a("step_resizer"),aGu=[0,a("src/batDynArray.ml"),49,19],aGv=a("BatDynArray.Invalid_arg"),aH_=a("Path.drive_letter"),aH9=a(as),aH8=a(as),aH6=a(qi),aH7=a(qi),aHZ=a(mn),aH4=a(jx),aH0=a(MX),aH2=a(jx),aH1=a(q),aH3=a(as),aHW=a(gd),aHX=a(Vl),aHY=a(Vl),aHU=a(adM),aHV=a(adM),aHS=a(qi),aHT=a(qi),aHR=a(gd),aHP=a(Wt),aHQ=a(Wt),aHL=a(gd),aHK=a(as),aHJ=a(q),aHI=[0,-1,0],aHE=a("BatPathGen.Make(S).Not_parent"),aHF=a("BatPathGen.Make(S).Illegal_char"),aHG=a("BatPathGen.Make(S).Malformed_path"),aHH=a(o0),aHM=a(q),aHN=[0,47,[0,0,0]],aHO=[0,47,[0,92,[0,42,[0,63,[0,60,[0,62,[0,58,[0,0,[0,1,[0,31,0]]]]]]]]]],aH5=[0,47,[0,92,0]],aH$=[0,47,0],aIs=a("TRACE"),aIt=a("FATAL"),aIu=a("ERROR"),aIv=a("DEBUG"),aIx=a("WARN"),aIy=a("INFO"),aIw=a("ALWAYS"),aIq=a(eT),aIp=a(eT),aIl=[0,a(cH)],aIm=[0,a(dv)],aIn=[0,a(q)],aIk=[0,[4,0,[0,1,2],0,[12,58,[4,0,[0,2,2],0,[12,58,[4,0,[0,2,2],0,0]]]]],a("%2d:%02d:%02d")],aIj=[0,[4,0,[0,1,4],0,[12,47,[4,0,[0,2,2],0,[12,47,[4,0,[0,2,2],0,0]]]]],a("%4d/%02d/%02d")],aIA=a(q),aIB=[0,$l,[0,aiq,0]],aID=a("BatUChar.Out_of_range"),aIG=a("BatUTF8.Malformed_code"),aII=[0,32,[0,9,[0,13,[0,10,0]]]],aIJ=a("Caml1999N018"),aIK=a("Caml1999M020"),bB5=a("CAMLP4LIB"),bB2=a("CAMLP4_DEBUG_FILE"),bB3=[0,1,[0,3,[0,2,[0,7,0]]]],bBZ=a("CAMLP4_DEBUG"),bB1=a(dz),aIN=a("camlp4-debug: "),aIS=a(qJ),aIT=[0,[8,9,0,[0,12],0],a(z8)],aIU=[0,[8,9,0,[0,15],0],a("%.15g")],aIV=[0,[8,9,0,[0,18],0],a("%.18g")],aIQ=a(aat),aIR=a(A3),aIP=a(as),aJu=[0,[11,a(zh),0],a(zh)],aJv=[0,[11,a("Assertion failed, file "),[3,0,[11,a(lX),[4,0,0,0,[11,a(adH),[4,0,0,0,0]]]]]],a("Assertion failed, file %S, line %d, char %d")],aJw=[0,[11,a("Pattern matching failed, file "),[3,0,[11,a(lX),[4,0,0,0,[11,a(adH),[4,0,0,0,0]]]]]],a("Pattern matching failed, file %S, line %d, char %d")],aJx=[0,[11,a("Failure: "),[3,0,0]],a("Failure: %S")],aJy=[0,[11,a("Invalid argument: "),[3,0,0]],a("Invalid argument: %S")],aJz=[0,[11,a(alT),[3,0,0]],a("I/O error: %S")],aJA=[0,[11,a(MQ),0],a(MQ)],aJB=[0,[11,a("Parse error: "),[2,0,0]],a("Parse error: %s")],aJs=[0,[11,a(Lp),[2,0,0]],a(ajf)],aJo=[0,[11,a(Lp),[2,0,0]],a(ajf)],aJp=a(yo),aJr=a(eU),aJq=[0,[17,4,0],a(ac4)],aIX=a(dU),aIY=a(g9),aIW=a(" | CstTag"),aIZ=a(dy),aI0=a(rh),aI1=a(dx),aI5=a(vQ),aI6=a("closure"),aI7=a(bc),aI8=a(eU),aI9=a(yo),aI_=a("Object #"),aI$=[0,a("camlp4/Camlp4/ErrorHandler.ml"),79,29],aJa=a("infix"),aJb=a("forward"),aJc=a(bc),aJd=a(eU),aJe=a(yo),aJf=a("Tag"),aJg=a(ch),aJh=a(ch),aJi=a("abstract"),aJj=a("custom"),aJk=a(bc),aJl=a("ObjTools.to_string: unknown tag ("),aI2=a(bc),aI3=a(eU),aI4=a(bK),aJm=[0,[2,0,0],a(cA)],aMs=a("No implementation printer"),aMr=a("No interface printer"),aMq=[0,a(qf),lQ,18],aMo=[0,a(qf),agG,6],aMp=a(mt),aMm=[0,a(qf),ye,6],aMn=a(mt),aMi=[0,a(qf),qS,4],aMj=a(mt),aJC=[0,[11,a("<W> "),[15,[11,a(eT),[2,0,[17,4,0]]]]],a("<W> %a: %s@.")],aJD=a("a_CHAR"),aJE=a("a_FLOAT"),aJF=a("a_INT"),aJG=a("a_INT32"),aJH=a("a_INT64"),aJI=a("a_LABEL"),aJJ=a("a_LIDENT"),aJK=a("a_NATIVEINT"),aJL=a("a_OPTLABEL"),aJM=a("a_STRING"),aJN=a("a_UIDENT"),aJO=a("a_ident"),aJP=a("amp_ctyp"),aJQ=a("and_ctyp"),aJR=a(fy),aJS=a("match_case0"),aJT=a(e0),aJU=a(mh),aJV=a("class_description"),aJW=a(ft),aJX=a("class_fun_binding"),aJY=a("class_fun_def"),aJZ=a("class_info_for_class_expr"),aJ0=a("class_info_for_class_type"),aJ1=a("class_longident"),aJ2=a("class_longident_and_param"),aJ3=a("class_name_and_param"),aJ4=a(gl),aJ5=a("class_signature"),aJ6=a(gk),aJ7=a("class_structure"),aJ8=a(fp),aJ9=a("class_type_declaration"),aJ_=a("class_type_longident"),aJ$=a("class_type_longident_and_param"),aKa=a("class_type_plus"),aKb=a("comma_ctyp"),aKc=a("comma_expr"),aKd=a("comma_ipatt"),aKe=a("comma_patt"),aKf=a("comma_type_parameter"),aKg=a(jM),aKh=a("constructor_arg_list"),aKi=a(Rb),aKj=a("constructor_declarations"),aKk=a(eW),aKl=a("cvalue_binding"),aKm=a(g3),aKn=a("direction_flag_quot"),aKo=a("dummy"),aKp=a("entry_eoi"),aKq=a("eq_expr"),aKr=a(eL),aKs=a("expr_eoi"),aKt=a("field_expr"),aKu=a("field_expr_list"),aKv=a(ln),aKw=a("fun_def"),aKx=a(eQ),aKy=a(jw),aKz=a(lK),aKA=a("ipatt"),aKB=a("ipatt_tcon"),aKC=a("label"),aKD=a("label_declaration"),aKE=a("label_declaration_list"),aKF=a("label_expr"),aKG=a("label_expr_list"),aKH=a("label_ipatt"),aKI=a("label_ipatt_list"),aKJ=a("label_longident"),aKK=a("label_patt"),aKL=a("label_patt_list"),aKM=a("labeled_ipatt"),aKN=a("let_binding"),aKO=a("meth_list"),aKP=a("meth_decl"),aKQ=a(mz),aKR=a("module_binding0"),aKS=a("module_declaration"),aKT=a(fq),aKU=a("module_longident"),aKV=a("module_longident_with_app"),aKW=a("module_rec_declaration"),aKX=a(gm),aKY=a("package_type"),aKZ=a("more_ctyp"),aK0=a("name_tags"),aK1=a("opt_as_lident"),aK2=a("opt_class_self_patt"),aK3=a("opt_class_self_type"),aK4=a("opt_class_signature"),aK5=a("opt_class_structure"),aK6=a("opt_comma_ctyp"),aK7=a("opt_dot_dot"),aK8=a("row_var_flag_quot"),aK9=a("opt_eq_ctyp"),aK_=a("opt_expr"),aK$=a("opt_meth_list"),aLa=a("opt_mutable"),aLb=a("mutable_flag_quot"),aLc=a("opt_polyt"),aLd=a("opt_private"),aLe=a("private_flag_quot"),aLf=a("opt_rec"),aLg=a("opt_nonrec"),aLh=a("rec_flag_quot"),aLi=a("opt_sig_items"),aLj=a("opt_str_items"),aLk=a("opt_virtual"),aLl=a("virtual_flag_quot"),aLm=a("opt_override"),aLn=a("override_flag_quot"),aLo=a("opt_when_expr"),aLp=a(eX),aLq=a("patt_as_patt_opt"),aLr=a("patt_eoi"),aLs=a("patt_tcon"),aLt=a("phrase"),aLu=a("poly_type"),aLv=a("row_field"),aLw=a("sem_expr"),aLx=a("sem_expr_for_list"),aLy=a("sem_patt"),aLz=a("sem_patt_for_list"),aLA=a(xE),aLB=a("sequence"),aLC=a("do_sequence"),aLD=a(fC),aLE=a("sig_items"),aLF=a("star_ctyp"),aLG=a(eY),aLH=a("str_items"),aLI=a("top_phrase"),aLJ=a("type_constraint"),aLK=a("type_declaration"),aLL=a("type_ident_and_parameters"),aLM=a("type_kind"),aLN=a("type_longident"),aLO=a("type_longident_and_parameters"),aLP=a("type_parameter"),aLQ=a("type_parameters"),aLR=a("typevars"),aLS=a("use_file"),aLT=a("val_longident"),aLU=a(j1),aLV=a(jU),aLW=a(lk),aLX=a("quotation of expression"),aLY=a("quotation of pattern"),aLZ=a("quotation of type"),aL0=a("quotation of structure item"),aL1=a("quotation of signature item"),aL2=a("quotation of class structure item"),aL3=a("quotation of class signature item"),aL4=a("quotation of module expression"),aL5=a("quotation of module type"),aL6=a("quotation of class type"),aL7=a("quotation of class expression"),aL8=a("quotation of with constraint"),aL9=a("quotation of binding"),aL_=a("quotation of record binding"),aL$=a("quotation of match_case (try/match/function case)"),aMa=a("quotation of module rec binding"),aMb=a("quotation of identifier"),aMc=a("prefix operator (start with '!', '?', '~')"),aMd=a("infix operator (level 0) (comparison operators, and some others)"),aMe=a("infix operator (level 1) (start with '^', '@')"),aMf=a("infix operator (level 2) (start with '+', '-')"),aMg=a("infix operator (level 3) (start with '*', '/', '%')"),aMh=a('infix operator (level 4) (start with "**") (right assoc)'),aMk=a("antiquot_expr"),aMl=a("antiquot_patt"),aME=a(dh),aMF=[0,a(lq),ep,25],aMG=[0,a(lq),Rf,14],aMH=[0,a(lq),adv,14],aMI=[0,a(lq),v$,14],aMJ=[0,a(lq),ri,13],a16=a(q),a17=a(jN),a14=a(q),a15=a(fC),a12=a(q),a13=a(eY),a10=a(q),a11=a(eW),a1Y=a(q),a1Z=a(eX),a1W=a(q),a1X=a(eL),aUs=a(eo),aUt=a(cS),aUu=a($d),aUv=a(g),aUw=a(SJ),aUx=a(g),aUy=a(Nr),aUz=a(g),aUA=a(ajs),aUB=a(g),aUC=a(ZH),aUD=a(g),aUE=a($$),aUF=a(g),aUG=a(aoW),aUH=a(g),aUI=a(RY),aUJ=a(g),aUK=a(aem),aUL=a(g),aUM=a(ajF),aUN=a(g),aUO=a(X9),aUP=a(g),aUQ=a(aec),aUR=a(g),aUS=a(aam),aUT=a(g),aUU=a(alm),aUV=a(g),aUW=a($m),aUX=a(g),aUY=a(acg),aUZ=a(g),aU0=a(Ot),aU1=a(g),aU2=a($A),aU3=a(g),aU4=a(YV),aU5=a(g),aU6=a(Uo),aU7=a(g),aU8=a(aaO),aU9=a(g),aU_=a(Td),aU$=a(g),aVa=a(am4),aVb=a(g),aVc=a(ak5),aVd=a(g),aVe=a(XF),aVf=a(g),aVg=a(ahU),aVh=a(g),aVi=a(ajm),aVj=a(g),aVk=a(al$),aVl=a(g),aVm=a(aoa),aVn=a(g),aVo=a(Zr),aVp=a(g),aVq=a(LA),aVr=a(g),aVs=a(Me),aVt=a(g),aVu=a(UF),aVv=a(g),aVw=a(Ye),aVx=a(g),aVy=a(KI),aVz=a(g),aVA=a(aiK),aVB=a(g),aVC=a(Vw),aVD=a(g),aVE=a(als),aVF=a(g),aVG=a(SG),aVH=a(g),aVI=a(aeY),aVJ=a(g),aVK=a(ai6),aVL=a(g),aVM=a(Oh),aVN=a(g),aVO=a(Oy),aVP=a(g),aVQ=a(ad8),aVR=a(g),aVS=a(SW),aVT=a(g),aVU=a(aa3),aVV=a(g),aVW=a(Qi),aVX=a(g),aVY=a(aoY),aVZ=a(g),aV0=a(Sp),aV1=a(g),aV2=a(M2),aV3=a(g),aV4=a(afY),aV5=a(g),aV6=a(Nw),aV7=a(g),aV8=a(Zu),aV9=a(g),aV_=a(Sj),aV$=a(g),aWa=a(Vh),aWb=a(g),aWc=a(Oq),aWd=a(g),aWe=a(P$),aWf=a(g),aWg=a(ag6),aWh=a(g),aWi=a(Ne),aWj=a(g),aWk=a(afB),aWl=a(g),aWm=a(alf),aWn=a(g),aWo=a(P2),aWp=a(g),aWq=a(Yq),aWr=a(g),aWs=a(VU),aWt=a(g),aWu=a(ak4),aWv=a(g),aWw=a(abx),aWx=a(g),aWy=a(L3),aWz=a(g),aWA=a(PH),aWB=a(g),aWC=a(Xs),aWD=a(g),aWE=a(ana),aWF=a(g),aWG=a(aoO),aWH=a(g),aWI=a(abk),aWJ=a(g),aWK=a(Si),aWL=a(g),aWM=a(aiO),aWN=a(g),aWO=a(Xb),aWP=a(g),aWQ=a(Ru),aWR=a(g),aWS=a(agK),aWT=a(g),aWU=a(TF),aWV=a(g),aWW=a(aiY),aWX=a(g),aW0=a(W8),aW1=a(g),aWY=a(ajW),aWZ=a(g),aW2=a(acK),aW3=a(g),aW4=a(UT),aW5=a(g),aW6=a(aoV),aW7=a(g),aW8=a(ZV),aW9=a(g),aW_=a(aj7),aW$=a(g),aXa=a(aex),aXb=a(g),aXc=a(KH),aXd=a(g),aXe=a(ac$),aXf=a(g),aXg=a(Rk),aXh=a(g),aXi=a(ad3),aXj=a(g),aXk=a(amh),aXl=a(g),aXm=a(Z0),aXn=a(g),aXo=a(MH),aXp=a(g),aXq=a(ahE),aXr=a(g),aXs=a(ahh),aXt=a(g),aXu=a(Ur),aXv=a(g),aXw=a(M4),aXx=a(g),aXy=a(aiR),aXz=a(g),aXA=a(ami),aXB=a(g),aXC=a($T),aXD=a(g),aXE=a(Yb),aXF=a(g),aXG=a(Sw),aXH=a(g),aXI=a(Lr),aXJ=a(g),aXK=a(XV),aXL=a(g),aXM=a(Pr),aXN=a(g),aXO=a(abX),aXP=a(g),aXQ=a(Kv),aXR=a(g),aXS=a(YI),aXT=a(g),aXU=a(aeQ),aXV=a(g),aXW=a(afh),aXX=a(g),aXY=a(Kt),aXZ=a(g),aX0=a(aay),aX1=a(g),aX2=a(Xx),aX3=a(g),aX4=a(To),aX5=a(g),aX6=a(agF),aX7=a(g),aX8=a(ab9),aX9=a(g),aX_=a(aos),aX$=a(g),aYa=a(Vc),aYb=a(g),aYc=a(ala),aYd=a(g),aYe=a(SU),aYf=a(g),aYg=a(ahR),aYh=a(g),aYi=a(PL),aYj=a(g),aYk=a(acJ),aYl=a(g),aYm=a($b),aYn=a(g),aYo=a(aka),aYp=a(g),aYq=a(amy),aYr=a(g),aYs=a(ajI),aYt=a(g),aYu=a(an3),aYv=a(g),aYw=a(Y$),aYx=a(g),aYy=a(abh),aYz=a(g),aYA=a(Yl),aYB=a(g),aYC=a(acW),aYD=a(g),aYE=a(YJ),aYF=a(g),aYG=a(aar),aYH=a(g),aYI=a(acV),aYJ=a(g),aYK=a(abW),aYL=a(g),aYM=a(Nn),aYN=a(g),aYO=a(aaj),aYP=a(g),aYQ=a(Lu),aYR=a(g),aYS=a(Lq),aYT=a(g),aYU=a(OO),aYV=a(g),aYW=a(MV),aYX=a(g),aYY=a(_t),aYZ=a(g),aY0=a(Wz),aY1=a(g),aY2=a(_c),aY3=a(g),aY4=a(an_),aY5=a(g),aY6=a(alI),aY7=a(g),aY8=a(ab4),aY9=a(g),aY_=a(ahg),aY$=a(g),aZa=a(MP),aZb=a(g),aZc=a(MJ),aZd=a(g),aZe=a(L9),aZf=a(g),aZg=a($Y),aZh=a(g),aZi=a(aiC),aZj=a(g),aZk=a(anD),aZl=a(g),aZm=a(Tq),aZn=a(g),aZq=a(PS),aZr=a(g),aZo=a(NP),aZp=a(g),aZu=a(ajG),aZv=a(g),aZs=a(Q$),aZt=a(g),aZw=a(abb),aZx=a(g),aZy=a(amx),aZz=a(g),aZA=a(aeS),aZB=a(g),aZC=a(amR),aZD=a(g),aZE=a(_Z),aZF=a(g),aZG=a(ZN),aZH=a(g),aZI=a(akI),aZJ=a(g),aZK=a(Yj),aZL=a(g),aZM=a(Pi),aZN=a(g),aZO=a(af8),aZP=a(g),aZQ=a(R4),aZR=a(g),aZS=a(RX),aZT=a(g),aZU=a(ahD),aZV=a(g),aZW=a(aor),aZX=a(g),aZY=a(NM),aZZ=a(g),aZ0=a(aiM),aZ1=a(g),aZ2=a(Z8),aZ3=a(g),aZ4=a(acS),aZ5=a(g),aZ6=a(VA),aZ7=a(g),aZ8=a(Vp),aZ9=a(g),aZ_=a(Yi),aZ$=a(g),a0a=a(Mp),a0b=a(g),a0c=a(agO),a0d=a(g),a0e=a(NY),a0f=a(g),a0g=a(ZM),a0h=a(g),a0i=a(TQ),a0j=a(g),a0k=a(Ps),a0l=a(g),a0m=a(QC),a0n=a(g),a0o=a(__),a0p=a(g),a0q=a(aoD),a0r=a(g),a0u=a(aiU),a0v=a(g),a0s=a(aia),a0t=a(g),a0w=a(aky),a0x=a(g),a0y=a(an9),a0z=a(g),a0A=a($a),a0B=a(g),a0C=a(OY),a0D=a(g),a0E=a(ach),a0F=a(g),a0G=a(amb),a0H=a(g),a0K=a(alE),a0L=a(g),a0I=a(WD),a0J=a(g),a0M=a(Uz),a0N=a(g),a0O=a(Ro),a0P=a(g),a0Q=a(Q_),a0R=a(g),a0S=a($V),a0T=a(g),a0U=a(acL),a0V=a(g),a0W=a($Q),a0X=a(g),a0Y=a(U7),a0Z=a(g),a00=a(amo),a01=a(g),a02=a(anf),a03=a(g),a04=a(akE),a05=a(g),a06=a(ZX),a07=a(g),a08=a(VH),a09=a(g),a0_=a(Wk),a0$=a(g),a1a=a(UO),a1b=a(g),a1c=a(aof),a1d=a(g),a1e=a(Lb),a1f=a(g),a1g=a(ZE),a1h=a(g),a1i=a(ale),a1j=a(g),a1k=a(akS),a1l=a(g),a1m=a(ahV),a1n=a(g),a1o=a(V2),a1p=a(g),a1q=a(Ya),a1r=a(g),a1s=a(_O),a1t=a(g),a1u=a(af5),a1v=a(g),a1w=a(aaT),a1x=a(g),a1y=a($e),a1z=a(g),a1A=a(abS),a1B=a(g),a1C=a(V9),a1D=a(g),a1E=a(_U),a1F=a(g),a1I=a(Vo),a1J=a(g),a1G=a(M7),a1H=a(g),a1K=a(Ky),a1L=a(g),a1M=a(_Y),a1N=a(g),a1O=a(akJ),a1P=a(g),a1Q=a(amS),a1R=a(g),a1S=a(ad2),a1T=a(g),a1U=a(alD),a1V=a(g),aUr=a(ek),aUq=a(dZ),aMY=a(eo),aMZ=a(cS),aM0=a($d),aM1=a(g),aM2=a(SJ),aM3=a(g),aM4=a(Nr),aM5=a(g),aM6=a(ajs),aM7=a(g),aM8=a(ZH),aM9=a(g),aM_=a($$),aM$=a(g),aNa=a(aoW),aNb=a(g),aNc=a(RY),aNd=a(g),aNe=a(aem),aNf=a(g),aNg=a(ajF),aNh=a(g),aNi=a(X9),aNj=a(g),aNk=a(aec),aNl=a(g),aNm=a(aam),aNn=a(g),aNo=a(alm),aNp=a(g),aNq=a($m),aNr=a(g),aNs=a(acg),aNt=a(g),aNu=a(Ot),aNv=a(g),aNw=a($A),aNx=a(g),aNy=a(YV),aNz=a(g),aNA=a(Uo),aNB=a(g),aNC=a(aaO),aND=a(g),aNE=a(Td),aNF=a(g),aNG=a(am4),aNH=a(g),aNI=a(ak5),aNJ=a(g),aNK=a(XF),aNL=a(g),aNM=a(ahU),aNN=a(g),aNO=a(ajm),aNP=a(g),aNQ=a(al$),aNR=a(g),aNS=a(aoa),aNT=a(g),aNU=a(Zr),aNV=a(g),aNW=a(LA),aNX=a(g),aNY=a(Me),aNZ=a(g),aN0=a(UF),aN1=a(g),aN2=a(Ye),aN3=a(g),aN4=a(KI),aN5=a(g),aN6=a(aiK),aN7=a(g),aN8=a(Vw),aN9=a(g),aN_=a(als),aN$=a(g),aOa=a(SG),aOb=a(g),aOc=a(aeY),aOd=a(g),aOe=a(ai6),aOf=a(g),aOg=a(Oh),aOh=a(g),aOi=a(Oy),aOj=a(g),aOk=a(ad8),aOl=a(g),aOm=a(SW),aOn=a(g),aOo=a(aa3),aOp=a(g),aOq=a(Qi),aOr=a(g),aOs=a(aoY),aOt=a(g),aOu=a(Sp),aOv=a(g),aOw=a(M2),aOx=a(g),aOy=a(afY),aOz=a(g),aOA=a(Nw),aOB=a(g),aOC=a(Zu),aOD=a(g),aOE=a(Sj),aOF=a(g),aOG=a(Vh),aOH=a(g),aOI=a(Oq),aOJ=a(g),aOK=a(P$),aOL=a(g),aOM=a(ag6),aON=a(g),aOO=a(Ne),aOP=a(g),aOQ=a(afB),aOR=a(g),aOS=a(alf),aOT=a(g),aOU=a(P2),aOV=a(g),aOW=a(Yq),aOX=a(g),aOY=a(VU),aOZ=a(g),aO0=a(ak4),aO1=a(g),aO2=a(abx),aO3=a(g),aO4=a(L3),aO5=a(g),aO6=a(PH),aO7=a(g),aO8=a(Xs),aO9=a(g),aO_=a(ana),aO$=a(g),aPa=a(aoO),aPb=a(g),aPc=a(abk),aPd=a(g),aPe=a(Si),aPf=a(g),aPg=a(aiO),aPh=a(g),aPi=a(Xb),aPj=a(g),aPk=a(Ru),aPl=a(g),aPm=a(agK),aPn=a(g),aPo=a(TF),aPp=a(g),aPq=a(aiY),aPr=a(g),aPu=a(W8),aPv=a(g),aPs=a(ajW),aPt=a(g),aPw=a(acK),aPx=a(g),aPy=a(UT),aPz=a(g),aPA=a(aoV),aPB=a(g),aPC=a(ZV),aPD=a(g),aPE=a(aj7),aPF=a(g),aPG=a(aex),aPH=a(g),aPI=a(KH),aPJ=a(g),aPK=a(ac$),aPL=a(g),aPM=a(Rk),aPN=a(g),aPO=a(ad3),aPP=a(g),aPQ=a(amh),aPR=a(g),aPS=a(Z0),aPT=a(g),aPU=a(MH),aPV=a(g),aPW=a(ahE),aPX=a(g),aPY=a(ahh),aPZ=a(g),aP0=a(Ur),aP1=a(g),aP2=a(M4),aP3=a(g),aP4=a(aiR),aP5=a(g),aP6=a(ami),aP7=a(g),aP8=a($T),aP9=a(g),aP_=a(Yb),aP$=a(g),aQa=a(Sw),aQb=a(g),aQc=a(Lr),aQd=a(g),aQe=a(XV),aQf=a(g),aQg=a(Pr),aQh=a(g),aQi=a(abX),aQj=a(g),aQk=a(Kv),aQl=a(g),aQm=a(YI),aQn=a(g),aQo=a(aeQ),aQp=a(g),aQq=a(afh),aQr=a(g),aQs=a(Kt),aQt=a(g),aQu=a(aay),aQv=a(g),aQw=a(Xx),aQx=a(g),aQy=a(To),aQz=a(g),aQA=a(agF),aQB=a(g),aQC=a(ab9),aQD=a(g),aQE=a(aos),aQF=a(g),aQG=a(Vc),aQH=a(g),aQI=a(ala),aQJ=a(g),aQK=a(SU),aQL=a(g),aQM=a(ahR),aQN=a(g),aQO=a(PL),aQP=a(g),aQQ=a(acJ),aQR=a(g),aQS=a($b),aQT=a(g),aQU=a(aka),aQV=a(g),aQW=a(amy),aQX=a(g),aQY=a(ajI),aQZ=a(g),aQ0=a(an3),aQ1=a(g),aQ2=a(Y$),aQ3=a(g),aQ4=a(abh),aQ5=a(g),aQ6=a(Yl),aQ7=a(g),aQ8=a(acW),aQ9=a(g),aQ_=a(YJ),aQ$=a(g),aRa=a(aar),aRb=a(g),aRc=a(acV),aRd=a(g),aRe=a(abW),aRf=a(g),aRg=a(Nn),aRh=a(g),aRi=a(aaj),aRj=a(g),aRk=a(Lu),aRl=a(g),aRm=a(Lq),aRn=a(g),aRo=a(OO),aRp=a(g),aRq=a(MV),aRr=a(g),aRs=a(_t),aRt=a(g),aRu=a(Wz),aRv=a(g),aRw=a(_c),aRx=a(g),aRy=a(an_),aRz=a(g),aRA=a(alI),aRB=a(g),aRC=a(ab4),aRD=a(g),aRE=a(ahg),aRF=a(g),aRG=a(MP),aRH=a(g),aRI=a(MJ),aRJ=a(g),aRK=a(L9),aRL=a(g),aRM=a($Y),aRN=a(g),aRO=a(aiC),aRP=a(g),aRQ=a(anD),aRR=a(g),aRS=a(Tq),aRT=a(g),aRW=a(PS),aRX=a(g),aRU=a(NP),aRV=a(g),aR0=a(ajG),aR1=a(g),aRY=a(Q$),aRZ=a(g),aR2=a(abb),aR3=a(g),aR4=a(amx),aR5=a(g),aR6=a(aeS),aR7=a(g),aR8=a(amR),aR9=a(g),aR_=a(_Z),aR$=a(g),aSa=a(ZN),aSb=a(g),aSc=a(akI),aSd=a(g),aSe=a(Yj),aSf=a(g),aSg=a(Pi),aSh=a(g),aSi=a(af8),aSj=a(g),aSk=a(R4),aSl=a(g),aSm=a(RX),aSn=a(g),aSo=a(ahD),aSp=a(g),aSq=a(aor),aSr=a(g),aSs=a(NM),aSt=a(g),aSu=a(aiM),aSv=a(g),aSw=a(Z8),aSx=a(g),aSy=a(acS),aSz=a(g),aSA=a(VA),aSB=a(g),aSC=a(Vp),aSD=a(g),aSE=a(Yi),aSF=a(g),aSG=a(Mp),aSH=a(g),aSI=a(agO),aSJ=a(g),aSK=a(NY),aSL=a(g),aSM=a(ZM),aSN=a(g),aSO=a(TQ),aSP=a(g),aSQ=a(Ps),aSR=a(g),aSS=a(QC),aST=a(g),aSU=a(__),aSV=a(g),aSW=a(aoD),aSX=a(g),aS0=a(aiU),aS1=a(g),aSY=a(aia),aSZ=a(g),aS2=a(aky),aS3=a(g),aS4=a(an9),aS5=a(g),aS6=a($a),aS7=a(g),aS8=a(OY),aS9=a(g),aS_=a(ach),aS$=a(g),aTa=a(amb),aTb=a(g),aTe=a(alE),aTf=a(g),aTc=a(WD),aTd=a(g),aTg=a(Uz),aTh=a(g),aTi=a(Ro),aTj=a(g),aTk=a(Q_),aTl=a(g),aTm=a($V),aTn=a(g),aTo=a(acL),aTp=a(g),aTq=a($Q),aTr=a(g),aTs=a(U7),aTt=a(g),aTu=a(amo),aTv=a(g),aTw=a(anf),aTx=a(g),aTy=a(akE),aTz=a(g),aTA=a(ZX),aTB=a(g),aTC=a(VH),aTD=a(g),aTE=a(Wk),aTF=a(g),aTG=a(UO),aTH=a(g),aTI=a(aof),aTJ=a(g),aTK=a(Lb),aTL=a(g),aTM=a(ZE),aTN=a(g),aTO=a(ale),aTP=a(g),aTQ=a(akS),aTR=a(g),aTS=a(ahV),aTT=a(g),aTU=a(V2),aTV=a(g),aTW=a(Ya),aTX=a(g),aTY=a(_O),aTZ=a(g),aT0=a(af5),aT1=a(g),aT2=a(aaT),aT3=a(g),aT4=a($e),aT5=a(g),aT6=a(abS),aT7=a(g),aT8=a(V9),aT9=a(g),aT_=a(_U),aT$=a(g),aUc=a(Vo),aUd=a(g),aUa=a(M7),aUb=a(g),aUe=a(Ky),aUf=a(g),aUg=a(_Y),aUh=a(g),aUi=a(akJ),aUj=a(g),aUk=a(amS),aUl=a(g),aUm=a(ad2),aUn=a(g),aUo=a(alD),aUp=a(g),aMX=a(ek),aMW=a(dZ),aMU=a(aiX),aMV=a(qp),aMS=a(aiX),aMT=a(qp),aMO=a(ek),aMR=a(dZ),aMP=a(adC),aMQ=a(qp),aMK=a(ek),aMN=a(dZ),aML=a(adC),aMM=a(qp),aMD=a("ident_of_patt: this pattern is not an identifier"),aMC=a("ident_of_ctyp: this type is not an identifier"),aMB=a("ident_of_expr: this expression is not an identifier"),a2J=[0,[15,[12,58,[17,3,[15,0]]]],a("%a:@\n%a")],a2G=[0,[11,a(Q8),[2,0,[11,a(N4),[4,0,0,0,[11,a(wy),[4,0,0,0,[12,45,[4,0,0,0,0]]]]]]]],a('File "%s", line %d, characters %d-%d')],a2H=[0,[2,0,[11,a(" (end at line "),[4,0,0,0,[11,a(qV),[4,0,0,0,[12,41,0]]]]]],a("%s (end at line %d, character %d)")],a2e=a(q),a2i=a(q),a2f=a(q),a2g=a(bF),a2h=a(bF),a19=[0,[11,a(Ut),0],a(Ut)],a1_=[0,[12,91,[3,0,[11,a(eT),[4,0,0,0,[12,58,[4,0,0,0,[12,45,[4,0,0,0,[12,32,[4,0,0,0,bSo]]]]]]]]]],a("[%S: %d:%d-%d %d:%d%t]")],a1$=a("ghost-location"),a2I=a("Loc.Exc_located"),a2K=a("_loc"),a3l=a(q),a3k=a(q),a3j=a(q),a3i=a(q),a3m=a("invalid string token"),a3q=a(q),a3n=a(zW),a3o=a(q),a3p=a(zW),a3h=a(zW),a3e=a(q),a3f=a(q),a3d=[0,[15,0],a(dw)],a2$=[0,[11,a("Illegal token ("),[2,0,[12,41,0]]],a("Illegal token (%s)")],a3a=[0,[12,96,[2,0,[11,a("' is a keyword, it cannot be used as label name"),0]]],a("`%s' is a keyword, it cannot be used as label name")],a3b=[0,[11,a("Illegal token pattern: "),[2,0,[12,32,[3,0,0]]]],a("Illegal token pattern: %s %S")],a3c=[0,[11,a("Illegal constructor "),[3,0,0]],a("Illegal constructor %S")],a29=a("Cannot extract a string from this token: "),a2N=[0,[11,a(XM),0],a(XM)],a2O=[0,[11,a(mt),0],a(mt)],a2P=[0,[11,a("KEYWORD "),[3,0,0]],a("KEYWORD %S")],a2Q=[0,[11,a("SYMBOL "),[3,0,0]],a("SYMBOL %S")],a2R=[0,[11,a("LIDENT "),[3,0,0]],a("LIDENT %S")],a2S=[0,[11,a("UIDENT "),[3,0,0]],a("UIDENT %S")],a2T=[0,[11,a("ESCAPED_IDENT "),[3,0,0]],a("ESCAPED_IDENT %S")],a2U=[0,[11,a("INT "),[2,0,0]],a("INT %s")],a2V=[0,[11,a("INT32 "),[2,0,[12,ci,0]]],a("INT32 %sd")],a2W=[0,[11,a("INT64 "),[2,0,[12,ci,0]]],a("INT64 %sd")],a2X=[0,[11,a("NATIVEINT "),[2,0,[12,ci,0]]],a("NATIVEINT %sd")],a2Y=[0,[11,a("FLOAT "),[2,0,0]],a("FLOAT %s")],a2Z=[0,[11,a("CHAR '"),[2,0,[12,39,0]]],a("CHAR '%s'")],a20=[0,[11,a('STRING "'),[2,0,[12,34,0]]],a('STRING "%s"')],a21=[0,[11,a("LABEL "),[3,0,0]],a("LABEL %S")],a22=[0,[11,a("OPTLABEL "),[3,0,0]],a("OPTLABEL %S")],a23=[0,[11,a("QUOTATION { q_name="),[3,0,[11,a("; q_loc="),[3,0,[11,a("; q_shift="),[4,0,0,0,[11,a("; q_contents="),[3,0,[11,a(" }"),0]]]]]]]]],a("QUOTATION { q_name=%S; q_loc=%S; q_shift=%d; q_contents=%S }")],a24=[0,[11,a("ANTIQUOT "),[2,0,[11,a(eT),[3,0,0]]]],a("ANTIQUOT %s: %S")],a25=[0,[11,a("COMMENT "),[3,0,0]],a("COMMENT %S")],a26=[0,[11,a("BLANKS "),[3,0,0]],a("BLANKS %S")],a27=[0,[11,a(T9),[4,0,0,0,[12,32,[3,0,0]]]],a("LINE_DIRECTIVE %d %S")],a28=[0,[11,a(T9),[4,0,0,0,0]],a("LINE_DIRECTIVE %d")],a2_=a("Token.Make(Loc).Error.E"),a3I=[0,a(a1),jA,11],a3L=a("invalid alias type"),a3M=a(X2),a3N=a("manifest type not allowed here"),a3O=a(X2),a3P=a("locally abstract type not allowed here"),a3Q=a("record type not allowed here"),a3R=a("type1 : type2 not allowed here"),a3S=a("type1 ; type2 not allowed here"),a3T=a("sum type not allowed here"),a3U=a("type1 of type2 not allowed here"),a3V=a("type1 and type2 not allowed here"),a3W=a("type1 | type2 not allowed here"),a3X=a("private type not allowed here"),a3Y=a("mutable type not allowed here"),a3Z=[0,0],a30=a(pz),a3K=a(amM),a31=[0,a(a1),my,11],a32=[0,a(a1),pa,11],a33=a("unexpected `with constraint' for a package type"),a34=a("unexpected package type"),a4b=a("only one manifest type allowed by definition"),a4c=a(acR),a4d=a("invalid type extension"),a4e=a("manifest type not allowed for extensions"),a4f=a(acR),a4g=[0,a(a1),pQ,20],a4k=[0,a(a1),564,11],a4l=[0,a(a1),py,11],a4m=[0,a(a1),VI,11],a4n=a("substitution of types with module paths isn't allowed"),a4o=a("bad 'with module :=' constraint"),a4p=a("bad with constraint (antiquotation)"),a4q=a(UR),a4r=a("invalid alias pattern"),a4s=a(pz),a4t=a("this is not a constructor, it cannot be applied in a pattern"),a4u=[0,gj],a4v=[0,76],a4w=[0,fn],a4x=a(Ke),a4z=a("range pattern allowed only for characters"),a4A=a("singleton tuple pattern"),a4y=a(Ke),a4B=a(UR),a4G=a("lowercase identifier expected"),a44=a(dh),a4H=a(dh),a4I=a(dh),a4J=a(eR),a4K=a(qb),a4L=a(pz),a4M=a(pp),a4N=a(aoF),a4O=a("expr; expr: not allowed here, use do {...} or [|...|] to surround them"),a4P=[0,a(eh)],a4S=a(eR),a4T=a(SM),a4R=a("bad record access"),a4U=a(wO),a4V=a(aoF),a4W=a(wO),a4X=a(anO),a4Q=a("bad left part of assignment"),a4Y=[0,gj],a4Z=[0,76],a40=[0,fn],a41=a(ahj),a42=a(ahj),a43=a("empty record"),a45=a(pp),a46=a(anO),a47=a("singleton tuple"),a48=a("expr, expr: not allowed here"),a4F=a("bad ast in expression"),a4E=a("invalid expr"),a49=[0,a(a1),1025,19],a4$=[0,a(a1),1038,18],a4_=a(YR),a5a=[0,a(a1),1054,11],a5b=[0,a(a1),1061,11],a5c=[0,a(a1),YZ,14],a5d=[0,a(a1),1080,11],a5e=[0,a(a1),1087,11],a5f=[0,a(a1),1118,11],a5g=a(amf),a5h=a("only one type extension allowed"),a5i=a(amf),a5j=a("abstract/nil module type not allowed here"),a5k=a(dz),a5l=a(dz),a5m=a("module type variable not allowed here"),a5n=[0,a(a1),zy,36],a5p=[0,[0,0],0],a5o=[0,a(a1),wt,19],a5q=a("antiquotation in sig_item"),a5r=[0,a(a1),Ae,11],a5s=[0,a(a1),wB,11],a5t=a("nil module expression"),a5u=a(dz),a5v=a(dz),a5w=a("antiquotation in module_expr"),a5y=[0,[0,0],0],a5z=a("type in exception alias"),a5x=[0,a(a1),zs,21],a5A=a("antiquotation in str_item"),a5B=[0,a(a1),1330,8],a5C=a("invalid virtual class inside a class type"),a5D=a("bad class definition"),a5E=a("bad class/class type declaration/definition"),a5F=[0,a(a1),1379,19],a5G=[0,a(a1),1420,56],a5H=a("invalid virtual class inside a class expression"),a5I=a(q),a5J=[0,a(a1),1444,19],a5K=a(dZ),a5L=a(ek),a5M=[3,1],a5N=[3,0],a4D=a(YR),a4C=a(pz),a4i=a(q),a4j=a("bad ast in label"),a4h=[0,a(a1),pY,11],a3$=[0,[0,0],0],a4a=[0,0],a3_=[0,a(a1),qT,11],a38=[0,0],a39=[0,0],a37=[0,a(a1),Aj,11],a36=[0,a(a1),yL,11],a35=[0,a(a1),o9,11],a3J=[0,a(a1),p3,42],a3G=a("invalid type"),a3H=a("invalid type name"),a3F=a("uppercase identifier expected"),a3z=a(p7),a3A=a(p7),a3B=a(p7),a3C=a(p7),a3y=[0,a(a1),qs,11],a3x=[0,a(a1),jF,11],a3u=[0,a(a1),ep,11],a3t=[0,a(a1),md,11],a3v=[0,[0,a(ek),a(fo)],[0,[0,a(dZ),a(eh)],[0,[0,a(z3),a(ek)],[0,[0,a(yl),a(dZ)],0]]]],a3w=[0,[0,a(eR),a(vV)],0],a3D=a("invalid long identifier type"),a3E=a("invalid class name"),a3s=a("Longident.last"),a56=[2,a(y8)],a57=[2,a(_4)],a58=[2,a(_L)],a59=[2,a(Zz)],a5_=[2,a(Qm)],a5$=[1,a(dz)],a6a=a(q),a6b=a(q),a6c=a(yJ),a6d=[14,[0,a(q),a(q),2,a(q)]],a6e=a("<<>>"),a6f=a(Mb),a6g=a(aiB),a6h=a("$"),a6j=a(Mb),a6i=a(q),a6k=a(q),a6l=a(aiB),a6m=[15,a(q),a(q)],a6n=a(q),a55=[0,[11,a("Warning: "),[15,[11,a(eT),[15,[17,4,0]]]]],a("Warning: %a: %a@.")],a54=a(bF),a53=a(bF),a52=a(bF),a51=a(bF),a50=[0,[15,0],a(dw)],a5P=[0,[11,a(Xy),0],a(Xy)],a5Q=[0,[11,a(QQ),0],a(QQ)],a5R=[0,[11,a(aip),0],a(aip)],a5S=[0,[11,a(_G),0],a(_G)],a5T=[0,[11,a(X6),0],a(X6)],a5U=[0,[11,a(Rs),0],a(Rs)],a5V=[0,[11,a(_A),0],a(_A)],a5W=[0,[11,a("Illegal character ("),[2,0,[12,41,0]]],a("Illegal character (%s)")],a5X=[0,[11,a("Illegal backslash escape in string or character ("),[2,0,[12,41,0]]],a("Illegal backslash escape in string or character (%s)")],a5Y=[0,[11,a("Integer literal exceeds the range of representable integers of type "),[2,0,0]],a("Integer literal exceeds the range of representable integers of type %s")],a5Z=[0,[11,a("Invalid literal "),[2,0,0]],a("Invalid literal %s")],a5O=a("Lexer.Make(Token).Error.E"),a6F=a("DynAst.Make(Ast).Pack(X).Pack_error"),a6o=a(eW),a6p=a(eX),a6q=a(eL),a6r=a(gm),a6s=a(fC),a6t=a(lk),a6u=a(fq),a6v=a(eY),a6w=a(fp),a6x=a(gl),a6y=a(ft),a6z=a(gk),a6A=a(fy),a6B=a(eQ),a6C=a(e0),a6D=a(pi),a6E=a(mz),a61=a(q),a60=[0,[15,0],a(dw)],a6Q=[0,[18,[1,[0,[11,a(j),0],a(j)]],[2,0,[17,[0,a(i),1,0],[11,a("(in"),[17,[0,a(i),1,0],[12,97,[17,[0,a(i),1,0],[11,a("position"),[17,[0,a(i),1,0],[11,a("of "),bSp]]]]]]]]]],a("@[<2>%s@ (in@ a@ position@ of %a)@]@ ")],a6L=[0,[17,2,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("While "),[2,0,[12,32,[3,0,[11,a(" in a position of "),[3,0,[12,58,0]]]]]]]]],a("@?@[<2>While %s %S in a position of %S:")],a6K=a(q),a6M=a("finding quotation"),a6N=[0,[17,[0,a(i),1,0],[11,a("There is no quotation expander available."),0]],a("@ There is no quotation expander available.")],a6P=[0,[17,[0,a(i),1,0],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a("Available quotation expanders are:"),[17,3,0]]]],a("@ @[<hv2>Available quotation expanders are:@\n")],a6R=[0,[17,0,0],a(lU)],a6S=a("expanding quotation"),a6T=a("parsing"),a6U=a("parsing result of quotation"),a6V=[0,[11,a(abP),0],a(abP)],a6X=a(el),a6Y=[0,[15,[12,58,0]],a("%a:")],a6W=[0,[11,a("Error while dumping result in file "),[3,0,[11,a("; dump aborted"),0]]],a("Error while dumping result in file %S; dump aborted")],a6Z=[0,[11,a(Vv),0],a(Vv)],a6O=[0,[17,3,[15,[17,0,[17,4,0]]]],a("@\n%a@]@.")],a6I=a(q),a6H=a(q),a6J=a("Quotation.Make(Ast).Error.E"),a7x=[0,[17,[0,a(i),1,0],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a("- "),[15,0]]]],a("@ @[<hv2>- %a")],a7y=[0,[12,58,[15,0]],a(Z$)],a7A=[0,[12,58,[15,0]],a(Z$)],a7z=[0,[17,0,0],a(lU)],a7w=[0,[17,[0,a(i),1,0],[11,a(cS),0]],a(X1)],a7B=[0,[12,59,[17,[0,a(i),1,0],[15,0]]],a(";@ %a")],a7C=[0,[2,0,[17,[0,a(i),1,0],[11,a(XH),[17,[0,a(i),1,0],[3,0,0]]]]],a(LB)],a7D=[0,[11,a(qh),[15,0]],a(akj)],a7E=[0,[11,a(qh),[15,[11,a(rb),[15,0]]]],a(ah4)],a7F=[0,[11,a(o2),[15,0]],a(_S)],a7G=[0,[11,a(o2),[15,[11,a(rb),[15,0]]]],a(ams)],a7H=[0,[11,a(amQ),[15,0]],a(K_)],a7I=[0,[11,a(anB),[15,0]],a(ak2)],a7J=[0,[2,0,[12,32,[15,0]]],a(Tn)],a7K=[0,[12,32,0],a(cH)],a7N=[0,[12,40,[15,[12,41,0]]],a(gh)],a7L=a(aeP),a7M=a(LC),a7O=[0,[3,0,0],a(o3)],a7Z=[0,[18,[1,[0,[11,a(jC),0],a(jC)]],[2,0,[11,a(SQ),0]]],a(Sd)],a71=[0,[11,a(pN),0],a(pN)],a70=[0,[11,a(gn),[17,0,0]],a(Aa)],a7W=[0,[17,[0,a(ba),0,0],[11,a(fv),0]],a(VY)],a7P=[0,[16,[18,[1,[0,[11,a(jQ),0],a(jQ)]],0]],a("%t@[<v2>")],a7Q=[0,[3,0,[17,[0,a(qj),1,2],0]],a(Vs)],a7R=[0,[11,a(qD),0],a(qD)],a7X=[0,[11,a(pO),0],a(pO)],a7Y=[0,[11,a(rc),0],a(rc)],a7S=[0,[17,0,[17,[0,a(qj),1,2],0]],a(Ui)],a7T=[0,[18,[1,[0,[11,a(jQ),0],a(jQ)]],[11,a("suffix:"),[17,[0,a(i),1,0],0]]],a("@[<v2>suffix:@ ")],a7U=[0,[17,0,[17,[0,a(i),1,0],[18,[1,[0,[11,a(jQ),0],a(jQ)]],[11,a("prefix:"),[17,[0,a(i),1,0],0]]]]],a("@]@ @[<v2>prefix:@ ")],a7V=[0,[17,0,0],a(lU)],a62=[0,0,0],a63=[0,[2,0,[17,[0,a(i),1,0],[11,a(XH),[17,[0,a(i),1,0],[3,0,0]]]]],a(LB)],a64=[0,[11,a(qh),[15,0]],a(akj)],a65=[0,[11,a(qh),[15,[11,a(rb),[15,0]]]],a(ah4)],a66=[0,[11,a(o2),[15,0]],a(_S)],a67=[0,[11,a(o2),[15,[11,a(rb),[15,0]]]],a(ams)],a68=[0,[11,a(amQ),[15,0]],a(K_)],a69=[0,[11,a(anB),[15,0]],a(ak2)],a6_=[0,[2,0,[12,32,[15,0]]],a(Tn)],a6$=[0,[12,32,0],a(cH)],a7c=[0,[12,40,[15,[12,41,0]]],a(gh)],a7a=a(aeP),a7b=a(LC),a7d=[0,[3,0,0],a(o3)],a7g=[0,[12,59,[17,[0,a(i),1,0],0]],a(jJ)],a7f=[0,[16,[15,0]],a(RL)],a7e=[0,[18,[1,[0,[11,a(o7),0],a(o7)]],0],a("@[<hov 0>")],a7h=[0,[17,0,0],a(lU)],a7k=[0,[15,[11,a(fv),0]],a("%a| ")],a7j=[0,[16,[15,0]],a(RL)],a7i=[0,[18,[1,[0,[11,a(o7),0],a(o7)]],[11,a(g2),0]],a("@[<hov 0>[ ")],a7l=[0,[11,a(gn),[17,0,0]],a(Aa)],a7t=[0,[18,[1,[0,[11,a(jC),0],a(jC)]],[2,0,[11,a(SQ),0]]],a(Sd)],a7v=[0,[11,a(pN),0],a(pN)],a7u=[0,[11,a(gn),[17,0,0]],a(Aa)],a7q=[0,[17,[0,a(ba),0,0],[11,a(fv),0]],a(VY)],a7m=[0,[16,[18,[1,[0,[11,a(NJ),0],a(NJ)]],0]],a("%t@[<hov 2>")],a7n=[0,[3,0,[17,[0,a(qj),1,2],0]],a(Vs)],a7o=[0,[11,a(qD),0],a(qD)],a7r=[0,[11,a(pO),0],a(pO)],a7s=[0,[11,a(rc),0],a(rc)],a7p=[0,[17,0,[17,[0,a(qj),1,2],0]],a(Ui)],a72=a("] is empty"),a73=a("entry ["),a76=a(Ls),a77=a(dy),a78=a(dx),a79=a(dy),a7_=a(" level "),a7$=a(dx),a8a=a(ch),a8b=a(ch),a74=a(dy),a75=a(dx),a8e=[0,a("camlp4/Camlp4/Struct/Grammar/Failed.ml"),74,22],a8f=a(q),a8g=a(q),a8h=a(" then "),a8d=a(q),a8j=a(g0),a8i=a(g0),a8c=a(Ls),a8u=a(id),a8v=a(g0),a8w=a(id),a8x=a(g0),a8y=a(id),a8z=a(g0),a8A=a(id),a8B=a(g0),a8C=a(id),a8D=a(g0),a8E=a(id),a8F=a(g0),a8k=a(" expected after "),a8G=a(id),a8l=[0,[18,[1,[0,[11,a(jC),0],a(jC)]],[17,[0,a(ba),0,0],0]],a("@[<v 0>@,")],a8m=[0,[11,a(aon),[17,[0,a(ba),0,0],0]],a(alN)],a8n=[0,[11,a("Parse error in entry ["),[2,0,[11,a("], rule:"),[17,[0,a("@;<0 2>"),0,2],0]]]],a("Parse error in entry [%s], rule:@;<0 2>")],a8o=[0,[18,[1,[0,0,a(q)]],0],a(vY)],a8p=[0,[17,0,[17,[0,a(ba),0,0],0]],a("@]@,")],a8q=[0,[11,a(aon),[17,[0,a(ba),0,0],0]],a(alN)],a8r=[0,[17,0,[17,4,0]],a("@]@.")],a8s=a(g8),a8t=a(" (in ["),a8N=a(q),a8M=a(q),a8Q=a(q),a8P=a(q),a8O=a("parser_of_token_list"),a8I=[0,[11,a(PT),0],a(PT)],a8J=a(q),a8K=[0,[11,a(" in ["),[2,0,[12,93,0]]],a(" in [%s]")],a8L=[0,[12,10,[2,0,[15,[17,4,0]]]],a("\n%s%a@.")],a8H=a("unknown level "),a8T=[0,[0,[0,0],0]],a8S=[0,[11,a("rule "),[3,0,[11,a(" cannot be found in entry\n"),[2,0,0]]]],a("rule %S cannot be found in entry\n%s")],a8R=a("Delete.Rule_not_found"),a8Y=[0,0],a8X=a("illegal begin of "),a8W=[0,0],a8V=[0,[15,[17,3,0]],a(QO)],a8U=[0,[15,[17,3,0]],a(QO)],a80=a("failed"),a8Z=a(q),a8_=[0,[11,a(agZ),[2,0,[11,a(T0),[2,0,[11,a(aoy),0]]]]],a(aiz)],a8$=a(OV),a9a=[0,[11,a(agZ),[2,0,[11,a(T0),[2,0,[11,a(aoy),0]]]]],a(aiz)],a9b=a(OV),a9d=[0,[11,a('Error: entry not extensible: "'),[2,0,[11,a(l4),0]]],a('Error: entry not extensible: "%s"\n')],a9e=a(pX),a9c=[0,[11,a("<W> Grammar extension: in ["),[2,0,[11,a("] some rule has been masked"),[17,4,0]]]],a("<W> Grammar extension: in [%s] some rule has been masked@.")],a87=[0,[11,a(AA),[2,0,[11,a(xm),[2,0,[11,a(l4),0]]]]],a(wG)],a88=a(pX),a85=[0,[11,a(AA),[2,0,[11,a(xm),[2,0,[11,a(l4),0]]]]],a(wG)],a86=a(pX),a83=[0,[11,a(AA),[2,0,[11,a(xm),[2,0,[11,a(l4),0]]]]],a(wG)],a84=a(pX),a89=a("<top>"),a81=[0,[11,a('<W> Changing associativity of level "'),[2,0,[11,a(l4),0]]],a('<W> Changing associativity of level "%s"\n')],a82=[0,[11,a('<W> Level label "'),[2,0,[11,a('" ignored\n'),0]]],a('<W> Level label "%s" ignored\n')],a9j=a(bF),a9i=a(bF),a9g=a(bF),a9h=a(q),a9o=[0,a(g4),59,20],bdh=[0,[11,a(TJ),0],a(TJ)],bdi=[0,0,a(q)],bdg=[0,[17,0,[17,[0,a(i),1,0],[18,[1,[0,[11,a(j),0],a(j)]],[11,a(l6),[17,[0,a(i),1,0],0]]]]],a(S6)],bdf=a(eR),bde=a(ad5),bdb=[0,[2,0,[17,[0,a(i),1,0],0]],a("%s@ ")],bdd=[0,[2,0,[11,a("(*comm_loc: "),[15,[11,a(pA),[17,[0,a(i),1,0],0]]]]],a("%s(*comm_loc: %a*)@ ")],bdc=[0,[11,a("(*loc: "),[15,[11,a(pA),[17,[0,a(i),1,0],0]]]],a("(*loc: %a*)@ ")],bcT=a(q),bcU=a(yl),bcV=a(z3),bcW=a(dh),bcX=a(cS),bc8=[0,[11,a(cS),0],a(cS)],bc9=[0,[11,a(dh),0],a(dh)],bc_=[0,[11,a(ek),0],a(ek)],bc$=[0,[11,a(dZ),0],a(dZ)],bda=[0,[11,a(q6),0],a(q6)],bc2=a(dZ),bc3=a(ek),bc4=a(eR),bc5=[0,[11,a(vV),0],a(vV)],bc6=[0,[11,a(fo),0],a(fo)],bc7=[0,[11,a(eh),0],a(eh)],bcZ=[0,[11,a(zm),[2,0,[11,a(mc),0]]],a(v4)],bc0=[0,[2,0,[11,a(afK),0]],a(Kp)],bc1=[0,[11,a(zm),[2,0,[11,a(mc),0]]],a(v4)],bcY=[0,[11,a(ak9),[2,0,0]],a(_W)],bcQ=[0,[12,44,[17,[0,a(i),1,0],0]],a(pw)],bcR=[0,[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[12,41,[17,0,[17,[0,a(i),1,0],0]]]]]],a("@[<1>(%a)@]@ ")],bcS=[0,[15,[17,[0,a(i),1,0],0]],a("%a@ ")],bcP=[0,[18,[1,[0,[11,a(am),0],a(am)]],[15,[12,44,[17,[0,a(i),1,0],[15,[17,0,0]]]]]],a("@[<1>%a,@ %a@]")],bcO=[0,[12,33,0],a(qb)],bcN=[0,[11,a(qN),[17,[0,a(i),1,0],0]],a("mutable@ ")],bcM=[0,[11,a(Uj),[17,[0,a(i),1,0],0]],a("rec@ ")],bcL=[0,[11,a("nonrec"),[17,[0,a(i),1,0],0]],a("nonrec@ ")],bcK=[0,[11,a(fw),[17,[0,a(i),1,0],0]],a("virtual@ ")],bcJ=[0,[11,a(zB),[17,[0,a(i),1,0],0]],a("private@ ")],bcI=[0,[12,36,[2,0,[12,36,0]]],a("$%s$")],bcH=[0,[15,[12,59,[17,[0,a(i),1,0],[15,0]]]],a(rm)],bcG=[0,[18,[1,[0,[11,a(j),0],a(j)]],[17,[0,a(i),1,0],[11,a("_ ->"),[17,[0,a(i),1,0],[15,[17,0,0]]]]]],a("@[<2>@ _ ->@ %a@]")],bcD=[0,[15,[15,0]],a(qc)],bcF=[0,[17,[0,a(i),1,0],[11,a(fv),[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[11,a(ib),[17,[0,a(i),1,0],[15,[17,[0,a(i),1,0],[11,a(cQ),bSq]]]]]]]]]],a("@ | @[<2>%a@ when@ %a@ ->@ %a@]")],bcE=[0,[17,[0,a(i),1,0],[11,a(fv),[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[11,a(cQ),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]]]],a("@ | @[<2>%a@ ->@ %a@]")],bcC=[0,[11,a("(type "),[2,0,[12,41,0]]],a("(type %s)")],bcx=[0,[17,[0,a(i),1,0],0],a(i)],bcy=[0,0,a(q)],bcz=[0,[15,[12,32,[18,[1,[0,[11,a(bW),0],a(bW)]],[15,[12,61,[17,0,[17,[0,a(i),1,0],[15,0]]]]]]]],a("%a @[<0>%a=@]@ %a")],bcA=[0,[17,[0,a(i),1,0],0],a(i)],bcB=[0,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[11,a(a7),[17,[0,a(i),1,0],[15,0]]]]]]],a("%a :@ %a =@ %a")],bcw=[0,[15,[11,a(a7),[17,[0,a(i),1,0],[15,0]]]],a($p)],bcv=[0,[17,[0,a(i),1,0],[18,[1,[0,[11,a(j),0],a(j)]],[15,[11,a(a7),[17,[0,a(i),1,0],[15,[17,0,[12,59,0]]]]]]]],a("@ @[<2>%a =@ %a@];")],bcs=a(cS),bct=[0,0,0],bcu=a(eo),bcp=a(cS),bcq=[0,0,0],bcr=a(eo),bcl=[0,[12,59,[17,[0,a(i),1,0],0]],a(jJ)],bcm=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(g2),[15,[17,0,[11,a(gn),0]]]]],a("@[<2>[ %a@] ]")],bcn=[0,[11,a(g2),[15,[11,a(gn),0]]],a("[ %a ]")],bco=[0,[11,a(cS),0],a(cS)],bci=[0,[11,a(pW),[17,[0,a(i),1,0],0]],a(M9)],bcj=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,40,[15,[12,41,[17,0,0]]]]],a("@[<2>(%a)@]")],bck=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,0,0]]],a(ge)],bcg=[0,[17,[0,a(i),1,0],0],a(i)],bch=[0,[15,[17,[0,a(i),1,0],[11,a(cQ),[17,[0,a(i),1,0],[15,0]]]]],a("%a@ ->@ %a")],bce=[0,[17,[0,a(i),1,0],0],a(i)],bcf=[0,[15,[11,a(a7),[17,0,[17,[0,a(i),1,0],[15,0]]]]],a("%a =@]@ %a")],bcd=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(Ai),[17,[0,a(i),1,0],[15,[11,a(a7),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]]],a("@[<2>constraint@ %a =@ %a@]")],bcb=[0,[17,[0,a(i),1,0],[11,a(fv),0]],a(y$)],bcc=[0,[18,[1,[0,[11,a(az),0],a(az)]],[11,a(fv),[15,[17,0,0]]]],a("@[<hv0>| %a@]")],bca=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[11,a(a8),[17,[0,a(i),1,0],[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[11,a(cQ),[17,[0,a(i),1,0],[15,bSr]]]]]]]]]],a("@[<2>%a :@ @[<2>%a@ ->@ %a@]@]")],bb$=[0,[2,0,0],a(cA)],bb_=[0,[3,0,0],a(o3)],bb8=[0,[12,40,[2,0,[2,0,[12,41,0]]]],a(Zg)],bb9=[0,[2,0,[2,0,0]],a("%s%s")],bb7=[0,[17,[0,a(i),1,0],0],a(i)],bb6=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,40,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[12,41,[17,0,0]]]]]]]],a(KD)],bb4=a(dz),bb5=[0,[11,a(dh),0],a(dh)],bb2=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[11,a(a8),[17,[0,a(i),1,0],[15,[11,a(a7),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]]]],a("@[<2>%a :@ %a =@ %a@]")],bb3=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[11,a(a8),[17,[0,a(i),1,0],[15,[17,0,0]]]]]],a(Mk)],bb1=[0,[15,[11,a(a8),[17,[0,a(i),1,0],[15,0]]]],a(wq)],bbZ=a(qk),bb0=a("raise"),bbX=[0,[15,[12,46,[17,[0,a(ba),0,0],[15,0]]]],a(acy)],bbY=[0,[15,[17,[0,a(ba),0,0],[12,40,[15,[12,41,0]]]]],a("%a@,(%a)")],bbv=a("~-"),bbw=a("~-."),bbx=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("-."),[17,[0,a(i),1,0],[15,[17,0,0]]]]],a("@[<2>-.@ %a@]")],bby=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,45,[17,[0,a(i),1,0],[15,[17,0,0]]]]],a("@[<2>-@ %a@]")],bbz=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[2,0,[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a("@[<2>%a@ %s@ %a@]")],bbA=a(eo),bbt=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[15,[17,0,0]]]]],a(jE)],bbu=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[12,40,[15,[12,41,[17,0,0]]]]]]],a(qu)],bbr=[0,[12,44,[17,[0,a(i),1,0],0]],a(pw)],bbs=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[12,40,[15,[12,41,[17,0,0]]]]]]],a(qu)],bbp=[0,[17,[0,a(i),1,0],0],a(i)],bbq=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,0,0]]],a(ge)],bbB=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(q$),[17,[0,a(i),1,0],[11,a(eh),[17,0,0]]]]],a("@[<2>assert@ false@]")],bbC=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(q$),[17,[0,a(i),1,0],[15,[17,0,0]]]]],a("@[<2>assert@ %a@]")],bbE=a(eR),bbF=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[11,a(Ab),[17,[0,a(i),1,0],[15,[17,0,0]]]]]],a("@[<2>%a :=@ %a@]")],bbD=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[11,a(AQ),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a("@[<2>%a@ <-@ %a@]")],bbP=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(j),0],a(j)]],[11,a(q5),[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[18,[1,[0,bSs,a(j)]],[11,a(rq),[17,bSu,bSt]]]]]]]]]],a("@[<hv0>@[<2>if@ %a@]@ @[<2>then@ %a@]@ @[<2>else@ %a@]@]")],bbQ=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(vQ),[17,[0,a(i),1,0],[15,[17,0,0]]]]],a("@[<2>lazy@ %a@]")],bbT=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a(mm),[18,[1,[0,[11,a(j),0],a(j)]],[12,40,[15,[12,41,[17,0,[17,[0,a(i),1,0],[15,bSv]]]]]]]]]],a("@[<hv0>@[<hv2>object @[<2>(%a)@]@ %a@]@ end@]")],bbS=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a(x7),[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[11,a(em),[17,0,0]]]]]]]]],a(WH)],bbU=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a(mm),[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[12,41,bSw]]]]]]]]]],a("@[<hv0>@[<hv2>object @[<1>(%a :@ %a)@]@ %a@]@ end@]")],bbV=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("let open"),[15,[12,32,[15,[17,0,[17,[0,a(i),1,0],[18,[1,[0,bSx,a(j)]],[11,a(lV),[17,bSz,bSy]]]]]]]]]],a("@[<2>let open%a %a@]@ @[<2>in@ %a@]")],bbW=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(eZ),[17,[0,a(i),1,0],[15,[17,0,0]]]]],a(pu)],bbR=[0,[12,40,[15,[12,41,0]]],a(gh)],bbG=[0,[12,40,[15,[12,41,0]]],a(gh)],bbH=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(eZ),[17,[0,a(i),1,0],[12,95,[17,[0,a(i),1,0],[11,a(cQ),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]]]],a("@[<2>fun@ _@ ->@ %a@]")],bbJ=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(eZ),[17,[0,a(i),1,0],[15,[17,0,0]]]]],a(pu)],bbI=[0,[18,[1,[0,[11,a(az),0],a(az)]],[11,a(lz),[15,[17,0,0]]]],a("@[<hv0>function%a@]")],bbK=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(j),0],a(j)]],[11,a(mH),[15,[15,[17,0,[17,[0,a(i),1,0],[18,[1,[0,bSA,a(ay)]],[11,a(lV),[17,bSC,bSB]]]]]]]]]],a("@[<hv0>@[<2>let %a%a@]@ @[<hv2>in@ %a@]@]")],bbL=[0,[18,[1,[0,[11,a(bW),0],a(bW)]],[18,[1,[0,[11,a(j),0],a(j)]],[11,a(mH),[15,[15,[11,a(" in"),[17,0,[17,[0,a(i),1,0],[15,[17,0,0]]]]]]]]]],a("@[<0>@[<2>let %a%a in@]@ %a@]")],bbM=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("let module "),[15,[11,a(a7),[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[18,[1,bSD],[11,a(lV),bSE]]]]]]]]]],a("@[<2>let module %a =@ %a@]@ @[<2>in@ %a@]")],bbN=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(j),0],a(j)]],[11,a("match "),[15,[17,0,[17,[0,a(i),1,0],[11,a(ma),[17,0,[15,bSF]]]]]]]]]],a("@[<hv0>@[<hv0>@[<2>match %a@]@ with@]%a@]")],bbO=[0,[18,[1,[0,[11,a(bW),0],a(bW)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a(_F),[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[18,[1,[0,bSG,a(bW)]],[11,a(ma),[15,bSH]]]]]]]]]],a("@[<0>@[<hv2>try@ %a@]@ @[<0>with%a@]@]")],bbo=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(Pp),[17,[0,a(i),1,0],[15,[17,0,0]]]]],a("@[<2>new@ %a@]")],bbj=a(eR),bbk=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,33,[17,[0,a(ba),0,0],[15,[17,0,0]]]]],a("@[<2>!@,%a@]")],bbi=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[12,46,[17,[0,a(ba),0,0],[15,[17,0,0]]]]]],a("@[<2>%a.@,%a@]")],bbl=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[12,46,[17,[0,a(ba),0,0],[12,40,[15,[12,41,[17,0,0]]]]]]]],a("@[<2>%a.@,(%a)@]")],bbm=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[12,35,[17,[0,a(ba),0,0],[2,0,[17,0,0]]]]]],a("@[<2>%a#@,%s@]")],bbn=[0,[15,[12,46,[18,[1,[0,[11,a(am),0],a(am)]],[12,91,[17,[0,a(ba),0,0],[15,[17,0,[17,[0,a(ba),0,0],[12,93,0]]]]]]]]],a("%a.@[<1>[@,%a@]@,]")],baR=a(eo),baS=[0,[18,[1,[0,[11,a(bW),0],a(bW)]],[18,[1,[0,[11,a(j),0],a(j)]],[11,a(wn),[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[11,a(zv),[17,0,0]]]]]]]]],a("@[<0>@[<2>[|@ %a@]@ |]@]")],baT=[0,[15,[12,59,[17,[0,a(i),1,0],[15,0]]]],a(rm)],baU=[0,[12,39,[2,0,[12,39,0]]],a(Mw)],baW=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,40,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[11,a(Wg),[17,[0,a(i),1,0],[15,[12,41,bSI]]]]]]]]]],a("@[<2>(%a :@ %a :>@ %a)@]")],baV=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,40,[15,[11,a(Wg),[17,[0,a(i),1,0],[15,[12,41,[17,0,0]]]]]]]],a("@[<2>(%a :>@ %a)@]")],baX=a(q),baY=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[18,[1,[0,[11,a(j),0],a(j)]],[11,a("for "),[15,[11,a(a7),[17,[0,a(i),1,0],[15,[17,[0,a(i),1,0],[15,bSJ]]]]]]]]]],a("@[<hv0>@[<hv2>@[<2>for %a =@ %a@ %a@ %a@ do@]@ %a@]@ done@]")],baZ=a(q),ba0=a(gY),ba1=a(Lx),ba2=a(cB),ba4=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,dW,[2,0,[12,58,[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a(Sh)],ba3=[0,[12,dW,[2,0,0]],a(aoG)],ba6=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,63,[2,0,[12,58,[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a(QR)],ba5=[0,[12,63,[2,0,0]],a(ab2)],ba7=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a("{<"),[15,[17,0,[17,[0,a(i),1,0],[11,a(">}"),[17,0,0]]]]]]]],a("@[<hv0>@[<hv2>{<%a@]@ >}@]")],ba9=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[12,ck,[17,[0,a(i),1,0],[12,40,[15,[12,41,[17,[0,a(i),1,0],[11,a(ma),[15,bSK]]]]]]]]]],a("@[<hv0>@[<hv2>{@ (%a)@ with%a@]@ }@]")],ba8=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[12,ck,[15,[17,0,[17,[0,a(i),1,0],[12,cW,[17,0,0]]]]]]]],a("@[<hv0>@[<hv2>{%a@]@ }@]")],ba_=[0,[18,[1,[0,[11,a(agz),0],a(agz)]],[12,40,[15,[12,41,[17,0,0]]]]],a("@[<hv1>(%a)@]")],ba$=[0,[12,34,[2,0,[12,34,0]]],a(aeJ)],bba=[0,[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[12,41,[17,0,0]]]]],a(l$)],bbb=[0,[15,[12,44,[17,[0,a(i),1,0],[15,0]]]],a(MW)],bbc=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,40,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[12,41,[17,0,0]]]]]]]],a(KD)],bbd=[0,[12,96,[15,0]],a(v_)],bbe=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(Tr),[17,[0,a(i),1,0],[15,[17,[0,a(i),1,0],[11,a(wW),[17,[0,a(i),1,0],[15,[17,[0,a(i),1,0],[11,a(wJ),bSL]]]]]]]]]],a("@[<2>while@ %a@ do@ %a@ done@]")],bbf=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a(w4),[15,[17,0,[12,41,[17,0,0]]]]]]],a("@[<hv0>@[<hv2>(module %a@])@]")],bbg=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a(w4),[15,[11,a(ig),[15,[17,0,[12,41,[17,0,0]]]]]]]]],a("@[<hv0>@[<hv2>(module %a : %a@])@]")],bbh=[0,[11,a(il),[15,[11,a(ik),[17,5,[2,0,[12,32,[15,[11,a(g8),0]]]]]]]],a(ih)],baQ=[0,[12,40,[15,[12,41,0]]],a(gh)],baP=a(acp),baO=a(ajX),baL=[0,[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[17,[0,a(i),1,0],[11,a(pG),[17,[0,a(i),1,0],[15,[12,41,[17,0,0]]]]]]]]],a("@[<1>(%a@ as@ %a)@]")],baM=[0,[15,[12,59,[17,[0,a(i),1,0],[15,0]]]],a(rm)],baN=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[11,a(a7),[17,[0,a(i),1,0],[15,[17,0,0]]]]]],a(Ks)],baK=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[12,ep,[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a("@[<2>%a@ |@ %a@]")],baI=[0,[15,[12,44,[17,[0,a(i),1,0],[15,0]]]],a(MW)],baJ=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[11,a(gd),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a("@[<2>%a@ ..@ %a@]")],baD=a(eo),baE=[0,[11,a(pW),[17,[0,a(i),1,0],0]],a(M9)],baF=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,0,0]]],a(ge)],baG=[0,[12,59,[17,[0,a(i),1,0],0]],a(jJ)],baH=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,91,[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[12,93,0]]]]]]],a(zu)],baA=a(eo),baz=[0,[11,a("WARNING: strange pattern application of a non constructor"),[17,4,0]],a("WARNING: strange pattern application of a non constructor@.")],bat=[0,[17,[0,a(i),1,0],0],a(i)],bau=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,0,0]]],a(ge)],bax=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[15,[17,0,0]]]]],a(jE)],bay=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[12,40,[15,[12,41,[17,0,0]]]]]]],a(qu)],bav=[0,[12,44,[17,[0,a(i),1,0],0]],a(pw)],baw=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[12,40,[15,[12,41,[17,0,0]]]]]]],a(qu)],baB=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("lazy "),[15,[17,0,0]]]],a("@[<2>lazy %a@]")],baC=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("exception "),[15,[17,0,0]]]],a("@[<2>exception %a@]")],a$5=[0,[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[12,41,[17,0,0]]]]],a(l$)],a$6=[0,[12,95,0],a(bb)],a$7=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(wn),[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[11,a(zv),0]]]]]]],a("@[<2>[|@ %a@]@ |]")],a$8=[0,[12,39,[2,0,[12,39,0]]],a(Mw)],a$9=a(q),a$_=a(gY),a$$=a(Lx),baa=a(cB),bab=a(q),bad=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,dW,[2,0,[12,58,[17,[0,a(i),1,0],[12,40,[15,[12,41,[17,0,0]]]]]]]]],a("@[<2>~%s:@ (%a)@]")],bac=[0,[12,dW,[2,0,0]],a(aoG)],baf=a(q),bah=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(anR),[15,[12,41,[17,0,0]]]]],a("@[<2>?(%a)@]")],bag=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,63,[2,0,[12,58,[17,[0,a(ba),0,0],[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[12,41,[17,0,bSM]]]]]]]]]],a("@[<2>?%s:@,@[<1>(%a)@]@]")],bae=[0,[12,63,[2,0,0]],a(ab2)],bai=a(q),bak=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(anR),[15,[11,a(a7),[17,[0,a(i),1,0],[15,[12,41,[17,0,0]]]]]]]],a("@[<2>?(%a =@ %a)@]")],baj=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,63,[2,0,[12,58,[17,[0,a(ba),0,0],[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[11,a(a7),[17,bSO,bSN]]]]]]]]]],a("@[<2>?%s:@,@[<1>(%a =@ %a)@]@]")],bal=[0,[18,[1,[0,[11,a(ay),0],a(ay)]],[12,ck,[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[12,cW,0]]]]]]],a("@[<hv2>{@ %a@]@ }")],bam=[0,[12,34,[2,0,[12,34,0]]],a(aeJ)],ban=[0,[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[12,41,[17,0,0]]]]],a(l$)],bao=[0,[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[12,41,[17,0,0]]]]]]]],a(AN)],bap=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,35,[15,[17,0,0]]]],a(ND)],baq=[0,[12,96,[15,0]],a(v_)],bar=[0,[11,a(il),[15,[11,a(ik),[17,5,[2,0,[12,32,[15,[11,a(g8),0]]]]]]]],a(ih)],bas=[0,[11,a(w4),[2,0,[12,41,0]]],a("(module %s)")],a$4=[0,[15,[11,a(a8),[17,[0,a(i),1,0],[15,0]]]],a(wq)],a$E=[0,a(g4),755,19],a$G=[0,[12,95,0],a(bb)],a$H=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,35,[15,[17,0,0]]]],a(ND)],a$I=[0,[18,[1,[0,[11,a(j),0],a(j)]],[2,0,[12,58,[17,[0,a(i),1,0],[15,[17,0,0]]]]]],a("@[<2>%s:@ %a@]")],a$M=[0,[18,[1,[0,[11,a(bW),0],a(bW)]],[18,[1,[0,[11,a(j),0],a(j)]],[12,60,[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[12,62,[17,0,0]]]]]]]]],a("@[<0>@[<2><@ %a@]@ >@]")],a$L=[0,[18,[1,[0,[11,a(bW),0],a(bW)]],[18,[1,[0,[11,a(j),0],a(j)]],[12,60,[17,[0,a(i),1,0],[15,[12,59,[17,[0,a(i),1,0],[11,a(gd),[17,0,[17,bSQ,bSP]]]]]]]]]],a("@[<0>@[<2><@ %a;@ ..@]@ >@]")],a$K=[0,[11,a(agh),0],a(agh)],a$J=[0,[11,a(U4),0],a(U4)],a$N=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,63,[2,0,[12,58,[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a(QR)],a$O=[0,[12,39,[15,0]],a(OA)],a$P=[0,[11,a(ado),0],a(ado)],a$Q=[0,[11,a(P0),0],a(P0)],a$R=[0,[12,96,[15,0]],a(v_)],a$S=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,ck,[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[12,cW,0]]]]]]],a("@[<2>{@ %a@]@ }")],a$T=[0,[18,[1,[0,[11,a(bW),0],a(bW)]],[15,[17,0,0]]],a("@[<0>%a@]")],a$U=[0,[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[12,41,[17,0,0]]]]],a(l$)],a$V=[0,[15,[11,a(" *"),[17,[0,a(i),1,0],[15,0]]]],a("%a *@ %a")],a$W=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,91,[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[12,93,0]]]]]]],a(zu)],a$X=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("[>"),[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(ba),0,0],[12,93,0]]]]]]],a("@[<2>[>@ %a@]@,]")],a$Y=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(afO),[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(ba),0,0],[12,93,0]]]]]]],a("@[<2>[<@ %a@]@,]")],a$Z=[0,[17,[0,a(i),1,0],0],a(i)],a$0=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(afO),[17,[0,a(i),1,0],[15,[17,[0,a(i),1,0],[12,62,[17,[0,a(i),1,0],[15,[17,0,[17,bSS,bSR]]]]]]]]]],a("@[<2>[<@ %a@ >@ %a@]@ ]")],a$1=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(TW),[17,[0,a(i),1,0],[15,[17,0,[12,41,0]]]]]],a(agv)],a$2=[0,[11,a(gd),0],a(gd)],a$3=[0,[11,a(il),[15,[11,a(ik),[17,5,[2,0,[12,32,[15,[11,a(g8),0]]]]]]]],a(ih)],a$F=[0,[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[12,41,[17,0,0]]]]],a(l$)],a$k=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[11,a(pG),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a("@[<2>%a@ as@ %a@]")],a$l=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[11,a(cQ),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a(wN)],a$m=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[11,a(a7),[17,[0,a(i),1,0],[15,[17,0,0]]]]]],a(Ks)],a$n=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[15,[17,0,0]]]],a(Le)],a$q=[0,[11,a(a7),[17,[0,a(i),1,0],[15,0]]],a(S8)],a$o=[0,[17,[0,a(i),1,0],0],a(i)],a$p=[0,[17,[0,a(i),1,0],[15,0]],a(qY)],a$r=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[15,[17,0,[11,a(a7),[17,[0,a(i),1,0],[15,0]]]]]]],a("@[<2>%a%a@] =@ %a")],a$s=[0,[11,a("+'"),[15,0]],a("+'%a")],a$t=[0,[11,a("-'"),[15,0]],a("-'%a")],a$u=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[11,a(a8),[17,[0,a(i),1,0],[15,[17,0,0]]]]]],a(Mk)],a$v=[0,[18,[1,[0,0,a(q)]],[11,a(qN),[17,[0,a(i),1,0],[15,[11,a(a8),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]]],a("@[mutable@ %a :@ %a@]")],a$w=[0,[15,[12,59,[17,[0,a(i),1,0],[15,0]]]],a(rm)],a$x=a(amM),a$y=[0,[18,[1,[0,[11,a(ql),0],a(ql)]],[15,[17,[0,a(i),1,0],[18,[1,[0,[11,a(p2),0],a(p2)]],[11,a(acC),[17,[0,a(i),1,0],[15,[17,0,[17,0,0]]]]]]]]],a("@[<h>%a@ @[<3>of@ %a@]@]")],a$z=[0,[15,[17,[0,a(i),1,0],[11,a(za),[15,0]]]],a(ZU)],a$A=[0,[15,[17,[0,a(i),1,0],[11,a(fv),[15,0]]]],a("%a@ | %a")],a$B=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(qN),[17,[0,a(i),1,0],[15,[17,0,0]]]]],a("@[<2>mutable@ %a@]")],a$C=[0,[15,[17,[0,a(i),1,0],[12,38,[17,[0,a(i),1,0],[15,0]]]]],a("%a@ &@ %a")],a$D=[0,[18,[1,[0,[11,a(ql),0],a(ql)]],[15,[17,[0,a(i),1,0],[18,[1,[0,[11,a(p2),0],a(p2)]],[11,a("of &"),[17,[0,a(i),1,0],[15,[17,0,[17,0,0]]]]]]]]],a("@[<h>%a@ @[<3>of &@ %a@]@]")],a$e=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[15,[17,0,0]]]]],a(jE)],a$c=[0,[12,44,[17,[0,a(i),1,0],0]],a(pw)],a$d=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,40,[15,[12,41,[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a("@[<2>(%a)@ %a@]")],a$f=[0,[17,[0,a(i),1,0],0],a(i)],a$g=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[12,46,[17,[0,a(i),1,0],[15,[17,0,0]]]]]],a("@[<2>%a.@ %a@]")],a$h=[0,[17,[0,a(i),1,0],0],a(i)],a$i=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("type "),[15,[12,46,[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a("@[<2>type %a.@ %a@]")],a$j=[0,[18,[1,[0,0,a(q)]],[11,a(zB),[17,[0,a(i),1,0],[15,[17,0,0]]]]],a("@[private@ %a@]")],a$a=[0,[12,40,[15,[12,41,0]]],a(gh)],a$b=[0,[15,[17,[0,a(i),1,0],[11,a("* "),[15,0]]]],a("%a@ * %a")],a_W=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(QJ),[15,[14,0,0,[17,0,0]]]]],a("@[<2>class %a%(%)@]")],a_X=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(aeB),[15,[14,0,0,[17,0,0]]]]],a($6)],a_Y=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(q9),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]],a(ae3)],a_Z=[0,[17,[0,a(i),1,0],0],a(i)],a_0=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(xI),[17,[0,a(i),1,0],[15,[11,a(a8),[17,[0,a(i),1,0],[15,[11,a(a7),[17,[0,a(i),1,0],[15,bST]]]]]]]]]],a(ajR)],a_1=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(xQ),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]],a(Yu)],a_2=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(ij),[15,[11,a(a8),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]]]],a("@[<2>module %a :@ %a%(%)@]")],a_3=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(ij),[15,[17,[0,a(i),1,0],[12,61,[17,[0,a(i),1,0],[15,[17,0,0]]]]]]]],a("@[<2>module %a@ =@ %a@]")],a_4=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(ij),[15,[17,[0,a(i),1,0],[18,[1,[0,[11,a(bW),0],a(bW)]],[15,[17,0,[11,a(a8),[17,[0,a(i),1,0],[15,bSU]]]]]]]]]],a("@[<2>module %a@ @[<0>%a@] :@ %a%(%)@]")],a_5=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(an5),[15,[14,0,0,[17,0,0]]]]],a(aaw)],a_7=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(yd),[15,[11,a(a7),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]]]],a(abe)],a_6=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(yd),[15,[14,0,0,[17,0,0]]]]],a("@[<2>module type %a%(%)@]")],a_8=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(A1),[15,[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]]],a(NS)],a_9=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a(fF),[15,[12,32,[15,[17,0,[14,0,0,[17,0,0]]]]]]]]],a(ai8)],a__=[0,[18,[1,[0,[11,a(j),0],a(j)]],[2,0,[12,32,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]]]]],a("@[<2>%s %a :@ %a%(%)@]")],a_$=[0,[15,[14,0,0,0]],a(po)],a_D=[0,[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a(QJ),[15,[14,0,0,[17,0,0]]]]],a("@[<hv2>class %a%(%)@]")],a_E=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(aeB),[15,[14,0,0,[17,0,0]]]]],a($6)],a_F=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(q9),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]],a(ae3)],a_G=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(q9),[17,[0,a(i),1,0],[15,[11,a(a7),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]]]]],a("@[<2>exception@ %a =@ %a%(%)@]")],a_H=[0,a(g4),926,38],a_I=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("let _ ="),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]],a("@[<2>let _ =@ %a%(%)@]")],a_J=[0,[17,[0,a(i),1,0],0],a(i)],a_K=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(xI),[17,[0,a(i),1,0],[15,[11,a(a8),[17,[0,a(i),1,0],[15,[11,a(a7),[17,[0,a(i),1,0],[15,bSV]]]]]]]]]],a(ajR)],a_L=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(xQ),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]],a(Yu)],a_M=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(ij),[15,[11,a(a7),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]]]],a("@[<2>module %a =@ %a%(%)@]")],a_N=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(ij),[15,[17,[0,a(i),1,0],[18,[1,[0,[11,a(bW),0],a(bW)]],[15,[17,0,[11,a(a8),[17,[0,a(i),1,0],[15,bSW]]]]]]]]]],a("@[<2>module %a@ @[<0>%a@] :@ %a =@ %a%(%)@]")],a_O=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(ij),[15,[17,[0,a(i),1,0],[18,[1,[0,[11,a(bW),0],a(bW)]],[15,[17,0,[11,a(a7),[17,[0,a(i),1,0],[15,bSX]]]]]]]]]],a("@[<2>module %a@ @[<0>%a@] =@ %a%(%)@]")],a_P=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(ij),[15,[11,a(a8),[17,[0,a(i),1,0],[15,[11,a(a7),[17,[0,a(i),1,0],[15,[14,0,0,bSY]]]]]]]]]],a("@[<2>module %a :@ %a =@ %a%(%)@]")],a_Q=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(an5),[15,[14,0,0,[17,0,0]]]]],a(aaw)],a_R=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(yd),[15,[11,a(a7),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]]]],a(abe)],a_S=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(A1),[15,[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]]],a(NS)],a_T=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a(fF),[15,[12,32,[15,[17,0,[14,0,0,[17,0,0]]]]]]]]],a(ai8)],a_U=[0,[18,[1,[0,[11,a(j),0],a(j)]],[2,0,[12,32,[15,[15,[14,0,0,[17,0,0]]]]]]],a("@[<2>%s %a%a%(%)@]")],a_V=[0,[15,[14,0,0,0]],a(po)],a_t=[0,a(g4),am5,26],a_u=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(TW),[17,[0,a(i),1,0],[15,[17,0,[12,41,0]]]]]],a(agv)],a_v=a(dz),a_x=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(ly),[17,[0,a(i),1,0],[11,a(dh),[17,[0,a(i),1,0],[11,a(cQ),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]]]],a(aa$)],a_w=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(ly),[17,[0,a(i),1,0],[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[12,41,bSZ]]]]]]]]]],a(SS)],a_y=[0,[12,39,[15,0]],a(OA)],a_z=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a(w6),[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[11,a(em),[17,0,0]]]]]]]]],a("@[<hv0>@[<hv2>sig@ %a@]@ end@]")],a_A=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[11,a(ma),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a("@[<2>%a@ with@ %a@]")],a_B=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("module type of"),[17,[0,a(i),1,0],[15,[17,0,0]]]]],a("@[<2>module type of@ %a@]")],a_C=[0,[11,a(il),[15,[11,a(ik),[17,5,[2,0,[12,32,[15,[11,a(g8),0]]]]]]]],a(ih)],a_p=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(fF),[17,[0,a(i),1,0],[15,[11,a(a7),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]]],a("@[<2>type@ %a =@ %a@]")],a_q=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(A4),[17,[0,a(i),1,0],[15,[11,a(a7),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]]],a("@[<2>module@ %a =@ %a@]")],a_r=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(fF),[17,[0,a(i),1,0],[15,[11,a(Ab),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]]],a("@[<2>type@ %a :=@ %a@]")],a_s=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(A4),[17,[0,a(i),1,0],[15,[11,a(Ab),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]]],a("@[<2>module@ %a :=@ %a@]")],a_n=[0,a(g4),970,26],a_o=[0,[18,[1,[0,[11,a(j),0],a(j)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a(zN),[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[11,a("end :"),[17,[0,a(i),1,0],[18,bS1,bS0]]]]]]]]]],a("@[<2>@[<hv2>struct@ %a@]@ end :@ @[<hv2>sig@ %a@]@ end@]")],a_d=[0,a(g4),979,26],a_e=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(ba),0,0],[12,40,[15,[12,41,[17,0,0]]]]]]],a("@[<2>%a@,(%a)@]")],a_f=a(dz),a_h=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(ly),[17,[0,a(i),1,0],[11,a(dh),[17,[0,a(i),1,0],[11,a(cQ),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]]]],a(aa$)],a_g=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(ly),[17,[0,a(i),1,0],[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[12,41,bS2]]]]]]]]]],a(SS)],a_i=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a(zN),[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[11,a(em),[17,0,0]]]]]]]]],a("@[<hv0>@[<hv2>struct@ %a@]@ end@]")],a_j=[0,[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[12,41,[17,0,0]]]]]]]],a(AN)],a_l=[0,[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[2,0,[12,32,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[12,41,[17,0,0]]]]]]]]]],a("@[<1>(%s %a :@ %a)@]")],a_k=[0,[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[2,0,[12,32,[15,[12,41,[17,0,0]]]]]]],a("@[<1>(%s %a)@]")],a_m=[0,[11,a(il),[15,[11,a(ik),[17,5,[2,0,[12,32,[15,[11,a(g8),0]]]]]]]],a(ih)],a92=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[15,[17,0,0]]]]],a(jE)],a96=[0,[18,[1,[0,[11,a(j),0],a(j)]],[18,[1,[0,[11,a(am),0],a(am)]],[12,91,[15,[12,93,[17,0,[17,[0,a(i),1,0],[15,[17,0,0]]]]]]]]],a("@[<2>@[<1>[%a]@]@ %a@]")],a95=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,0,0]]],a(ge)],a94=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(fw),[17,[0,a(i),1,0],[18,[1,[0,[11,a(am),0],a(am)]],[12,91,[15,[12,93,[17,0,[17,[0,a(i),1,0],[15,bS3]]]]]]]]]],a("@[<2>virtual@ @[<1>[%a]@]@ %a@]")],a93=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(fw),[17,[0,a(i),1,0],[15,[17,0,0]]]]],a(q_)],a97=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(eZ),[17,[0,a(i),1,0],[15,[17,[0,a(i),1,0],[11,a(cQ),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]]]],a("@[<2>fun@ %a@ ->@ %a@]")],a98=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(mH),[15,[15,[17,0,[17,[0,a(i),1,0],[18,[1,[0,[11,a(j),0],a(j)]],[11,a(lV),[17,[0,a(i),1,0],[15,bS4]]]]]]]]]],a("@[<2>let %a%a@]@ @[<2>in@ %a@]")],a9_=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a(mm),[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[12,41,[17,0,[17,[0,a(i),1,0],[15,bS5]]]]]]]]]],a(ann)],a99=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a(mm),[15,[17,0,[17,[0,a(i),1,0],[11,a(em),[17,0,0]]]]]]]],a("@[<hv0>@[<hv2>object %a@]@ end@]")],a9$=[0,[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[12,41,[17,0,0]]]]]]]],a(AN)],a_b=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[15,0]]]],a("@[<2>%a@ %a")],a_a=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[11,a(a7),[17,0,[17,[0,a(i),1,0],[15,0]]]]]],a("@[<2>%a =@]@ %a")],a_c=[0,[11,a(il),[15,[11,a(ik),[17,5,[2,0,[12,32,[15,[11,a(g8),0]]]]]]]],a(ih)],a91=[0,a(g4),1035,11],a9U=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,91,[17,[0,a(ba),0,0],[15,[17,0,[17,[0,a(ba),0,0],[12,93,[17,[0,a(i),1,0],[15,0]]]]]]]]],a("@[<2>[@,%a@]@,]@ %a")],a9T=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,0,0]]],a(ge)],a9S=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(fw),[17,[0,a(i),1,0],[12,91,[17,[0,a(ba),0,0],[15,[17,0,[17,[0,a(ba),0,0],[12,93,[17,bS7,bS6]]]]]]]]]],a("@[<2>virtual@ [@,%a@]@,]@ %a")],a9R=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(fw),[17,[0,a(i),1,0],[15,[17,0,0]]]]],a(q_)],a9V=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[11,a(cQ),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a(wN)],a9X=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a(mm),[18,[1,[0,[11,a(am),0],a(am)]],[12,40,[15,[12,41,[17,0,[17,[0,a(i),1,0],[15,bS8]]]]]]]]]],a(ann)],a9W=[0,[18,[1,[0,[11,a(az),0],a(az)]],[18,[1,[0,[11,a(ay),0],a(ay)]],[11,a(x7),[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[11,a(em),[17,0,0]]]]]]]]],a(WH)],a9Y=[0,[15,[11,a(a8),[17,[0,a(i),1,0],[15,0]]]],a(wq)],a9Z=[0,[15,[11,a(a7),[17,[0,a(i),1,0],[15,0]]]],a($p)],a90=[0,[11,a(il),[15,[11,a(ik),[17,5,[2,0,[12,32,[15,[11,a(g8),0]]]]]]]],a(ih)],a9Q=[0,a(g4),1064,11],a9K=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(Ai),[17,[0,a(i),1,0],[15,[11,a(a7),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]]]]],a("@[<2>constraint@ %a =@ %a%(%)@]")],a9L=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(qF),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]],a("@[<2>inherit@ %a%(%)@]")],a9M=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("method "),[15,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]]]]],a("@[<2>method %a%a :@ %a%(%)@]")],a9N=[0,[18,[1,[0,[11,a(j),0],a(j)]],[2,0,[12,32,[15,[15,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[14,0,0,bS9]]]]]]]]]],a("@[<2>%s %a%a%a :@ %a%(%)@]")],a9O=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("method virtual "),[15,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]]]]],a("@[<2>method virtual %a%a :@ %a%(%)@]")],a9P=[0,[15,[14,0,0,0]],a(po)],a9z=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("constraint "),[15,[11,a(a7),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]]]],a("@[<2>constraint %a =@ %a%(%)@]")],a9A=a(q),a9C=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(qF),[15,[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]]],a("@[<2>inherit%a@ %a%(%)@]")],a9B=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(qF),[15,[17,[0,a(i),1,0],[15,[11,a(" as"),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]]]]]],a("@[<2>inherit%a@ %a as@ %a%(%)@]")],a9D=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(acI),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]],a("@[<2>initializer@ %a%(%)@]")],a9F=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(zF),[15,[12,32,[15,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[11,a(a7),bS_]]]]]]]]]],a("@[<2>method%a %a%a :@ %a =@ %a%(%)@]")],a9E=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(zF),[15,[12,32,[15,[15,[11,a(a7),[17,[0,a(i),1,0],[15,[14,0,0,bS$]]]]]]]]]],a("@[<2>method%a %a%a =@ %a%(%)@]")],a9G=[0,[18,[1,[0,[11,a(j),0],a(j)]],[2,0,[15,[12,32,[15,[15,[11,a(a7),[17,[0,a(i),1,0],[15,[14,0,0,bTa]]]]]]]]]],a("@[<2>%s%a %a%a =@ %a%(%)@]")],a9H=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("method virtual"),[17,[0,a(i),1,0],[15,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]]]]]],a("@[<2>method virtual@ %a%a :@ %a%(%)@]")],a9I=[0,[18,[1,[0,[11,a(j),0],a(j)]],[2,0,[11,a(" virtual "),[15,[15,[11,a(a8),[17,[0,a(i),1,0],[15,[14,0,0,[17,0,0]]]]]]]]]],a("@[<2>%s virtual %a%a :@ %a%(%)@]")],a9J=[0,[15,[14,0,0,0]],a(po)],a9x=[0,[18,[1,[0,[11,a(jI),0],a(jI)]],[15,[17,0,[17,4,0]]]],a(wh)],a9y=[0,[18,[1,[0,[11,a(bW),0],a(bW)]],[15,[14,0,0,[17,0,[17,4,0]]]]],a("@[<0>%a%(%)@]@.")],a9w=[0,[18,[1,[0,[11,a(jI),0],a(jI)]],[15,[17,0,[17,4,0]]]],a(wh)],a9v=a(q),a9u=a(q),a9t=[0,[11,a(LU),[3,0,[11,a(" this identifier does not respect OCaml lexing rules ("),[2,0,[12,41,0]]]]],a("Cannot print %S this identifier does not respect OCaml lexing rules (%s)")],a9s=[0,[11,a(LU),[3,0,[11,a(" this string contains more than one token"),0]]],a("Cannot print %S this string contains more than one token")],a9q=a(q),a9n=[0,[17,[0,a(i),1,0],0],a(i)],a9p=rx([61,60,62,ep,38,36,64,94,43,45,42,47,37,92]),a9r=rx([a(l6),a(pG),a(q$),a("begin"),a("class"),a(Ai),a(wW),a(wJ),a(acp),a(rj),a(em),a(q9),a(xI),a(eh),a("for"),a(eZ),a(lz),a(ly),a(q5),a(lV),a(xQ),a(qF),a(acI),a(vQ),a(ad5),a("match"),a(zF),a(A4),a(qN),a(Pp),a(x7),a(acC),a(A1),a("parser"),a(zB),a(Uj),a(w6),a(zN),a(rq),a(ajX),a(fo),a(_F),a(fF),a(eR),a(fw),a(ib),a(Tr),a(ma)]),a9k=[0,a(qn),a(h9),a("var_ident"),a(ls),a(jU),a(j1),a(l3),a(lo),a(lB),a(lP),a(eK),a(eY),a(qv),a(mk),a(lv),a(mr),a(fC),a(qd),a(q0),a(px),a(qB),a(lH),a(jZ),a(lL),a(jz),a(pK),a(g_),a(rf),a(pD),a(h3),a(rk),a(q8),a(lt),a(qG),a(pg),a(lr),a(qU),a(rn),a(p_),a(eX),a(io),a(pR),a(qz),a(lD),a(h8),a(gm),a(p4),a(qa),a(fq),a(lR),a(l_),a(mA),a(fy),a(lK),a(jw),a(eQ),a(pl),a(pB),a(oY),a(ln),a(lF),a(mw),a(eL),a(mu),a(g3),a(lw),a(eW),a(mj),a(Rb),a(jM),a(fp),a(gk),a(gl),a(mf),a(ft),a(mh),a(e0),a(ro),a(mv),a(mq)],a9l=[0,a(mv),a(eW),a(eL),a(gk),a(pK),a(pl),a(mj),a(lP),a(lD),a(mw),a(eX),a(lw),a(rf),a(jM),a(qz),a(lL),a(fy),a(lo),a(l3),a(lR),a(mq),a(qa),a(jz),a(q8),a(fC),a(pD),a(h9),a(g_),a(mf),a(lF),a(mr),a(lv),a(px),a(lB),a(e0),a(lH),a(ls),a(l_),a(io),a(qv),a(lt),a(jw),a(qB),a(pB),a(rk),a(ro),a(eK),a(gl),a(eY),a(ln),a(qn),a(jZ),a(oY),a(mA),a(p4),a(h3),a(lK),a(j1),a(jU),a(ft),a(q0),a(g3),a(qd),a(pR),a(fq),a(mk),a(fp),a(mh),a(gm),a(mu),a(eQ),a(qG),a(h8),a(p_),a(rn),a(qU),a(lr),a(pg)],a9m=[0,a(anW),a(xE),a(jZ),a(akL),a(QZ),a(ad4),a("var_conversion")],beI=[0,[12,59,0],a(l7)],beJ=[0,[12,59,0],a(l7)],beH=[0,[17,0,[17,[0,a(i),1,0],[18,[1,[0,[11,a(j),0],a(j)]],[11,a(l6),[17,[0,a(i),1,0],0]]]]],a(S6)],beG=a(ab1),beF=a(ab1),beB=[0,[15,[12,59,[17,[0,a(i),1,0],0]]],a("%a;@ ")],beC=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(mH),[15,[15,[17,0,[12,59,[17,[0,a(i),1,0],[15,0]]]]]]]],a(Zn)],beD=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(mH),[15,[15,[17,0,[12,59,[17,[0,a(i),1,0],[15,0]]]]]]]],a(Zn)],beE=[0,[12,40,[15,[12,41,0]]],a(gh)],beo=a(q),bep=a(yl),beq=a(z3),ber=a(dh),bes=a(cS),bew=[0,[11,a(cS),0],a(cS)],bex=[0,[11,a(dh),0],a(dh)],bey=[0,[11,a(ek),0],a(ek)],bez=[0,[11,a(dZ),0],a(dZ)],beA=[0,[11,a(q6),0],a(q6)],beu=[0,[11,a(zm),[2,0,[11,a(mc),0]]],a(v4)],bev=[0,[2,0,[11,a(afK),0]],a(Kp)],bet=[0,[11,a(ak9),[2,0,0]],a(_W)],bel=[0,[17,[0,a(i),1,0],0],a(i)],bem=[0,[17,[0,a(i),1,0],[18,[1,[0,[11,a(am),0],a(am)]],[15,[17,0,0]]]],a("@ @[<1>%a@]")],ben=[0,[17,[0,a(i),1,0],[15,0]],a(qY)],bek=[0,[17,[0,a(i),1,0],[11,a(g2),[15,[11,a(gn),0]]]],a("@ [ %a ]")],bej=[0,[17,[0,a(i),1,0],[11,a(cS),0]],a(X1)],bee=[0,[15,[15,0]],a(qc)],bei=[0,[17,[0,a(i),1,0],[11,a(fv),0]],a(y$)],beh=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[11,a(ib),[17,[0,a(i),1,0],[15,[17,[0,a(i),1,0],[11,a(cQ),[17,[0,a(i),1,0],[15,bTb]]]]]]]]]],a("@[<2>%a@ when@ %a@ ->@ %a@]")],beg=[0,[17,[0,a(i),1,0],[11,a(fv),0]],a(y$)],bef=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[11,a(cQ),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a(wN)],bed=[0,[18,[1,[0,[11,a(az),0],a(az)]],[11,a(g2),[15,[11,a(gn),[17,0,0]]]]],a("@[<hv0>[ %a ]@]")],bec=[0,[11,a(cS),0],a(cS)],beb=[0,[15,[17,[0,a(i),1,0],[15,0]]],a("%a@ %a")],bd$=[0,[15,[12,46,[17,[0,a(ba),0,0],[15,0]]]],a(acy)],bea=[0,[12,40,[15,[12,41,0]]],a(gh)],bd6=a(eo),bd7=[0,[12,59,[17,[0,a(i),1,0],0]],a(jJ)],bd8=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(g2),[15,[11,a(pW),[17,[0,a(i),1,0],[15,[11,a(gn),[17,0,0]]]]]]]],a(Pd)],bd9=[0,[12,59,[17,[0,a(i),1,0],0]],a(jJ)],bd_=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,91,[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[12,93,0]]]]]]],a(zu)],bd4=[0,[12,59,[17,[0,a(i),1,0],0]],a(jJ)],bd5=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(g2),[15,[11,a(pW),[17,[0,a(i),1,0],[15,[11,a(gn),[17,0,0]]]]]]]],a(Pd)],bdZ=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(q$),[17,[0,a(i),1,0],[11,a(dZ),[17,0,0]]]]],a("@[<2>assert@ False@]")],bd0=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[11,a(SM),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a("@[<2>%a@ :=@ %a@]")],bd2=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(eZ),[17,[0,a(i),1,0],[15,[17,0,0]]]]],a(pu)],bd1=[0,[18,[1,[0,[11,a(az),0],a(az)]],[11,a(eZ),[15,[17,0,0]]]],a("@[<hv0>fun%a@]")],bd3=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(eZ),[17,[0,a(i),1,0],[15,[17,0,0]]]]],a(pu)],bdX=a(eR),bdY=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[12,46,[17,[0,a(ba),0,0],[11,a(eR),[17,0,0]]]]]],a("@[<2>%a.@,val@]")],bdR=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[11,a(" =="),[17,[0,a(i),1,0],[15,[17,0,0]]]]]],a("@[<2>%a ==@ %a@]")],bdS=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[15,[17,0,0]]]],a(Le)],bdV=[0,[11,a(a7),[17,[0,a(i),1,0],[15,0]]],a(S8)],bdT=[0,[17,[0,a(i),1,0],0],a(i)],bdU=[0,[17,[0,a(i),1,0],[15,0]],a(qY)],bdW=[0,[18,[1,[0,0,a(q)]],[15,[11,a(a8),[17,[0,a(i),1,0],[11,a("mutable "),[15,[17,0,0]]]]]]],a("@[%a :@ mutable %a@]")],bdL=[0,[18,[1,[0,[11,a(j),0],a(j)]],[12,dW,[2,0,[12,58,[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a(Sh)],bdM=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[11,a("=="),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a("@[<2>%a@ ==@ %a@]")],bdN=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("[ ="),[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(i),1,0],[12,93,0]]]]]]],a("@[<2>[ =@ %a@]@ ]")],bdO=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("[ >"),[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(ba),0,0],[12,93,0]]]]]]],a("@[<2>[ >@ %a@]@,]")],bdP=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(_a),[17,[0,a(i),1,0],[15,[17,0,[17,[0,a(ba),0,0],[12,93,0]]]]]]],a("@[<2>[ <@ %a@]@,]")],bdQ=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(_a),[17,[0,a(i),1,0],[15,[17,[0,a(i),1,0],[12,62,[17,[0,a(i),1,0],[15,[17,0,[17,bTd,bTc]]]]]]]]]],a("@[<2>[ <@ %a@ >@ %a@]@ ]")],bdI=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[15,[17,0,0]]]]],a(jE)],bdG=[0,[17,[0,a(i),1,0],0],a(i)],bdH=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,0,0]]],a(ge)],bdJ=[0,[17,[0,a(i),1,0],0],a(i)],bdK=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a("! "),[15,[12,46,[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a("@[<2>! %a.@ %a@]")],bdF=[0,[15,[17,[0,a(i),1,0],[11,a(za),[15,0]]]],a(ZU)],bdE=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[14,0,0,[17,0,0]]]],a("@[<2>%a%(%)@]")],bdD=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[15,[17,0,0]]]]],a(jE)],bdC=[0,[12,40,[15,[12,41,0]]],a(gh)],bdB=[0,[18,[1,[0,[11,a(jI),0],a(jI)]],[15,[17,0,[17,4,0]]]],a(wh)],bdz=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[11,a(" ["),[17,[0,a(ba),0,0],[15,[17,0,[17,[0,a(ba),0,0],[12,93,0]]]]]]]],a("@[<2>%a [@,%a@]@,]")],bdy=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,0,0]]],a(ge)],bdx=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(fw),[17,[0,a(i),1,0],[15,[17,[0,a(i),1,0],[12,91,[17,[0,a(ba),0,0],[15,[17,0,[17,bTf,bTe]]]]]]]]]],a("@[<2>virtual@ %a@ [@,%a@]@,]")],bdw=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(fw),[17,[0,a(i),1,0],[15,[17,0,0]]]]],a(q_)],bdA=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(g2),[15,[11,a(" ] ->"),[17,[0,a(i),1,0],[15,[17,0,0]]]]]]],a("@[<2>[ %a ] ->@ %a@]")],bdv=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,[0,a(i),1,0],[18,[1,[0,[11,a(am),0],a(am)]],[12,91,[15,[12,93,[17,0,[17,0,0]]]]]]]]],a("@[<2>%a@ @[<1>[%a]@]@]")],bdu=[0,[18,[1,[0,[11,a(j),0],a(j)]],[15,[17,0,0]]],a(ge)],bdt=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(fw),[17,[0,a(i),1,0],[15,[17,[0,a(i),1,0],[18,[1,[0,[11,a(am),0],a(am)]],[12,91,[15,[12,93,[17,0,bTg]]]]]]]]]],a("@[<2>virtual@ %a@ @[<1>[%a]@]@]")],bds=[0,[18,[1,[0,[11,a(j),0],a(j)]],[11,a(fw),[17,[0,a(i),1,0],[15,[17,0,0]]]]],a(q_)],bdr=a(q),bdp=[0,a("where"),0],bdq=[0,a(eh),[0,a(lz),[0,a(fo),[0,a(eR),0]]]],bdj=[0,a(ls),a(jU),a(j1),a("unset_first_match_case"),a(l3),a(lo),a(lB),a(lP),a(eY),a(mk),a(lv),a(mr),a("set_first_match_case"),a(lH),a(lL),a(jz),a(g_),a(lt),a(lr),a(eX),a(lD),a(fq),a(lR),a(l_),a(mA),a(fy),a(jw),a(eQ),a(lF),a(mw),a(eL),a("dot_ident"),a(mu),a(lw),a(eW),a(mj),a(jM),a(fp),a(mf),a(ft),a(e0),a(mv),a(mq)],bdk=[0,a(jZ),a(xE),a(anW),a(akL)],bdl=[0,a(QZ),a(ad4),a("first_match_case")],bdm=[0,a(mv),a(eW),a(eL),a(gk),a(pK),a(pl),a(mj),a(lP),a(lD),a(mw),a(eX),a(lw),a(rf),a(jM),a(qz),a(lL),a(fy),a(lo),a(l3),a(lR),a(mq),a(qa),a(jz),a(q8),a(fC),a(pD),a(h9),a(g_),a(mf),a(lF),a(mr),a(lv),a(px),a(lB),a(e0),a(lH),a(ls),a(l_),a(io),a(qv),a(lt),a(jw),a(qB),a(pB),a(rk),a(ro),a(eK),a(gl),a(eY),a(ln),a(qn),a(jZ),a(oY),a(mA),a(p4),a(h3),a(lK),a(j1),a(jU),a(ft),a(q0),a(g3),a(qd),a(pR),a(fq),a(mk),a(fp),a(mh),a(gm),a(mu),a(eQ),a(qG),a(h8),a(p_),a(rn),a(qU),a(lr),a(pg)],bdn=[0,a(mq),a(mv),a(ro),a(e0),a(mh),a(ft),a(mf),a(gl),a(gk),a(fp),a(jM),a(mj),a(eW),a(lw),a(g3),a(mu),a(eL),a(mw),a(lF),a(ln),a(oY),a(pB),a(pl),a(eQ),a(jw),a(lK),a(fy),a(mA),a(l_),a(lR),a(fq),a(qa),a(p4),a(gm),a(h8),a(lD),a(qz),a(pR),a(io),a(eX),a(p_),a(rn),a(qU),a(lr),a(pg),a(qG),a(lt),a(q8),a(rk),a(h3),a(pD),a(rf),a(g_),a(pK),a(jz),a(lL),a(jZ),a(lH),a(qB),a(px),a(q0),a(qd),a(fC),a(mr),a(lv),a(mk),a(qv),a(eY),a(eK),a(lP),a(lB),a(lo),a(l3),a(j1),a(jU),a(ls),a(h9),a(qn)],beN=a("No implementation parser"),beL=a("No interface parser"),beP=a("2.8.3"),beS=a("Js.Error"),beT=a(ahY),beU=a(q),bBY=a(g7),beW=a(ch),beX=a(ch),beV=a("UString.gethd on empty string"),be8=a(bK),be7=a(bc),be6=a(dA),be5=[0,[2,0,[15,[2,0,[15,[2,0,0]]]]],a("%s%a%s%a%s")],be0=a(ch),be1=a(ch),be2=a("Utils.ExtList.NotFoundPartition"),bfe=[0,a("<string>"),1,1,0],bfd=[0,a(Mg),24,47],bfa=[0,a(Mg),15,1],be_=[0,[11,a(yI),[2,0,[11,a(lX),[4,0,0,0,[11,a(wy),[4,0,0,0,[12,45,[4,0,0,0,[10,0]]]]]]]]],a("file %s, line %d, characters %d-%d%!")],be$=[0,[11,a(yI),[2,0,[11,a(lX),[4,0,0,0,[11,a(qV),[4,0,0,0,[11,a(" to line "),[4,0,0,0,[11,a(qV),[4,0,0,0,bTh]]]]]]]]]],a("file %s, line %d, character %d to line %d, character %d%!")],bfb=a("<none>"),be9=[0,[11,a(yI),[2,0,[11,a(lX),[4,0,0,0,[11,a(qV),[4,0,0,0,[10,0]]]]]]],a("file %s, line %d, character %d%!")],bhm=a("failed to parse"),bhh=[0,[12,46,0],a(as)],bhg=[0,[12,91,[15,[12,93,0]]],a("[%a]")],bhf=[0,[11,a("&&( "),[15,[12,32,[15,[11,a(mc),0]]]]],a("&&( %a %a )")],bhe=[0,[12,34,[15,[12,34,0]]],a('"%a"')],bhd=[0,[12,33,[15,0]],a("!%a")],bhc=[0,[12,38,[15,0]],a("&%a")],bhb=[0,[12,63,[15,0]],a("?%a")],bha=[0,[12,40,[15,[11,a("\n\t/ "),[15,[12,41,0]]]]],a("(%a\n\t/ %a)")],bg9=[0,[2,0,[12,58,[15,[12,32,0]]]],a("%s:%a ")],bg_=[0,[15,[12,32,0]],a(amO)],bg8=[0,[12,40,0],a(bK)],bg$=[0,[15,[12,41,0]],a("%a)")],bg7=[0,[15,[15,0]],a(qc)],bg6=[0,[15,[15,0]],a(qc)],bg5=[0,[11,a(o8),0],a(o8)],bg4=[0,[12,40,[15,[11,a(")^"),0]]],a("(%a)^")],bg3=[0,[15,0],a(dw)],bg2=[0,[15,0],a(dw)],bgY=[0,a(eU)],bgZ=[0,a(bc)],bg0=[0,a(bK)],bg1=[0,[15,0],a(dw)],bgW=[0,[11,a("<< "),[2,0,[11,a(" >>"),0]]],a("<< %s >>")],bgV=[0,[15,0],a(dw)],bfh=[0,a("_const_name"),a("_const_i")],bfi=[0,a("_const_action"),a("_const_names"),a(Aq)],bfj=[0,a("_const_test"),a(Aq)],bfk=[0,a(W7),a(aj8)],bfl=[0,a(aj8),a(W7)],bfm=[0,a("_const_s")],bfn=[0,a("_const_chars")],bfo=[0,a("_const_id")],bfp=[0,a(dj),a(Ze),a(ae7)],bfq=[0,a(dj),a(ae7),a(Ze)],bfr=[0,a("_const_p2"),a("_const_p1")],bhl=a("Peg.IncompleteParse"),bho=[0,[0,a("fastrepV"),0],[0,[0,a("fastrep"),0],0]],bhp=a("StateEnvMonad.Make(E).CurCtx"),bi7=[0,a(c9),zp,27],bjR=[0,1],bjS=[0,[15,[11,a(ig),[15,[12,10,0]]]],a(_J)],bjQ=a("eta normalization"),bjN=[0,a(c9),1912,17],bjO=[0,a(c9),1904,74],bjP=[0,a(c9),1921,12],bjM=a("beta normalization"),bjL=[0,a(c9),1834,13],bjK=[0,a(c9),1827,13],bjJ=[0,0,0],bjH=[0,0],bjI=[0,[15,[11,a(ig),[15,[12,10,0]]]],a(_J)],bjG=a(".makam"),bjE=a(as),bjA=a("makam"),bjB=a("md"),bjC=[0,-389316849],bjD=[0,zz],bjx=a(as),bjv=a("typechecking"),bi9=[0,[11,a(cY),[2,0,[11,a(":\n  Term of type "),[15,[11,a(",\n  whereas expected a type of form "),[15,[11,a(gg),0]]]]]]],a("In %s:\n  Term of type %a,\n  whereas expected a type of form %a.\n")],bi_=[0,[2,0,0],a(cA)],bi$=a(q),bja=[0,[11,a(cY),[2,0,[11,a(S9),[15,[11,a(" needs to be unified with "),[15,[11,a(",\n  which contains it.\n"),0]]]]]]],a("In %s:\n  Type %a needs to be unified with %a,\n  which contains it.\n")],bjb=[0,[2,0,0],a(cA)],bjc=[0,0],bjd=[0,[11,a(cY),[2,0,[11,a(":\n  Variable "),[15,[11,a(" with type "),[15,[11,a(" does not exist.\n"),0]]]]]]],a("In %s:\n  Variable %a with type %a does not exist.\n")],bje=[0,[2,0,0],a(cA)],bjf=[0,[11,a(cY),[2,0,[11,a(":\n  Unknown type variable "),[15,[11,a(gg),0]]]]],a("In %s:\n  Unknown type variable %a.\n")],bjg=[0,[2,0,0],a(cA)],bjh=[0,a(c9),1429,59],bji=[0,[11,a(cY),[2,0,[11,a(S9),[2,0,[11,a(" used with "),[4,0,0,0,[11,a(" arguments instead of "),[4,0,0,0,[11,a(" as defined.\n"),0]]]]]]]]],a("In %s:\n  Type %s used with %d arguments instead of %d as defined.\n")],bjj=[0,[2,0,0],a(cA)],bjk=[0,[11,a(cY),[2,0,[11,a(":\n  Could not fully determine type; got as far as "),[15,[11,a(gg),0]]]]],a("In %s:\n  Could not fully determine type; got as far as %a.\n")],bjl=[0,[2,0,0],a(cA)],bjm=[0,[11,a(cY),[2,0,[11,a(":\n  The kind "),[15,[11,a(" is invalid.\n"),0]]]]],a("In %s:\n  The kind %a is invalid.\n")],bjn=[0,[2,0,0],a(cA)],bjo=[0,[11,a(cY),[2,0,[11,a(":\n  Abstraction over type is not allowed here.\n"),0]]],a("In %s:\n  Abstraction over type is not allowed here.\n")],bjp=[0,[2,0,0],a(cA)],bjq=[0,[11,a(cY),[2,0,[11,a(":\n  Rank-N-polymorphism not supported.\n"),0]]],a("In %s:\n  Rank-N-polymorphism not supported.\n")],bjr=[0,[2,0,0],a(cA)],bjs=a("<unknown>"),bjt=[0,[11,a(cY),[2,0,[11,a(":\n  (Unhandled error during typing.)\n"),0]]],a("In %s:\n  (Unhandled error during typing.)\n")],bju=[0,[2,0,0],a(cA)],bi6=[0,0],bi3=a(w2),bi4=[0,1],bi2=[0,1],bi1=[0,a(c9),930,14],bi0=[0,a(c9),xb,11],biZ=[0,a(c9),888,24],biX=[0,a(c9),877,24],biY=a("chase type deep"),biW=[0,a(c9),853,11],biV=[0,a(c9),862,11],biU=[0,a(c9),815,20],biS=[0,ax,[0,a(agc),0,0]],biR=a(agc),biP=[0,a(q)],biQ=[0,1],biN=[0,a(q)],biO=[0,1],biM=[0,a(c9),694,11],biK=a(bb),biL=a(bb),biJ=a(bb),biH=a(as),biE=a(as),biD=a(as),biC=a(as),biz=[0,1],biA=[0,a(c9),pT,9],bix=a(q),biu=a(q),bit=a(q),bhW=[0,[12,40,[15,[11,a(ig),[15,[12,41,0]]]]],a(adn)],bhZ=a(pm),bh0=a(gb),bhX=a(ii),bh1=a("??"),bhY=[0,[2,0,[12,91,[2,0,[12,93,0]]]],a("%s[%s]")],bh2=[0,[2,0,0],a(cA)],bh3=[0,a(cH)],bh4=[0,a(q)],bh5=[0,a(q)],bh6=a(eZ),bh7=[0,[2,0,[2,0,[12,32,[15,[11,a(aix),[15,[2,0,0]]]]]]],a("%s%s %a => %a%s")],bia=a("\x1b[33m"),bib=a("\x1b[0m"),bic=[0,[2,0,[15,[2,0,0]]],a(aov)],bh8=[0,a(cH)],bh9=[0,a(q)],bh_=[0,a(q)],bh$=[0,[2,0,[15,[2,0,0]]],a(aov)],bid=[0,[2,0,0],a(cA)],bie=[0,[11,a("{{ "),[2,0,[11,a(" }}"),0]]],a("{{ %s }}")],bhU=a(bc),bhV=a(bK),big=a(q),bih=a(q),bif=[0,[12,40,[15,[11,a(ig),[15,[12,41,0]]]]],a(adn)],bhS=[0,[12,40,[2,0,[11,a(ig),[15,[12,41,0]]]]],a("(%s : %a)")],bhT=[0,[2,0,0],a(cA)],bhQ=a(lZ),bhP=a(w2),bhI=[0,a(bK),a(bc)],bhJ=[0,a(q),a(q)],bhK=[0,[11,a(fF),0],a(fF)],bhM=[0,[2,0,[15,[11,a(" -> "),[15,[2,0,0]]]]],a("%s%a -> %a%s")],bhN=[0,[15,0],a(dw)],bhL=[0,[2,0,[2,0,[15,[15,[2,0,0]]]]],a("%s%s%a%a%s")],bhD=[0,0,a(q)],bhE=[0,a(cH)],bhF=[0,a(q)],bhG=[0,a(cH)],bhH=[0,[15,0],a(dw)],bhz=[0,[11,a("[t?"),[4,0,0,0,[12,93,0]]],a("[t?%d]")],bhA=[0,[11,a("[tf"),[4,0,0,0,[12,93,0]]],a("[tf%d]")],bhB=[0,[11,a(aoc),0],a(aoc)],bhC=[0,0,a(q)],bhx=a(OZ),bhy=a(XL),bhw=a(aog),bhu=a(OZ),bhv=a(XL),bht=a(aog),bhq=a(as),bhr=[0,ax,[0,a(eK),[0,[0,ad,0]],0]],bii=a("Termlangcanon.UnifyError"),bij=a("Termlangcanon.OccursCheck"),bik=a("Termlangcanon.WrongTermVar"),bil=a("Termlangcanon.WrongTypeVar"),bim=a("Termlangcanon.WrongTypeArity"),bin=a("Termlangcanon.UnknownType"),bio=a("Termlangcanon.InvalidKind"),bip=a("Termlangcanon.AbstractionOverType"),biq=a("Termlangcanon.RankNPolymorphism"),bir=a("Termlangcanon.NoGenericParsingYet"),bi8=a("Termlangcanon.TypingError"),bjy=a("Termlangcanon.NotInModule"),bjF=a("Termlangcanon.FileNotFound"),bjW=a(eK),bj0=a(y8),bj2=a(jN),bj4=a(lI),bj5=a(aT),bj6=a(lG),bj7=a(aT),bj9=a(mb),bj_=a(xR),bj$=a(xR),bka=a(T6),bkb=a(fo),bkd=a(eh),bkf=a(yj),bkg=a(aT),bkh=a(jO),bki=a(yj),bkj=a(yR),bkk=a(aT),bkl=a(yR),bkm=a(vL),bko=a(h6),bkp=a(h6),bkq=a(qH),bkx=[0,a(yw),rt,5],bkw=[0,a(yw),dW,8],bkv=[0,a(yw),lE,8],bku=a("backtrack warping"),blo=[0,a(aW),zq,6],bln=[0,a(aW),yf,15],blq=a(w2),blp=[0,a(aW),zT,13],bly=[0,a(aW),1360,14],bmz=[0,[15,[11,a(" ~~ "),[15,[12,10,[10,0]]]]],a("%a ~~ %a\n%!")],bmA=[0,[11,a(VK),[4,0,0,0,[12,44,[4,0,0,0,[11,a(ajJ),[15,[11,a(h5),[15,[12,10,[10,0]]]]]]]]]],a("   ~>> (%d,%d) %a ~ %a\n%!")],bmC=[0,[15,[11,a(" ~! "),[15,[11,a(Kr),0]]]],a("%a ~! %a FAILED\n")],bmD=a(aly),bmE=a("const mismatch"),bmB=a(aly),bmF=[0,[15,[11,a(" ~C~ "),[15,[12,10,[10,0]]]]],a("%a ~C~ %a\n%!")],bmG=[0,[15,[11,a(" ~(Cchased)~ "),[15,[12,10,[10,0]]]]],a("%a ~(Cchased)~ %a\n%!")],bnc=[0,[11,a(aoj),0],a(aoj)],bna=[0,1],bm$=[0,0,0,0,0],bm_=[0,[2,0,0],a(cA)],bm9=a(q),bnb=[0,1],bm6=[0,[11,a("Exit "),[15,[12,10,[10,0]]]],a("Exit %a\n%!")],bm7=[0,[11,a("Failed "),[15,[12,10,[10,0]]]],a("Failed %a\n%!")],bm8=[0,1],bm2=[0,1],bm3=[0,1],bm4=[0,[11,a("Enter "),[15,[12,10,[10,0]]]],a("Enter %a\n%!")],bm5=a(q),bm0=[0,[11,a(acq),[15,[11,a(" FAILURE\n"),[10,0]]]],a(" !! %a FAILURE\n%!")],bm1=[0,1],bmY=[0,[11,a(" *= "),[15,[12,10,[10,0]]]],a(" *= %a\n%!")],bmX=[0,[11,a("*** "),[15,[12,10,[10,0]]]],a("*** %a\n%!")],bmZ=[0,1],bne=[0,a(aW),abI,69],bnd=[0,a(aW),WL,84],bnf=[0,[11,a("demand "),[15,0]],a("demand %a")],boF=[0,1],boB=[0,[11,a(cY),[2,0,[11,a(":\n  The predicate in "),[15,[11,a(" is not concrete.\n"),0]]]]],a("In %s:\n  The predicate in %a is not concrete.\n")],boC=[0,[11,a(cY),[2,0,[11,a(":\n  The clause "),[15,[11,a(" is malformed.\n"),0]]]]],a("In %s:\n  The clause %a is malformed.\n")],boD=[0,[11,a(cY),[2,0,[11,a(":\n  The clause conclusion "),[15,[11,a(" specializes parametric type variables.\n  Expected type: "),[15,[11,a("\n  Actual type: "),[15,[12,10,0]]]]]]]]],a("In %s:\n  The clause conclusion %a specializes parametric type variables.\n  Expected type: %a\n  Actual type: %a\n")],boE=[0,[11,a(cY),[2,0,[11,a(":\n  Cannot add new clause to builtin predicate "),[2,0,[11,a(gg),0]]]]],a("In %s:\n  Cannot add new clause to builtin predicate %s.\n")],boy=[0,1],bow=[0,[11,a(MO),0],a(MO)],boi=a(as),bov=a(dv),boj=a(q),bor=[0,a(el)],bos=[0,a(el)],bot=[0,a(q)],bou=[0,[11,a("\nDeferred Constraints:\n"),[15,0]],a("\nDeferred Constraints:\n%a")],bok=[0,a(lm)],bol=[0,a(q)],bom=[0,a(q)],bon=[0,a(yB)],boo=[0,a(el)],bop=[0,a(q)],boq=[0,[11,a("Yes"),[2,0,[12,10,[15,[2,0,0]]]]],a("Yes%s\n%a%s")],boh=[0,[12,10,[15,[12,10,0]]],a("\n%a\n")],box=[0,1],bog=a(bb),boe=[0,0],boc=[0,K,[0,[0,a9,a(akC)],[0,ad,0]]],bod=[0,K,[0,[0,a9,a(akC)],[0,ad,0]]],bof=[0,0],bn_=[0,1],bn$=[0,1],boa=[0,ca,[0,0,0,0,0]],bob=[0,1],bn6=[0,a(aW),3211,15],bn1=[0,a(aW),3189,15],bnY=[0,a(aW),3173,15],bnV=[0,a(aW),3165,15],bnR=[0,a(aW),3143,69],bnS=[0,1],bnQ=[0,a(aW),adg,15],bnL=a(bb),bnM=[0,cr],bnK=[0,a(aW),3131,15],bnJ=[0,a(aW),zV,15],bnE=a(bb),bnF=[0,ad],bnD=[0,a(aW),3110,15],bnC=[0,a(aW),acX,15],bny=a(bb),bnx=[0,a(aW),3089,15],bnw=[0,a(aW),3091,15],bns=[0,a(aW),3068,15],bnr=[0,a(aW),3070,15],bno=[0,a(aW),3051,15],bnl=[0,a(aW),3038,15],bni=[0,a(aW),3026,15],bng=[0,a(aW),3017,15],bmW=[0,a(aW),2737,6],bmV=[0,a(aW),aim,11],bmU=[0,1],bmT=[0,a(aW),2659,72],bmS=[0,a(aW),UI,11],bmR=[0,1],bmM=[0,a(aW),2521,20],bmL=[0,1],bmK=[0,[11,a("pattcanonunify "),[15,[12,32,[15,0]]]],a("pattcanonunify %a %a")],bmI=[0,[11,a("pattunify "),[15,[12,32,[15,0]]]],a("pattunify %a %a")],bmv=a("fastfail"),bmt=[0,[11,a("chasedpattunify "),[15,[12,32,[15,0]]]],a("chasedpattunify %a %a")],bmf=[0,[11,a("invertunif "),[15,0]],a("invertunif %a")],bmg=a("invert and unify"),bme=a("did not match free/new var"),bmd=[0,[11,a(jY),[15,[11,a(h5),[15,[11,a(" -->\n   ~= FAILURE "),[2,0,[12,10,[10,0]]]]]]]],a("   ~ %a ~ %a -->\n   ~= FAILURE %s\n%!")],bmp=a(aoq),bmq=a("different modes"),bmr=[0,a(aW),ac0,17],bms=[0,[11,a(jY),[15,[11,a(Vk),[15,[11,a(v3),[15,[11,a(lm),[15,[12,10,[10,0]]]]]]]]]],a(Pb)],bmn=a(aoq),bmo=[0,[11,a(jY),[15,[11,a(Vk),[15,[11,a(v3),[15,[11,a(lm),[15,[12,10,[10,0]]]]]]]]]],a(Pb)],bmm=[0,a(aW),2131,17],bml=a(ao2),bmi=a(bb),bmj=[0,[11,a(jY),[15,[11,a(h5),[15,[11,a(v3),[15,[11,a(lm),[15,[12,10,[10,0]]]]]]]]]],a("   ~ %a ~ %a --!>\n   ~= %a := %a\n%!")],bmk=[0,[11,a("   ~>> "),[4,0,0,0,[12,32,[15,[11,a(h5),[15,[12,10,[10,0]]]]]]]],a("   ~>> %d %a ~ %a\n%!")],bmh=a(ao2),bmb=[0,0],bmc=a(_Q),bma=a("failed to invert"),bl_=[0,[11,a(jY),[15,[11,a(h5),[15,[11,a(_u),[15,[11,a(" :=F "),[15,[12,10,[10,0]]]]]]]]]],a("   ~ %a ~ %a -->\n   ~= %a :=F %a\n%!")],bl6=[0,[11,a(NB),0],a(NB)],bl5=[0,0],bl9=a(_Q),bl8=[0,[11,a("failed to invert "),[15,[11,a(" over s-1 = "),[15,0]]]],a("failed to invert %a over s-1 = %a")],bl7=[0,[11,a(jY),[15,[11,a(h5),[15,[11,a(_u),[15,[11,a(lm),[15,[12,10,[10,0]]]]]]]]]],a("   ~ %a ~ %a -->\n   ~= %a := %a\n%!")],bl4=[0,0],bl3=[0,1],bl0=[0,[11,a("occurscheck "),[15,0]],a("occurscheck %a")],bl1=a("pattern occurs check"),blS=a(bb),blT=a(bb),blU=[0,[11,a(VK),[4,0,0,0,[11,a(" ^ "),[4,0,0,0,[11,a(ajJ),[15,[11,a(h5),[15,[12,10,[10,0]]]]]]]]]],a("   ~>> (%d ^ %d) %a ~ %a\n%!")],blV=[0,1],blR=[0,a(aW),1694,18],blW=[0,1],blX=[0,a(aW),1688,11],blQ=[0,1],blP=[0,1],blN=[0,[11,a("chasepattcanon "),[15,0]],a("chasepattcanon %a")],blM=[0,1],blL=a("pattcanon chase deep"),blO=a("pattcanon chase"),blJ=[0,[11,a("chasepattneut "),[15,0]],a("chasepattneut %a")],blI=[0,1],blH=a("pattneut chase deep"),blK=a("pattneut chase"),blG=[0,a(aW),1539,9],blF=[0,[11,a(acq),[15,[11,a(" ~t "),[15,[11,a(Kr),[10,0]]]]]],a(" !! %a ~t %a FAILED\n%!")],blE=a("runtime type unification"),blD=[0,[15,[11,a(" ~(t)~ "),[15,[12,10,[10,0]]]]],a("%a ~(t)~ %a\n%!")],blB=a("typunify"),blC=a("runtime typ unification"),blA=[0,[15,[11,a(" ~t~ "),[15,[12,10,[10,0]]]]],a("%a ~t~ %a\n%!")],blv=[0,1],blw=[0,1],blt=[0,1],blu=[0,1],bls=[0,1],blr=[0,1],blk=[0,[11,a(LS),[4,0,0,0,[11,a("]\n"),0]]],a(" ~N name update for Meta[%d]\n")],bll=[0,[11,a(LS),[4,0,0,0,[11,a("] ends\n"),0]]],a(" ~N name update for Meta[%d] ends\n")],bli=[0,1],blj=a("name unification"),blf=[0,[11,a(zC),[2,0,[11,a(zC),[2,0,[11,a(" (actually "),[2,0,[11,a(zC),[2,0,[11,a(")\n"),[10,0]]]]]]]]]],a(" ~N %s ~N %s (actually %s ~N %s)\n%!")],blg=[0,[11,a("name clash between "),[2,0,[11,a(amA),[2,0,[12,10,[10,0]]]]]],a("name clash between %s and %s\n%!")],bld=[0,a(aW),wf,36],blc=[0,1],blb=[0,1],bla=[0,1],bk$=[0,1],bk_=[0,1],bk2=[0,[11,a("_/"),[4,0,0,0,0]],a("_/%d")],bk1=[0,[11,a(Ap),0],a(Ap)],bk8=[0,[11,a("\xce\xbd"),[4,0,0,0,0]],a("\xce\xbd%d")],bk3=[0,a(cH)],bk4=[0,a(q)],bk5=[0,a(q)],bk6=[0,[12,40,[15,[12,32,[15,[12,41,0]]]]],a("(%a %a)")],bk7=[0,[15,0],a(dw)],bk9=[0,[11,a("[:"),[15,[12,93,0]]],a("[:%a]")],bk0=[0,[2,0,0],a(cA)],bkZ=[0,[12,63,0],a(pm)],bkY=[0,0],bkX=[0,0],bkW=[0,0],bkR=a("expect fully annotated term"),bkS=a("exprToPatt"),bkQ=[0,a(aW),qm,9],bkP=a("!!"),bkN=a(bb),bkO=a(bb),bkL=a("x_"),bkM=a(bb),bkI=a(_b),bkJ=a("result 1"),bkK=a(o8),bkG=a(_b),bkF=[0,[11,a("result "),[4,0,0,0,0]],a("result %d")],bkE=a(o8),bkT=a("Termlangprolog.NewVarUsed"),blx=a("Termlangprolog.NeutToCanon"),blz=a("Termlangprolog.PattUnifyError"),blY=a("Termlangprolog.FastApplyHasMetas"),bmN=a("Termlangprolog.UnknownPredicate"),bmO=a("Termlangprolog.MalformedClause"),bmP=a("Termlangprolog.MalformedClauseTypecase"),bmQ=a("Termlangprolog.ClauseForBuiltin"),bnh=a(lu),bnj=a(Ri),bnm=a(l6),bnp=a(zb),bnt=a(aT),bnu=a(AC),bnz=a(aT),bnA=a(Wi),bnG=a(aT),bnH=a("newfmeta"),bnN=a(aT),bnO=a("newnmeta"),bnT=a(XQ),bnW=a(ae8),bnZ=a(AL),bn3=a(aT),bn4=a("guard"),bn8=a(aT),bn9=a("removableguard"),boz=a("Termlangprolog.PrologError"),boG=a("Termlangprolog.ResetInModule"),bql=[0,a(cj),zG,16],bqg=[0,a(cj),y0,16],bqa=[0,1],bp$=[0,1],bqb=[0,1],bp_=[0,a(cj),qC,72],bp9=[0,a(cj),pL,16],bp6=[0,a(cj),pP,60],bp5=[0,a(cj),ph,16],bp2=[0,[11,a("current metalevel: "),[15,[12,10,0]]],a("current metalevel: %a\n")],bp1=[0,a(cj),pj,16],bpV=[0,[15,[12,10,[10,0]]],a(ao0)],bpW=[0,0],bpX=[0,1],bpY=[0,1],bpU=[0,a(cj),qW,16],bpQ=[0,[2,0,[10,0]],a(Xv)],bpR=[0,1],bpP=[0,a(cj),pq,16],bpJ=[0,[15,0],a(dw)],bpK=[0,1],bpI=[0,a(cj),lO,16],bpD=[0,[15,[12,10,[10,0]]],a(ao0)],bpE=[0,1],bpC=[0,a(cj),qZ,16],bpy=[0,1],bpx=[0,a(cj),pJ,18],bpv=[0,a(cj),pf,16],bps=[0,a(cj),pZ,16],bpp=[0,a(cj),jA,16],bpl=a(q),bpk=[0,a(cj),Qe,5],bpi=[0,a(cj),mF,5],bo_=[0,a(cj),agk,20],bo7=[0,a(cj),mp,16],boX=[0,a(cj),jF,20],boO=[0,a(cj),rr,20],boN=[0,a9,a(yR)],boM=[0,1],boK=[0,a9,a(fo)],boL=[0,a9,a(eh)],boI=[0,a9,a(lG)],boJ=[0,a9,a(mb)],boH=[0,1],boW=a("plus"),bo5=a("mult"),bo8=a("lessthan"),bo9=a(eK),bpg=a("append"),bpn=a("explode"),bpq=a("capitalize"),bpt=a("uppercase"),bpw=a("lowercase"),bpz=a("char_latin1"),bpA=a("char_letter"),bpF=a(aT),bpG=a("print"),bpM=a(aT),bpN=a("tostring"),bpS=a("print_string"),bpZ=a(aT),bp0=a("cheapprint"),bp3=a("print_current_metalevel"),bp7=a(an6),bqd=a(aT),bqe=a(L1),bqi=a(aT),bqj=a("locget"),bqm=a(aT),bqo=a(aT),bqp=a("locset"),bsA=[0,[11,a("new term "),[2,0,[11,a(ig),[15,[12,10,0]]]]],a("new term %s : %a\n")],bsB=[0,1],bsC=[0,[11,a("new clause "),[15,[12,10,0]]],a("new clause %a\n")],bsD=[0,1],bsE=[0,[11,a(Q5),[2,0,[11,a(gg),0]]],a(afF)],bsz=[0,a(bO),xU,11],bsw=[0,[11,a(Q5),[2,0,[11,a(gg),0]]],a(afF)],bss=a(aaP),bsu=[0,1],bsv=[0,1],bst=[0,a(bO),q1,27],bsx=[0,0],bsy=a(aaP),bsl=a(q),bsm=a(Ul),bsn=a($0),bsk=[0,a(bO),z0,29],bsr=[0,a(bO),qE,22],bso=a(q),bsp=a(Ul),bsq=a($0),brW=[0,a(bO),q3,16],brX=[0,1],brY=[0,1],brV=[0,a(bO),pb,11],brO=[0,0],brP=[0,1],brN=[0,a(bO),wg,16],brL=[0,[11,a(acQ),0],a(acQ)],brH=[0,a(bO),qy,15],brA=[0,a(bO),my,15],brv=[0,a(bO),qw,15],brr=[0,a(bO),ps,12],brn=[0,a(bO),o1,12],brj=[0,a(bO),p1,12],brf=[0,a(bO),N,12],brb=[0,a(bO),v$,12],bq9=[0,a(bO),qg,17],bq4=[0,1],bq3=[0,a(bO),aji,15],bqY=[0,a(bO),p6,15],bqT=[0,1],bqS=[0,a(bO),js,15],bqP=[0,a(bO),rl,16],bqI=[0,a(bO),jV,13],bqC=[0,a(bO),83,18],bqB=[0,a(bO),mB,15],bqw=[0,a(bO),57,15],bqs=[0,a(bO),45,15],bqq=a("refl"),bqt=a(aT),bqu=a("lookup"),bqy=a(aT),bqz=a("headname"),bqE=a(jO),bqG=a(aT),bqH=a("headargs"),bqK=a(jO),bqM=a(aT),bqN=a("duphead"),bqQ=a("allconstants"),bqV=a(aT),bqW=a("assume_get"),bq0=a(aT),bq1=a("assume_reset"),bq6=a(aT),bq7=a("rules_get"),bq_=a(aT),bq$=a("isunif"),brc=a(aT),brd=a("isconst"),brg=a(aT),brh=a("isbaseterm"),brk=a(aT),brl=a("isfvar"),bro=a(aT),brp=a("isnvar"),brs=a(aT),brt=a("isfun"),brx=a(aT),bry=a("decomposeunif"),brB=a(aT),brE=a(aT),brF=a("recomposeunif"),brJ=a(aT),brK=a("unifmetalevel"),brQ=a(jO),brS=a(aT),brT=a("getunif"),brZ=a(aT),br1=a(jO),br3=a(jO),br5=a(aT),br6=a("absunif"),br7=a("cmd"),br8=a("cmd_newclause"),br_=a(aT),br$=a("cmd_newterm"),bsb=a("cmd_many"),bsd=a("cmd_stage"),bsf=a("cmd_none"),bsh=a("cmd_query"),bsJ=[0,a(el),0,1,1],bsK=[0,a(el),0,1,1],bsL=[0,a(el),0,1,1],bsM=[0,a(g9),0,1,1],bsN=[0,a(g9),0,1,1],bsO=[0,a(yJ),0,2,1],bsP=[0,a("^"),0,1,1],bsQ=[0,a(cB),0,1,1],bsR=[0,a("^n"),0,2,1],bsS=[0,a(vI),0,3,1],bsT=[0,a(vI),0,3,1],bsU=[0,a("0123456789abcdefABCDEF"),0,22,1],bsV=[0,a("0123456789"),0,10,1],bsW=[0,a("_'"),0,2,1],bsX=[0,a(as),0,1,1],bsY=[0,a(as),0,1,1],bsZ=a(as),bs0=[0,a(as),0,1,1],bs1=[0,a(as),0,1,1],bs2=a(as),bs3=[0,a(as),0,1,1],bs4=[0,a(as),0,1,1],bs5=a(as),bs6=a(as),bs7=[0,a(as),0,1,1],bs8=[0,a(as),0,1,1],bs9=a(as),btb=[0,a(bb),0,1,1],btc=[0,a(bb),0,1,1],btd=a(bb),bs_=[0,a(bb),0,1,1],bs$=[0,a(bb),0,1,1],bta=a(bb),bte=[0,a(mn),0,1,1],btf=[0,a("\\\"'ntbr"),0,7,1],bti=[0,a(mn),0,1,1],btg=[0,a(mn),0,1,1],bth=[0,a(lZ),0,1,1],btj=[0,a(ch),0,1,1],btk=[0,a(ch),0,1,1],btl=[0,a(dz),0,1,1],btm=[0,a(bc),0,1,1],btn=[0,a(pA),0,2,1],bto=[0,a(bK),0,1,1],btp=[0,a(dz),0,1,1],btq=[0,a("(*"),0,2,1],btr=[0,a(dz),0,1,1],bts=[0,a(bc),0,1,1],btt=[0,a(pA),0,2,1],btu=[0,a(ch),0,1,1],btv=[0,a(ch),0,1,1],btw=a(q),btA=[0,a(g9),0,1,1],btB=[0,a(g9),0,1,1],btC=[0,a(yJ),0,2,1],btx=[0,a(dU),0,1,1],bty=[0,a(dU),0,1,1],btz=[0,a(Oa),0,2,1],btD=[0,a(bc),0,1,1],btE=[0,a(bc),0,1,1],btF=[0,a(bK),0,1,1],btG=[0,a(bK),0,1,1],btJ=[0,a(bF),0,1,1],btK=[0,a(bF),0,1,1],btH=[0,a(g7),0,1,1],btI=[0,a(g7),0,1,1],btO=a(afp),btM=[0,a(adx),0,3,1],btN=[0,a(adx),0,3,1],btR=a(afp),btP=[0,a(qb),0,1,1],btQ=[0,a(qb),0,1,1],btU=a(afM),btS=[0,a(K7),0,3,1],btT=[0,a(K7),0,3,1],btX=a(afM),btV=[0,a(xF),0,1,1],btW=[0,a(xF),0,1,1],bt0=a("dbt_lookup"),btY=[0,a(c8),0,1,1],btZ=[0,a(c8),0,1,1],btL=a("dbt_constr"),bt4=[0,a(dy),0,1,1],bt5=[0,a(dy),0,1,1],bt2=[0,a(dx),0,1,1],bt3=[0,a(dx),0,1,1],bt7=[0,a(qr),0,1,1],bt8=[0,a(qr),0,1,1],bt_=[0,a(ch),0,1,1],bt$=[0,a(ch),0,1,1],bua=a(q),bt1=a("dbt_int"),bub=a(ank),bt9=a(ank),bt6=a("dbt_list"),buc=a(lG),bue=a(mb),bud=a(lG),buk=[0,a(as),0,1,1],bul=[0,a(as),0,1,1],bui=[0,a(c8),0,1,1],buj=[0,a(c8),0,1,1],bur=[0,a(as),0,1,1],bus=[0,a(as),0,1,1],bup=[0,a(bb),0,1,1],buq=[0,a(bb),0,1,1],bun=[0,a(c8),0,1,1],buo=[0,a(c8),0,1,1],buf=[0,a(as),0,1,1],bug=[0,a(as),0,1,1],buh=a("dbt_lam"),but=a("dbt_magicnu"),bum=a("dbt_nu"),buu=[0,a("_'-"),0,3,1],buw=[0,a(ef),0,1,1],bux=[0,a(en),0,1,1],buy=[0,a(dX),0,1,1],buz=[0,a(cG),0,1,1],buA=[0,a(WV),0,4,1],buB=[0,a(cG),0,1,1],buC=[0,a(h1),0,1,1],buD=[0,a(dj),0,1,1],buE=[0,a(aX),0,1,1],buF=[0,a(fF),0,4,1],buv=[0,0],buN=[0,0],buJ=[0,a(yx),0,1,1],buK=[0,a(dU),0,1,1],buL=[0,a(wR),0,2,1],buG=[0,a(bF),0,1,1],buH=[0,a(dU),0,1,1],buI=[0,a(cQ),0,2,1],buM=a(vL),buO=[0,a(dz),0,1,1],buP=[0,a(dz),0,1,1],buS=[0,a(bF),0,1,1],buT=[0,a(dU),0,1,1],buU=[0,a(cQ),0,2,1],buQ=[0,a(dv),0,1,1],buR=[0,a(dv),0,1,1],buX=[0,a(dy),0,1,1],buY=[0,a(dy),0,1,1],buV=[0,a(dx),0,1,1],buW=[0,a(dx),0,1,1],bu1=[0,a(dv),0,1,1],bu2=[0,a(dv),0,1,1],buZ=[0,a(dA),0,1,1],bu0=[0,a(dA),0,1,1],bu3=a("_parse_defBM"),bu8=[0,a(bc),0,1,1],bu9=[0,a(bc),0,1,1],bu6=[0,a(dv),0,1,1],bu7=[0,a(dv),0,1,1],bu4=[0,a(bK),0,1,1],bu5=[0,a(bK),0,1,1],bvc=a(Wi),bva=[0,a(dy),0,1,1],bvb=[0,a(dy),0,1,1],bu_=[0,a(dx),0,1,1],bu$=[0,a(dx),0,1,1],bvd=[0,a(dv),0,1,1],bve=[0,a(dv),0,1,1],bvj=[0,a(bc),0,1,1],bvk=[0,a(bc),0,1,1],bvh=[0,a(bK),0,1,1],bvi=[0,a(bK),0,1,1],bvf=a(lu),bvg=a(h6),bvr=[0,a(pV),0,1,1],bvs=[0,a(xG),0,1,1],bvt=[0,a($7),0,2,1],bvl=[0,a(x4),0,1,1],bvm=[0,a(fu),0,1,1],bvn=[0,a(gb),0,1,1],bvo=[0,a(cG),0,1,1],bvp=[0,a(pV),0,1,1],bvq=[0,a("{dbt|"),0,5,1],bvB=[0,a(pV),0,1,1],bvC=[0,a(xG),0,1,1],bvD=[0,a($7),0,2,1],bvu=[0,a(x4),0,1,1],bvv=[0,a(dj),0,1,1],bvw=[0,a(dX),0,1,1],bvx=[0,a(en),0,1,1],bvy=[0,a(dj),0,1,1],bvz=[0,a(pV),0,1,1],bvA=[0,a("{prop|"),0,6,1],bvM=a(yj),bvK=[0,a(bc),0,1,1],bvL=[0,a(bc),0,1,1],bvI=[0,a(dA),0,1,1],bvJ=[0,a(dA),0,1,1],bvG=[0,a(dA),0,1,1],bvH=[0,a(dA),0,1,1],bvE=[0,a(bK),0,1,1],bvF=[0,a(bK),0,1,1],bvV=a(mb),bvS=[0,a(dy),0,1,1],bvT=[0,a(dy),0,1,1],bvQ=[0,a(dA),0,1,1],bvR=[0,a(dA),0,1,1],bvO=[0,a(dx),0,1,1],bvP=[0,a(dx),0,1,1],bvW=[0,a(ch),0,1,1],bvX=[0,a(ch),0,1,1],bvY=a(q),bvZ=[0,a(Lo),0,1,1],bv0=[0,a(Lo),0,1,1],bv1=[0,a(bb),0,1,1],bv2=[0,a(bb),0,1,1],bv3=a(bb),bv4=[0,a(bb),0,1,1],bv5=[0,a(bb),0,1,1],bv6=a(bb),bvU=a(lG),bvN=[0,a("grammars/makamGrammar.ml"),4242,69],bwg=[0,a(dv),0,1,1],bwh=[0,a(bF),0,1,1],bwi=[0,a(N1),0,2,1],bwk=[0,a(g9),0,1,1],bwl=[0,a(bF),0,1,1],bwm=[0,a(AQ),0,2,1],bwo=[0,a(qA),0,1,1],bwp=[0,a(ia),0,1,1],bwq=[0,a(aX),0,1,1],bwr=[0,a(cB),0,1,1],bws=[0,a(ib),0,4,1],bwA=[0,a(dv),0,1,1],bwB=[0,a(bF),0,1,1],bwC=[0,a(N1),0,2,1],bwv=[0,a(qA),0,1,1],bww=[0,a(ia),0,1,1],bwx=[0,a(aX),0,1,1],bwy=[0,a(cB),0,1,1],bwz=[0,a(ib),0,4,1],bwa=[0,a(g9),0,1,1],bwb=[0,a(bF),0,1,1],bwc=[0,a(AQ),0,2,1],bv7=[0,a(qA),0,1,1],bv8=[0,a(ia),0,1,1],bv9=[0,a(aX),0,1,1],bv_=[0,a(cB),0,1,1],bv$=[0,a(ib),0,4,1],bwd=a(qH),bwD=a(qH),bwt=a(lu),bwu=a(qH),bwn=a(h6),bwj=a(h6),bwe=a(lu),bwf=a(h6),bwM=[0,a(aX),0,1,1],bwN=[0,a(gY),0,1,1],bwO=[0,a(ef),0,1,1],bwP=[0,a(aX),0,1,1],bwQ=[0,a(rj),0,4,1],bwH=[0,a(cG),0,1,1],bwI=[0,a(ia),0,1,1],bwJ=[0,a(aX),0,1,1],bwK=[0,a(cB),0,1,1],bwL=[0,a(rq),0,4,1],bwE=[0,a(ju),0,1,1],bwF=[0,a(ii),0,1,1],bwG=[0,a(q5),0,2,1],bwR=a(ae8),bw0=a(AC),bwZ=a(XQ),bwX=[0,a(bc),0,1,1],bwY=[0,a(bc),0,1,1],bwU=[0,a(bF),0,1,1],bwV=[0,a(dU),0,1,1],bwW=[0,a(cQ),0,2,1],bwS=[0,a(bK),0,1,1],bwT=[0,a(bK),0,1,1],bxa=[0,a(bc),0,1,1],bxb=[0,a(bc),0,1,1],bw_=[0,a(bK),0,1,1],bw$=[0,a(bK),0,1,1],bw5=[0,a(en),0,1,1],bw6=[0,a(cB),0,1,1],bw7=[0,a(g6),0,1,1],bw8=[0,a(aX),0,1,1],bw9=[0,a(AL),0,4,1],bxk=a(zb),bxh=[0,a(bc),0,1,1],bxi=[0,a(bc),0,1,1],bxf=[0,a(l7),0,1,1],bxg=[0,a(l7),0,1,1],bxd=[0,a(bK),0,1,1],bxe=[0,a(bK),0,1,1],bw3=[0,a(bc),0,1,1],bw4=[0,a(bc),0,1,1],bw1=[0,a(bK),0,1,1],bw2=[0,a(bK),0,1,1],bxj=a(Ri),bxc=a(AL),bxs=[0,a(dv),0,1,1],bxt=[0,a(dv),0,1,1],bxu=[0,a(eo),0,2,1],bxB=[0,a(yx),0,1,1],bxC=[0,a(dU),0,1,1],bxD=[0,a(wR),0,2,1],bxw=[0,a(dj),0,1,1],bxx=[0,a(ii),0,1,1],bxy=[0,a(ee),0,1,1],bxz=[0,a(cB),0,1,1],bxA=[0,a(Ty),0,4,1],bxp=[0,a(yx),0,1,1],bxq=[0,a(dU),0,1,1],bxr=[0,a(wR),0,2,1],bxl=[0,a(ii),0,1,1],bxm=[0,a(ee),0,1,1],bxn=[0,a(cB),0,1,1],bxo=[0,a(eZ),0,3,1],bxv=a(mb),bxH=a(l6),bxE=[0,a(dA),0,1,1],bxF=[0,a(dA),0,1,1],bxG=a(lu),bxZ=[0,a(dA),0,1,1],bx0=[0,a(dA),0,1,1],bxT=[0,a(cG),0,1,1],bxU=[0,a(dX),0,1,1],bxV=[0,a(fz),0,1,1],bxW=[0,a(g6),0,1,1],bxX=[0,a(aX),0,1,1],bxY=[0,a(L1),0,5,1],bx1=[0,a(en),0,1,1],bx2=[0,a(cB),0,1,1],bx3=[0,a(gY),0,1,1],bx4=[0,a(h1),0,1,1],bx5=[0,a(bb),0,1,1],bx6=[0,a(cG),0,1,1],bx7=[0,a(h1),0,1,1],bx8=[0,a(dj),0,1,1],bx9=[0,a(aX),0,1,1],bx_=[0,a(g6),0,1,1],bx$=[0,a(ia),0,1,1],bya=[0,a(aX),0,1,1],byb=[0,a(g6),0,1,1],byc=[0,a(p9),0,1,1],byd=[0,a("only_typecheck"),0,14,1],bye=[0,a(gY),0,1,1],byf=[0,a(en),0,1,1],byg=[0,a(ga),0,1,1],byh=[0,a("log"),0,3,1],byi=[0,a(gb),0,1,1],byj=[0,a(aX),0,1,1],byk=[0,a(cB),0,1,1],byl=[0,a(g6),0,1,1],bym=[0,a(ia),0,1,1],byn=[0,a(eS),0,1,1],byo=[0,a(fz),0,1,1],byp=[0,a(dX),0,1,1],byq=[0,a(p9),0,1,1],byr=[0,a("benchmark"),0,9,1],bys=[0,a(g6),0,1,1],byt=[0,a(en),0,1,1],byu=[0,a(cB),0,1,1],byv=[0,a(ef),0,1,1],byw=[0,a(cG),0,1,1],byx=[0,a(dX),0,1,1],byy=[0,a(fz),0,1,1],byz=[0,a(ju),0,1,1],byA=[0,a(cB),0,1,1],byB=[0,a(cG),0,1,1],byC=[0,a(ef),0,1,1],byD=[0,a("constraints"),0,11,1],byE=[0,a(fu),0,1,1],byF=[0,a(aX),0,1,1],byG=[0,a(gb),0,1,1],byH=[0,a(ee),0,1,1],byI=[0,a(ga),0,1,1],byJ=[0,a(ef),0,1,1],byK=[0,a(cG),0,1,1],byL=[0,a(fz),0,1,1],byM=[0,a(ga),0,1,1],byN=[0,a(aX),0,1,1],byO=[0,a("debugstage"),0,10,1],byP=[0,a(fu),0,1,1],byQ=[0,a(aX),0,1,1],byR=[0,a(gb),0,1,1],byS=[0,a(ee),0,1,1],byT=[0,a(ga),0,1,1],byU=[0,a(cG),0,1,1],byV=[0,a(h1),0,1,1],byW=[0,a(dj),0,1,1],byX=[0,a(aX),0,1,1],byY=[0,a(ef),0,1,1],byZ=[0,a("debugtypes"),0,10,1],by0=[0,a(fu),0,1,1],by1=[0,a(aX),0,1,1],by2=[0,a(gb),0,1,1],by3=[0,a(ee),0,1,1],by4=[0,a(ga),0,1,1],by5=[0,a(cB),0,1,1],by6=[0,a(fz),0,1,1],by7=[0,a(eS),0,1,1],by8=[0,a(aX),0,1,1],by9=[0,a(ef),0,1,1],by_=[0,a("debugnames"),0,10,1],by$=[0,a(fu),0,1,1],bza=[0,a(aX),0,1,1],bzb=[0,a(gb),0,1,1],bzc=[0,a(ee),0,1,1],bzd=[0,a(ga),0,1,1],bze=[0,a(ii),0,1,1],bzf=[0,a(ee),0,1,1],bzg=[0,a(gY),0,1,1],bzh=[0,a(gY),0,1,1],bzi=[0,a("debugfull"),0,9,1],bzj=[0,a(fu),0,1,1],bzk=[0,a(aX),0,1,1],bzl=[0,a(gb),0,1,1],bzm=[0,a(ee),0,1,1],bzn=[0,a(ga),0,1,1],bzo=[0,a(an6),0,5,1],bzz=[0,[11,a("Current module: "),[15,[12,10,0]]],a("Current module: %a\n")],bAy=[0,a(fz),0,1,1],bAz=[0,a(ef),0,1,1],bAA=[0,a(pG),0,2,1],bxI=[0,a(ee),0,1,1],bxJ=[0,a(ef),0,1,1],bxK=[0,a(aX),0,1,1],bxL=[0,a("use"),0,3,1],bAr=[0,a(ju),0,1,1],bAs=[0,a(eS),0,1,1],bAt=[0,a(dj),0,1,1],bAu=[0,a(en),0,1,1],bAv=[0,a(dX),0,1,1],bAw=[0,a(cG),0,1,1],bAx=[0,a(UC),0,6,1],bAk=[0,a(ju),0,1,1],bAl=[0,a(eS),0,1,1],bAm=[0,a(dj),0,1,1],bAn=[0,a(en),0,1,1],bAo=[0,a(dX),0,1,1],bAp=[0,a(cG),0,1,1],bAq=[0,a(UC),0,6,1],bAd=[0,a(aX),0,1,1],bAe=[0,a(lZ),0,1,1],bAf=[0,a(cG),0,1,1],bAg=[0,a(aX),0,1,1],bAh=[0,a(cB),0,1,1],bAi=[0,a(fu),0,1,1],bAj=[0,a("extend"),0,6,1],bz$=[0,a(aX),0,1,1],bAa=[0,a(cB),0,1,1],bAb=[0,a(fu),0,1,1],bAc=[0,a(em),0,3,1],bz1=[0,a(fu),0,1,1],bz2=[0,a(ju),0,1,1],bz3=[0,a(dX),0,1,1],bz4=[0,a(aX),0,1,1],bz5=[0,a(g6),0,1,1],bz6=[0,a(cG),0,1,1],bz7=[0,a(en),0,1,1],bz8=[0,a(dX),0,1,1],bz9=[0,a(h1),0,1,1],bz_=[0,a("directory"),0,9,1],bzS=[0,a(cG),0,1,1],bzT=[0,a(h1),0,1,1],bzU=[0,a(dj),0,1,1],bzV=[0,a(aX),0,1,1],bzW=[0,a(cB),0,1,1],bzX=[0,a(en),0,1,1],bzY=[0,a(dX),0,1,1],bzZ=[0,a(eS),0,1,1],bz0=[0,a("typenorm"),0,8,1],bzN=[0,a(cG),0,1,1],bzO=[0,a(h1),0,1,1],bzP=[0,a(dj),0,1,1],bzQ=[0,a(aX),0,1,1],bzR=[0,a(fF),0,4,1],bzH=[0,a(dX),0,1,1],bzI=[0,a(aX),0,1,1],bzJ=[0,a(ef),0,1,1],bzK=[0,a(aX),0,1,1],bzL=[0,a(cG),0,1,1],bzM=[0,a(jz),0,5,1],bzA=[0,a(ee),0,1,1],bzB=[0,a(ef),0,1,1],bzC=[0,a(aX),0,1,1],bzD=[0,a(cB),0,1,1],bzE=[0,a(aX),0,1,1],bzF=[0,a(qA),0,1,1],bzG=[0,a("usenew"),0,6,1],bzp=[0,a(g6),0,1,1],bzq=[0,a(ee),0,1,1],bzr=[0,a(dX),0,1,1],bzs=[0,a(eS),0,1,1],bzt=[0,a(en),0,1,1],bzu=[0,a(fu),0,1,1],bzv=[0,a(ee),0,1,1],bzw=[0,a(gY),0,1,1],bzx=[0,a(aX),0,1,1],bzy=[0,a("curmodule"),0,9,1],bxM=[0,a(ii),0,1,1],bxN=[0,a(en),0,1,1],bxO=[0,a(dX),0,1,1],bxP=[0,a(ga),0,1,1],bxQ=[0,a(aX),0,1,1],bxR=[0,a(cG),0,1,1],bxS=[0,a("forget"),0,6,1],bAB=a("_parse_clauseBM"),bAH=[0,a(as),0,1,1],bAI=[0,a(as),0,1,1],bAF=[0,a(yy),0,1,1],bAG=[0,a(yy),0,1,1],bAL=a(wQ),bAM=a(wQ),bAJ=[0,a(pm),0,1,1],bAK=[0,a(pm),0,1,1],bAU=a(wQ),bAV=a("total staged commands"),bAS=[0,a(as),0,1,1],bAT=[0,a(as),0,1,1],bAQ=[0,a(bc),0,1,1],bAR=[0,a(bc),0,1,1],bAN=[0,a(c8),0,1,1],bAO=[0,a(bK),0,1,1],bAP=[0,a("`("),0,2,1],bAY=a(aau),bAZ=a(aau),bAW=[0,a(as),0,1,1],bAX=[0,a(as),0,1,1],bAE=a("total defs"),bAC=[0,a(as),0,1,1],bAD=[0,a(as),0,1,1],bA0=a("total"),bA1=[0,a(dU),0,1,1],bA2=[0,a(dU),0,1,1],bA3=[0,a(Oa),0,2,1],bBc=[0,a(c8),0,1,1],bBd=[0,a(c8),0,1,1],bBe=[0,a(c8),0,1,1],bBf=[0,a(el),0,1,1],bBg=[0,a("```\n"),0,4,1],bA4=[0,a(c8),0,1,1],bA5=[0,a(c8),0,1,1],bA6=[0,a(c8),0,1,1],bA7=[0,a(eS),0,1,1],bA8=[0,a(fz),0,1,1],bA9=[0,a(p9),0,1,1],bA_=[0,a(fz),0,1,1],bA$=[0,a(eS),0,1,1],bBa=[0,a(el),0,1,1],bBb=[0,a(abO),0,9,1],bBh=[0,a(c8),0,1,1],bBi=[0,a(c8),0,1,1],bBj=[0,a(c8),0,1,1],bBk=[0,a(eS),0,1,1],bBl=[0,a(fz),0,1,1],bBm=[0,a(p9),0,1,1],bBn=[0,a(fz),0,1,1],bBo=[0,a(eS),0,1,1],bBp=[0,a(el),0,1,1],bBq=[0,a(abO),0,9,1],bsF=[0,a(q5),[0,a(rq),[0,a(rj),[0,a(ib),[0,a(fF),[0,a(eZ),[0,a(Ty),[0,a(WV),0]]]]]]]],bsH=a("MakamGrammar.Forget"),bBr=rx([[0,a("whiteNoNewline"),0],[0,a("whiteNoComment"),0],[0,a("white"),0],[0,a("typconstr"),0],[0,a("typ"),0],[0,a("toplevel"),0],[0,a("tokenW"),0],[0,a("token"),0],[0,a("to_EOL"),0],[0,a("tident"),0],[0,a("strchar"),0],[0,a("str"),0],[0,a("repplusWHITE"),0],[0,a("repplusV"),0],[0,a("repplusSEP"),0],[0,a("repplus"),0],[0,a("repWHITE"),0],[0,a("repV"),0],[0,a("repSEP"),0],[0,a("rep"),0],[0,a("qualident"),0],[0,a(vL),0],[0,a("prologcmdvoid"),0],[0,a("prologcmd1"),0],[0,a("prologcmd"),0],[0,a("ocamlrevtext"),0],[0,a("ocamlrevquote"),0],[0,a("ocamlrevchar"),0],[0,a("num"),0],[0,a(AC),0],[0,a("newmetas"),0],[0,a("namepref"),0],[0,a("multtyp"),0],[0,a("ltyp"),0],[0,a("ltoken"),0],[0,a("lparenthesized"),0],[0,a("loced"),0],[0,a("lmonotyp"),0],[0,a("literate_line"),0],[0,a("literate_cmd"),0],[0,a("literate"),0],[0,a("lexpr"),0],[0,a("letterchar"),0],[0,a("latin1char"),0],[0,a("identrstchar"),0],[0,a("identnamed"),0],[0,a("identfstchar"),0],[0,a("identaux"),0],[0,a("identany"),0],[0,a("ident_or_str"),0],[0,a(eQ),0],[0,a("hyp2"),0],[0,a("hyp1"),0],[0,a("hyp"),0],[0,a("hexdigitchar"),0],[0,a("flag"),0],[0,a("escapechar"),0],[0,a("epsilon"),0],[0,a("eof"),0],[0,a("directive"),0],[0,a("digitchar"),0],[0,a("defBM"),0],[0,a("def"),0],[0,a("dbt_top"),0],[0,a("dbt_seq"),0],[0,a("dbt_head"),0],[0,a("dbt_elm"),0],[0,a("dbt_base"),0],[0,a("dbt"),0],[0,a("consumeBM"),0],[0,a("commentchar"),0],[0,a("comment"),0],[0,a("cmdnamerstchar"),0],[0,a("cmdnamefstchar"),0],[0,a("cmdname"),0],[0,a("cmdflushed"),0],[0,a("clauseBM"),0],[0,a(h6),0],[0,a(e0),0],[0,a("basetyp"),0],[0,a("baseexpr"),0],[0,a("at_start"),0],[0,a("assumption"),0],[0,a("apptyp"),0],[0,a("appexpr"),0],[0,a("annotexpr"),0]]),bBR=a(q),bBM=a("stdlib/init.makam"),bBN=a(adk),bBO=a(adk),bBK=a(gg),bBL=a(TR),bBC=[0,a(rh)],bBD=[0,a(dy)],bBE=[0,a(dx)],bBF=[0,[11,a(cY),[2,0,[11,a(":\n  File "),[2,0,[11,a(" not found (searched: "),[15,[11,a(").\n"),[10,0]]]]]]]],a("In %s:\n  File %s not found (searched: %a).\n%!")],bBG=[0,[11,a(cY),[2,0,[11,a(":\n  Module "),[2,0,[11,a(" tried to reset the state.\n"),[10,0]]]]]],a("In %s:\n  Module %s tried to reset the state.\n%!")],bBH=[0,[11,a(cY),[2,0,[11,a(":\n  Stopping extension to module, but no module is open.\n"),[10,0]]]],a("In %s:\n  Stopping extension to module, but no module is open.\n%!")],bBI=a(gg),bBJ=a("\nIncomplete parse at "),bBA=a(gg),bBB=a(TR),bBw=[0,a("js/browser.ml"),30,15],bBs=[0,[2,0,[10,0]],a(Xv)],bBu=a("js"),bBx=a("eval"),bBy=a("Browser.ParsingError"),bBW=a("typeof module !== 'undefined'"),bBX=a("typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope");function
bv(a){if(typeof
a==="number")return 0;else
switch(a[0]){case
0:return[0,bv(a[1])];case
1:return[1,bv(a[1])];case
2:return[2,bv(a[1])];case
3:return[3,bv(a[1])];case
4:return[4,bv(a[1])];case
5:return[5,bv(a[1])];case
6:return[6,bv(a[1])];case
7:return[7,bv(a[1])];case
8:var
c=a[1];return[8,c,bv(a[2])];case
9:var
b=a[1];return[9,b,b,bv(a[3])];case
10:return[10,bv(a[1])];case
11:return[11,bv(a[1])];case
12:return[12,bv(a[1])];case
13:return[13,bv(a[1])];default:return[14,bv(a[1])]}}function
cs(a,b){if(typeof
a==="number")return b;else
switch(a[0]){case
0:return[0,cs(a[1],b)];case
1:return[1,cs(a[1],b)];case
2:return[2,cs(a[1],b)];case
3:return[3,cs(a[1],b)];case
4:return[4,cs(a[1],b)];case
5:return[5,cs(a[1],b)];case
6:return[6,cs(a[1],b)];case
7:return[7,cs(a[1],b)];case
8:var
c=a[1];return[8,c,cs(a[2],b)];case
9:var
d=a[2],e=a[1];return[9,e,d,cs(a[3],b)];case
10:return[10,cs(a[1],b)];case
11:return[11,cs(a[1],b)];case
12:return[12,cs(a[1],b)];case
13:return[13,cs(a[1],b)];default:return[14,cs(a[1],b)]}}function
aY(a,b){if(typeof
a==="number")return b;else
switch(a[0]){case
0:return[0,aY(a[1],b)];case
1:return[1,aY(a[1],b)];case
2:var
c=a[1];return[2,c,aY(a[2],b)];case
3:var
d=a[1];return[3,d,aY(a[2],b)];case
4:var
e=a[3],f=a[2],g=a[1];return[4,g,f,e,aY(a[4],b)];case
5:var
h=a[3],i=a[2],j=a[1];return[5,j,i,h,aY(a[4],b)];case
6:var
k=a[3],l=a[2],m=a[1];return[6,m,l,k,aY(a[4],b)];case
7:var
n=a[3],o=a[2],p=a[1];return[7,p,o,n,aY(a[4],b)];case
8:var
q=a[3],r=a[2],s=a[1];return[8,s,r,q,aY(a[4],b)];case
9:return[9,aY(a[1],b)];case
10:return[10,aY(a[1],b)];case
11:var
t=a[1];return[11,t,aY(a[2],b)];case
12:var
u=a[1];return[12,u,aY(a[2],b)];case
13:var
v=a[2],w=a[1];return[13,w,v,aY(a[3],b)];case
14:var
x=a[2],y=a[1];return[14,y,x,aY(a[3],b)];case
15:return[15,aY(a[1],b)];case
16:return[16,aY(a[1],b)];case
17:var
z=a[1];return[17,z,aY(a[2],b)];case
18:var
A=a[1];return[18,A,aY(a[2],b)];case
19:return[19,aY(a[1],b)];case
20:var
B=a[2],C=a[1];return[20,C,B,aY(a[3],b)];case
21:var
D=a[1];return[21,D,aY(a[2],b)];case
22:return[22,aY(a[1],b)];case
23:var
E=a[1];return[23,E,aY(a[2],b)];default:var
F=a[2],G=a[1];return[24,G,F,aY(a[3],b)]}}function
aU(a){throw[0,bz,a]}function
Y(a){throw[0,ct,a]}var
mS=[N,apA,H(0)];function
dm(b,a){return bTN(b,a)?b:a}function
hf(b,a){return ir(b,a)?b:a}function
iu(a){return 0<=a?a:-a|0}var
gp=o_,Bw=TL;function
t(d,c){var
a=C(d),e=C(c),b=bX(a+e|0);da(d,0,b,0,a);da(c,0,b,a,e);return b}function
hg(a){if(0<=a)if(!(at<a))return a;return Y(apB)}function
Bx(a){return a?apC:apD}function
mT(e){var
b=Ba(apF,e),a=0,d=C(b);for(;;){if(d<=a)return t(b,apE);var
c=I(b,a),f=48<=c?58<=c?0:1:45===c?1:0;if(f){var
a=a+1|0;continue}return b}}function
ab(a,b){if(a){var
c=a[1];return[0,c,ab(a[2],b)]}return b}var
mU=apm(0),e6=Bn(1),cL=Bn(2);function
rI(d,c,a){var
b=Bn(apx(a,d,c));apo(b,a);return b}function
By(a){return rI(apH,jP,a)}function
apI(b){function
a(b){var
a=b;for(;;){if(a){var
c=a[2],d=a[1];try{cc(d)}catch(a){}var
a=c;continue}return 0}}return a(bTU(0))}function
d2(b,a){return mN(b,a,0,C(a))}function
mV(a){cc(a);return j7(a)}function
Bz(d,c,a){var
b=apm(apx(a,d,c));apo(b,a);return b}function
apL(a){return Bz(apM,0,a)}function
rJ(d,c,b,a){if(0<=b)if(0<=a)if(!((C(c)-a|0)<b))return apl(d,c,b,a);return Y(apN)}function
apP(g,b){var
e=bX(b),h=0;if(0<=b)if((C(e)-b|0)<0)var
f=0;else{var
c=h,a=b;for(;;){if(0<a){var
d=apl(g,e,c,a);if(0===d)throw d3;var
c=c+d|0,a=a-d|0;continue}var
f=1;break}}else
var
f=0;if(!f)Y(apO);return e}function
BA(a){d2(cL,a);rA(cL,10);return cc(cL)}var
rK=[0,apI];function
rL(a){var
b=rK[1];rK[1]=function(d){c(a,0);return c(b,0)};return 0}function
BB(a){return c(rK[1],0)}function
W(c){var
b=0,a=c;for(;;){if(a){var
b=b+1|0,a=a[2];continue}return b}}function
j$(a){return a?a[1]:aU(apR)}function
BC(a){return a?a[2]:aU(apS)}function
ka(d,c){var
a=d,b=c;for(;;){if(a){var
e=[0,a[1],b],a=a[2],b=e;continue}return b}}function
aj(a){return ka(a,0)}function
B(b,a){if(a){var
d=a[2],e=c(b,a[1]);return[0,e,B(b,d)]}return 0}function
ae(d,b){var
a=b;for(;;){if(a){var
e=a[2];c(d,a[1]);var
a=e;continue}return 0}}function
aZ(f,e,d){var
c=e,a=d;for(;;){if(a){var
g=a[2],c=b(f,c,a[1]),a=g;continue}return c}}function
fL(d,a,c){if(a){var
e=a[1];return b(d,e,fL(d,a[2],c))}return c}function
BD(d,c,a){if(c){if(a){var
e=a[2],f=c[2],g=b(d,c[1],a[1]);return[0,g,BD(d,f,e)]}}else
if(!a)return 0;return Y(apT)}function
rM(f,e,d){var
c=e,a=d;for(;;){if(c){if(a){var
g=a[2],h=c[2];b(f,c[1],a[1]);var
c=h,a=g;continue}}else
if(!a)return 0;return Y(apU)}}function
mW(e,d){var
a=d;for(;;){if(a){var
f=a[2],b=c(e,a[1]);if(b){var
a=f;continue}return b}return 1}}function
e7(d,c){var
a=c;for(;;){if(a){var
e=a[2],b=0===cJ(a[1],d)?1:0;if(b)return b;var
a=e;continue}return 0}}function
rN(d,c){var
a=c;for(;;){if(a){var
b=a[1],e=a[2],f=b[2];if(0===cJ(b[1],d))return f;var
a=e;continue}throw x}}function
apV(d,c){var
a=c;for(;;){if(a){var
b=a[1],e=a[2],f=b[2];if(b[1]===d)return f;var
a=e;continue}throw x}}function
apW(e,d){var
a=d;for(;;){if(a){var
b=a[1],f=a[2];if(c(e,b))return b;var
a=f;continue}throw x}}function
mX(f){var
g=0;return function(h){var
b=g,a=h;for(;;){if(a){var
d=a[2],e=a[1];if(c(f,e)){var
b=[0,e,b],a=d;continue}var
a=d;continue}return aj(b)}}}function
BE(d,c){var
b=d,a=c;for(;;){if(0===b)return a;if(a){var
b=b-1|0,a=a[2];continue}throw[0,r,apX]}}function
gq(a){if(0<=a)if(!(at<a))return a;return Y(apY)}function
mY(a){if(40<=a){if(92===a)return apZ;var
c=cU<=a?0:1}else
if(32<=a){if(39<=a)return ap0;var
c=1}else
if(14<=a)var
c=0;else
switch(a){case
8:return ap1;case
9:return ap2;case
10:return ap3;case
13:return ap4;default:var
c=0}if(c){var
d=bX(1);bY(d,0,a);return d}var
b=bX(4);bY(b,0,92);bY(b,1,48+(a/ci|0)|0);bY(b,2,48+((a/10|0)%10|0)|0);bY(b,3,48+(a%10|0)|0);return b}function
BF(a){var
b=65<=a?90<a?0:1:0;if(!b){var
c=jT<=a?y1<a?0:1:0;if(!c){var
d=qg<=a?zi<a?1:0:1;if(d)return a}}return a+32|0}function
BG(a){var
b=97<=a?fD<a?0:1:0;if(!b){var
c=jD<=a?J<a?0:1:0;if(!c){var
d=N<=a?gf<a?1:0:1;if(d)return a}}return a+ie|0}function
mZ(a){if(65<=a)if(!(90<a))return a+32|0;return a}function
ap5(a){if(97<=a)if(!(fD<a))return a+ie|0;return a}function
BH(b,a){return b-a|0}function
e8(a,c){var
b=bX(a);bTp(b,0,a,c);return b}function
m0(a){var
b=cK(a),c=bX(b);A9(a,0,c,0,b);return c}function
rO(a){return m0(a)}function
BI(a){return m0(a)}function
rP(c,b,a){if(0<=b)if(0<=a)if(!((cK(c)-a|0)<b)){var
d=bX(a);A9(c,b,d,0,a);return d}return Y(ap6)}function
iv(c,b,a){return rP(c,b,a)}function
kb(e,c,d,b,a){if(0<=a)if(0<=c)if(!((cK(e)-a|0)<c))if(0<=b)if(!((cK(d)-a|0)<b))return A9(e,c,d,b,a);return Y(ap7)}function
dF(e,c,d,b,a){if(0<=a)if(0<=c)if(!((C(e)-a|0)<c))if(0<=b)if(!((cK(d)-a|0)<b))return da(e,c,d,b,a);return Y(ap8)}function
m1(g,b){var
d=cK(b);if(0===d)return b;var
e=bX(d),f=d-1|0,h=0;if(!(f<0)){var
a=h;for(;;){bY(e,a,c(g,aQ(b,a)));var
i=a+1|0;if(f!==a){var
a=i;continue}break}}return e}function
BJ(d,a){if(0===cK(a))return a;var
b=m0(a);bY(b,0,c(d,aQ(a,0)));return b}function
dG(b,a){return e8(b,a)}function
ap9(e,h){var
b=bX(e),d=e-1|0,f=0;if(!(d<0)){var
a=f;for(;;){bY(b,a,c(h,a));var
g=a+1|0;if(d!==a){var
a=g;continue}break}}return b}function
aD(c,b,a){return rP(c,b,a)}function
er(m,g){if(g){var
h=C(m),b=0,e=g,p=0;for(;;){if(e){var
i=e[2],j=e[1];if(i){var
k=(C(j)+h|0)+b|0,o=ir(k,b)?k:Y(ap_),b=o,e=i;continue}var
n=C(j)+b|0}else
var
n=b;var
d=bX(n),c=p,f=g;for(;;){if(f){var
l=f[2],a=f[1];if(l){da(a,0,d,c,C(a));da(m,0,d,c+C(a)|0,h);var
c=(c+C(a)|0)+h|0,f=l;continue}da(a,0,d,c,C(a));return d}return d}}}return ap$}function
rQ(e,b){var
d=C(b)-1|0,f=0;if(!(d<0)){var
a=f;for(;;){c(e,aQ(b,a));var
g=a+1|0;if(d!==a){var
a=g;continue}break}}return 0}function
gr(d){var
j=0;for(;;){if(C(d)<=j)var
t=0;else{var
g=aQ(d,j);if(32<=g){var
p=g+yu|0;if(58<p>>>0)if(93<=p)var
q=0,k=0;else
var
k=1;else
if(56<(p-1|0)>>>0)var
q=1,k=0;else
var
k=1;if(k){var
j=j+1|0;continue}}else
var
q=11<=g?13===g?1:0:8<=g?1:0;var
t=q?1:1}if(t){var
a=[0,0],r=cK(d)-1|0,u=0;if(!(r<0)){var
i=u;for(;;){var
f=aQ(d,i);if(32<=f){var
n=f+yu|0;if(58<n>>>0)if(93<=n)var
l=0,m=0;else
var
m=1;else
if(56<(n-1|0)>>>0)var
l=1,m=0;else
var
m=1;if(m)var
o=1,l=2}else
var
l=11<=f?13===f?1:0:8<=f?1:0;switch(l){case
0:var
o=4;break;case
1:var
o=2;break}a[1]=a[1]+o|0;var
x=i+1|0;if(r!==i){var
i=x;continue}break}}if(a[1]===cK(d))return m0(d);var
b=bX(a[1]);a[1]=0;var
s=cK(d)-1|0,v=0;if(!(s<0)){var
h=v;for(;;){var
c=aQ(d,h);if(35<=c)var
e=92===c?1:cU<=c?0:2;else
if(32<=c)var
e=34<=c?1:2;else
if(14<=c)var
e=0;else
switch(c){case
8:bY(b,a[1],92);a[1]++;bY(b,a[1],98);var
e=3;break;case
9:bY(b,a[1],92);a[1]++;bY(b,a[1],jv);var
e=3;break;case
10:bY(b,a[1],92);a[1]++;bY(b,a[1],fn);var
e=3;break;case
13:bY(b,a[1],92);a[1]++;bY(b,a[1],jt);var
e=3;break;default:var
e=0}switch(e){case
0:bY(b,a[1],92);a[1]++;bY(b,a[1],48+(c/ci|0)|0);a[1]++;bY(b,a[1],48+((c/10|0)%10|0)|0);a[1]++;bY(b,a[1],48+(c%10|0)|0);break;case
1:bY(b,a[1],92);a[1]++;bY(b,a[1],c);break;case
2:bY(b,a[1],c);break}a[1]++;var
w=h+1|0;if(s!==h){var
h=w;continue}break}}return b}return d}}function
rR(e,d,c,b){var
a=c;for(;;){if(d<=a)throw x;if(aQ(e,a)===b)return a;var
a=a+1|0;continue}}function
aqa(a,b){return rR(a,C(a),0,b)}function
m2(b,a,d){var
c=C(b);if(0<=a)if(!(c<a))return rR(b,c,a,d);return Y(aqb)}function
aqc(b,c){var
a=C(b)-1|0;for(;;){if(0<=a){if(aQ(b,a)===c)return a;var
a=a-1|0;continue}throw x}}function
aqd(b,a,d){var
c=C(b);if(0<=a)if(!(c<a))try{rR(b,c,a,d);var
e=1;return e}catch(a){a=s(a);if(a===x)return 0;throw a}return Y(aqe)}function
aqf(b,a){return aqd(b,0,a)}function
BK(a){return m1(mZ,a)}var
hh=he,hi=bUb(0)[1],fM=bT_(0),gs=(4*fM|0)-1|0,aqg=bUa(0)[2];H(0);function
kc(b,d){if(0===b)return[0];if(0<=b){var
e=a_(b,c(d,0)),f=b-1|0,g=1;if(!(f<1)){var
a=g;for(;;){e[a+1]=c(d,a);var
h=a+1|0;if(f!==a){var
a=h;continue}break}}return e}return Y(aqh)}function
rS(a){var
b=a.length-1;return 0===b?[0]:bTm(a,0,b)}function
BL(e,c,d,b,a){if(0<=a)if(0<=c)if(!((e.length-1-a|0)<c))if(0<=b)if(!((d.length-1-a|0)<b))return apa(e,c,d,b,a);return Y(aqi)}function
BM(e,b){var
d=b.length-1-1|0,f=0;if(!(d<0)){var
a=f;for(;;){c(e,b[a+1]);var
g=a+1|0;if(d!==a){var
a=g;continue}break}}return 0}function
hj(e,b){var
d=b.length-1;if(0===d)return[0];var
f=a_(d,c(e,b[1])),g=d-1|0,h=1;if(!(g<1)){var
a=h;for(;;){f[a+1]=c(e,b[a+1]);var
i=a+1|0;if(g!==a){var
a=i;continue}break}}return f}function
BN(e,c){var
d=c.length-1-1|0,f=0;if(!(d<0)){var
a=f;for(;;){b(e,a,c[a+1]);var
g=a+1|0;if(d!==a){var
a=g;continue}break}}return 0}function
rT(g,f,d){var
c=[0,f],e=d.length-1-1|0,h=0;if(!(e<0)){var
a=h;for(;;){c[1]=b(g,c[1],d[a+1]);var
i=a+1|0;if(e!==a){var
a=i;continue}break}}return c[1]}function
BO(g,d,f){var
c=[0,f],e=d.length-1-1|0;if(!(e<0)){var
a=e;for(;;){c[1]=b(g,d[a+1],c[1]);var
h=a-1|0;if(0!==a){var
a=h;continue}break}}return c[1]}var
rU=[N,aqj,H(0)],BP=0,BQ=1;function
aql(a){return a+1|0}function
aqm(a){return a-1|0}function
aqn(a){return ir(a,0)?a:-a|0}function
aqo(a){return fG(aqp,a)}var
aqq=fI;function
aqr(a){return Bd(a,aqs)}function
aqt(a){return Bi(a,aqu)}function
aqv(a){return ir(a,aqw)?a:e3(a)}function
aqx(a){return Be(aqy,a)}var
aqz=ape,BS=0,BT=1;function
aqA(a){return a+1|0}function
aqB(a){return a-1|0}function
aqC(a){return ir(a,0)?a:-a|0}function
aqD(a){return fG(aqE,a)}var
aqF=fI;function
iw(e,d,a){var
c=bTO(e,d,a);if(0<=c){a[11]=a[12];var
b=a[12];a[12]=[0,b[1],b[2],b[3],a[4]+a[6]|0]}return c}function
rW(e,d,a){var
c=bTZ(e,d,a);if(0<=c){a[11]=a[12];var
b=a[12];a[12]=[0,b[1],b[2],b[3],a[4]+a[6]|0]}return c}function
BU(a){return iv(a[2],a[5],a[6]-a[5]|0)}function
bj(c,a,b){return iv(c[2],a,b-a|0)}function
aqH(c,a,b){return 0<=a?[0,iv(c[2],a,b-a|0)]:0}function
m4(b,a){return ha(b[2],a)}H(0);H(0);function
hk(g){function
o(a){return a?a[4]:0}function
e(b,e,a){var
c=b?b[4]:0,d=a?a[4]:0,f=d<=c?c+1|0:d+1|0;return[0,b,e,a,f]}function
f(b,f,a){var
g=b?b[4]:0,h=a?a[4]:0;if((h+2|0)<g){if(b){var
c=b[3],k=b[2],i=b[1],m=o(c);if(m<=o(i))return e(i,k,e(c,f,a));if(c){var
n=c[2],p=c[1],q=e(c[3],f,a);return e(e(i,k,p),n,q)}return Y(aqI)}return Y(aqJ)}if((g+2|0)<h){if(a){var
j=a[3],l=a[2],d=a[1],r=o(d);if(r<=o(j))return e(e(b,f,d),l,j);if(d){var
s=d[2],t=d[1],u=e(d[3],l,j);return e(e(b,f,t),s,u)}return Y(aqK)}return Y(aqL)}var
v=h<=g?g+1|0:h+1|0;return[0,b,f,a,v]}function
a(d,c){if(c){var
e=c[3],h=c[2],i=c[1],j=b(g[1],d,h);if(0===j)return c;if(0<=j){var
k=a(d,e);return e===k?c:f(i,h,k)}var
l=a(d,i);return i===l?c:f(l,h,e)}return[0,0,d,0,1]}function
h(a){return[0,0,a,0,1]}function
z(b,a){if(a){var
c=a[3],d=a[2];return f(z(b,a[1]),d,c)}return h(b)}function
A(b,a){if(a){var
c=a[2],d=a[1];return f(d,c,A(b,a[3]))}return h(b)}function
d(b,c,a){if(b){if(a){var
g=a[4],h=b[4],i=a[3],j=a[2],k=a[1],l=b[3],m=b[2],n=b[1];return(g+2|0)<h?f(n,m,d(l,c,a)):(h+2|0)<g?f(d(b,c,k),j,i):e(b,c,a)}return A(c,b)}return z(c,a)}function
k(c){var
a=c;for(;;){if(a){var
b=a[1];if(b){var
a=b;continue}return a[2]}throw x}}function
B(c){var
a=c;for(;;){if(a){var
b=a[3],d=a[2];if(b){var
a=b;continue}return d}throw x}}function
s(a){if(a){var
b=a[1];if(b){var
c=a[3],d=a[2];return f(s(b),d,c)}return a[3]}return Y(aqM)}function
l(b,a){if(b){if(a){var
c=s(a);return d(b,k(a),c)}return b}return a}function
i(c,a){if(a){var
e=a[3],f=a[2],h=a[1],l=b(g[1],c,f);if(0===l)return[0,h,1,e];if(0<=l){var
j=i(c,e),m=j[3],n=j[2];return[0,d(h,f,j[1]),n,m]}var
k=i(c,h),o=k[2],p=k[1];return[0,p,o,d(k[3],f,e)]}return aqN}var
C=0;function
J(a){return a?0:1}function
K(f,e){var
a=e;for(;;){if(a){var
h=a[3],i=a[1],c=b(g[1],f,a[2]),d=0===c?1:0;if(d)return d;var
j=0<=c?h:i,a=j;continue}return 0}}function
t(e,c){if(c){var
a=c[3],h=c[2],d=c[1],i=b(g[1],e,h);if(0===i){if(d){if(a){var
m=s(a);return f(d,k(a),m)}return d}return a}if(0<=i){var
j=t(e,a);return a===j?c:f(d,h,j)}var
l=t(e,d);return d===l?c:f(l,h,a)}return 0}function
j(c,b){if(c){if(b){var
g=b[4],e=b[2],h=c[4],f=c[2],m=b[3],n=b[1],o=c[3],p=c[1];if(g<=h){if(1===g)return a(e,c);var
k=i(f,b),q=k[1],r=j(o,k[3]);return d(j(p,q),f,r)}if(1===h)return a(f,b);var
l=i(e,c),s=l[1],t=j(l[3],m);return d(j(s,n),e,t)}return c}return b}function
m(a,c){if(a){if(c){var
e=a[3],f=a[2],g=a[1],b=i(f,c),h=b[1];if(0===b[2]){var
j=m(e,b[3]);return l(m(g,h),j)}var
k=m(e,b[3]);return d(m(g,h),f,k)}return 0}return 0}function
n(a,c){if(a){if(c){var
e=a[3],f=a[2],g=a[1],b=i(f,c),h=b[1];if(0===b[2]){var
j=n(e,b[3]);return d(n(g,h),f,j)}var
k=n(e,b[3]);return l(n(g,h),k)}return a}return 0}function
p(d,c){var
a=d,b=c;for(;;){if(a){var
e=[0,a[2],a[3],b],a=a[1],b=e;continue}return b}}function
D(l,k){var
m=p(k,0),c=p(l,0),a=m;for(;;){if(c){if(a){var
e=a[3],f=a[2],h=c[3],i=c[2],d=b(g[1],c[1],a[1]);if(0===d){var
j=p(f,e),c=p(i,h),a=j;continue}return d}return 1}return a?-1:0}}function
L(b,a){return 0===D(b,a)?1:0}function
q(o,n){var
a=o,c=n;for(;;){if(a){if(c){var
h=c[3],i=c[1],d=a[3],e=a[2],f=a[1],j=b(g[1],e,c[2]);if(0===j){var
k=q(f,i);if(k){var
a=d,c=h;continue}return k}if(0<=j){var
l=q([0,0,e,d,0],h);if(l){var
a=f;continue}return l}var
m=q([0,f,e,0,0],i);if(m){var
a=d;continue}return m}return 0}return 1}}function
E(b,d){var
a=d;for(;;){if(a){var
e=a[3],f=a[2];E(b,a[1]);c(b,f);var
a=e;continue}return 0}}function
F(d,f,e){var
a=f,c=e;for(;;){if(a){var
g=a[3],h=a[2],i=b(d,h,F(d,a[1],c)),a=g,c=i;continue}return c}}function
G(b,g){var
a=g;for(;;){if(a){var
h=a[3],i=a[1],d=c(b,a[2]);if(d){var
e=G(b,i);if(e){var
a=h;continue}var
f=e}else
var
f=d;return f}return 1}}function
H(b,g){var
a=g;for(;;){if(a){var
h=a[3],i=a[1],d=c(b,a[2]);if(d)var
e=d;else{var
f=H(b,i);if(!f){var
a=h;continue}var
e=f}return e}return 0}}function
u(b,a){if(a){var
g=a[3],h=a[2],i=a[1],e=u(b,i),j=c(b,h),f=u(b,g);if(j){if(i===e)if(g===f)return a;return d(e,h,f)}return l(e,f)}return 0}function
v(b,a){if(a){var
e=a[2],m=a[3],f=v(b,a[1]),g=f[2],h=f[1],n=c(b,e),i=v(b,m),j=i[2],k=i[1];if(n){var
o=l(g,j);return[0,d(h,e,k),o]}var
p=d(g,e,j);return[0,l(h,k),p]}return aqO}function
w(a){if(a){var
b=a[1],c=w(a[3]);return(w(b)+1|0)+c|0}return 0}function
I(d,c){var
b=d,a=c;for(;;){if(a){var
e=a[2],f=a[1],b=[0,e,I(b,a[3])],a=f;continue}return b}}function
M(a){return I(0,a)}function
N(f,e){var
a=e;for(;;){if(a){var
c=a[2],h=a[3],i=a[1],d=b(g[1],f,c);if(0===d)return c;var
j=0<=d?h:i,a=j;continue}throw x}}function
y(l,e){if(e){var
m=e[3],n=e[2],o=e[1],f=y(l,o),h=c(l,n),i=y(l,m);if(o===f)if(n===h)if(m===i)return e;if(0===f)var
p=0;else
var
s=B(f),p=0<=b(g[1],s,h)?1:0;if(!p){if(0===i)var
q=0;else
var
r=k(i),q=0<=b(g[1],h,r)?1:0;if(!q)return d(f,h,i)}return j(f,a(h,i))}return 0}return[0,C,J,K,a,h,t,j,m,n,D,L,q,E,y,F,G,H,u,v,w,M,k,B,k,i,N,function(d){if(d){var
k=d[2],f=d[1];if(k){var
l=k[2],i=k[1];if(l){var
n=l[2],o=l[1];if(n){var
p=n[2],s=n[1];if(p){if(p[2]){var
c=g[1],m=function(j,g){if(2===j){if(g){var
u=g[2];if(u){var
m=u[1],k=g[1],v=b(c,k,m);return 0===v?[0,k,0]:0<=v?[0,m,[0,k,0]]:[0,k,[0,m,0]]}}}else
if(3===j)if(g){var
o=g[2];if(o){var
w=o[2];if(w){var
d=w[1],a=o[1],e=g[1],x=b(c,e,a);if(0===x){var
y=b(c,a,d);return 0===y?[0,a,0]:0<=y?[0,d,[0,a,0]]:[0,a,[0,d,0]]}if(0<=x){var
z=b(c,e,d);if(0===z)return[0,a,[0,e,0]];if(0<=z){var
A=b(c,a,d);return 0===A?[0,a,[0,e,0]]:0<=A?[0,d,[0,a,[0,e,0]]]:[0,a,[0,d,[0,e,0]]]}return[0,a,[0,e,[0,d,0]]]}var
B=b(c,a,d);if(0===B)return[0,e,[0,a,0]];if(0<=B){var
C=b(c,e,d);return 0===C?[0,e,[0,a,0]]:0<=C?[0,d,[0,e,[0,a,0]]]:[0,e,[0,d,[0,a,0]]]}return[0,e,[0,a,[0,d,0]]]}}}var
n=j>>1,D=BE(n,g),E=t(n,g),i=E,h=t(j-n|0,D),f=0;for(;;){if(i){if(h){var
p=h[2],q=h[1],r=i[2],l=i[1],s=b(c,l,q);if(0===s){var
i=r,h=p,f=[0,l,f];continue}if(0<s){var
i=r,f=[0,l,f];continue}var
h=p,f=[0,q,f];continue}return ka(i,f)}return ka(h,f)}},t=function(j,g){if(2===j){if(g){var
u=g[2];if(u){var
n=u[1],k=g[1],v=b(c,k,n);return 0===v?[0,k,0]:0<v?[0,k,[0,n,0]]:[0,n,[0,k,0]]}}}else
if(3===j)if(g){var
p=g[2];if(p){var
w=p[2];if(w){var
d=w[1],a=p[1],e=g[1],x=b(c,e,a);if(0===x){var
y=b(c,a,d);return 0===y?[0,a,0]:0<y?[0,a,[0,d,0]]:[0,d,[0,a,0]]}if(0<x){var
z=b(c,a,d);if(0===z)return[0,e,[0,a,0]];if(0<z)return[0,e,[0,a,[0,d,0]]];var
A=b(c,e,d);return 0===A?[0,e,[0,a,0]]:0<A?[0,e,[0,d,[0,a,0]]]:[0,d,[0,e,[0,a,0]]]}var
B=b(c,e,d);if(0===B)return[0,a,[0,e,0]];if(0<B)return[0,a,[0,e,[0,d,0]]];var
C=b(c,a,d);return 0===C?[0,a,[0,e,0]]:0<C?[0,a,[0,d,[0,e,0]]]:[0,d,[0,a,[0,e,0]]]}}}var
o=j>>1,D=BE(o,g),E=m(o,g),i=E,h=m(j-o|0,D),f=0;for(;;){if(i){if(h){var
q=h[2],r=h[1],s=i[2],l=i[1],t=b(c,l,r);if(0===t){var
i=s,h=q,f=[0,l,f];continue}if(0<=t){var
h=q,f=[0,r,f];continue}var
i=s,f=[0,l,f];continue}return ka(i,f)}return ka(h,f)}},q=W(d),u=2<=q?m(q,d):d,j=function(b,a){if(!(3<b>>>0))switch(b){case
0:return[0,0,a];case
1:if(a)return[0,[0,0,a[1],0,1],a[2]];break;case
2:if(a){var
d=a[2];if(d)return[0,[0,[0,0,a[1],0,1],d[1],0,2],d[2]]}break;default:if(a){var
f=a[2];if(f){var
g=f[2];if(g)return[0,[0,[0,0,a[1],0,1],f[1],[0,0,g[1],0,1],2],g[2]]}}}var
h=b/2|0,i=j(h,a),c=i[2],l=i[1];if(c){var
m=c[1],k=j((b-h|0)-1|0,c[2]),n=k[2];return[0,e(l,m,k[1]),n]}throw[0,r,aqP]};return j(W(u),u)[1]}var
v=p[1];return a(v,a(s,a(o,a(i,h(f)))))}return a(s,a(o,a(i,h(f))))}return a(o,a(i,h(f)))}return a(i,h(f))}return h(f)}return C}]}function
hl(i){function
g(a){return a?a[5]:0}function
a(b,f,e,a){var
c=g(b),d=g(a),h=d<=c?c+1|0:d+1|0;return[0,b,f,e,a,h]}function
p(b,a){return[0,0,b,a,0,1]}function
e(c,h,f,b){var
i=c?c[5]:0,j=b?b[5]:0;if((j+2|0)<i){if(c){var
d=c[4],m=c[3],n=c[2],k=c[1],q=g(d);if(q<=g(k))return a(k,n,m,a(d,h,f,b));if(d){var
r=d[3],s=d[2],t=d[1],u=a(d[4],h,f,b);return a(a(k,n,m,t),s,r,u)}return Y(aqQ)}return Y(aqR)}if((i+2|0)<j){if(b){var
l=b[4],o=b[3],p=b[2],e=b[1],v=g(e);if(v<=g(l))return a(a(c,h,f,e),p,o,l);if(e){var
w=e[3],x=e[2],y=e[1],z=a(e[4],p,o,l);return a(a(c,h,f,y),x,w,z)}return Y(aqS)}return Y(aqT)}var
A=j<=i?i+1|0:j+1|0;return[0,c,h,f,b,A]}var
H=0;function
I(a){return a?0:1}function
q(d,c,a){if(a){var
f=a[4],h=a[3],j=a[2],g=a[1],n=a[5],k=b(i[1],d,j);if(0===k)return h===c?a:[0,g,d,c,f,n];if(0<=k){var
l=q(d,c,f);return f===l?a:e(g,j,h,l)}var
m=q(d,c,g);return g===m?a:e(m,j,h,f)}return[0,0,d,c,0,1]}function
J(e,d){var
a=d;for(;;){if(a){var
f=a[4],g=a[3],h=a[1],c=b(i[1],e,a[2]);if(0===c)return g;var
j=0<=c?f:h,a=j;continue}throw x}}function
K(f,e){var
a=e;for(;;){if(a){var
g=a[4],h=a[1],c=b(i[1],f,a[2]),d=0===c?1:0;if(d)return d;var
j=0<=c?g:h,a=j;continue}return 0}}function
l(c){var
a=c;for(;;){if(a){var
b=a[1];if(b){var
a=b;continue}return[0,a[2],a[3]]}throw x}}function
L(c){var
a=c;for(;;){if(a){var
b=a[4],d=a[3],e=a[2];if(b){var
a=b;continue}return[0,e,d]}throw x}}function
s(a){if(a){var
b=a[1];if(b){var
c=a[4],d=a[3],f=a[2];return e(s(b),f,d,c)}return a[4]}return Y(aqU)}function
t(f,a){if(a){var
c=a[4],j=a[3],g=a[2],d=a[1],k=b(i[1],f,g);if(0===k){if(d){if(c){var
h=l(c),o=h[2],p=h[1];return e(d,p,o,s(c))}return d}return c}if(0<=k){var
m=t(f,c);return c===m?a:e(d,g,j,m)}var
n=t(f,d);return d===n?a:e(n,g,j,c)}return 0}function
A(c,d){var
a=d;for(;;){if(a){var
e=a[4],f=a[3],g=a[2];A(c,a[1]);b(c,g,f);var
a=e;continue}return 0}}function
u(b,a){if(a){var
d=a[5],e=a[4],f=a[3],g=a[2],h=u(b,a[1]),i=c(b,f);return[0,h,g,i,u(b,e),d]}return 0}function
v(c,a){if(a){var
d=a[2],e=a[5],f=a[4],g=a[3],h=v(c,a[1]),i=b(c,d,g);return[0,h,d,i,v(c,f),e]}return 0}function
B(c,e,d){var
a=e,b=d;for(;;){if(a){var
f=a[4],g=a[3],h=a[2],i=m(c,h,g,B(c,a[1],b)),a=f,b=i;continue}return b}}function
C(c,g){var
a=g;for(;;){if(a){var
h=a[4],i=a[1],d=b(c,a[2],a[3]);if(d){var
e=C(c,i);if(e){var
a=h;continue}var
f=e}else
var
f=d;return f}return 1}}function
D(c,g){var
a=g;for(;;){if(a){var
h=a[4],i=a[1],d=b(c,a[2],a[3]);if(d)var
e=d;else{var
f=D(c,i);if(!f){var
a=h;continue}var
e=f}return e}return 0}}function
E(c,b,a){if(a){var
d=a[4],f=a[3],g=a[2];return e(E(c,b,a[1]),g,f,d)}return p(c,b)}function
F(c,b,a){if(a){var
d=a[3],f=a[2],g=a[1];return e(g,f,d,F(c,b,a[4]))}return p(c,b)}function
d(c,g,f,b){if(c){if(b){var
h=b[5],i=c[5],j=b[4],k=b[3],l=b[2],m=b[1],n=c[4],o=c[3],p=c[2],q=c[1];return(h+2|0)<i?e(q,p,o,d(n,g,f,b)):(i+2|0)<h?e(d(c,g,f,m),l,k,j):a(c,g,f,b)}return F(g,f,c)}return E(g,f,b)}function
n(b,a){if(b){if(a){var
c=l(a),e=c[2],f=c[1];return d(b,f,e,s(a))}return b}return a}function
o(c,e,b,a){return b?d(c,e,b[1],a):n(c,a)}function
h(c,a){if(a){var
e=a[4],f=a[3],g=a[2],j=a[1],m=b(i[1],c,g);if(0===m)return[0,j,[0,f],e];if(0<=m){var
k=h(c,e),n=k[3],o=k[2];return[0,d(j,g,f,k[1]),o,n]}var
l=h(c,j),p=l[2],q=l[1];return[0,q,p,d(l[3],g,f,e)]}return aqV}function
j(c,b,a){if(b){var
d=b[2],k=b[5],l=b[4],n=b[3],p=b[1];if(g(a)<=k){var
e=h(d,a),q=e[2],s=e[1],t=j(c,l,e[3]),u=m(c,d,[0,n],q);return o(j(c,p,s),d,u,t)}}else
if(!a)return 0;if(a){var
f=a[2],v=a[4],w=a[3],x=a[1],i=h(f,b),y=i[2],z=i[1],A=j(c,i[3],v),B=m(c,f,y,[0,w]);return o(j(c,z,x),f,B,A)}throw[0,r,aqW]}function
k(c,b,a){if(b){if(a){var
j=a[3],e=a[2],l=b[3],f=b[2],v=a[4],w=a[1],x=b[4],y=b[1];if(a[5]<=b[5]){var
g=h(f,a),n=g[2],z=g[3],p=k(c,y,g[1]),q=k(c,x,z);return n?o(p,f,m(c,f,l,n[1]),q):d(p,f,l,q)}var
i=h(e,b),r=i[2],A=i[3],s=k(c,i[1],w),t=k(c,A,v);return r?o(s,e,m(c,e,r[1],j),t):d(s,e,j,t)}var
u=b}else
var
u=a;return u}function
w(c,a){if(a){var
g=a[4],h=a[3],i=a[2],j=a[1],e=w(c,j),k=b(c,i,h),f=w(c,g);if(k){if(j===e)if(g===f)return a;return d(e,i,h,f)}return n(e,f)}return 0}function
y(c,a){if(a){var
e=a[3],f=a[2],m=a[4],g=y(c,a[1]),h=g[2],i=g[1],o=b(c,f,e),j=y(c,m),k=j[2],l=j[1];if(o){var
p=n(h,k);return[0,d(i,f,e,l),p]}var
q=d(h,f,e,k);return[0,n(i,l),q]}return aqX}function
f(d,c){var
a=d,b=c;for(;;){if(a){var
e=[0,a[2],a[3],a[4],b],a=a[1],b=e;continue}return b}}function
M(j,h,g){var
r=f(g,0),c=f(h,0),a=r;for(;;){if(c){if(a){var
k=a[4],l=a[3],m=a[2],n=c[4],o=c[3],p=c[2],d=b(i[1],c[1],a[1]);if(0===d){var
e=b(j,p,m);if(0===e){var
q=f(l,k),c=f(o,n),a=q;continue}return e}return d}return 1}return a?-1:0}}function
N(k,j,h){var
s=f(h,0),c=f(j,0),a=s;for(;;){if(c){if(a){var
l=a[4],m=a[3],n=a[2],o=c[4],p=c[3],q=c[2],d=0===b(i[1],c[1],a[1])?1:0;if(d){var
e=b(k,q,n);if(e){var
r=f(m,l),c=f(p,o),a=r;continue}var
g=e}else
var
g=d;return g}return 0}return a?0:1}}function
z(a){if(a){var
b=a[1],c=z(a[4]);return(z(b)+1|0)+c|0}return 0}function
G(d,c){var
b=d,a=c;for(;;){if(a){var
e=a[3],f=a[2],g=a[1],b=[0,[0,f,e],G(b,a[4])],a=g;continue}return b}}return[0,H,I,K,q,p,t,j,k,M,N,A,B,C,D,w,y,z,function(a){return G(0,a)},l,L,l,h,J,u,v]}H(0);var
BV=[N,aqY,H(0)];function
m5(a){return[0,0,0,0]}function
m6(d,a){var
b=[0,d,0],c=a[3];return c?(a[1]=a[1]+1|0,c[2]=b,a[3]=b,0):(a[1]=1,a[2]=b,a[3]=b,0)}function
BW(a){var
b=a[2];if(b){var
c=b[1],d=b[2];return d?(a[1]=a[1]-1|0,a[2]=d,c):(a[1]=0,a[2]=0,a[3]=0,c)}throw BV}function
rX(g,f,e){var
c=f,a=e[2];for(;;){if(a){var
d=a[2],c=b(g,c,a[1]),a=d;continue}return c}}var
aq0=[N,aqZ,H(0)];function
aq1(a){throw aq0}function
cd(a){var
d=a[1];a[1]=aq1;try{var
b=c(d,0);a[1]=b;bT0(a,bu);return b}catch(b){b=s(b);a[1]=function(a){throw b};throw b}}function
aq2(a){var
b=bi(a);if(b!==bu)if(b!==J)if(b!==re)return a;return bTM(a)}var
af=[N,aq3,H(0)],bQ=[N,aq4,H(0)];function
aq5(a){return a?a[1][1]:0}function
rY(a){return a?a[1][2]:0}function
BX(a){a[3]=rJ(a[1],a[2],0,cK(a[2]));a[4]=0;return 0}function
BY(g,m){var
a=m;for(;;){if(typeof
a!=="number")switch(a[0]){case
1:var
h=a[2],d=BY(g,a[1]);if(typeof
d==="number"){var
a=h;continue}else{if(0===d[0])return[0,d[1],[1,d[2],h]];throw[0,r,aq6]}case
2:var
e=a[1],i=bi(e),n=bu===i?e[1]:J===i?cd(e):e,a=n;continue;case
3:var
f=a[1],j=f[1];if(j){var
k=j[1];if(k){var
o=k[1];f[1]=0;return[0,o,a]}return 0}var
l=c(f[2],g);return l?[0,l[1],a]:(f[1]=aq7,0);case
4:var
b=a[1];if(b[3]<=b[4])BX(b);if(0===b[3])return 0;var
p=aQ(b[2],b[4]);b[4]=b[4]+1|0;return[0,p,a]}return a}}function
rZ(a){for(;;){var
b=a[2];if(typeof
b==="number")return 0;else
switch(b[0]){case
0:return[0,b[1]];case
1:var
e=BY(a[1],a[2]);if(typeof
e==="number")return 0;else{if(0===e[0]){var
k=e[1];a[2]=e;return[0,k]}throw[0,r,aq8]}case
2:var
f=b[1],h=bi(f),l=bu===h?f[1]:J===h?cd(f):f;a[2]=l;continue;case
3:var
g=b[1],i=g[1];if(i)return i[1];var
j=c(g[2],a[1]);g[1]=[0,j];return j;default:var
d=b[1];if(d[3]<=d[4])BX(d);return 0===d[3]?(a[2]=0,0):[0,aQ(d[2],d[4])]}}}function
bA(a){return a?rZ(a[1]):0}function
BZ(a){for(;;){var
b=a[2];if(typeof
b!=="number")switch(b[0]){case
0:var
e=b[2];a[1]=a[1]+1|0;a[2]=e;return 0;case
3:var
c=b[1];if(c[1]){a[1]=a[1]+1|0;c[1]=0;return 0}break;case
4:var
d=b[1];a[1]=a[1]+1|0;d[4]=d[4]+1|0;return 0}if(rZ(a))continue;return 0}}function
aL(a){return a?BZ(a[1]):0}function
B0(c,a){if(0<c){var
d=rZ(a);if(d){var
e=d[1];BZ(a);var
b=B0(c-1|0,a);return[0,[0,e,b[1]],[0,e,b[2]],b[3]+1|0]}return[0,0,a[2],0]}return[0,0,a[2],0]}function
B1(f,c){if(c){var
a=c[1],b=B0(f,a),d=b[2],e=b[1];a[1]=a[1]-b[3]|0;a[2]=d;return e}return 0}function
m7(a){return[0,[0,0,[3,[0,0,a]]]]}function
r0(a){var
b=[0,0];return m7(function(d){var
c=b[1];return c<C(a)?(b[1]++,[0,I(a,c)]):0})}function
r1(b,a){return[0,[0,0,[0,b,rY(a)]]]}function
m8(b,a){return[0,[0,0,[2,[J,function(e){var
d=rY(a);return[0,c(b,0),d]}]]]]}var
hm=0;function
hn(a){return[0,[0,0,[2,[J,function(b){return rY(c(a,0))}]]]]}function
b5(a){var
b=1<=a?a:1,c=gs<b?gs:b,d=bX(c);return[0,d,0,c,d]}function
b6(a){return iv(a[1],0,a[2])}function
B2(a){a[2]=0;return 0}function
r2(a){a[2]=0;a[1]=a[4];a[3]=cK(a[1]);return 0}function
r3(a,c){var
b=[0,a[3]];for(;;){if(b[1]<(a[2]+c|0)){b[1]=2*b[1]|0;continue}if(gs<b[1])if((a[2]+c|0)<=gs)b[1]=gs;else
aU(aq_);var
d=bX(b[1]);kb(a[1],0,d,0,a[2]);a[1]=d;a[3]=b[1];return 0}}function
bd(a,c){var
b=a[2];if(a[3]<=b)r3(a,1);bY(a[1],b,c);a[2]=b+1|0;return 0}function
B3(a,d,c,b){var
e=c<0?1:0;if(e)var
f=e;else
var
h=b<0?1:0,f=h||((C(d)-b|0)<c?1:0);if(f)Y(aq$);var
g=a[2]+b|0;if(a[3]<g)r3(a,b);dF(d,c,a[1],a[2],b);a[2]=g;return 0}function
dH(a,c){var
b=C(c),d=a[2]+b|0;if(a[3]<d)r3(a,b);dF(c,0,a[1],a[2],b);a[2]=d;return 0}function
B4(a){return e8(32,0)}function
B5(b,a){var
c=a>>>3|0;return dC(b,c,hg(ha(b,c)|1<<(a&7)))}function
ho(a){return a?[0,1,a[1]]:0}function
ara(a,b){if(typeof
a==="number")switch(a){case
0:return[0,[0,b]];case
1:return[0,[1,b]];case
2:return[0,[9,b]];case
3:return[0,[19,b]];default:return[0,[22,b]]}else
switch(a[0]){case
0:return[0,[2,ho(a[1]),b]];case
1:return[0,[3,ho(a[1]),b]];case
2:var
d=a[1];return[0,[4,d,ho(a[2]),0,b]];case
3:var
e=a[1];return[0,[5,e,ho(a[2]),0,b]];case
4:var
f=a[1];return[0,[6,f,ho(a[2]),0,b]];case
5:var
g=a[1];return[0,[7,g,ho(a[2]),0,b]];case
6:var
c=a[2],h=a[1],i=c?[0,c[1]]:0;return[0,[8,0,ho(h),i,b]];case
7:return[0,[13,a[1],a[2],b]];case
8:return[0,[14,a[1],a[2],b]];case
9:return[0,[20,a[1],a[2],b]];default:return[0,[21,a[1],b]]}}var
r4=-6;function
B6(a){return[0,0,bX(a)]}function
B7(a,g){var
b=cK(a[2]),c=a[1]+g|0,d=b<c?1:0;if(d){var
e=bX(hf(b*2|0,c));kb(a[2],0,e,0,b);a[2]=e;var
f=0}else
var
f=d;return f}function
kd(a,b){B7(a,1);dC(a[2],a[1],b);a[1]=a[1]+1|0;return 0}function
cC(a,c){var
b=C(c);B7(a,b);dF(c,0,a[2],a[1],b);a[1]=a[1]+b|0;return 0}function
B8(a){return iv(a[2],0,a[1])}function
m9(a){switch(a){case
12:return im;case
6:case
7:return fr;case
8:case
9:return 88;case
10:case
11:return gi;case
0:case
1:case
2:return ci;default:return di}}function
m_(a){if(typeof
a==="number")switch(a){case
0:return arb;case
1:return arc;case
2:return ard;case
3:return are;case
4:return arf;case
5:return arg;default:return arh}else
switch(a[0]){case
0:return a[1];case
1:return a[1];default:return t(ari,dG(1,a[1]))}}function
r5(b,c){var
a=c;for(;;)if(typeof
a==="number")return 0;else
switch(a[0]){case
0:var
d=a[1];cC(b,arj);var
a=d;continue;case
1:var
e=a[1];cC(b,ark);var
a=e;continue;case
2:var
f=a[1];cC(b,arl);var
a=f;continue;case
3:var
g=a[1];cC(b,arm);var
a=g;continue;case
4:var
h=a[1];cC(b,arn);var
a=h;continue;case
5:var
i=a[1];cC(b,aro);var
a=i;continue;case
6:var
j=a[1];cC(b,arp);var
a=j;continue;case
7:var
k=a[1];cC(b,arq);var
a=k;continue;case
8:var
l=a[2],m=a[1];cC(b,arr);r5(b,m);cC(b,ars);var
a=l;continue;case
9:var
n=a[3],o=a[1];cC(b,art);r5(b,o);cC(b,aru);var
a=n;continue;case
10:var
p=a[1];cC(b,arv);var
a=p;continue;case
11:var
q=a[1];cC(b,arw);var
a=q;continue;case
12:var
r=a[1];cC(b,arx);var
a=r;continue;case
13:var
s=a[1];cC(b,ary);var
a=s;continue;default:var
t=a[1];cC(b,arz);var
a=t;continue}}function
bR(a){if(typeof
a==="number")return 0;else
switch(a[0]){case
0:return[0,bR(a[1])];case
1:return[1,bR(a[1])];case
2:return[2,bR(a[1])];case
3:return[3,bR(a[1])];case
4:return[4,bR(a[1])];case
5:return[5,bR(a[1])];case
6:return[6,bR(a[1])];case
7:return[7,bR(a[1])];case
8:var
b=a[1];return[8,b,bR(a[2])];case
9:var
c=a[2],d=a[1];return[9,c,d,bR(a[3])];case
10:return[10,bR(a[1])];case
11:return[11,bR(a[1])];case
12:return[12,bR(a[1])];case
13:return[13,bR(a[1])];default:return[14,bR(a[1])]}}function
cD(a){if(typeof
a==="number"){var
s=function(a){return 0},t=function(a){return 0},u=function(a){return 0};return[0,function(a){return 0},u,t,s]}else
switch(a[0]){case
0:var
b=cD(a[1]),v=b[4],w=b[3],x=b[2],y=b[1],z=function(a){c(x,0);return 0};return[0,function(a){c(y,0);return 0},z,w,v];case
1:var
d=cD(a[1]),A=d[4],B=d[3],C=d[2],D=d[1],E=function(a){c(C,0);return 0};return[0,function(a){c(D,0);return 0},E,B,A];case
2:var
e=cD(a[1]),F=e[4],G=e[3],H=e[2],I=e[1],J=function(a){c(H,0);return 0};return[0,function(a){c(I,0);return 0},J,G,F];case
3:var
f=cD(a[1]),K=f[4],L=f[3],M=f[2],N=f[1],O=function(a){c(M,0);return 0};return[0,function(a){c(N,0);return 0},O,L,K];case
4:var
g=cD(a[1]),P=g[4],Q=g[3],R=g[2],S=g[1],T=function(a){c(R,0);return 0};return[0,function(a){c(S,0);return 0},T,Q,P];case
5:var
h=cD(a[1]),U=h[4],V=h[3],W=h[2],X=h[1],Y=function(a){c(W,0);return 0};return[0,function(a){c(X,0);return 0},Y,V,U];case
6:var
i=cD(a[1]),Z=i[4],_=i[3],$=i[2],aa=i[1],ab=function(a){c($,0);return 0};return[0,function(a){c(aa,0);return 0},ab,_,Z];case
7:var
j=cD(a[1]),ac=j[4],ad=j[3],ae=j[2],af=j[1],ag=function(a){c(ae,0);return 0};return[0,function(a){c(af,0);return 0},ag,ad,ac];case
8:var
k=cD(a[2]),ah=k[4],ai=k[3],aj=k[2],ak=k[1],al=function(a){c(aj,0);return 0};return[0,function(a){c(ak,0);return 0},al,ai,ah];case
9:var
am=a[2],an=a[1],l=cD(a[3]),ao=l[4],ap=l[3],aq=l[2],ar=l[1],m=cD(ce(bR(an),am)),as=m[4],at=m[3],au=m[2],av=m[1],aw=function(a){c(as,0);c(ao,0);return 0},ax=function(a){c(ap,0);c(at,0);return 0},ay=function(a){c(au,0);c(aq,0);return 0};return[0,function(a){c(ar,0);c(av,0);return 0},ay,ax,aw];case
10:var
n=cD(a[1]),az=n[4],aA=n[3],aB=n[2],aC=n[1],aD=function(a){c(aB,0);return 0};return[0,function(a){c(aC,0);return 0},aD,aA,az];case
11:var
o=cD(a[1]),aE=o[4],aF=o[3],aG=o[2],aH=o[1],aI=function(a){c(aG,0);return 0};return[0,function(a){c(aH,0);return 0},aI,aF,aE];case
12:var
p=cD(a[1]),aJ=p[4],aK=p[3],aL=p[2],aM=p[1],aN=function(a){c(aL,0);return 0};return[0,function(a){c(aM,0);return 0},aN,aK,aJ];case
13:var
q=cD(a[1]),aO=q[4],aP=q[3],aQ=q[2],aR=q[1],aS=function(a){c(aO,0);return 0},aT=function(a){c(aP,0);return 0},aU=function(a){c(aQ,0);return 0};return[0,function(a){c(aR,0);return 0},aU,aT,aS];default:var
r=cD(a[1]),aV=r[4],aW=r[3],aX=r[2],aY=r[1],aZ=function(a){c(aV,0);return 0},a0=function(a){c(aW,0);return 0},a1=function(a){c(aX,0);return 0};return[0,function(a){c(aY,0);return 0},a1,a0,aZ]}}function
ce(d,b){if(typeof
d==="number")if(typeof
b==="number")return 0;else
switch(b[0]){case
10:var
a=0;break;case
11:var
a=1;break;case
12:var
a=2;break;case
13:var
a=3;break;case
14:var
a=4;break;case
8:var
a=5;break;case
9:var
a=6;break;default:throw[0,r,arA]}else
switch(d[0]){case
0:var
u=d[1];if(typeof
b==="number")var
e=1;else
switch(b[0]){case
0:return[0,ce(u,b[1])];case
8:var
a=5,e=0;break;case
9:var
a=6,e=0;break;case
10:var
a=0,e=0;break;case
11:var
a=1,e=0;break;case
12:var
a=2,e=0;break;case
13:var
a=3,e=0;break;case
14:var
a=4,e=0;break;default:var
e=1}if(e)var
a=7;break;case
1:var
v=d[1];if(typeof
b==="number")var
f=1;else
switch(b[0]){case
1:return[1,ce(v,b[1])];case
8:var
a=5,f=0;break;case
9:var
a=6,f=0;break;case
10:var
a=0,f=0;break;case
11:var
a=1,f=0;break;case
12:var
a=2,f=0;break;case
13:var
a=3,f=0;break;case
14:var
a=4,f=0;break;default:var
f=1}if(f)var
a=7;break;case
2:var
w=d[1];if(typeof
b==="number")var
g=1;else
switch(b[0]){case
2:return[2,ce(w,b[1])];case
8:var
a=5,g=0;break;case
9:var
a=6,g=0;break;case
10:var
a=0,g=0;break;case
11:var
a=1,g=0;break;case
12:var
a=2,g=0;break;case
13:var
a=3,g=0;break;case
14:var
a=4,g=0;break;default:var
g=1}if(g)var
a=7;break;case
3:var
x=d[1];if(typeof
b==="number")var
h=1;else
switch(b[0]){case
3:return[3,ce(x,b[1])];case
8:var
a=5,h=0;break;case
9:var
a=6,h=0;break;case
10:var
a=0,h=0;break;case
11:var
a=1,h=0;break;case
12:var
a=2,h=0;break;case
13:var
a=3,h=0;break;case
14:var
a=4,h=0;break;default:var
h=1}if(h)var
a=7;break;case
4:var
y=d[1];if(typeof
b==="number")var
i=1;else
switch(b[0]){case
4:return[4,ce(y,b[1])];case
8:var
a=5,i=0;break;case
9:var
a=6,i=0;break;case
10:var
a=0,i=0;break;case
11:var
a=1,i=0;break;case
12:var
a=2,i=0;break;case
13:var
a=3,i=0;break;case
14:var
a=4,i=0;break;default:var
i=1}if(i)var
a=7;break;case
5:var
z=d[1];if(typeof
b==="number")var
j=1;else
switch(b[0]){case
5:return[5,ce(z,b[1])];case
8:var
a=5,j=0;break;case
9:var
a=6,j=0;break;case
10:var
a=0,j=0;break;case
11:var
a=1,j=0;break;case
12:var
a=2,j=0;break;case
13:var
a=3,j=0;break;case
14:var
a=4,j=0;break;default:var
j=1}if(j)var
a=7;break;case
6:var
A=d[1];if(typeof
b==="number")var
k=1;else
switch(b[0]){case
6:return[6,ce(A,b[1])];case
8:var
a=5,k=0;break;case
9:var
a=6,k=0;break;case
10:var
a=0,k=0;break;case
11:var
a=1,k=0;break;case
12:var
a=2,k=0;break;case
13:var
a=3,k=0;break;case
14:var
a=4,k=0;break;default:var
k=1}if(k)var
a=7;break;case
7:var
B=d[1];if(typeof
b==="number")var
l=1;else
switch(b[0]){case
7:return[7,ce(B,b[1])];case
8:var
a=5,l=0;break;case
9:var
a=6,l=0;break;case
10:var
a=0,l=0;break;case
11:var
a=1,l=0;break;case
12:var
a=2,l=0;break;case
13:var
a=3,l=0;break;case
14:var
a=4,l=0;break;default:var
l=1}if(l)var
a=7;break;case
8:var
C=d[2],D=d[1];if(typeof
b==="number")var
n=1;else
switch(b[0]){case
8:var
E=b[1],F=ce(C,b[2]);return[8,ce(D,E),F];case
10:var
a=0,n=0;break;case
11:var
a=1,n=0;break;case
12:var
a=2,n=0;break;case
13:var
a=3,n=0;break;case
14:var
a=4,n=0;break;default:var
n=1}if(n)throw[0,r,arJ];break;case
9:var
G=d[3],H=d[2],I=d[1];if(typeof
b==="number")var
m=1;else
switch(b[0]){case
8:var
a=5,m=0;break;case
9:var
J=b[3],K=b[2],L=b[1],t=cD(ce(bR(H),L)),M=t[4];c(t[2],0);c(M,0);return[9,I,K,ce(G,J)];case
10:var
a=0,m=0;break;case
11:var
a=1,m=0;break;case
12:var
a=2,m=0;break;case
13:var
a=3,m=0;break;case
14:var
a=4,m=0;break;default:var
m=1}if(m)throw[0,r,arK];break;case
10:var
N=d[1];if(typeof
b!=="number"&&10===b[0])return[10,ce(N,b[1])];throw[0,r,arL];case
11:var
O=d[1];if(typeof
b==="number")var
s=1;else
switch(b[0]){case
10:var
a=0,s=0;break;case
11:return[11,ce(O,b[1])];default:var
s=1}if(s)throw[0,r,arM];break;case
12:var
P=d[1];if(typeof
b==="number")var
q=1;else
switch(b[0]){case
10:var
a=0,q=0;break;case
11:var
a=1,q=0;break;case
12:return[12,ce(P,b[1])];default:var
q=1}if(q)throw[0,r,arN];break;case
13:var
Q=d[1];if(typeof
b==="number")var
p=1;else
switch(b[0]){case
10:var
a=0,p=0;break;case
11:var
a=1,p=0;break;case
12:var
a=2,p=0;break;case
13:return[13,ce(Q,b[1])];default:var
p=1}if(p)throw[0,r,arO];break;default:var
R=d[1];if(typeof
b==="number")var
o=1;else
switch(b[0]){case
10:var
a=0,o=0;break;case
11:var
a=1,o=0;break;case
12:var
a=2,o=0;break;case
13:var
a=3,o=0;break;case
14:return[14,ce(R,b[1])];default:var
o=1}if(o)throw[0,r,arP]}switch(a){case
0:throw[0,r,arD];case
1:throw[0,r,arE];case
2:throw[0,r,arF];case
3:throw[0,r,arG];case
4:throw[0,r,arH];case
5:throw[0,r,arB];case
6:throw[0,r,arC];default:throw[0,r,arI]}}function
hp(b,a){return typeof
b==="number"?a:0===b[0]?a:[2,a]}function
B9(b,a){return b?[12,B9(b[1],a)]:a}function
bB(f){var
a=f;for(;;)if(typeof
a==="number")return 0;else
switch(a[0]){case
0:return[0,bB(a[1])];case
1:return[0,bB(a[1])];case
2:var
g=a[1];return hp(g,[1,bB(a[2])]);case
3:var
h=a[1];return hp(h,[1,bB(a[2])]);case
4:var
i=a[3],j=a[2];return hp(j,ke(i,[2,bB(a[4])]));case
5:var
k=a[3],l=a[2];return hp(l,ke(k,[3,bB(a[4])]));case
6:var
m=a[3],n=a[2];return hp(n,ke(m,[4,bB(a[4])]));case
7:var
o=a[3],p=a[2];return hp(p,ke(o,[5,bB(a[4])]));case
8:var
q=a[3],r=a[2];return hp(r,ke(q,[6,bB(a[4])]));case
9:return[7,bB(a[1])];case
10:var
a=a[1];continue;case
11:var
a=a[2];continue;case
12:var
a=a[2];continue;case
13:var
s=a[2];return[8,s,bB(a[3])];case
14:var
e=a[2];return[9,e,e,bB(a[3])];case
15:return[10,bB(a[1])];case
16:return[11,bB(a[1])];case
17:var
a=a[2];continue;case
18:var
d=a[1],t=bB(a[2]),u=0===d[0]?bB(d[1][1]):bB(d[1][1]);return cs(u,t);case
19:return[13,bB(a[1])];case
20:return[1,bB(a[3])];case
21:return[2,bB(a[2])];case
22:return[0,bB(a[1])];case
23:var
b=a[2],c=a[1];if(typeof
c==="number")switch(c){case
0:var
a=b;continue;case
1:var
a=b;continue;case
2:var
a=b;continue;case
3:return[14,bB(b)];default:var
a=b;continue}else
switch(c[0]){case
0:var
a=b;continue;case
1:var
a=b;continue;case
2:var
a=b;continue;case
3:var
a=b;continue;case
4:var
a=b;continue;case
5:var
a=b;continue;case
6:var
a=b;continue;case
7:var
a=b;continue;case
8:var
w=c[2];return cs(w,bB(b));case
9:var
a=b;continue;default:var
a=b;continue}default:var
v=a[1];return B9(v,bB(a[3]))}}function
ke(b,a){return typeof
b==="number"?0===b?a:[2,a]:a}var
cu=[N,arQ,H(0)];function
r6(b,a){if(typeof
b==="number")return[0,0,a];else{if(0===b[0])return[0,[0,b[1],b[2]],a];if(typeof
a!=="number"&&2===a[0])return[0,[1,b[1]],a[1]];throw cu}}function
kf(e,b,d){var
a=r6(e,d);if(typeof
b==="number"){if(0===b)return[0,a[1],0,a[2]];var
c=a[2];if(typeof
c!=="number"&&2===c[0])return[0,a[1],1,c[1]];throw cu}return[0,a[1],[0,b[1]],a[2]]}function
m$(c,b){var
a=bk(c,b);if(typeof
a[2]==="number")return a[1];throw cu}function
dn(d,c,b){var
a=bk(c,b);return[0,[23,d,a[1]],a[2]]}function
bk(b,a){if(typeof
b==="number")return[0,0,a];else
switch(b[0]){case
0:if(typeof
a!=="number"&&0===a[0]){var
r=bk(b[1],a[1]);return[0,[0,r[1]],r[2]]}break;case
1:if(typeof
a!=="number"&&0===a[0]){var
s=bk(b[1],a[1]);return[0,[1,s[1]],s[2]]}break;case
2:var
_=b[2],t=r6(b[1],a),e=t[2],$=t[1];if(typeof
e!=="number"&&1===e[0]){var
u=bk(_,e[1]);return[0,[2,$,u[1]],u[2]]}throw cu;case
3:var
aa=b[2],v=r6(b[1],a),f=v[2],ab=v[1];if(typeof
f!=="number"&&1===f[0]){var
w=bk(aa,f[1]);return[0,[3,ab,w[1]],w[2]]}throw cu;case
4:var
ac=b[4],ad=b[1],g=kf(b[2],b[3],a),h=g[3],ae=g[2],af=g[1];if(typeof
h!=="number"&&2===h[0]){var
x=bk(ac,h[1]);return[0,[4,ad,af,ae,x[1]],x[2]]}throw cu;case
5:var
ag=b[4],ah=b[1],i=kf(b[2],b[3],a),j=i[3],ai=i[2],aj=i[1];if(typeof
j!=="number"&&3===j[0]){var
y=bk(ag,j[1]);return[0,[5,ah,aj,ai,y[1]],y[2]]}throw cu;case
6:var
ak=b[4],al=b[1],k=kf(b[2],b[3],a),l=k[3],am=k[2],an=k[1];if(typeof
l!=="number"&&4===l[0]){var
z=bk(ak,l[1]);return[0,[6,al,an,am,z[1]],z[2]]}throw cu;case
7:var
ao=b[4],ap=b[1],m=kf(b[2],b[3],a),n=m[3],aq=m[2],ar=m[1];if(typeof
n!=="number"&&5===n[0]){var
A=bk(ao,n[1]);return[0,[7,ap,ar,aq,A[1]],A[2]]}throw cu;case
8:var
as=b[4],at=b[1],o=kf(b[2],b[3],a),p=o[3],au=o[2],av=o[1];if(typeof
p!=="number"&&6===p[0]){var
B=bk(as,p[1]);return[0,[8,at,av,au,B[1]],B[2]]}throw cu;case
9:if(typeof
a!=="number"&&7===a[0]){var
C=bk(b[1],a[1]);return[0,[9,C[1]],C[2]]}break;case
10:var
D=bk(b[1],a);return[0,[10,D[1]],D[2]];case
11:var
aw=b[1],E=bk(b[2],a);return[0,[11,aw,E[1]],E[2]];case
12:var
ax=b[1],F=bk(b[2],a);return[0,[12,ax,F[1]],F[2]];case
13:if(typeof
a!=="number"&&8===a[0]){var
G=a[1],ay=a[2],az=b[3],aA=b[1];if(e4([0,b[2]],[0,G]))throw cu;var
H=bk(az,ay);return[0,[13,aA,G,H[1]],H[2]]}break;case
14:if(typeof
a!=="number"&&9===a[0]){var
I=a[1],aB=a[3],aC=b[3],aD=b[2],aE=b[1],aF=[0,bv(I)];if(e4([0,bv(aD)],aF))throw cu;var
J=bk(aC,bv(aB));return[0,[14,aE,I,J[1]],J[2]]}break;case
15:if(typeof
a!=="number"&&10===a[0]){var
K=bk(b[1],a[1]);return[0,[15,K[1]],K[2]]}break;case
16:if(typeof
a!=="number"&&11===a[0]){var
L=bk(b[1],a[1]);return[0,[16,L[1]],L[2]]}break;case
17:var
aG=b[1],M=bk(b[2],a);return[0,[17,aG,M[1]],M[2]];case
18:var
N=b[2],q=b[1];if(0===q[0]){var
R=q[1],aK=R[2],S=bk(R[1],a),aL=S[1],T=bk(N,S[2]);return[0,[18,[0,[0,aL,aK]],T[1]],T[2]]}var
U=q[1],aM=U[2],V=bk(U[1],a),aN=V[1],W=bk(N,V[2]);return[0,[18,[1,[0,aN,aM]],W[1]],W[2]];case
19:if(typeof
a!=="number"&&13===a[0]){var
O=bk(b[1],a[1]);return[0,[19,O[1]],O[2]]}break;case
20:if(typeof
a!=="number"&&1===a[0]){var
aH=b[2],aI=b[1],P=bk(b[3],a[1]);return[0,[20,aI,aH,P[1]],P[2]]}break;case
21:if(typeof
a!=="number"&&2===a[0]){var
aJ=b[1],Q=bk(b[2],a[1]);return[0,[21,aJ,Q[1]],Q[2]]}break;case
23:var
d=b[2],c=b[1];if(typeof
c==="number")switch(c){case
0:return dn(c,d,a);case
1:return dn(c,d,a);case
2:return dn(c,d,a);case
3:if(typeof
a!=="number"&&14===a[0]){var
X=bk(d,a[1]);return[0,[23,3,X[1]],X[2]]}throw cu;default:return dn(c,d,a)}else
switch(c[0]){case
0:return dn(c,d,a);case
1:return dn(c,d,a);case
2:return dn(c,d,a);case
3:return dn(c,d,a);case
4:return dn(c,d,a);case
5:return dn(c,d,a);case
6:return dn(c,d,a);case
7:return dn([7,c[1],c[2]],d,a);case
8:var
aO=c[1],Y=db(c[2],d,a),Z=Y[2];return[0,[23,[8,aO,Y[1]],Z[1]],Z[2]];case
9:return dn(c,d,a);default:return dn(c,d,a)}}throw cu}function
db(b,d,a){if(typeof
b==="number")return[0,0,bk(d,a)];else
switch(b[0]){case
0:if(typeof
a!=="number"&&0===a[0]){var
g=db(b[1],d,a[1]);return[0,[0,g[1]],g[2]]}break;case
1:if(typeof
a!=="number"&&1===a[0]){var
h=db(b[1],d,a[1]);return[0,[1,h[1]],h[2]]}break;case
2:if(typeof
a!=="number"&&2===a[0]){var
i=db(b[1],d,a[1]);return[0,[2,i[1]],i[2]]}break;case
3:if(typeof
a!=="number"&&3===a[0]){var
j=db(b[1],d,a[1]);return[0,[3,j[1]],j[2]]}break;case
4:if(typeof
a!=="number"&&4===a[0]){var
k=db(b[1],d,a[1]);return[0,[4,k[1]],k[2]]}break;case
5:if(typeof
a!=="number"&&5===a[0]){var
l=db(b[1],d,a[1]);return[0,[5,l[1]],l[2]]}break;case
6:if(typeof
a!=="number"&&6===a[0]){var
m=db(b[1],d,a[1]);return[0,[6,m[1]],m[2]]}break;case
7:if(typeof
a!=="number"&&7===a[0]){var
n=db(b[1],d,a[1]);return[0,[7,n[1]],n[2]]}break;case
8:if(typeof
a!=="number"&&8===a[0]){var
o=a[1],w=a[2],x=b[2];if(e4([0,b[1]],[0,o]))throw cu;var
p=db(x,d,w);return[0,[8,o,p[1]],p[2]]}break;case
9:if(typeof
a!=="number"&&9===a[0]){var
e=a[2],f=a[1],y=a[3],z=b[3],A=b[2],B=b[1],C=[0,bv(f)];if(e4([0,bv(B)],C))throw cu;var
D=[0,bv(e)];if(e4([0,bv(A)],D))throw cu;var
q=cD(ce(bR(f),e)),E=q[4];c(q[2],0);c(E,0);var
r=db(bv(z),d,y),F=r[2];return[0,[9,f,e,bR(r[1])],F]}break;case
10:if(typeof
a!=="number"&&10===a[0]){var
s=db(b[1],d,a[1]);return[0,[10,s[1]],s[2]]}break;case
11:if(typeof
a!=="number"&&11===a[0]){var
t=db(b[1],d,a[1]);return[0,[11,t[1]],t[2]]}break;case
13:if(typeof
a!=="number"&&13===a[0]){var
u=db(b[1],d,a[1]);return[0,[13,u[1]],u[2]]}break;case
14:if(typeof
a!=="number"&&14===a[0]){var
v=db(b[1],d,a[1]);return[0,[14,v[1]],v[2]]}break}throw cu}function
B_(b,a){return m$(b,bv(bR(a)))}function
dp(k,i,a){var
b=C(a),j=0<=i?k:0,d=iu(i);if(d<=b)return a;var
l=2===j?48:32,c=e8(d,l);switch(j){case
0:dF(a,0,c,0,b);break;case
1:dF(a,0,c,d-b|0,b);break;default:if(0<b){if(43===I(a,0))var
e=1;else
if(45===I(a,0))var
e=1;else
if(32===I(a,0))var
e=1;else
var
g=0,e=0;if(e){dC(c,0,I(a,0));dF(a,1,c,(d-b|0)+1|0,b-1|0);var
g=1}}else
var
g=0;if(!g){if(1<b)if(48===I(a,0)){if(fr===I(a,1))var
h=1;else
if(88===I(a,1))var
h=1;else
var
f=0,h=0;if(h){dC(c,1,I(a,1));dF(a,2,c,(d-b|0)+2|0,b-2|0);var
f=1}}else
var
f=0;else
var
f=0;if(!f)dF(a,0,c,d-b|0,b)}}return c}function
ix(j,b){var
c=iu(j),a=C(b),d=I(b,0);if(58<=d)var
e=71<=d?5<(d+pF|0)>>>0?1:0:65<=d?0:1;else{if(32===d)var
f=1;else
if(43<=d)switch(d+y9|0){case
5:if(a<(c+2|0))if(1<a){var
k=fr===I(b,1)?0:88===I(b,1)?0:1;if(!k){var
h=e8(c+2|0,48);dC(h,1,I(b,1));dF(b,2,h,(c-a|0)+4|0,a-2|0);return h}}var
e=0,f=0;break;case
0:case
2:var
f=1;break;case
1:case
3:case
4:var
e=1,f=0;break;default:var
e=0,f=0}else
var
e=1,f=0;if(f){if(a<(c+1|0)){var
g=e8(c+1|0,48);dC(g,0,d);dF(b,1,g,(c-a|0)+2|0,a-1|0);return g}var
e=1}}if(!e)if(a<c){var
i=e8(c,48);dF(b,0,i,c-a|0,a);return i}return b}function
arR(d){var
a=gr(d),b=C(a),c=e8(b+2|0,34);da(a,0,c,1,b);return c}function
asH(c,b){switch(c){case
0:var
a=arS;break;case
1:var
a=arT;break;case
2:var
a=arU;break;case
3:var
a=arV;break;case
4:var
a=arW;break;case
5:var
a=arX;break;case
6:var
a=arY;break;case
7:var
a=arZ;break;case
8:var
a=ar0;break;case
9:var
a=ar1;break;case
10:var
a=ar2;break;case
11:var
a=ar3;break;default:var
a=ar4}return fG(a,b)}function
asI(c,b){switch(c){case
0:var
a=asg;break;case
1:var
a=ash;break;case
2:var
a=asi;break;case
3:var
a=asj;break;case
4:var
a=ask;break;case
5:var
a=asl;break;case
6:var
a=asm;break;case
7:var
a=asn;break;case
8:var
a=aso;break;case
9:var
a=asp;break;case
10:var
a=asq;break;case
11:var
a=asr;break;default:var
a=ass}return fG(a,b)}function
asJ(c,b){switch(c){case
0:var
a=ast;break;case
1:var
a=asu;break;case
2:var
a=asv;break;case
3:var
a=asw;break;case
4:var
a=asx;break;case
5:var
a=asy;break;case
6:var
a=asz;break;case
7:var
a=asA;break;case
8:var
a=asB;break;case
9:var
a=asC;break;case
10:var
a=asD;break;case
11:var
a=asE;break;default:var
a=asF}return fG(a,b)}function
asK(c,b){switch(c){case
0:var
a=ar5;break;case
1:var
a=ar6;break;case
2:var
a=ar7;break;case
3:var
a=ar8;break;case
4:var
a=ar9;break;case
5:var
a=ar_;break;case
6:var
a=ar$;break;case
7:var
a=asa;break;case
8:var
a=asb;break;case
9:var
a=asc;break;case
10:var
a=asd;break;case
11:var
a=ase;break;default:var
a=asf}return Be(a,b)}function
fN(c,k,f){if(16<=c){if(17<=c)switch(c-17|0){case
2:var
h=0;break;case
0:case
3:var
i=43,h=1;break;default:var
i=32,h=1}else
var
h=0;if(!h)var
i=45;var
l=bTA(f,k,i);return 19<=c?m1(ap5,l):l}if(15===c)var
m=asG;else{var
p=iu(k);switch(c){case
15:var
b=70;break;case
0:case
1:case
2:var
b=h_;break;case
3:case
4:case
5:var
b=jB;break;case
6:case
7:case
8:var
b=69;break;case
9:case
10:case
11:var
b=l1;break;case
12:case
13:case
14:var
b=71;break;case
16:case
17:case
18:var
b=l9;break;default:var
b=72}var
d=B6(16);kd(d,37);switch(c){case
1:case
4:case
7:case
10:case
13:case
17:case
20:kd(d,43);break;case
2:case
5:case
8:case
11:case
14:case
18:case
21:kd(d,32);break}kd(d,46);cC(d,a(q+p));kd(d,b);var
m=B8(d)}var
e=Ba(m,f);if(15===c){var
n=A_(f),r=C(e);if(3===n)return f<0?asL:asM;if(4<=n)return asN;var
g=0;for(;;){if(g===r)var
o=0;else{var
j=I(e,g)+QY|0,s=23<j>>>0?55===j?1:0:21<(j-1|0)>>>0?1:0;if(!s){var
g=g+1|0;continue}var
o=1}return o?e:t(e,asO)}}return e}function
B$(b){var
a=B6(16);r5(a,b);return B8(a)}function
na(h,g,f,e,i,d,c,a){if(typeof
i==="number"){if(typeof
d==="number")return 0===d?function(d){return aM(h,g,[4,f,b(c,a,d)],e)}:function(i,d){return aM(h,g,[4,f,ix(i,b(c,a,d))],e)};var
m=d[1];return function(d){return aM(h,g,[4,f,ix(m,b(c,a,d))],e)}}else{if(0===i[0]){var
j=i[2],k=i[1];if(typeof
d==="number")return 0===d?function(d){return aM(h,g,[4,f,dp(k,j,b(c,a,d))],e)}:function(i,d){return aM(h,g,[4,f,dp(k,j,ix(i,b(c,a,d)))],e)};var
n=d[1];return function(d){return aM(h,g,[4,f,dp(k,j,ix(n,b(c,a,d)))],e)}}var
l=i[1];if(typeof
d==="number")return 0===d?function(i,d){return aM(h,g,[4,f,dp(l,i,b(c,a,d))],e)}:function(j,i,d){return aM(h,g,[4,f,dp(l,j,ix(i,b(c,a,d)))],e)};var
o=d[1];return function(i,d){return aM(h,g,[4,f,dp(l,i,ix(o,b(c,a,d)))],e)}}}function
Ca(g,f,e,d,a,b){if(typeof
a==="number")return function(a){return aM(g,f,[4,e,c(b,a)],d)};else{if(0===a[0]){var
h=a[2],i=a[1];return function(a){return aM(g,f,[4,e,dp(i,h,c(b,a))],d)}}var
j=a[1];return function(h,a){return aM(g,f,[4,e,dp(j,h,c(b,a))],d)}}}function
li(k,x,f,w,v){var
e=x,d=w,a=v;for(;;)if(typeof
a==="number")return b(e,f,d);else
switch(a[0]){case
0:var
y=a[1];return function(a){return aM(e,f,[5,d,a],y)};case
1:var
z=a[1];return function(g){var
a=mY(g),b=C(a),c=e8(b+2|0,39);da(a,0,c,1,b);return aM(e,f,[4,d,c],z)};case
2:var
A=a[2],B=a[1];return Ca(e,f,d,A,B,function(a){return a});case
3:return Ca(e,f,d,a[2],a[1],arR);case
4:return na(e,f,d,a[4],a[2],a[3],asH,a[1]);case
5:return na(e,f,d,a[4],a[2],a[3],asI,a[1]);case
6:return na(e,f,d,a[4],a[2],a[3],asJ,a[1]);case
7:return na(e,f,d,a[4],a[2],a[3],asK,a[1]);case
8:var
g=a[4],h=a[3],j=a[2],i=a[1];if(typeof
j==="number"){if(typeof
h==="number")return 0===h?function(a){return aM(e,f,[4,d,fN(i,r4,a)],g)}:function(b,a){return aM(e,f,[4,d,fN(i,b,a)],g)};var
U=h[1];return function(a){return aM(e,f,[4,d,fN(i,U,a)],g)}}else{if(0===j[0]){var
m=j[2],n=j[1];if(typeof
h==="number")return 0===h?function(a){return aM(e,f,[4,d,dp(n,m,fN(i,r4,a))],g)}:function(b,a){return aM(e,f,[4,d,dp(n,m,fN(i,b,a))],g)};var
V=h[1];return function(a){return aM(e,f,[4,d,dp(n,m,fN(i,V,a))],g)}}var
o=j[1];if(typeof
h==="number")return 0===h?function(b,a){return aM(e,f,[4,d,dp(o,b,fN(i,r4,a))],g)}:function(c,b,a){return aM(e,f,[4,d,dp(o,c,fN(i,b,a))],g)};var
W=h[1];return function(b,a){return aM(e,f,[4,d,dp(o,b,fN(i,W,a))],g)}}case
9:var
D=a[1];return function(a){return aM(e,f,[4,d,Bx(a)],D)};case
10:var
d=[7,d],a=a[1];continue;case
11:var
d=[2,d,a[1]],a=a[2];continue;case
12:var
d=[3,d,a[1]],a=a[2];continue;case
13:var
E=a[3],F=B$(a[2]);return function(a){return aM(e,f,[4,d,F],E)};case
14:var
G=a[3],H=a[2];return function(a){return aM(e,f,d,aY(B_(a[1],H),G))};case
15:var
I=a[1];return function(c,a){return aM(e,f,[6,d,function(d){return b(c,d,a)}],I)};case
16:var
J=a[1];return function(a){return aM(e,f,[6,d,a],J)};case
17:var
d=[0,d,a[1]],a=a[2];continue;case
18:var
l=a[1];if(0===l[0]){var
K=a[2],L=l[1][1],M=0,e=function(c,d,e){return function(b,a){return aM(d,b,[1,c,[0,a]],e)}}(d,e,K),d=M,a=L;continue}var
N=a[2],O=l[1][1],P=0,e=function(c,d,e){return function(b,a){return aM(d,b,[1,c,[1,a]],e)}}(d,e,N),d=P,a=O;continue;case
19:throw[0,r,asR];case
20:var
Q=a[3],R=[8,d,asS];return function(a){return aM(e,f,R,Q)};case
21:var
S=a[2];return function(a){return aM(e,f,[4,d,fG(asT,a)],S)};case
22:var
T=a[1];return function(a){return aM(e,f,[5,d,a],T)};case
23:var
p=a[2],q=a[1];return k<50?vE(k+1|0,e,f,d,q,p):ai(vE,[0,e,f,d,q,p]);default:var
s=a[3],t=a[1],u=c(a[2],0);return k<50?vC(k+1|0,e,f,d,s,t,u):ai(vC,[0,e,f,d,s,t,u])}}function
vE(e,d,c,b,f,a){if(typeof
f==="number")switch(f){case
0:return e<50?bh(e+1|0,d,c,b,a):ai(bh,[0,d,c,b,a]);case
1:return e<50?bh(e+1|0,d,c,b,a):ai(bh,[0,d,c,b,a]);case
2:return e<50?bh(e+1|0,d,c,b,a):ai(bh,[0,d,c,b,a]);case
3:throw[0,r,asU];default:return e<50?bh(e+1|0,d,c,b,a):ai(bh,[0,d,c,b,a])}else
switch(f[0]){case
0:return e<50?bh(e+1|0,d,c,b,a):ai(bh,[0,d,c,b,a]);case
1:return e<50?bh(e+1|0,d,c,b,a):ai(bh,[0,d,c,b,a]);case
2:return e<50?bh(e+1|0,d,c,b,a):ai(bh,[0,d,c,b,a]);case
3:return e<50?bh(e+1|0,d,c,b,a):ai(bh,[0,d,c,b,a]);case
4:return e<50?bh(e+1|0,d,c,b,a):ai(bh,[0,d,c,b,a]);case
5:return e<50?bh(e+1|0,d,c,b,a):ai(bh,[0,d,c,b,a]);case
6:return e<50?bh(e+1|0,d,c,b,a):ai(bh,[0,d,c,b,a]);case
7:return e<50?bh(e+1|0,d,c,b,a):ai(bh,[0,d,c,b,a]);case
8:var
g=f[2];return e<50?vD(e+1|0,d,c,b,g,a):ai(vD,[0,d,c,b,g,a]);case
9:return e<50?bh(e+1|0,d,c,b,a):ai(bh,[0,d,c,b,a]);default:return e<50?bh(e+1|0,d,c,b,a):ai(bh,[0,d,c,b,a])}}function
vD(f,e,d,c,a,b){if(typeof
a==="number")return f<50?bh(f+1|0,e,d,c,b):ai(bh,[0,e,d,c,b]);else
switch(a[0]){case
0:var
g=a[1];return function(a){return dI(e,d,c,g,b)};case
1:var
h=a[1];return function(a){return dI(e,d,c,h,b)};case
2:var
i=a[1];return function(a){return dI(e,d,c,i,b)};case
3:var
j=a[1];return function(a){return dI(e,d,c,j,b)};case
4:var
k=a[1];return function(a){return dI(e,d,c,k,b)};case
5:var
l=a[1];return function(a){return dI(e,d,c,l,b)};case
6:var
m=a[1];return function(a){return dI(e,d,c,m,b)};case
7:var
n=a[1];return function(a){return dI(e,d,c,n,b)};case
8:var
o=a[2];return function(a){return dI(e,d,c,o,b)};case
9:var
p=a[3],q=a[2],s=ce(bR(a[1]),q);return function(a){return dI(e,d,c,cs(s,p),b)};case
10:var
t=a[1];return function(f,a){return dI(e,d,c,t,b)};case
11:var
u=a[1];return function(a){return dI(e,d,c,u,b)};case
12:var
v=a[1];return function(a){return dI(e,d,c,v,b)};case
13:throw[0,r,asV];default:throw[0,r,asW]}}function
bh(e,c,b,f,a){var
d=[8,f,asX];return e<50?li(e+1|0,c,b,d,a):ai(li,[0,c,b,d,a])}function
vC(i,d,b,g,a,f,e){if(f){var
j=f[1];return function(f){return asQ(d,b,g,a,j,c(e,f))}}var
h=[4,g,e];return i<50?li(i+1|0,d,b,h,a):ai(li,[0,d,b,h,a])}function
aM(a,b,c,d){return dE(li(0,a,b,c,d))}function
asP(a,b,c,d,e){return dE(vE(0,a,b,c,d,e))}function
dI(a,b,c,d,e){return dE(vD(0,a,b,c,d,e))}function
asQ(a,b,c,d,e,f){return dE(vC(0,a,b,c,d,e,f))}function
kg(c,b,a,e,d){if(typeof
e==="number"){if(typeof
d==="number"){if(0===d){var
f=br(c,b,a);return function(a){return f}}var
g=br(c,b,a),h=function(a){return g};return function(a){return h}}var
i=br(c,b,a);return function(a){return i}}else{if(0===e[0]){if(typeof
d==="number"){if(0===d){var
j=br(c,b,a);return function(a){return j}}var
k=br(c,b,a),l=function(a){return k};return function(a){return l}}var
m=br(c,b,a);return function(a){return m}}if(typeof
d==="number"){if(0===d){var
n=br(c,b,a),o=function(a){return n};return function(a){return o}}var
p=br(c,b,a),q=function(a){return p},r=function(a){return q};return function(a){return r}}var
s=br(c,b,a),t=function(a){return s};return function(a){return t}}}function
vB(j,l,d,k){var
b=l,a=k;for(;;)if(typeof
a==="number")return c(b,d);else
switch(a[0]){case
0:var
m=br(b,d,a[1]);return function(a){return m};case
1:var
n=br(b,d,a[1]);return function(a){return n};case
2:var
f=a[1];if(typeof
f==="number"){var
o=br(b,d,a[2]);return function(a){return o}}else{if(0===f[0]){var
p=br(b,d,a[2]);return function(a){return p}}var
q=br(b,d,a[2]),s=function(a){return q};return function(a){return s}}case
3:var
g=a[1];if(typeof
g==="number"){var
t=br(b,d,a[2]);return function(a){return t}}else{if(0===g[0]){var
u=br(b,d,a[2]);return function(a){return u}}var
v=br(b,d,a[2]),w=function(a){return v};return function(a){return w}}case
4:return kg(b,d,a[4],a[2],a[3]);case
5:return kg(b,d,a[4],a[2],a[3]);case
6:return kg(b,d,a[4],a[2],a[3]);case
7:return kg(b,d,a[4],a[2],a[3]);case
8:return kg(b,d,a[4],a[2],a[3]);case
9:var
x=br(b,d,a[1]);return function(a){return x};case
10:var
a=a[1];continue;case
11:var
a=a[2];continue;case
12:var
a=a[2];continue;case
13:var
y=br(b,d,a[3]);return function(a){return y};case
14:var
z=a[3],A=a[2];return function(a){return br(b,d,aY(B_(a[1],A),z))};case
15:var
B=br(b,d,a[1]),C=function(a){return B};return function(a){return C};case
16:var
D=br(b,d,a[1]);return function(a){return D};case
17:var
a=a[2];continue;case
18:var
e=a[1];if(0===e[0]){var
E=a[2],F=e[1][1],b=function(b,c){return function(a){return br(b,a,c)}}(b,E),a=F;continue}var
G=a[2],H=e[1][1],b=function(b,c){return function(a){return br(b,a,c)}}(b,G),a=H;continue;case
19:throw[0,r,asZ];case
20:var
I=br(b,d,a[3]);return function(a){return I};case
21:var
J=br(b,d,a[2]);return function(a){return J};case
22:var
K=br(b,d,a[1]);return function(a){return K};case
23:var
L=a[2],M=a[1],N=0;return asP(function(a,d){return c(b,a)},d,N,M,L);default:var
h=a[3],i=a[1];return j<50?vA(j+1|0,b,d,h,i):ai(vA,[0,b,d,h,i])}}function
vA(e,c,b,a,d){if(d){var
f=asY(c,b,a,d[1]);return function(a){return f}}return e<50?vB(e+1|0,c,b,a):ai(vB,[0,c,b,a])}function
br(a,b,c){return dE(vB(0,a,b,c))}function
asY(a,b,c,d){return dE(vA(0,a,b,c,d))}function
fO(b,f){var
a=f;for(;;)if(typeof
a==="number")return 0;else
switch(a[0]){case
0:var
g=a[1],h=m_(a[2]);fO(b,g);return d2(b,h);case
1:var
d=a[2],e=a[1];if(0===d[0]){var
i=d[1];fO(b,e);d2(b,as0);var
a=i;continue}var
j=d[1];fO(b,e);d2(b,as1);var
a=j;continue;case
6:var
m=a[2];fO(b,a[1]);return c(m,b);case
7:fO(b,a[1]);return cc(b);case
8:var
n=a[2];fO(b,a[1]);return Y(n);case
2:case
4:var
k=a[2];fO(b,a[1]);return d2(b,k);default:var
l=a[2];fO(b,a[1]);return rA(b,l)}}function
fP(b,f){var
a=f;for(;;)if(typeof
a==="number")return 0;else
switch(a[0]){case
0:var
g=a[1],h=m_(a[2]);fP(b,g);return dH(b,h);case
1:var
d=a[2],e=a[1];if(0===d[0]){var
i=d[1];fP(b,e);dH(b,as2);var
a=i;continue}var
j=d[1];fP(b,e);dH(b,as3);var
a=j;continue;case
6:var
m=a[2];fP(b,a[1]);return dH(b,c(m,0));case
7:var
a=a[1];continue;case
8:var
n=a[2];fP(b,a[1]);return Y(n);case
2:case
4:var
k=a[2];fP(b,a[1]);return dH(b,k);default:var
l=a[2];fP(b,a[1]);return bd(b,l)}}function
d4(b){var
c=b[1],a=b5(cX);return aM(function(c,b){fP(a,b);return aU(b6(a))},0,0,c)}function
r7(a){if(a3(a,as4))return as5;var
g=C(a);function
i(b){return c(d4(as6),a)}function
j(d){var
b=d;for(;;){if(b===g)return b;var
c=I(a,b);if(9!==c)if(32!==c)return b;var
b=b+1|0;continue}}function
n(d,c){var
b=c;for(;;){if(b===g)return b;if(25<(I(a,b)+pF|0)>>>0)return b;var
b=b+1|0;continue}}function
o(f,d){var
b=d;for(;;){if(b===g)return b;var
c=I(a,b),e=48<=c?58<=c?0:1:45===c?1:0;if(e){var
b=b+1|0;continue}return b}}var
h=j(0),m=n(h,h),d=aD(a,h,m-h|0),f=j(m),k=o(f,f);if(f===k)var
l=0;else
try{var
p=dk(aD(a,f,k-f|0)),l=p}catch(a){a=s(a);if(a[1]!==bz)throw a;var
l=i(0)}if(j(k)!==g)i(0);if(O(d,as7))if(O(d,as8))if(O(d,as9))if(O(d,as_))if(O(d,as$))if(O(d,ata))var
e=i(0),b=1;else
var
e=1,b=1;else
var
e=2,b=1;else
var
e=3,b=1;else
var
e=0,b=1;else
var
b=0;else
var
b=0;if(!b)var
e=4;return[0,l,e]}function
Cb(a,b){return typeof
a==="number"?[0,0,b]:0===a[0]?[0,[0,a[1],a[2]],b]:[0,[1,a[1]],b]}function
kh(b,c,a){var
e=typeof
c==="number"?0===c?[0,0,a]:[0,1,a]:[0,[0,c[1]],a],d=e[1];return typeof
b==="number"?[0,0,d,a]:0===b[0]?[0,[0,b[1],b[2]],d,a]:[0,[1,b[1]],d,a]}function
r8(a,c){var
h=a?a[1]:1;function
ac(b,a){return m(d4(atb),c,b,a)}function
n(a){return ac(a,atc)}function
t(d,b,a){return p(d4(ate),c,d,b,a)}function
g(d,b,a){return p(d4(atf),c,d,b,a)}function
k(b,e,a){var
d=e-b|0;return 0===d?[0,a]:1===d?[0,[12,I(c,b),a]]:[0,[11,aD(c,b,d),a]]}function
d(i,a){var
g=i;for(;;){if(g===a)return k(i,g,0);var
m=I(c,g);if(37===m){var
j=g+1|0;if(j===a)n(a);var
p=95===I(c,j)?u(g,j+1|0,a,1):u(g,j,a,0);return k(i,g,p[1])}if(64===m){var
e=g+1|0;if(e===a)var
f=atJ;else{var
h=I(c,e);if(65<=h)if(94<=h){var
o=h+ac3|0;if(2<o>>>0)var
b=0;else
switch(o){case
0:var
f=y(1,e+1|0,a),b=1;break;case
1:var
b=0;break;default:var
f=[0,[17,1,d(e+1|0,a)[1]]],b=1}}else
if(91<=h)switch(h-91|0){case
0:var
f=y(0,e+1|0,a),b=1;break;case
1:var
b=0;break;default:var
f=[0,[17,0,d(e+1|0,a)[1]]],b=1}else
var
b=0;else
if(10===h)var
f=[0,[17,3,d(e+1|0,a)[1]]],b=1;else
if(32<=h)switch(h+ie|0){case
0:var
f=[0,[17,atK,d(e+1|0,a)[1]]],b=1;break;case
5:if((e+1|0)<a)if(37===I(c,e+1|0))var
f=[0,[17,6,d(e+2|0,a)[1]]],b=1,l=0;else
var
l=1;else
var
l=1;if(l)var
f=[0,[12,64,d(e,a)[1]]],b=1;break;case
12:var
f=[0,[17,atL,d(e+1|0,a)[1]]],b=1;break;case
14:var
f=[0,[17,4,d(e+1|0,a)[1]]],b=1;break;case
27:var
f=z(e+1|0,a),b=1;break;case
28:var
f=A(e+1|0,a),b=1;break;case
31:var
f=[0,[17,2,d(e+1|0,a)[1]]],b=1;break;case
32:var
f=[0,[17,5,d(e+1|0,a)[1]]],b=1;break;default:var
b=0}else
var
b=0;if(!b)var
f=[0,[17,[2,h],d(e+1|0,a)[1]]]}return k(i,g,f[1])}var
g=g+1|0;continue}}function
w(j,a,f,M,ag,af,A,ae,ad,bh,e){var
ah=[0,0],aj=[0,0],ak=[0,0],al=[0,0],N=[0,0],am=[0,0];function
B(a){ah[1]=1;return M}function
F(a){aj[1]=1;return ag}function
C(a){ak[1]=1;return af}function
o(a){al[1]=1;return A}function
O(a){N[1]=1;return ae}function
u(a){am[1]=1;return ad}function
P(a){N[1]=1;return bh}function
G(e){var
b=O(0),c=u(0);if(typeof
c==="number")if(0===c)return b;if(typeof
b==="number")return 0;else{if(0===b[0]){if(2<=b[1]){var
d=b[2];return h?[0,1,d]:i(j,a,48,ato)}return b}return 2<=b[1]?h?atp:i(j,a,48,atq):b}}function
an(c,b){if(typeof
b==="number")return b;else{if(0===b[0]){if(2<=b[1]){var
d=b[2];return h?[0,1,d]:i(j,a,c,atr)}return b}return 2<=b[1]?h?ats:i(j,a,c,att):b}}function
ao(c,b){if(typeof
b==="number")return 0;else{if(0===b[0])switch(b[1]){case
0:var
d=b[2];return h?[0,d]:i(j,a,c,atu);case
1:return[0,b[2]];default:var
e=b[2];return h?[0,e]:i(j,a,c,atv)}return i(j,a,c,atw)}}function
p(a){return ao(a,O(0))}function
ap(a){return ao(a,P(0))}if(ep<=e)var
l=0;else
switch(e){case
33:var
k=[0,[10,d(a,f)[1]]],l=1;break;case
40:var
aH=v(a,f,41),aI=d(aH+2|0,f)[1],aJ=bB(d(a,aH)[1]),bD=o(0)?[0,[23,[8,p(95),aJ],aI]]:[0,[14,p(40),aJ,aI]],k=bD,l=1;break;case
44:var
k=d(a,f),l=1;break;case
67:var
aL=d(a,f)[1],bF=o(0)?[0,[23,1,aL]]:[0,[1,aL]],k=bF,l=1;break;case
78:var
aQ=d(a,f)[1],aR=2,bK=o(0)?[0,[23,[10,aR],aQ]]:[0,[21,aR,aQ]],k=bK,l=1;break;case
83:var
bL=an(e,P(0)),aS=d(a,f)[1];if(o(0))var
aT=[0,[23,[1,ap(95)],aS]];else
var
aU=Cb(bL,aS),aT=[0,[3,aU[1],aU[2]]];var
k=aT,l=1;break;case
91:if(a===f)n(f);var
W=B4(0),w=function(a){return B5(W,a)},a_=function(c,b){if(!(b<c)){var
a=c;for(;;){B5(W,hg(a));var
d=a+1|0;if(b!==a){var
a=d;continue}break}}return 0},a$=function(a){return b(d4(atO),c,a)},x=function(f,g,b){var
a=g;for(;;){if(a===b)n(b);var
d=I(c,a);if(45===d){w(45);var
a=a+1|0;continue}if(93===d)return a+1|0;var
e=a+1|0;return f<50?Y(f+1|0,e,b,d):ai(Y,[0,e,b,d])}},Y=function(g,p,a,o){var
d=p,b=o;for(;;){if(d===a)n(a);var
f=I(c,d);if(46<=f)if(64===f)var
h=0;else{if(93===f){w(b);return d+1|0}var
h=1}else
if(37===f)var
h=0;else{if(45<=f){var
e=d+1|0;if(e===a)n(a);var
i=I(c,e);if(37===i){if((e+1|0)===a)n(a);var
j=I(c,e+1|0);if(37!==j)if(64!==j)return a$(e);a_(b,j);var
l=e+2|0;return g<50?x(g+1|0,l,a):ai(x,[0,l,a])}if(93===i){w(b);w(45);return e+1|0}a_(b,i);var
m=e+1|0;return g<50?x(g+1|0,m,a):ai(x,[0,m,a])}var
h=1}if(!h)if(37===b){w(f);var
k=d+1|0;return g<50?x(g+1|0,k,a):ai(x,[0,k,a])}if(37===b)a$(d);w(b);var
d=d+1|0,b=f;continue}},bV=function(a,b,c){return dE(Y(0,a,b,c))};if(a===f)n(f);if(94===I(c,a))var
K=a+1|0,ba=1;else
var
K=a,ba=0;if(K===f)n(f);var
bW=bV(K+1|0,f,I(c,K)),aa=rO(W);if(ba){var
ab=B4(0),z=0;for(;;){dC(ab,z,hg(I(aa,z)^at));var
bg=z+1|0;if(31!==z){var
z=bg;continue}var
X=ab;break}}else
var
X=aa;var
aY=d(bW,f)[1],bP=o(0)?[0,[23,[9,p(95),X],aY]]:[0,[20,p(91),X,aY]],k=bP,l=1;break;case
97:var
k=[0,[15,d(a,f)[1]]],l=1;break;case
99:var
aZ=function(a){return o(0)?[0,[23,0,a]]:[0,[0,a]]},J=d(a,f)[1],a0=p(99);if(a0){if(0===a0[1])var
bQ=o(0)?[0,[23,4,J]]:[0,[22,J]],a1=bQ;else
var
a1=h?aZ(J):ac(a,atd);var
a2=a1}else
var
a2=aZ(J);var
k=a2,l=1;break;case
114:var
a3=d(a,f)[1],bR=o(0)?[0,[23,3,a3]]:[0,[19,a3]],k=bR,l=1;break;case
115:var
bS=an(e,P(0)),a4=d(a,f)[1];if(o(0))var
a5=[0,[23,[0,ap(95)],a4]];else
var
a6=Cb(bS,a4),a5=[0,[2,a6[1],a6[2]]];var
k=a5,l=1;break;case
116:var
k=[0,[16,d(a,f)[1]]],l=1;break;case
123:var
a7=v(a,f,cW),bT=d(a,a7)[1],a8=d(a7+2|0,f)[1],a9=bB(bT),bU=o(0)?[0,[23,[7,p(95),a9],a8]]:[0,[13,p(ck),a9,a8]],k=bU,l=1;break;case
66:case
98:var
aK=d(a,f)[1],bE=o(0)?[0,[23,2,aK]]:[0,[9,aK]],k=bE,l=1;break;case
37:case
64:var
k=[0,[12,e,d(a,f)[1]]],l=1;break;case
76:case
108:case
110:if(a===f)var
Z=1;else{var
bb=I(c,a)+jL|0;if(32<bb>>>0)var
_=0;else
switch(bb){case
0:case
12:case
17:case
23:case
29:case
32:var
aP=1,_=1;break;default:var
_=0}if(!_)var
aP=0;if(aP)var
l=0,Z=0;else
var
Z=1}if(Z){var
aO=d(a,f)[1];if(gj<=e)if(gi<=e)var
y=0;else
switch(e+AY|0){case
0:var
H=0,y=1;break;case
1:var
y=0;break;default:var
H=1,y=1}else
if(76===e)var
H=2,y=1;else
var
y=0;if(!y)throw[0,r,atV];var
bJ=o(0)?[0,[23,[10,H],aO]]:[0,[21,H,aO]],k=bJ,l=1}break;case
32:case
35:case
43:case
45:case
95:var
k=m(d4(atI),c,j,e),l=1;break;case
88:case
100:case
105:case
111:case
117:case
120:var
bM=C(0),bN=F(0),aV=E(j,a,B(0),bN,bM,e),aW=d(a,f)[1];if(o(0))var
aX=[0,[23,[2,aV,p(95)],aW]];else
var
bO=u(0),V=kh(G(0),bO,aW),aX=[0,[4,aV,V[1],V[2],V[3]]];var
k=aX,l=1;break;case
69:case
70:case
71:case
72:case
101:case
102:case
103:case
104:var
bG=C(0),bc=B(0),L=bG;for(;;){if(0===bc)if(0===L){if(73<=e){var
bd=e+z$|0;if(3<bd>>>0)var
q=0;else
switch(bd){case
0:var
g=3,q=1;break;case
1:var
g=0,q=1;break;case
2:var
g=9,q=1;break;default:var
g=16,q=1}}else
if(69<=e)switch(e+o4|0){case
0:var
g=6,q=1;break;case
1:var
g=15,q=1;break;case
2:var
g=12,q=1;break;default:var
g=19,q=1}else
var
q=0;if(!q)throw[0,r,at1]}else{if(73<=e){var
be=e+z$|0;if(3<be>>>0)var
s=0;else
switch(be){case
0:var
g=5,s=1;break;case
1:var
g=2,s=1;break;case
2:var
g=11,s=1;break;default:var
g=18,s=1}}else
if(69<=e)switch(e+o4|0){case
0:var
g=8,s=1;break;case
1:var
s=0;break;case
2:var
g=14,s=1;break;default:var
g=21,s=1}else
var
s=0;if(!s){if(h){var
L=0;continue}var
g=i(j,a,e,at2)}}else
if(0===L){if(73<=e){var
bf=e+z$|0;if(3<bf>>>0)var
t=0;else
switch(bf){case
0:var
g=4,t=1;break;case
1:var
g=1,t=1;break;case
2:var
g=10,t=1;break;default:var
g=17,t=1}}else
if(69<=e)switch(e+o4|0){case
0:var
g=7,t=1;break;case
1:var
t=0;break;case
2:var
g=13,t=1;break;default:var
g=20,t=1}else
var
t=0;if(!t){if(h){var
bc=0;continue}var
g=i(j,a,e,at3)}}else{if(h){var
L=0;continue}var
g=i(j,a,32,at4)}var
aM=d(a,f)[1];if(o(0))var
Q=u(0),bH=typeof
Q==="number"?0===Q?0:i(j,a,95,atx):[0,Q[1]],aN=[0,[23,[6,p(95),bH],aM]];else
var
bI=u(0),U=kh(O(0),bI,aM),aN=[0,[8,g,U[1],U[2],U[3]]];var
k=aN,l=1;break}break;default:var
l=0}if(!l){if(gj<=e)if(gi<=e)var
D=0;else{switch(e+AY|0){case
0:var
bq=I(c,a),br=C(0),bs=F(0),ax=E(j,a+1|0,B(0),bs,br,bq),ay=d(a+1|0,f)[1];if(o(0))var
az=[0,[23,[3,ax,p(95)],ay]];else
var
bt=u(0),R=kh(G(0),bt,ay),az=[0,[5,ax,R[1],R[2],R[3]]];var
aA=az,$=1;break;case
1:var
D=0,$=0;break;default:var
bu=I(c,a),bv=C(0),bw=F(0),aB=E(j,a+1|0,B(0),bw,bv,bu),aC=d(a+1|0,f)[1];if(o(0))var
aD=[0,[23,[4,aB,p(95)],aC]];else
var
bx=u(0),S=kh(G(0),bx,aC),aD=[0,[6,aB,S[1],S[2],S[3]]];var
aA=aD,$=1}if($)var
k=aA,D=1}else
if(76===e){var
by=I(c,a),bz=C(0),bA=F(0),aE=E(j,a+1|0,B(0),bA,bz,by),aF=d(a+1|0,f)[1];if(o(0))var
aG=[0,[23,[5,aE,p(95)],aF]];else
var
bC=u(0),T=kh(G(0),bC,aF),aG=[0,[7,aE,T[1],T[2],T[3]]];var
k=aG,D=1}else
var
D=0;if(!D)var
k=m(d4(aty),c,a-1|0,e)}if(1-h){var
aq=1-ah[1],bi=aq?M:aq;if(bi)i(j,a,e,atz);var
ar=1-aj[1],bj=ar?ag:ar;if(bj)i(j,a,e,atA);var
as=1-ak[1],bk=as?af:as;if(bk)i(j,a,e,atB);var
au=1-N[1],bl=au?e4([0,ae],atC):au;if(bl)i(j,a,e,atD);var
av=1-am[1],bm=av?e4([0,ad],atE):av;if(bm){var
bn=A?95:e;i(j,a,bn,atF)}var
bo=A?M:A;if(bo)i(j,a,95,atG)}var
aw=1-al[1],bp=aw?A:aw;if(bp){var
bX=38<=e?44===e?0:64===e?0:1:33===e?0:37<=e?0:1,bY=bX?0:h?1:0;if(!bY)i(j,a,e,atH)}return k}function
o(l,f,e,k,j,i,h,g,d,a){if(f===e)n(e);function
b(b){return w(l,f+1|0,e,j,i,h,g,d,a,b,I(c,f))}if(typeof
d==="number"){if(typeof
a==="number")if(0===a)return b(0);return 0===k?typeof
a==="number"?b(atm):b([0,1,a[1]]):typeof
a==="number"?b(atn):b([0,0,a[1]])}return b(d)}function
f(m,l,a,k,j,i,g,f,d){if(l===a)n(a);var
p=I(c,l);if(46===p){var
b=l+1|0;if(b===a)n(a);var
r=function(e,c){var
b=q(c,a,0);return o(m,b[1],a,e,j,i,g,f,d,[0,b[2]])},e=I(c,b);if(48<=e){if(!(58<=e))return r(k,b)}else
if(42<=e)switch(e-42|0){case
0:return o(m,b+1|0,a,k,j,i,g,f,d,1);case
1:case
3:if(h){var
s=b+1|0,u=k||(45===e?1:0);return r(u,s)}break}return h?o(m,b,a,k,j,i,g,f,d,atk):t(b-1|0,46,atl)}return w(m,l+1|0,a,j,i,g,f,d,0,d,p)}function
u(e,A,b,g){var
s=[0,0],u=[0,0],v=[0,0],w=[0,0],x=[0,0];function
j(b,a){var
d=a[1],e=d?1-h:d;if(e){var
f=I(c,b);m(d4(atg),c,b,f)}a[1]=1;return 0}var
a=A;for(;;){if(a===b)n(b);var
y=I(c,a)+ie|0;if(!(16<y>>>0))switch(y){case
0:j(a,w);var
a=a+1|0;continue;case
3:j(a,x);var
a=a+1|0;continue;case
11:j(a,v);var
a=a+1|0;continue;case
13:j(a,u);var
a=a+1|0;continue;case
16:j(a,s);var
a=a+1|0;continue}var
k=w[1],l=x[1],o=v[1],d=u[1],B=s[1];if(a===b)n(b);var
p=0===B?0===d?1:0:0===d?2:h?0:i(e,a,45,atj),r=I(c,a);if(48<=r){if(!(58<=r)){var
z=q(a,b,0);return f(e,z[1],b,d,o,l,k,g,[0,p,z[2]])}}else
if(42===r)return f(e,a+1|0,b,d,o,l,k,g,[1,p]);switch(p){case
0:if(1-h)t(a-1|0,45,ath);return f(e,a,b,d,o,l,k,g,0);case
1:return f(e,a,b,d,o,l,k,g,0);default:return f(e,a,b,d,o,l,k,g,ati)}}}function
y(h,a,e){try{if(a===e)throw x;if(60===I(c,a)){var
f=m2(c,a+1|0,62);if(e<=f)throw x;var
o=aD(c,a,(f-a|0)+1|0),p=d(f+1|0,e)[1],b=d(a,f+1|0)[1],i=[0,b,o];if(h)var
j=[0,i];else{if(typeof
b==="number")var
g=0;else
if(11===b[0])if(typeof
b[2]==="number"){var
l=b[1],k=1;try{r7(l)}catch(a){k=0;a=s(a);if(a[1]!==bz)throw a;var
g=1}if(k)var
g=1}else
var
g=0;else
var
g=0;var
j=[1,i]}var
q=[0,[18,j,p]];return q}throw x}catch(b){b=s(b);if(b===x){var
m=d(a,e)[1],n=h?[0,Cc]:[1,Cc];return[0,[18,n,m]]}throw b}}function
z(a,b){try{var
r=a===b?1:0,t=r||(60!==I(c,a)?1:0);if(t)throw x;var
n=e(a+1|0,b),k=I(c,n),A=48<=k?58<=k?0:1:45===k?1:0;if(!A)throw x;var
o=j(n,b),p=o[2],f=e(o[1],b),l=I(c,f)-45|0;if(12<l>>>0)if(17===l)var
u=[0,aD(c,a-2|0,(f-a|0)+3|0),p,0],v=f+1|0,i=v,h=u,g=1;else
var
g=0;else
if(1<(l-1|0)>>>0){var
q=j(f,b),w=q[2],m=e(q[1],b);if(62!==I(c,m))throw x;var
y=[0,aD(c,a-2|0,(m-a|0)+3|0),p,w],z=m+1|0,i=z,h=y,g=1}else
var
g=0;if(!g)throw x}catch(b){b=s(b);if(b!==x)if(b[1]!==bz)throw b;var
i=a,h=atM}return[0,[17,h,d(i,b)[1]]]}function
A(b,a){try{var
k=e(b,a),g=I(c,k),p=48<=g?58<=g?0:1:45===g?1:0;if(p){var
m=j(k,a),o=m[2],h=e(m[1],a);if(62!==I(c,h))throw x;var
l=[0,[0,h+1|0,[1,aD(c,b-2|0,(h-b|0)+3|0),o]]]}else
var
l=0;var
f=l}catch(a){a=s(a);if(a!==x)if(a[1]!==bz)throw a;var
f=0}if(f){var
i=f[1],n=i[2];return[0,[17,n,d(i[1],a)[1]]]}return[0,[17,atN,d(b,a)[1]]]}function
e(d,b){var
a=d;for(;;){if(a===b)n(b);if(32===I(c,a)){var
a=a+1|0;continue}return a}}function
q(h,e,g){var
a=h,b=g;for(;;){if(a===e)n(e);var
f=I(c,a);if(9<(f+c_|0)>>>0)return[0,a,b];var
d=(b*10|0)+(f-48|0)|0;if(gs<d)return m(d4(atP),c,d,gs);var
a=a+1|0,b=d;continue}}function
j(a,b){if(a===b)n(b);var
d=I(c,a);if(48<=d){if(!(58<=d))return q(a,b,0)}else
if(45===d){if((a+1|0)===b)n(b);var
e=I(c,a+1|0);if(9<(e+c_|0)>>>0)return g(a+1|0,atR,e);var
f=q(a+1|0,b,0);return[0,f[1],-f[2]|0]}throw[0,r,atQ]}function
v(h,b,e){var
a=h;for(;;){if(a===b)m(d4(atS),c,e,b);if(37===I(c,a)){if((a+1|0)===b)n(b);if(I(c,a+1|0)===e)return a;var
d=I(c,a+1|0);if(95<=d){if(ck<=d){if(!(dW<=d))switch(d+ac3|0){case
0:var
a=v(a+2|0,b,cW)+2|0;continue;case
1:break;default:return g(a+1|0,atT,cW)}}else
if(!(96<=d)){if((a+2|0)===b)n(b);var
f=I(c,a+2|0);if(40===f){var
a=v(a+3|0,b,41)+2|0;continue}if(ck===f){var
a=v(a+3|0,b,cW)+2|0;continue}var
a=a+3|0;continue}}else{if(40===d){var
a=v(a+2|0,b,41)+2|0;continue}if(41===d)return g(a+1|0,atU,41)}var
a=a+2|0;continue}var
a=a+1|0;continue}}function
i(a,e,d,b){var
f=aD(c,a,e-a|0);return aq(d4(at5),c,a,b,d,f)}function
E(e,d,n,m,l,a){var
g=n,f=m,c=l;for(;;){if(0===g)if(0===f)if(0===c){var
j=a+jL|0;if(32<j>>>0)var
b=1;else
switch(j){case
0:return 8;case
12:return 0;case
17:return 3;case
23:return 10;case
29:return 12;case
32:return 6;default:var
b=1}}else{if(ci===a)return 2;if(di===a)return 5;var
b=1}else
if(0===c){if(88===a)return 9;if(gi===a)return 11;if(fr===a)return 7;var
b=0}else
var
b=0;else
if(0===f)if(0===c){if(ci===a)return 1;if(di===a)return 4;var
b=1}else
var
b=1;else
var
b=0;if(!b){var
k=a+jL|0;if(!(32<k>>>0))switch(k){case
0:if(h)return 9;break;case
23:if(h)return 11;break;case
32:if(h)return 7;break;case
12:case
17:case
29:if(h){var
f=0;continue}return i(e,d,a,at0)}}if(0===g){if(0===c)throw[0,r,atW];if(h){var
c=0;continue}return i(e,d,a,atX)}if(0===c){if(h){var
g=0;continue}return i(e,d,a,atY)}if(h){var
c=0;continue}return i(e,d,32,atZ)}}return d(0,C(c))}function
ki(d,c){var
a=c[1],b=0;return aM(function(b,a){fO(b,a);return 0},d,b,a)}function
aN(b){var
a=b[1];return aM(function(c,b){var
a=b5(64);fP(a,b);return b6(a)},0,0,a)}var
at8=[N,at7,H(0)];H(0);H(0);var
r9=[0,0];function
r$(d,b){var
a=d[b+1];return 1-(typeof
a==="number")?bi(a)===lT?c(aN(at9),a):bi(a)===re?mT(a):at_:c(aN(at$),a)}function
Cd(c,a){if(c.length-1<=a)return aua;var
d=Cd(c,a+1|0),e=r$(c,a);return b(aN(aub),e,d)}function
auc(a){var
d=a.length-1;if(2<d>>>0){var
e=Cd(a,2),f=r$(a,1);return b(aN(aud),f,e)}switch(d){case
0:return aue;case
1:return auf;default:var
g=r$(a,1);return c(aN(aug),g)}}function
Ce(a){function
b(k){var
b=k;for(;;){if(b){var
l=b[2],m=b[1];try{var
n=c(m,a),d=n}catch(a){var
d=0}if(d)return d[1];var
b=l;continue}if(a===sa)return auh;if(a===Cf)return aui;if(a[1]===bG){var
e=a[2],h=e[3],o=e[2],p=e[1];return aq(aN(r_),p,o,h,h+5|0,auj)}if(a[1]===r){var
f=a[2],i=f[3],q=f[2],s=f[1];return aq(aN(r_),s,q,i,i+6|0,auk)}if(a[1]===Cg){var
g=a[2],j=g[3],u=g[2],v=g[1];return aq(aN(r_),v,u,j,j+6|0,aul)}if(0===bi(a)){var
w=a[1][1];return t(w,auc(a))}return a[1]}}return b(r9[1])}function
kj(a){r9[1]=[0,a,r9[1]];return 0}function
kk(a){return mK(10,ci,0,a)}function
nb(a){var
b=a.length-1<4?1:0,c=b||(a[4]<0?1:0);return c}function
gt(a){a[4]=-a[4]|0;return 0}try{var
bCl=fK(bCk),Ci=bCl}catch(a){a=s(a);if(a!==x)throw a;try{var
bCj=fK(bCi),Ch=bCj}catch(a){a=s(a);if(a!==x)throw a;var
Ch=aun}var
Ci=Ch}var
auo=aqf(Ci,82),nc=[J,function(y){var
m=bUe(0),c=[0,a_(55,0),0],i=0===m.length-1?[0,0]:m,j=i.length-1,b=0;for(;;){z(c[1],b)[b+1]=b;var
x=b+1|0;if(54!==b){var
b=x;continue}var
g=[0,aum],k=54+hf(55,j)|0,s=0;if(!(k<0)){var
d=s;for(;;){var
e=d%55|0,l=hd(d,j),u=z(i,l)[l+1],h=t(g[1],a(q+u));g[1]=bTR(h,0,C(h));var
f=g[1],n=I(f,3)<<24,o=I(f,2)<<16,p=I(f,1)<<8,r=((I(f,0)+p|0)+o|0)+n|0,v=(z(c[1],e)[e+1]^r)&ic;z(c[1],e)[e+1]=v;var
w=d+1|0;if(k!==d){var
d=w;continue}break}}c[2]=0;return c}}];function
cf(h,k){var
l=h?h[1]:auo,b=16;for(;;){if(!(k<=b))if(!(fM<(b*2|0))){var
b=b*2|0;continue}if(l){var
i=bi(nc),a=bu===i?nc[1]:J===i?cd(nc):nc;a[2]=(a[2]+1|0)%55|0;var
c=a[2],d=z(a[1],c)[c+1],e=(a[2]+24|0)%55|0,f=(z(a[1],e)[e+1]+(d^(d>>>25|0)&31)|0)&ic,g=a[2];z(a[1],g)[g+1]=f;var
j=f}else
var
j=0;return[0,0,a_(b,0),j,b]}}function
Cj(b){b[1]=0;var
c=b[2].length-1-1|0,d=0;if(!(c<0)){var
a=d;for(;;){z(b[2],a)[a+1]=0;var
e=a+1|0;if(c!==a){var
a=e;continue}break}}return 0}function
aup(a){var
b=a[2].length-1;if(4<=a.length-1)if(b!==iu(a[4])){a[1]=0;a[2]=a_(iu(a[4]),0);return 0}return Cj(a)}function
auq(b){if(b){var
d=b[3],g=[0,b[1],b[2],d],c=g,a=d;for(;;){if(a){var
e=a[3],f=[0,a[1],a[2],e];if(c){c[3]=f;var
c=f,a=e;continue}throw[0,r,aur]}return g}}return 0}function
aus(a){var
b=a[4],c=a[3],d=hj(auq,a[2]);return[0,a[1],d,c,b]}function
aut(a){return a[1]}function
sb(v,f){var
k=f[2],l=k.length-1,g=l*2|0,m=g<fM?1:0;if(m){var
n=a_(g,0),h=a_(g,0),i=1-nb(f);f[2]=n;var
q=l-1|0,y=0;if(!(q<0)){var
e=y;a:for(;;){var
a=z(k,e)[e+1];for(;;){if(a){var
o=a[1],w=a[2],x=a[3],j=i?a:[0,o,w,0],c=b(v,f,o),p=z(h,c)[c+1];if(p)p[3]=j;else
z(n,c)[c+1]=j;z(h,c)[c+1]=j;var
a=x;continue}var
C=e+1|0;if(q!==e){var
e=C;continue a}break}break}}if(i){var
r=g-1|0,A=0;if(!(r<0)){var
d=A;for(;;){var
u=z(h,d)[d+1];if(u)u[3]=0;var
B=d+1|0;if(r!==d){var
d=B;continue}break}}var
s=0}else
var
s=i;var
t=s}else
var
t=m;return t}function
kl(a,b){return 3<=a.length-1?mK(10,ci,a[3],b)&(a[2].length-1-1|0):hd(bTz(10,ci,b),a[2].length-1)}function
es(a,c,e){var
b=kl(a,c),f=[0,c,e,z(a[2],b)[b+1]];z(a[2],b)[b+1]=f;a[1]=a[1]+1|0;var
d=a[2].length-1<<1<a[1]?1:0;return d?sb(kl,a):d}function
fQ(f,b){var
g=kl(f,b),c=z(f[2],g)[g+1];if(c){var
d=c[3],j=c[2];if(0===cJ(b,c[1]))return j;if(d){var
e=d[3],k=d[2];if(0===cJ(b,d[1]))return k;if(e){var
l=e[2],m=e[3];if(0===cJ(b,e[1]))return l;var
a=m;for(;;){if(a){var
h=a[2],i=a[3];if(0===cJ(b,a[1]))return h;var
a=i;continue}throw x}}throw x}throw x}throw x}function
auu(h,a){function
i(c){var
a=c;for(;;){if(a){var
d=a[3];b(h,a[1],a[2]);var
a=d;continue}return 0}}var
d=nb(a);if(1-d)gt(a);try{var
e=a[2],f=e.length-1-1|0,j=0;if(!(f<0)){var
c=j;for(;;){i(z(e,c)[c+1]);var
l=c+1|0;if(f!==c){var
c=l;continue}break}}var
g=1-d,k=g?gt(a):g;return k}catch(b){b=s(b);if(d)throw b;gt(a);throw b}}function
auv(j,e,d,i,h){var
c=i,a=h;for(;;){if(a){var
f=a[3],g=b(j,a[1],a[2]);if(g){var
k=g[1];if(c)c[3]=a;else
z(e[2],d)[d+1]=a;a[2]=k;var
c=a,a=f;continue}e[1]=e[1]-1|0;var
a=f;continue}return c?(c[3]=0,0):z(e[2],d)[d+1]=0}}function
auw(e,a){var
f=a[2],c=nb(a);if(1-c)gt(a);try{var
d=f.length-1-1|0,g=0;if(!(d<0)){var
b=g;for(;;){auv(e,a,b,0,z(a[2],b)[b+1]);var
i=b+1|0;if(d!==b){var
b=i;continue}break}}var
h=0;return h}catch(b){b=s(b);if(c)throw b;gt(a);throw b}}function
Ck(h,a,g){function
i(d,c){var
a=d,b=c;for(;;){if(a){var
e=a[3],f=m(h,a[1],a[2],b),a=e,b=f;continue}return b}}var
c=nb(a);if(1-c)gt(a);try{var
e=a[2],d=[0,g],f=e.length-1-1|0,j=0;if(!(f<0)){var
b=j;for(;;){var
l=d[1];d[1]=i(z(e,b)[b+1],l);var
n=b+1|0;if(f!==b){var
b=n;continue}break}}if(1-c)gt(a);var
k=d[1];return k}catch(b){b=s(b);if(c)throw b;gt(a);throw b}}function
Cl(d,c){var
b=d,a=c;for(;;){if(a){var
b=b+1|0,a=a[3];continue}return b}}function
aux(a){var
d=a[2],e=0,c=rT(function(b,a){return hf(b,Cl(0,a))},e,d),b=a_(c+1|0,0),f=a[2];BM(function(c){var
a=Cl(0,c);return b[a+1]=z(b,a)[a+1]+1|0},f);return[0,a[1],a[2].length-1,c,b]}function
km(e){var
d=e[1];function
a(b,a){var
d=b[2].length-1-1|0;return c(e[2],a)&d}function
f(b,d,f){var
c=a(b,d),g=[0,d,f,z(b[2],c)[c+1]];z(b[2],c)[c+1]=g;b[1]=b[1]+1|0;var
e=b[2].length-1<<1<b[1]?1:0;return e?sb(a,b):e}function
g(e,i){var
f=a(e,i),g=0,c=z(e[2],f)[f+1];for(;;){if(c){var
h=c[3];if(b(d,c[1],i)){e[1]=e[1]-1|0;return g?(g[3]=h,0):z(e[2],f)[f+1]=h}var
g=c,c=h;continue}return 0}}function
h(i,e){var
j=a(i,e),f=z(i[2],j)[j+1];if(f){var
g=f[3],m=f[2];if(b(d,e,f[1]))return m;if(g){var
h=g[3],n=g[2];if(b(d,e,g[1]))return n;if(h){var
o=h[2],p=h[3];if(b(d,e,h[1]))return o;var
c=p;for(;;){if(c){var
k=c[2],l=c[3];if(b(d,e,c[1]))return k;var
c=l;continue}throw x}}throw x}throw x}throw x}function
i(e,c){function
f(g){var
a=g;for(;;){if(a){var
e=a[3],h=a[2];if(b(d,a[1],c))return[0,h,f(e)];var
a=e;continue}return 0}}var
g=a(e,c);return f(z(e[2],g)[g+1])}function
j(c,f,i){var
g=a(c,f),j=z(c[2],g)[g+1],e=j;for(;;){if(e){var
m=e[3];if(!b(d,e[1],f)){var
e=m;continue}e[1]=f;e[2]=i;var
h=0}else
var
h=1;if(h){z(c[2],g)[g+1]=[0,f,i,j];c[1]=c[1]+1|0;var
k=c[2].length-1<<1<c[1]?1:0;if(k)return sb(a,c);var
l=k}else
var
l=h;return l}}function
k(f,e){var
h=a(f,e),c=z(f[2],h)[h+1];for(;;){if(c){var
i=c[3],g=b(d,c[1],e);if(g)return g;var
c=i;continue}return 0}}return[0,function(a){return cf(auy,a)},Cj,aup,aus,f,g,h,i,j,k,auu,auw,Ck,aut,aux]}function
et(a){return a.length-1-2|0}function
Cm(d){var
n=j_(0);function
j(b,a){return hd(a&o_,b[1].length-1)}var
e=7;function
t(a){var
b=7<=a?a:7,c=fM<b?fM:b;return[0,a_(c,n),a_(c,[0]),e,0,0]}function
g(b){var
c=b[1].length-1-1|0,d=0;if(!(c<0)){var
a=d;for(;;){z(b[1],a)[a+1]=n;z(b[2],a)[a+1]=[0];var
f=a+1|0;if(c!==a){var
a=f;continue}break}}b[3]=e;b[4]=0;return 0}function
h(f,c,a){var
d=c[1],g=0;return BO(function(e,h){var
a=g,c=h;for(;;){if(et(e)<=a)return c;var
d=d0(e,a);if(d){var
a=a+1|0,c=b(f,d[1],c);continue}var
a=a+1|0;continue}},d,a)}function
i(e,a){var
b=a[1],f=0;return BM(function(d){var
a=f;for(;;){if(et(d)<=a)return 0;var
b=d0(d,a);if(b){c(e,b[1]);var
a=a+1|0;continue}var
a=a+1|0;continue}},b)}function
u(e,c,d){var
a=e,b=d;for(;;){if(et(c)<=a)return b;var
f=mR(c,a)?1:0,a=a+1|0,b=b+f|0;continue}}function
o(a){var
b=0,c=a[1],d=0;return BO(function(a,b){return u(d,a,b)},c,b)}function
p(a,G,F,E,f){var
k=z(a[1],f)[f+1],H=z(a[2],f)[f+1],c=et(k),h=0;for(;;){if(c<=h){var
l=dm(((3*c|0)/2|0)+3|0,fM-2|0);if(l<=c)aU(auz);var
q=j_(l),r=a_(l,0);mQ(k,0,q,0,c);BL(H,0,r,0,c);m(G,q,c,F);z(r,c)[c+1]=E;z(a[1],f)[f+1]=q;z(a[2],f)[f+1]=r;var
I=c<=a[3]?1:0,O=I?a[3]<l?1:0:I;if(O){a[4]=a[4]+1|0;var
s=0;for(;;){var
w=a[5],d=z(a[1],w)[w+1],x=a[5],o=z(a[2],x)[x+1],y=et(d),i=(((y-3|0)*2|0)+2|0)/3|0;if(u(0,d,0)<=i){var
e=0,b=et(d)-1|0;for(;;){if(i<=b){if(mR(d,e)){var
e=e+1|0;continue}if(mR(d,b)){mQ(d,b,d,e,1);var
M=z(o,b)[b+1];z(o,e)[e+1]=M;var
e=e+1|0,b=b-1|0;continue}var
b=b-1|0;continue}if(0===i){var
A=a[5];z(a[1],A)[A+1]=n;var
B=a[5];z(a[2],B)[B+1]=[0]}else{apq(d,i+2|0);apq(o,i)}var
C=a[3]<y?1:0,N=C?i<=a[3]?1:0:C;if(N)a[4]=a[4]-1|0;break}}a[5]=hd(a[5]+1|0,a[1].length-1);var
P=s+1|0;if(2!==s){var
s=P;continue}break}}var
J=((a[1].length-1)/2|0)<a[4]?1:0;if(J){var
D=a[1].length-1,v=dm(((3*D|0)/2|0)+3|0,fM);if(D<v){var
g=t(v),K=a[1],L=0;BN(function(e,c){var
b=L;for(;;){if(et(c)<=b)return 0;if(0===mR(c,b)){var
b=b+1|0;continue}var
f=z(a[2],e)[e+1],h=function(d){return function(b,a,e){return mQ(c,d,b,a,1)}}(b),d=z(f,b)[b+1];p(g,h,0,d,j(g,d));var
b=b+1|0;continue}},K);a[1]=g[1];a[2]=g[2];a[3]=g[3];a[4]=g[4];a[5]=hd(a[5],g[1].length-1);return 0}a[3]=gp;a[4]=0;return 0}return J}if(mR(k,h)){var
h=h+1|0;continue}m(G,k,h,F);return z(H,h)[h+1]=E}}function
k(b,a){var
e=c(d[2],a);return p(b,it,[0,a],e,j(b,e))}function
f(f,i,m){var
g=c(d[2],i),e=j(f,g),h=z(f[1],e)[e+1],n=z(f[2],e)[e+1],a=0,o=et(h);for(;;){if(o<=a)return b(m,g,e);if(g===z(n,a)[a+1]){var
k=Bv(h,a);if(k)if(b(d[1],k[1],i)){var
l=d0(h,a);if(l)return l[1];var
a=a+1|0;continue}var
a=a+1|0;continue}var
a=a+1|0;continue}}function
l(b,a){return f(b,a,function(d,c){p(b,it,[0,a],d,c);return a})}function
q(b,a){return f(b,a,function(b,a){throw x})}function
a(f,h,m,l){var
i=c(d[2],h),e=j(f,i),g=z(f[1],e)[e+1],n=z(f[2],e)[e+1],a=0,o=et(g);for(;;){if(o<=a)return l;if(i===z(n,a)[a+1]){var
k=Bv(g,a);if(k)if(b(d[1],k[1],h))return b(m,g,a);var
a=a+1|0;continue}var
a=a+1|0;continue}}function
v(c,b){var
d=0;return a(c,b,function(b,a){return it(b,a,0)},d)}function
w(c,b){var
d=0;return a(c,b,function(b,a){return 1},d)}function
y(f,i){var
k=c(d[2],i),e=j(f,k),g=z(f[1],e)[e+1],n=z(f[2],e)[e+1],a=0,h=0,o=et(g);for(;;){if(o<=a)return h;if(k===z(n,a)[a+1]){var
l=Bv(g,a);if(l)if(b(d[1],l[1],i)){var
m=d0(g,a);if(m){var
a=a+1|0,h=[0,m[1],h];continue}var
a=a+1|0;continue}var
a=a+1|0;continue}var
a=a+1|0;continue}}return[0,t,g,l,k,v,q,y,w,i,h,o,function(h){var
i=h[1].length-1,a=hj(et,h[1]);function
j(e,c){var
b=((c+c|0)+c|0)+1|0,d=[0,b];if((b+2|0)<e){var
f=b+1|0,j=z(a,f)[f+1];if(fI(z(a,b)[b+1],j)<0)d[1]=b+1|0;var
g=b+2|0,k=z(a,g)[g+1],h=d[1];if(fI(z(a,h)[h+1],k)<0)d[1]=b+2|0;return d[1]}if((b+1|0)<e){var
i=b+1|0,l=z(a,i)[i+1];if(!(0<=fI(z(a,b)[b+1],l)))return b+1|0}if(b<e)return b;throw[0,rU,c]}function
p(f,e,d){var
b=e;for(;;){var
c=j(f,b);if(0<fI(z(a,c)[c+1],d)){var
g=z(a,c)[c+1];z(a,b)[b+1]=g;var
b=c;continue}return z(a,b)[b+1]=d}}function
q(e,b,c){try{var
f=p(e,b,c);return f}catch(b){b=s(b);if(b[1]===rU){var
d=b[2];return z(a,d)[d+1]=c}throw b}}function
t(e,d){var
b=d;for(;;){var
c=j(e,b),f=z(a,c)[c+1];z(a,b)[b+1]=f;var
b=c;continue}}var
f=a.length-1,k=((f+1|0)/3|0)-1|0;function
u(b,a){try{var
c=t(b,a);return c}catch(a){a=s(a);if(a[1]===rU)return a[2];throw a}}if(!(k<0)){var
e=k;for(;;){q(f,e,z(a,e)[e+1]);var
y=e-1|0;if(0!==e){var
e=y;continue}break}}var
l=f-1|0;if(!(l<2)){var
d=l;a:for(;;){var
g=z(a,d)[d+1];a[d+1]=z(a,0)[1];var
b=u(d,0);for(;;){var
c=(b-1|0)/3|0;if(b===c)throw[0,r,aqk];if(0<=fI(z(a,c)[c+1],g))z(a,b)[b+1]=g;else{var
v=z(a,c)[c+1];z(a,b)[b+1]=v;if(0<c){var
b=c;continue}z(a,0)[1]=g}var
x=d-1|0;if(2!==d){var
d=x;continue a}break}break}}if(1<f){var
w=z(a,1)[2];a[2]=z(a,0)[1];a[1]=w}var
A=0,m=i-1|0,B=rT(function(b,a){return b+a|0},A,a),n=i/2|0,C=z(a,m)[m+1],D=z(a,n)[n+1],E=z(a,0)[1];return[0,i,o(h),B,E,D,C]}]}function
Cn(d,a){var
b=[0,d,0],c=a[1];return c?(a[1]=b,c[2]=b,0):(a[1]=b,a[2]=b,0)}var
sc=[N,auA,H(0)];function
Co(a){var
b=a[2];if(b){var
c=b[2],d=b[1];a[2]=c;if(0===c)a[1]=0;return d}throw sc}function
kn(a,b){a[13]=a[13]+b[3]|0;return Cn(b,a[27])}var
Cp=ahz;function
sd(b,a){return m(b[17],a,0,C(a))}function
nd(a){return c(a[19],0)}function
Cq(b,a){return c(b[20],a)}function
hq(a,c,b){nd(a);a[11]=1;a[10]=dm(a[8],(a[6]-b|0)+c|0);a[9]=a[6]-a[10]|0;return Cq(a,a[10])}function
Cr(b,a){return hq(b,0,a)}function
iy(a,b){a[9]=a[9]-b|0;return Cq(a,b)}function
auB(a){var
b=a[2];if(b){var
c=b[1],d=c[2],e=c[1],f=a[9]<d?1:0;if(f){if(0!==e)return 5<=e?0:Cr(a,d);var
g=0}else
var
g=f;return g}return nd(a)}function
auC(a){var
b=Co(a[27]),c=b[1];a[12]=a[12]-b[3]|0;a[9]=a[9]+c|0;return 0}function
auD(a,g,b){if(typeof
b==="number")switch(b){case
0:var
k=a[3];if(k){var
l=k[1][1],m=function(b,a){if(a){var
c=a[1],d=a[2];return Bm(b,c)?[0,b,a]:[0,c,m(b,d)]}return[0,b,0]};l[1]=m(a[6]-a[9]|0,l[1]);return 0}return 0;case
1:var
n=a[2];return n?(a[2]=n[2],0):0;case
2:var
o=a[3];return o?(a[3]=o[2],0):0;case
3:var
p=a[2];return p?Cr(a,p[1][2]):nd(a);case
4:var
q=a[10]!==(a[6]-a[9]|0)?1:0;return q?auC(a):q;default:var
h=a[5];if(h){var
C=h[2];sd(a,c(a[24],h[1]));a[5]=C;return 0}return 0}else
switch(b[0]){case
0:var
D=b[1];a[9]=a[9]-g|0;sd(a,D);a[11]=0;return 0;case
1:var
d=b[2],f=b[1],r=a[2];if(r){var
t=r[1],e=t[2];switch(t[1]){case
0:return iy(a,f);case
1:return hq(a,d,e);case
2:return hq(a,d,e);case
3:return a[9]<g?hq(a,d,e):iy(a,f);case
4:return a[11]?iy(a,f):a[9]<g?hq(a,d,e):((a[6]-e|0)+d|0)<a[10]?hq(a,d,e):iy(a,f);default:return iy(a,f)}}return 0;case
2:var
i=a[6]-a[9]|0,u=a[3],E=b[2],F=b[1];if(u){var
v=u[1][1],G=function(d,c){var
a=c;for(;;){if(a){var
b=a[1],e=a[2];if(ir(b,d))return b;var
a=e;continue}throw x}},w=v[1];if(w){var
H=w[1];try{var
I=G(i,v[1]),y=I}catch(a){a=s(a);if(a!==x)throw a;var
y=H}var
j=y}else
var
j=i;var
z=j-i|0;return 0<=z?iy(a,z+F|0):hq(a,j+E|0,a[6])}return 0;case
3:var
A=b[2],J=b[1];if(a[8]<(a[6]-a[9]|0))auB(a);var
K=a[9]-J|0,L=1===A?1:a[9]<g?A:5;a[2]=[0,[0,L,K],a[2]];return 0;case
4:a[3]=[0,b[1],a[3]];return 0;default:var
B=b[1];sd(a,c(a[23],B));a[5]=[0,B,a[5]];return 0}}function
auE(a){for(;;){var
d=a[27][2];if(d){var
b=d[1],c=b[1],e=c<0?1:0,g=b[3],h=b[2],i=e?(a[13]-a[12]|0)<a[9]?1:0:e,f=1-i;if(f){Co(a[27]);var
j=0<=c?c:Cp;auD(a,j,h);a[12]=g+a[12]|0;continue}return f}throw sc}}function
Cs(a){try{var
b=auE(a);return b}catch(a){a=s(a);if(a===sc)return 0;throw a}}function
Ct(a,b){kn(a,b);return Cs(a)}function
Cu(c,a,b){return Ct(c,[0,a,[0,b],a])}var
Cv=[0,[0,-1,[0,-1,auF,0]],0];function
Cw(a){a[1]=Cv;return 0}function
se(a,c){var
d=a[1];if(d){var
e=d[1],b=e[2],f=b[1],g=d[2],h=b[2];if(e[1]<a[12])return Cw(a);if(typeof
h!=="number")switch(h[0]){case
3:var
i=1-c,k=i?(b[1]=a[13]+f|0,a[1]=g,0):i;return k;case
1:case
2:var
j=c?(b[1]=a[13]+f|0,a[1]=g,0):c;return j}return 0}return 0}function
Cx(a,c,b){kn(a,b);if(c)se(a,1);a[1]=[0,[0,a[13],b],a[1]];return 0}function
sf(a,e,d){a[14]=a[14]+1|0;if(a[14]<a[15])return Cx(a,0,[0,-a[13]|0,[3,e,d],0]);var
b=a[14]===a[15]?1:0;if(b){var
c=a[16];return Cu(a,C(c),c)}return b}function
Cy(a,d){var
b=1<a[14]?1:0;if(b){if(a[14]<a[15]){kn(a,[0,0,1,0]);se(a,1);se(a,0)}a[14]=a[14]-1|0;var
c=0}else
var
c=b;return c}function
Cz(a,b){if(a[21]){a[4]=[0,b,a[4]];c(a[25],b)}var
d=a[22];return d?kn(a,[0,0,[5,b],0]):d}function
CA(a){a[12]=1;a[13]=1;var
b=a[27];b[1]=0;b[2]=0;Cw(a);a[2]=0;a[3]=0;a[4]=0;a[5]=0;a[10]=0;a[14]=0;a[9]=a[6];return sf(a,0,3)}function
ne(a,b){for(;;){if(1<a[14]){Cy(a,0);continue}a[13]=Cp;Cs(a);if(b)nd(a);return CA(a)}}function
iz(a,d,c){var
b=a[14]<a[15]?1:0;return b?Cu(a,d,c):b}function
sg(c,b,a){return iz(c,b,a)}function
b7(b,a){return sg(b,C(a),a)}function
auG(c,b){return b7(c,a(q+b))}function
auH(b,a){return b7(b,mT(a))}function
hr(b,a){return sg(b,1,dG(1,a))}function
e9(a,b){ne(a,0);return c(a[18],0)}function
sh(a,c){var
b=a[14]<a[15]?1:0;return b?Ct(a,[0,0,3,0]):b}function
CB(a,b,d){var
c=a[14]<a[15]?1:0;return c?Cx(a,1,[0,-a[13]|0,[1,b,d],b]):c}function
auI(a,b){return CB(a,1,0)}function
CC(a){return a<ahz?a:1000000009}var
CD=dG(80,32);function
auK(a){return t(auM,t(a,auL))}function
auN(a){return t(auP,t(a,auO))}function
auQ(a){return 0}function
auR(a){return 0}function
nf(e,d){function
f(a){return 0}var
b=[0,0,0],c=[0,-1,auS,0];function
g(a){return 0}Cn(c,b);var
a=[0,[0,[0,1,c],Cv],0,0,0,0,78,10,68,78,0,1,1,1,1,gp,auT,e,d,g,f,0,0,auK,auN,auQ,auR,b];a[19]=function(b){return m(a[17],auJ,0,1)};a[20]=function(d){var
b=d;for(;;){var
c=0<b?1:0;if(c){if(80<b){m(a[17],CD,0,80);var
b=b+Af|0;continue}return m(a[17],CD,0,b)}return c}};return a}function
si(c){function
a(a){return cc(c)}return nf(function(d,a,b){if(0<=a)if(0<=b)if(!((C(d)-b|0)<a))return mN(c,d,a,b);return Y(apK)},a)}function
hs(a){function
b(a){return 0}return nf(function(b,c,d){return B3(a,b,c,d)},b)}var
auU=jW;function
sj(a){return b5(auU)}var
CE=sj(0),iA=si(e6),e_=si(cL),CF=hs(CE);function
sk(a,b){ne(b,0);var
c=b6(a);r2(a);return c}function
auV(a){return e9(iA,a)}function
ng(g,f){var
a=b5(16),d=hs(a);b(g,d,f);e9(d,0);var
e=a[2];if(2<=e){var
c=e-2|0,h=1;if(0<=c)if(!((a[2]-c|0)<1))return iv(a[1],h,c);return Y(aq9)}return b6(a)}function
CG(a,b){if(typeof
b==="number")switch(b){case
0:return Cy(a,0);case
1:if(a[22])kn(a,[0,0,5,0]);var
e=a[21];if(e){var
d=a[4];if(d){var
g=d[2];c(a[26],d[1]);a[4]=g;return 0}var
f=0}else
var
f=e;return f;case
2:return e9(a,0);case
3:return sh(a,0);case
4:ne(a,1);return c(a[18],0);case
5:return hr(a,64);default:return hr(a,37)}else
switch(b[0]){case
0:return CB(a,b[2],b[3]);case
1:return 0;default:var
h=b[1];hr(a,64);return hr(a,h)}}function
dc(b,a){if(typeof
a==="number")return 0;else
switch(a[0]){case
0:var
H=a[2];dc(b,a[1]);return CG(b,H);case
1:var
m=a[2],v=a[1];if(0===m[0]){var
I=m[1];dc(b,v);return Cz(b,ng(dc,I))}var
J=m[1];dc(b,v);var
w=r7(ng(dc,J));return sf(b,w[1],w[2]);case
2:var
e=a[1];if(typeof
e==="number")var
i=1;else
if(0===e[0]){var
n=e[2];if(typeof
n==="number")var
r=1;else
if(1===n[0])var
B=a[2],A=n[2],z=e[1],d=0,i=0,r=0;else
var
r=1;if(r)var
i=1}else
var
i=1;if(i)var
y=a[2],x=e,d=2;break;case
3:var
f=a[1];if(typeof
f==="number")var
j=1;else
if(0===f[0]){var
o=f[2];if(typeof
o==="number")var
s=1;else
if(1===o[0])var
G=a[2],F=o[2],E=f[1],d=1,j=0,s=0;else
var
s=1;if(s)var
j=1}else
var
j=1;if(j)var
D=a[2],C=f,d=3;break;case
4:var
g=a[1];if(typeof
g==="number")var
k=1;else
if(0===g[0]){var
p=g[2];if(typeof
p==="number")var
t=1;else
if(1===p[0])var
B=a[2],A=p[2],z=g[1],d=0,k=0,t=0;else
var
t=1;if(t)var
k=1}else
var
k=1;if(k)var
y=a[2],x=g,d=2;break;case
5:var
h=a[1];if(typeof
h==="number")var
l=1;else
if(0===h[0]){var
q=h[2];if(typeof
q==="number")var
u=1;else
if(1===q[0])var
G=a[2],F=q[2],E=h[1],d=1,l=0,u=0;else
var
u=1;if(u)var
l=1}else
var
l=1;if(l)var
D=a[2],C=h,d=3;break;case
6:var
K=a[2];dc(b,a[1]);return c(K,b);case
7:dc(b,a[1]);return e9(b,0);default:var
L=a[2];dc(b,a[1]);return Y(L)}switch(d){case
0:dc(b,z);return iz(b,A,B);case
1:dc(b,E);return iz(b,F,dG(1,G));case
2:dc(b,x);return b7(b,y);default:dc(b,C);return hr(b,D)}}function
dq(b,a){if(typeof
a==="number")return 0;else
switch(a[0]){case
0:var
J=a[2];dq(b,a[1]);return CG(b,J);case
1:var
n=a[2],x=a[1];if(0===n[0]){var
K=n[1];dq(b,x);return Cz(b,ng(dq,K))}var
L=n[1];dq(b,x);var
y=r7(ng(dq,L));return sf(b,y[1],y[2]);case
2:var
e=a[1];if(typeof
e==="number")var
j=1;else
if(0===e[0]){var
o=e[2];if(typeof
o==="number")var
t=1;else
if(1===o[0])var
D=a[2],C=o[2],B=e[1],d=0,j=0,t=0;else
var
t=1;if(t)var
j=1}else
var
j=1;if(j)var
A=a[2],z=e,d=2;break;case
3:var
f=a[1];if(typeof
f==="number")var
k=1;else
if(0===f[0]){var
p=f[2];if(typeof
p==="number")var
u=1;else
if(1===p[0])var
I=a[2],H=p[2],G=f[1],d=1,k=0,u=0;else
var
u=1;if(u)var
k=1}else
var
k=1;if(k)var
F=a[2],E=f,d=3;break;case
4:var
g=a[1];if(typeof
g==="number")var
l=1;else
if(0===g[0]){var
q=g[2];if(typeof
q==="number")var
v=1;else
if(1===q[0])var
D=a[2],C=q[2],B=g[1],d=0,l=0,v=0;else
var
v=1;if(v)var
l=1}else
var
l=1;if(l)var
A=a[2],z=g,d=2;break;case
5:var
h=a[1];if(typeof
h==="number")var
m=1;else
if(0===h[0]){var
r=h[2];if(typeof
r==="number")var
w=1;else
if(1===r[0])var
I=a[2],H=r[2],G=h[1],d=1,m=0,w=0;else
var
w=1;if(w)var
m=1}else
var
m=1;if(m)var
F=a[2],E=h,d=3;break;case
6:var
i=a[1];if(typeof
i!=="number"&&0===i[0]){var
s=i[2];if(typeof
s!=="number"&&1===s[0]){var
N=a[2],O=s[2];dq(b,i[1]);return iz(b,O,c(N,0))}}var
M=a[2];dq(b,i);return b7(b,c(M,0));case
7:dq(b,a[1]);return e9(b,0);default:var
P=a[2];dq(b,a[1]);return Y(P)}switch(d){case
0:dq(b,B);return iz(b,C,D);case
1:dq(b,G);return iz(b,H,dG(1,I));case
2:dq(b,z);return b7(b,A);default:dq(b,E);return hr(b,F)}}function
CH(d,b,a){var
e=a[1],f=0;return aM(function(a,b){dc(a,b);return c(d,a)},b,f,e)}function
A(a){function
b(a){return 0}return function(c){return CH(b,a,c)}}function
dd(a){return c(A(e_),a)}function
bs(d){var
c=d[1],a=sj(0),b=hs(a);return aM(function(d,c){dq(b,c);return sk(a,b)},0,0,c)}function
sl(d){var
b=d[1],a=sj(0),c=hs(a);return aM(function(b,c){dc(b,c);return sk(a,b)},c,0,b)}rL(auV);function
sm(a,e,d,c,b){a[17]=e;a[18]=d;a[19]=c;a[20]=b;return 0}function
sn(b,a){var
c=a[1];function
d(a,b){dc(a,b);return ne(a,0)}return aM(d,hs(b),0,c)}var
so=0;function
sp(a){try{var
b=c(a[7],0);a[2]=b;a[3]=1;a[4]=a[4]+1|0;if(10===b)a[5]=a[5]+1|0;return b}catch(b){b=s(b);if(b===d3){a[2]=so;a[3]=0;a[1]=1;return so}throw b}}function
bH(a){return a[3]?a[2]:sp(a)}function
eu(a){var
b=bH(a);if(a[1])throw d3;return b}function
b8(a){bH(a);return a[1]}function
CI(a){return a[3]?a[4]-1|0:a[4]}function
auW(a){return r2(a[8])}function
iB(a){a[3]=0;return 0}function
cM(a){var
b=a[8],c=b6(b);B2(b);a[6]=a[6]+1|0;return c}function
CJ(b,a){iB(a);return b}function
dJ(b,a){return CJ(b-1|0,a)}function
a0(c,a,b){bd(a[8],b);return dJ(c,a)}var
auX=fE;function
sq(b,a){return[0,0,so,0,0,0,0,a,b5(auX),b]}var
auY=0,auZ=fE;function
au0(a){throw d3}(function(h,g,e){var
b=bX(fE),a=[0,0],d=[0,0],f=[0,0];return sq(g,function(i){if(a[1]<d[1]){var
g=ha(b,a[1]);a[1]++;return g}if(f[1])throw d3;d[1]=rJ(e,b,0,auZ);return 0===d[1]?(f[1]=1,c(h,e)):(a[1]=1,ha(b,0))})}(au0,[1,au1,mU],mU));var
sr=[N,au2,H(0)];function
c0(a){throw[0,sr,a]}function
ss(a){return c0(c(aN(au3),a))}function
st(a){return c0(c(aN(au4),a))}function
ev(a){return c0(au6)}function
ew(a){return c0(au7)}function
iC(c,a){return c0(b(aN(au8),c,a))}function
CK(b,a){var
c=eu(b);return c===a?iB(b):iC(a,c)}function
ht(a,c){if(10===c){var
d=eu(a);return 10===d?iB(a):13===d?(iB(a),CK(a,10)):iC(10,d)}if(32===c)for(;;){var
f=bH(a),e=1-a[1];if(e){var
b=f-9|0,g=4<b>>>0?23===b?1:0:1<(b-2|0)>>>0?1:0;if(g){iB(a);continue}return 0}return e}return CK(a,c)}function
CL(a){return I(cM(a),0)}function
au9(b){var
a=cM(b);return O(a,au_)?O(a,au$)?c0(c(aN(ava),a)):1:0}function
nh(b){var
a=b+jL|0;if(!(32<a>>>0))switch(a){case
10:return 0;case
12:return 1;case
17:return 2;case
23:return 3;case
29:return 4;case
0:case
32:return 5}throw[0,r,avb]}function
ni(d,b){switch(d){case
0:var
a=t(avc,cM(b));break;case
3:var
a=t(avd,cM(b));break;case
4:var
a=t(ave,cM(b));break;case
5:var
a=t(avf,cM(b));break;default:var
a=cM(b)}var
c=C(a);if(0!==c)if(43===I(a,0))return aD(a,1,c-1|0);return a}function
su(a){return j6(cM(a))}function
ko(d,b){var
a=d;for(;;){if(0===a)return a;var
c=bH(b);if(b[1])return a;if(58<=c){if(95===c){var
a=dJ(a,b);continue}}else
if(48<=c){var
a=a0(a,b,c);continue}return a}}function
sv(d,a){if(0===d)return st(avg);var
b=eu(a);return 9<(b+c_|0)>>>0?c0(c(aN(avh),b)):ko(a0(d,a,b),a)}function
sw(i,h,g,d){if(0===g)return st(avi);var
f=eu(d);if(c(h,f)){var
a=a0(g,d,f);for(;;){if(0===a)return a;var
e=bH(d);if(d[1])return a;if(c(h,e)){var
a=a0(a,d,e);continue}if(95===e){var
a=dJ(a,d);continue}return a}}return c0(b(aN(avj),f,i))}function
avk(a){return 1<(a+c_|0)>>>0?0:1}function
CM(a,b){return sw(avl,avk,a,b)}function
avm(a){return 7<(a+c_|0)>>>0?0:1}function
CN(a,b){return sw(avn,avm,a,b)}function
avo(b){var
a=b+c_|0,c=22<a>>>0?5<(a+rs|0)>>>0?0:1:6<(a+lM|0)>>>0?1:0;return c?1:0}function
iD(a,b){return sw(avp,avo,a,b)}function
kp(b,a){var
c=eu(a),d=c+y9|0;if(!(2<d>>>0))switch(d){case
0:return a0(b,a,c);case
1:break;default:return a0(b,a,c)}return b}function
nj(b,a){return sv(kp(b,a),a)}function
nk(h,d,a){switch(h){case
0:return CM(d,a);case
1:return nj(d,a);case
2:var
g=kp(d,a),f=eu(a);if(48===f){var
c=a0(g,a,f);if(0===c)return c;var
b=bH(a);if(a[1])return c;if(99<=b){if(gi===b)return CN(a0(c,a,b),a);var
e=fr===b?1:0}else
if(88===b)var
e=1;else{if(98<=b)return CM(a0(c,a,b),a);var
e=0}return e?iD(a0(c,a,b),a):ko(c,a)}return sv(g,a);case
3:return CN(d,a);case
4:return sv(d,a);default:return iD(d,a)}}function
CO(a,b){if(0===a)return a;var
c=bH(b);return b[1]?a:9<(c+c_|0)>>>0?a:ko(a0(a,b,c),b)}function
nl(a,b){if(0===a)return a;var
c=bH(b);if(b[1])return a;if(69!==c)if(jB!==c)return a;return nj(a0(a,b,c),b)}function
avq(g,c,a){var
b=ko(kp(g,a),a);if(0===b)return[0,b,c];var
e=bH(a);if(a[1])return[0,b,c];if(46===e){var
f=a0(b,a,e),d=dm(f,c);return[0,nl(f-(d-CO(d,a)|0)|0,a),d]}return[0,nl(b,a),c]}function
sx(j,f,e,d){function
g(a){return 25<(a+ah$|0)>>>0?a:hg((a-65|0)+97|0)}var
a=[0,j],h=C(d)-1|0,k=0;if(!(h<0)){var
b=k;for(;;){var
i=bH(f),l=g(I(d,b));if(g(i)!==l)c(e,0);if(0===a[1])c(e,0);a[1]=a0(a[1],f,i);var
m=b+1|0;if(h!==b){var
b=m;continue}break}}return a[1]}function
avr(n,x,a){var
y=0===n?1:0,z=y||b8(a);if(z)ew(0);var
e=kp(n,a),A=0===e?1:0,B=A||b8(a);if(B)ew(0);var
b=bH(a);if(78<=b){var
h=b-79|0;if(30<h>>>0){if(!(32<=h)){var
o=a0(e,a,b),C=0===o?1:0,D=C||b8(a);if(D)ew(0);return sx(o,a,ew,avs)}var
k=0}else
var
k=26===h?1:0}else{if(48===b){var
q=a0(e,a,b),G=0===q?1:0,H=G||b8(a);if(H)ew(0);var
f=sx(q,a,ew,avu);if(0!==f)if(!b8(a)){var
i=bH(a)+QY|0,K=34<i>>>0?66===i?1:0:32<(i-1|0)>>>0?1:0,g=K?f:iD(f,a);if(0!==g)if(!b8(a)){var
r=bH(a);if(46===r){var
c=a0(g,a,r);if(0===c)var
l=0;else
if(b8(a))var
l=0;else{var
u=bH(a);if(80===u)var
m=0;else
if(bL===u)var
m=0;else
var
w=dm(c,x),v=c-(w-iD(w,a)|0)|0,m=1;if(!m)var
v=c;var
s=v,l=1}if(!l)var
s=c;var
d=s}else
var
d=g;if(0!==d)if(!b8(a)){var
j=bH(a);if(80!==j)if(bL!==j)return d;var
t=a0(d,a,j),I=0===t?1:0,J=I||b8(a);if(J)ew(0);return nj(t,a)}return d}return g}return f}var
k=73===b?1:0}if(k){var
p=a0(e,a,b),E=0===p?1:0,F=E||b8(a);if(F)ew(0);return sx(p,a,ew,avt)}return ew(0)}function
CP(d,h,a){var
i=0===d?1:0,j=i||b8(a);if(j)ev(0);var
b=ko(d,a),k=0===b?1:0,l=k||b8(a);if(l)ev(0);var
e=bH(a),c=e+o4|0;if(32<c>>>0){if(-23===c){var
f=a0(b,a,e),g=dm(f,h);return nl(f-(g-CO(g,a)|0)|0,a)}}else
if(30<(c-1|0)>>>0)return nl(b,a);return ev(0)}function
avv(o,f,a){var
y=0===o?1:0,z=y||b8(a);if(z)ev(0);var
g=kp(o,a),A=0===g?1:0,B=A||b8(a);if(B)ev(0);var
b=bH(a);if(49<=b){if(!(58<=b)){var
p=a0(g,a,b),C=0===p?1:0,D=C||b8(a);if(D)ev(0);return CP(p,f,a)}}else
if(48<=b){var
h=a0(g,a,b),E=0===h?1:0,F=E||b8(a);if(F)ev(0);var
i=bH(a);if(88!==i)if(fr!==i)return CP(h,f,a);var
q=a0(h,a,i),G=0===q?1:0,H=G||b8(a);if(H)ev(0);var
j=iD(q,a),I=0===j?1:0,J=I||b8(a);if(J)ev(0);var
r=bH(a),k=r+Af|0;if(32<k>>>0)if(yu===k){var
c=a0(j,a,r);if(0===c)var
m=0;else
if(b8(a))var
m=0;else{var
v=bH(a);if(80===v)var
n=0;else
if(bL===v)var
n=0;else
var
x=dm(c,f),w=c-(x-iD(x,a)|0)|0,n=1;if(!n)var
w=c;var
s=w,m=1}if(!m)var
s=c;var
t=s,e=0}else
var
e=1;else
if(30<(k-1|0)>>>0)var
t=j,e=0;else
var
e=1;var
d=e?ev(0):t;if(0!==d)if(!b8(a)){var
l=bH(a);if(80!==l)if(bL!==l)return d;var
u=a0(d,a,l),K=0===u?1:0,L=K||b8(a);if(L)ew(0);return nj(u,a)}return d}return ev(0)}function
kq(e,f,b){var
a=f;for(;;){if(0===a)return a;var
c=bH(b);if(b[1])return a;if(e){if(c===e[1])return CJ(a,b);var
a=a0(a,b,c);continue}var
d=c-9|0,g=4<d>>>0?23===d?1:0:1<(d-2|0)>>>0?1:0;if(g)return a;var
a=a0(a,b,c);continue}}function
avw(b,a){return a0(b,a,eu(a))}function
CQ(a){return 97<=a?a+ahB|0:65<=a?a+T8|0:a-48|0}function
CR(b,d,a){if(0===d)return st(b);var
e=bH(a);return a[1]?c0(c(aN(au5),b)):e}function
sy(a,b){return CR(avz,a,b)}function
nm(a,b){return CR(avA,a,b)}function
CS(g,d){var
a=sy(g,d);if(40<=a)if(58<=a){var
l=a+aao|0;if(28<l>>>0)var
f=0;else
switch(l){case
28:var
n=function(e){var
a=sp(d),b=a+c_|0,c=22<b>>>0?5<(b+rs|0)>>>0?0:1:6<(b+lM|0)>>>0?1:0;return c?a:ss(a)},o=n(0),p=n(0),v=CQ(p),i=(16*CQ(o)|0)+v|0;if(0<=i)if(at<i)var
j=0;else
var
q=hg(i),j=1;else
var
j=0;if(!j)var
q=c0(b(aN(avy),o,p));return a0(g-2|0,d,q);case
0:case
6:case
18:case
22:case
24:var
f=1;break;default:var
f=0}}else{if(48<=a){var
r=function(b){var
a=sp(d);return 9<(a+c_|0)>>>0?ss(a):a},s=r(0),t=r(0),h=((ci*(a-48|0)|0)+(10*(s-48|0)|0)|0)+(t-48|0)|0;if(0<=h)if(at<h)var
k=0;else
var
u=hg(h),k=1;else
var
k=0;if(!k)var
u=c0(m(aN(avx),a,s,t));return a0(g-2|0,d,u)}var
f=0}else
var
f=34===a?1:39<=a?1:0;if(f){if(fn<=a)if(im<=a)var
c=0;else
switch(a-110|0){case
0:var
e=10,c=1;break;case
4:var
e=13,c=1;break;case
6:var
e=9,c=1;break;default:var
c=0}else
if(98===a)var
e=8,c=1;else
var
c=0;if(!c)var
e=a;return a0(g,d,e)}return ss(a)}function
avB(f,a){function
c(b){var
c=sy(b,a);return 39===c?dJ(b,a):iC(39,c)}var
d=eu(a);if(39===d){var
b=dJ(f,a),e=sy(b,a);return 92===e?c(CS(dJ(b,a),a)):c(a0(b,a,e))}return iC(39,d)}function
sz(d,a){function
c(d,k){var
b=k;for(;;){var
f=nm(b,a);if(34===f)return dJ(b,a);if(92===f){var
c=dJ(b,a),h=nm(c,a);if(10===h){var
i=dJ(c,a);return d<50?e(d+1|0,i):ai(e,[0,i])}if(13===h){var
g=dJ(c,a);if(10===nm(g,a)){var
j=dJ(g,a);return d<50?e(d+1|0,j):ai(e,[0,j])}var
b=a0(g,a,13);continue}var
b=CS(c,a);continue}var
b=a0(b,a,f);continue}}function
e(d,e){var
b=e;for(;;){if(32===nm(b,a)){var
b=dJ(b,a);continue}return d<50?c(d+1|0,b):ai(c,[0,b])}}function
f(a){return dE(c(0,a))}var
b=eu(a);return 34===b?f(dJ(d,a)):iC(34,b)}function
avC(b){var
a=eu(b),d=h_===a?5:jv===a?4:c0(c(aN(avD),a));return kq(0,d,b)}function
CT(h,d,c,a){function
e(j,i){var
d=j;for(;;){var
b=bH(a),f=0<d?1:0;if(f){var
g=1-a[1];if(g)var
e=0!==(I(h,b>>>3|0)&1<<(b&7))?1:0,c=e?b!==i?1:0:e;else
var
c=g}else
var
c=f;if(c){a0(gp,a,b);var
d=d-1|0;continue}return c}}if(d){var
b=d[1];e(c,b);var
f=1-a[1];if(f){var
g=bH(a);return b===g?iB(a):iC(b,g)}return f}return e(c,-1)}function
avE(d,a){if(a[1]===sr)var
c=a[2];else{if(a[1]!==bz)throw a;var
c=a[2]}var
e=CI(d);return c0(b(aN(avF),e,c))}function
avG(a,b){switch(b){case
0:return a[5];case
1:return CI(a);default:return a[6]}}function
nn(a){return a?a[1]:gp}function
CU(b){if(6===b)return avH;var
a=m_(b),c=I(a,1);return[0,c,aD(a,2,C(a)-2|0)]}function
vF(f,d,k){var
a=k;for(;;)if(typeof
a==="number")return c(d,0);else
switch(a[0]){case
0:var
a=a[1];continue;case
1:var
a=a[1];continue;case
2:var
a=a[2];continue;case
3:var
a=a[2];continue;case
4:var
a=a[4];continue;case
5:var
a=a[4];continue;case
6:var
a=a[4];continue;case
7:var
a=a[4];continue;case
8:var
a=a[4];continue;case
9:var
a=a[1];continue;case
10:var
a=a[1];continue;case
11:var
a=a[2];continue;case
12:var
a=a[2];continue;case
13:var
a=a[3];continue;case
14:var
h=a[3],i=bv(bR(a[2]));return f<50?lj(f+1|0,d,i,h):ai(lj,[0,d,i,h]);case
15:var
a=a[1];continue;case
16:var
a=a[1];continue;case
17:var
a=a[2];continue;case
18:var
g=a[1];if(0===g[0]){var
a=aY(g[1][1],a[2]);continue}var
a=aY(g[1][1],a[2]);continue;case
19:var
l=a[1];return function(a){return sA(function(b){return c(d,[0,a,b])},l)};case
20:var
a=a[3];continue;case
21:var
a=a[2];continue;case
22:var
a=a[1];continue;case
23:var
b=a[2],e=a[1];if(typeof
e==="number")switch(e){case
0:var
a=b;continue;case
1:var
a=b;continue;case
2:var
a=b;continue;case
3:return function(a){return sA(function(b){return c(d,[0,a,b])},b)};default:var
a=b;continue}else
switch(e[0]){case
0:var
a=b;continue;case
1:var
a=b;continue;case
2:var
a=b;continue;case
3:var
a=b;continue;case
4:var
a=b;continue;case
5:var
a=b;continue;case
6:var
a=b;continue;case
7:var
a=b;continue;case
8:var
j=e[2];return f<50?lj(f+1|0,d,j,b):ai(lj,[0,d,j,b]);case
9:var
a=b;continue;default:var
a=b;continue}default:var
a=a[3];continue}}function
lj(e,d,f,b){var
a=f;for(;;)if(typeof
a==="number")return e<50?vF(e+1|0,d,b):ai(vF,[0,d,b]);else
switch(a[0]){case
0:var
a=a[1];continue;case
1:var
a=a[1];continue;case
2:var
a=a[1];continue;case
3:var
a=a[1];continue;case
4:var
a=a[1];continue;case
5:var
a=a[1];continue;case
6:var
a=a[1];continue;case
7:var
a=a[1];continue;case
8:var
a=a[2];continue;case
9:var
g=a[3],h=a[2],a=cs(ce(bR(a[1]),h),g);continue;case
10:var
a=a[1];continue;case
11:var
a=a[1];continue;case
12:var
a=a[1];continue;case
13:var
i=a[1];return function(a){return CV(function(b){return c(d,[0,a,b])},i,b)};default:var
j=a[1];return function(a){return CV(function(b){return c(d,[0,a,b])},j,b)}}}function
sA(a,b){return dE(vF(0,a,b))}function
CV(a,b,c){return dE(lj(0,a,b,c))}function
d5(a,h,g,f,b,e,d){if(typeof
f==="number"){if(typeof
b==="number"){if(0===b){m(e,gp,gp,a);var
j=c(d,a);return[0,j,c1(a,h,g)]}return Y(avQ)}m(e,gp,b[1],a);var
k=c(d,a);return[0,k,c1(a,h,g)]}else{if(0===f[0]){if(0===f[1])return Y(avR);var
i=f[2];if(typeof
b==="number"){if(0===b){m(e,i,gp,a);var
l=c(d,a);return[0,l,c1(a,h,g)]}return Y(avS)}m(e,i,b[1],a);var
n=c(d,a);return[0,n,c1(a,h,g)]}return Y(avT)}}function
c1(d,I,e){var
a=I;for(;;)if(typeof
a==="number")return 0;else
switch(a[0]){case
0:var
J=a[1];avw(0,d);var
K=CL(d);return[0,K,c1(d,J,e)];case
1:var
L=a[1];avB(0,d);var
M=CL(d);return[0,M,c1(d,L,e)];case
2:var
f=a[2],h=a[1];if(typeof
f!=="number")switch(f[0]){case
17:var
N=f[2],m=CU(f[1]),O=m[2],P=m[1];return d5(d,[11,O,N],e,h,0,function(b,c,a){return kq([0,P],b,a)},cM);case
18:var
i=f[1];if(0===i[0]){var
Q=f[2],R=i[1][1],S=function(b,c,a){return kq(avI,b,a)};return d5(d,aY(R,Q),e,h,0,S,cM)}var
T=f[2],U=i[1][1],V=function(b,c,a){return kq(avJ,b,a)};return d5(d,aY(U,T),e,h,0,V,cM)}return d5(d,f,e,h,0,function(b,c,a){return kq(0,b,a)},cM);case
3:var
W=a[2],X=a[1];return d5(d,W,e,X,0,function(b,c,a){return sz(b,a)},cM);case
4:var
Z=a[4],_=a[3],$=a[2],n=nh(m9(a[1])),aa=function(b,c,a){return nk(n,b,a)};return d5(d,Z,e,$,_,aa,function(a){return dk(ni(n,a))});case
5:var
ab=a[4],ac=a[3],ad=a[2],o=nh(m9(a[1])),ae=function(b,c,a){return nk(o,b,a)};return d5(d,ab,e,ad,ac,ae,function(a){return dk(ni(o,a))});case
6:var
af=a[4],ag=a[3],ah=a[2],p=nh(m9(a[1])),ai=function(b,c,a){return nk(p,b,a)};return d5(d,af,e,ah,ag,ai,function(a){return dk(ni(p,a))});case
7:var
aj=a[4],ak=a[3],al=a[2],q=nh(m9(a[1])),am=function(b,c,a){return nk(q,b,a)};return d5(d,aj,e,al,ak,am,function(a){return Bh(ni(q,a))});case
8:var
t=a[1];return 15===t?d5(d,a[4],e,a[2],a[3],avv,su):16<=t?d5(d,a[4],e,a[2],a[3],avr,su):d5(d,a[4],e,a[2],a[3],avq,su);case
9:var
an=a[1];avC(d);var
ao=au9(d);return[0,ao,c1(d,an,e)];case
10:var
ap=a[1];if(b8(d)){var
a=ap;continue}return c0(avK);case
11:var
aq=a[2],ar=a[1];rQ(function(a){return ht(d,a)},ar);var
a=aq;continue;case
12:var
as=a[2];ht(d,a[1]);var
a=as;continue;case
13:var
u=a[2],at=a[3];sz(nn(a[1]),d);var
j=cM(d);try{var
F=r8(0,j)[1];try{var
H=[0,m$(F,u),j],w=H}catch(a){a=s(a);if(a!==cu)throw a;var
G=B$(u),w=b(d4(at6),j,G)}var
v=w}catch(a){a=s(a);if(a[1]!==bz)throw a;var
v=c0(a[2])}return[0,v,c1(d,at,e)];case
14:var
x=a[2],au=a[3];sz(nn(a[1]),d);var
k=cM(d);try{var
av=r8(0,k)[1],aw=r8(0,k)[1],ax=m$(aw,bv(bR(x))),ay=m$(av,bv(x)),A=ay,z=ax}catch(a){a=s(a);if(a[1]!==bz)throw a;var
y=c0(a[2]),A=y[1],z=y[2]}return[0,[0,A,k],c1(d,aY(z,au),e)];case
15:return Y(avL);case
16:return Y(avM);case
17:var
az=a[2],aA=m_(a[1]);rQ(function(a){return ht(d,a)},aA);var
a=az;continue;case
18:var
l=a[1];if(0===l[0]){var
aB=a[2],aC=l[1][1];ht(d,64);ht(d,ck);var
a=aY(aC,aB);continue}var
aD=a[2],aE=l[1][1];ht(d,64);ht(d,91);var
a=aY(aE,aD);continue;case
19:var
aF=a[1];if(e){var
aG=e[2],aH=c(e[1],d);return[0,aH,c1(d,aF,aG)]}return Y(avN);case
20:var
g=a[3],B=a[2],C=a[1];if(typeof
g!=="number"&&17===g[0]){var
aJ=g[2],D=CU(g[1]),aK=D[2],aL=D[1];CT(B,[0,aL],nn(C),d);var
aM=cM(d);return[0,aM,c1(d,[11,aK,aJ],e)]}CT(B,0,nn(C),d);var
aI=cM(d);return[0,aI,c1(d,g,e)];case
21:var
aN=a[2],aO=avG(d,a[1]);return[0,aO,c1(d,aN,e)];case
22:var
aP=a[1],aQ=eu(d);return[0,aQ,c1(d,aP,e)];case
23:var
E=c1(d,ara(a[1],a[2])[1],e);if(E)return E[2];throw[0,r,avO];default:return Y(avP)}}function
CW(b,a){var
c=bi(a)===N?a:a[1];return bT6(b,c)}function
ex(a){return apw(a.slice())}var
avW=2;function
avX(c){var
a=[0,0],d=C(c)-1|0,e=0;if(!(d<0)){var
b=e;for(;;){var
g=I(c,b);a[1]=(h2*a[1]|0)+g|0;var
h=b+1|0;if(d!==b){var
b=h;continue}break}}a[1]=a[1]&o_;var
f=ic<a[1]?a[1]-TL|0:a[1];return f}var
fR=hl([0,he]),hu=hl([0,he]),gu=hl([0,fI]),CX=cZ(0,0),avY=[0,0];function
CY(a){return 2<a?CY((a+1|0)/2|0)*2|0:a}function
CZ(d){avY[1]++;var
b=d.length-1,c=a_((b*2|0)+2|0,CX);z(c,0)[1]=b;var
g=((CY(b)*32|0)/8|0)-1|0;z(c,1)[2]=g;var
e=b-1|0,h=0;if(!(e<0)){var
a=h;for(;;){var
f=(a*2|0)+3|0,i=z(d,a)[a+1];z(c,f)[f+1]=i;var
j=a+1|0;if(e!==a){var
a=j;continue}break}}return[0,avW,c,hu[1],gu[1],0,0,fR[1],0]}function
sB(a,b){var
c=a[2].length-1,d=c<b?1:0;if(d){var
e=a_(b,CX);BL(a[2],0,e,0,c);a[2]=e;var
f=0}else
var
f=d;return f}var
C0=[0,0],avZ=[0,0];function
sC(a){var
b=a[2].length-1;sB(a,b+1|0);return b}function
ey(a,d){try{var
e=b(hu[23],d,a[3]);return e}catch(b){b=s(b);if(b===x){var
c=sC(a);a[3]=m(hu[4],d,c,a[3]);a[4]=m(gu[4],c,1,a[4]);return c}throw b}}function
hv(b,a){return hj(function(a){return ey(b,a)},a)}function
dr(c,a,d){avZ[1]++;return b(gu[23],a,c[4])?(sB(c,a+1|0),z(c[2],a)[a+1]=d):(c[6]=[0,[0,a,d],c[6]],0)}function
av0(c,b){try{var
a=rN(b,c[6]);return a}catch(a){a=s(a);if(a===x)return z(c[2],b)[b+1];throw a}}function
sD(c){if(c===0)return 0;var
a=c.length-1-1|0,b=0;for(;;){if(0<=a){var
d=[0,c[a+1],b],a=a-1|0,b=d;continue}return b}}function
av1(a){var
b=a[1];a[1]=b+1|0;return b}function
ds(a,c){try{var
e=b(fR[23],c,a[7]);return e}catch(b){b=s(b);if(b===x){var
d=av1(a);if(O(c,av2))a[7]=m(fR[4],c,d,a[7]);return d}throw b}}function
sE(a){return bP(a,0)?[0]:a}function
cl(f,l,e){var
g=sE(l),c=g.length-1,h=e.length-1,d=a_(c+h|0,0),i=c-1|0,m=0;if(!(i<0)){var
a=m;for(;;){var
q=ey(f,z(g,a)[a+1]);z(d,a)[a+1]=q;var
r=a+1|0;if(i!==a){var
a=r;continue}break}}var
j=h-1|0,n=0;if(!(j<0)){var
b=n;for(;;){var
k=b+c|0,o=ds(f,z(e,b)[b+1]);z(d,k)[k+1]=o;var
p=b+1|0;if(j!==b){var
b=p;continue}break}}return d}function
av3(c,a){try{var
d=b(fR[23],a,c[7]);return d}catch(a){a=s(a);if(a===x)throw[0,r,av4];throw a}}function
a4(b){if(b===0)return CZ([0]);var
a=CZ(hj(avX,b));BN(function(d,c){var
b=(d*2|0)+2|0;a[3]=m(hu[4],c,b,a[3]);a[4]=m(gu[4],b,1,a[4]);return 0},b);return a}function
a5(a){C0[1]=(C0[1]+a[1]|0)-1|0;a[8]=aj(a[8]);return sB(a,3+((z(a[2],1)[2]*16|0)/32|0)|0)}function
hw(a,n,G,l,k,F){var
o=k[2],H=k[4],h=sD(n),i=sD(G),j=sD(l),g=B(function(b){return ey(a,b)},i),p=B(function(b){return ey(a,b)},j);a[5]=[0,[0,a[3],a[4],a[6],a[7],g,h],a[5]];var
q=fR[1],r=a[7];function
t(b,c,a){return e7(b,h)?m(fR[4],b,c,a):a}a[7]=m(fR[12],t,r,q);var
e=[0,hu[1]],f=[0,gu[1]];rM(function(g,c){e[1]=m(hu[4],g,c,e[1]);var
h=f[1];try{var
i=b(gu[23],c,a[4]),d=i}catch(a){a=s(a);if(a!==x)throw a;var
d=1}f[1]=m(gu[4],c,d,h);return 0},j,p);rM(function(b,a){e[1]=m(hu[4],b,a,e[1]);f[1]=m(gu[4],a,0,f[1]);return 0},i,g);a[3]=e[1];a[4]=f[1];var
u=0,v=a[6];a[6]=fL(function(b,a){return e7(b[1],g)?a:[0,b,a]},v,u);var
I=F?b(o,a,H):c(o,a),d=j$(a[5]),w=d[6],y=d[5],z=d[4],A=d[3],C=d[2],D=d[1];a[5]=BC(a[5]);a[7]=aZ(function(d,c){var
e=b(fR[23],c,a[7]);return m(fR[4],c,e,d)},z,w);a[3]=D;a[4]=C;var
E=a[6];a[6]=fL(function(b,a){return e7(b[1],y)?a:[0,b,a]},E,A);var
J=0,K=sE(l),L=[0,hj(function(b){return av0(a,ey(a,b))},K),J],M=sE(n);return bTl([0,[0,I],[0,hj(function(b){return av3(a,b)},M),L]])}function
no(e,a){var
b=a4(e),d=c(a,b);a5(b);return[0,c(d,0),a,d,0]}function
np(e,b,a){var
d=a4(e),f=c(b,d);a5(d);a[2]=b;a[1]=f;return 0}function
aR(b,a){if(b)return b;var
c=cZ(N,a[1]);c[1]=a[2];return apw(c)}function
hx(g,b,f){if(g)return b;var
d=f[8];if(0!==d){var
a=d;for(;;){if(a){var
e=a[2];c(a[1],b);var
a=e;continue}break}}return b}function
C1(a){if(a)return a[2];throw[0,r,av8]}function
C2(d,f,c){var
e=[0,0,0,0],b=[0,e],g=0;if(!(d<0)){var
a=g;for(;;){var
i=b[1];b[1]=[0,z(f,a)[a+1],i,0];var
j=a+1|0;if(d!==a){var
a=j;continue}break}}var
h=b[1];if(c){c[2]=h;return e}throw[0,r,av5]}function
hy(i,c){var
j=C1(i);if(j){var
b=c.length-1-1|0,d=j;a:for(;;){if(0<=b){var
f=z(c,b)[b+1],a=d;for(;;){if(a){if(a[1]===f){var
g=C1(a);if(g){var
b=b-1|0,d=g;continue a}throw[0,r,av_]}if(a){var
e=a[3];if(e){var
a=e;continue}var
h=[0,f,0,0];if(a){a[3]=h;return C2(b-1|0,c,h)}throw[0,r,av6]}throw[0,r,av9]}throw[0,r,av7]}}return d}}return C2(c.length-1-1|0,c,i)}function
nq(a){var
c=sC(a);if(0===(c%2|0))var
d=0;else
if((2+((z(a[2],1)[2]*16|0)/32|0)|0)<c)var
d=0;else
var
b=sC(a),d=1;if(!d)var
b=c;z(a[2],b)[b+1]=0;return b}function
cm(e,i){var
g=[0,0],an=i.length-1;for(;;){if(g[1]<an){var
j=g[1],ao=z(i,j)[j+1],a=function(b){g[1]++;var
a=g[1];return z(i,a)[a+1]},h=a(0);if(typeof
h==="number")switch(h){case
0:var
k=a(0),d=function(a){return function(b){return a}}(k);break;case
1:var
l=a(0),d=function(b){return function(a){return a[b+1]}}(l);break;case
2:var
m=a(0),n=a(0),d=function(b,c){return function(a){return a[b+1][c+1]}}(m,n);break;case
3:var
o=a(0),d=function(b){return function(a){return c(a[1][b+1],a)}}(o);break;case
4:var
p=a(0),d=function(c){return function(b,a){b[c+1]=a;return 0}}(p);break;case
5:var
q=a(0),r=a(0),d=function(a,b){return function(d){return c(a,b)}}(q,r);break;case
6:var
s=a(0),t=a(0),d=function(b,d){return function(a){return c(b,a[d+1])}}(s,t);break;case
7:var
u=a(0),v=a(0),w=a(0),d=function(b,d,e){return function(a){return c(b,a[d+1][e+1])}}(u,v,w);break;case
8:var
x=a(0),y=a(0),d=function(b,d){return function(a){return c(b,c(a[1][d+1],a))}}(x,y);break;case
9:var
A=a(0),B=a(0),C=a(0),d=function(a,c,d){return function(e){return b(a,c,d)}}(A,B,C);break;case
10:var
D=a(0),E=a(0),F=a(0),d=function(c,d,e){return function(a){return b(c,d,a[e+1])}}(D,E,F);break;case
11:var
G=a(0),H=a(0),I=a(0),J=a(0),d=function(c,d,e,f){return function(a){return b(c,d,a[e+1][f+1])}}(G,H,I,J);break;case
12:var
K=a(0),L=a(0),M=a(0),d=function(d,e,f){return function(a){return b(d,e,c(a[1][f+1],a))}}(K,L,M);break;case
13:var
N=a(0),O=a(0),P=a(0),d=function(c,d,e){return function(a){return b(c,a[d+1],e)}}(N,O,P);break;case
14:var
Q=a(0),R=a(0),S=a(0),T=a(0),d=function(c,d,e,f){return function(a){return b(c,a[d+1][e+1],f)}}(Q,R,S,T);break;case
15:var
U=a(0),V=a(0),W=a(0),d=function(d,e,f){return function(a){return b(d,c(a[1][e+1],a),f)}}(U,V,W);break;case
16:var
X=a(0),Y=a(0),d=function(c,d){return function(a){return b(a[1][c+1],a,d)}}(X,Y);break;case
17:var
Z=a(0),_=a(0),d=function(c,d){return function(a){return b(a[1][c+1],a,a[d+1])}}(Z,_);break;case
18:var
$=a(0),aa=a(0),ab=a(0),d=function(c,d,e){return function(a){return b(a[1][c+1],a,a[d+1][e+1])}}($,aa,ab);break;case
19:var
ac=a(0),ad=a(0),d=function(e,f){return function(a){var
d=c(a[1][f+1],a);return b(a[1][e+1],a,d)}}(ac,ad);break;case
20:var
ae=a(0),af=a(0);nq(e);var
d=function(b,a){return function(d){return c(f(a,b,0),a)}}(ae,af);break;case
21:var
ag=a(0),ah=a(0);nq(e);var
d=function(d,e){return function(b){var
a=b[e+1];return c(f(a,d,0),a)}}(ag,ah);break;case
22:var
ai=a(0),aj=a(0),ak=a(0);nq(e);var
d=function(d,e,g){return function(b){var
a=b[e+1][g+1];return c(f(a,d,0),a)}}(ai,aj,ak);break;default:var
al=a(0),am=a(0);nq(e);var
d=function(d,e){return function(a){var
b=c(a[1][e+1],a);return c(f(b,d,0),b)}}(al,am)}else
var
d=h;dr(e,ao,d);g[1]++;continue}return 0}}function
C3(e,g,a){if(a3(a,av$))return g;var
c=C(a)-1|0;for(;;){if(0<=c){if(b(e,a,c)){var
c=c-1|0;continue}var
f=c+1|0,d=c;for(;;){if(0<=d){if(b(e,a,d))return aD(a,d+1|0,(f-d|0)-1|0);var
d=d-1|0;continue}return aD(a,0,f)}}return aD(a,0,1)}}function
C4(f,g,a){if(a3(a,awa))return g;var
c=C(a)-1|0;for(;;){if(0<=c){if(b(f,a,c)){var
c=c-1|0;continue}var
d=c;for(;;){if(0<=d){if(b(f,a,d)){var
e=d;for(;;){if(0<=e){if(b(f,a,e)){var
e=e-1|0;continue}return aD(a,0,e+1|0)}return aD(a,0,1)}}var
d=d-1|0;continue}return g}}return aD(a,0,1)}}function
awc(b,a){return 47===I(b,a)?1:0}function
awd(a){var
b=C(a)<1?1:0,c=b||(47!==I(a,0)?1:0);return c}try{var
bCh=fK(bCg),C5=bCh}catch(a){a=s(a);if(a!==x)throw a;var
C5=awe}function
awg(c){var
d=C(c),a=b5(d+20|0);bd(a,39);var
e=d-1|0,f=0;if(!(e<0)){var
b=f;for(;;){if(39===I(c,b))dH(a,awf);else
bd(a,I(c,b));var
g=b+1|0;if(e!==b){var
b=g;continue}break}}bd(a,39);return b6(a)}function
hz(e,d){var
a=I(e,d),b=47===a?1:0;if(b)var
c=b;else
var
f=92===a?1:0,c=f||(58===a?1:0);return c}function
nr(a){var
e=C(a)<1?1:0,c=e||(47!==I(a,0)?1:0);if(c){var
f=C(a)<1?1:0,d=f||(92!==I(a,0)?1:0);if(d)var
g=C(a)<2?1:0,b=g||(58!==I(a,1)?1:0);else
var
b=d}else
var
b=c;return b}function
C6(a){var
c=nr(a);if(c){var
g=C(a)<2?1:0,d=g||O(aD(a,0,2),awm);if(d){var
h=C(a)<2?1:0,e=h||O(aD(a,0,2),awl);if(e){var
i=C(a)<3?1:0,f=i||O(aD(a,0,3),awk);if(f)var
j=C(a)<3?1:0,b=j||O(aD(a,0,3),awj);else
var
b=f}else
var
b=e}else
var
b=d}else
var
b=c;return b}function
C7(b,a){var
c=C(a)<=C(b)?1:0;if(c)var
e=aD(b,C(b)-C(a)|0,C(a)),f=BK(a),d=a3(BK(e),f);else
var
d=c;return d}try{var
bCf=fK(bCe),C8=bCf}catch(a){a=s(a);if(a!==x)throw a;var
C8=awn}function
awo(f){var
g=C(f),b=b5(g+20|0);bd(b,34);function
h(c){var
d=1;if(!(c<1)){var
a=d;for(;;){bd(b,92);var
e=a+1|0;if(c!==a){var
a=e;continue}break}}return 0}function
d(c,j){var
a=j;for(;;){if(a===g)return bd(b,34);var
d=I(f,a);if(34===d){var
h=0;return c<50?e(c+1|0,h,a):ai(e,[0,h,a])}if(92===d){var
i=0;return c<50?e(c+1|0,i,a):ai(e,[0,i,a])}bd(b,d);var
a=a+1|0;continue}}function
e(e,l,k){var
c=l,a=k;for(;;){if(a===g){bd(b,34);return h(c)}var
i=I(f,a);if(34===i){h((2*c|0)+1|0);bd(b,34);var
j=a+1|0;return e<50?d(e+1|0,j):ai(d,[0,j])}if(92===i){var
c=c+1|0,a=a+1|0;continue}h(c);return e<50?d(e+1|0,a):ai(d,[0,a])}}(function(a){return dE(d(0,a))}(0));return b6(b)}function
C9(a){var
c=2<=C(a)?1:0;if(c)var
b=I(a,0),g=91<=b?25<(b+pF|0)>>>0?0:1:65<=b?1:0,d=g?1:0,e=d?58===I(a,1)?1:0:d;else
var
e=c;if(e){var
f=aD(a,2,C(a)-2|0);return[0,aD(a,0,2),f]}return[0,awp,a]}function
awq(b){var
a=C9(b),c=a[1];return t(c,C4(hz,sF,a[2]))}function
awr(a){return C3(hz,sF,C9(a)[2])}function
awu(a){return C3(hz,sG,a)}function
awv(a){return C4(hz,sG,a)}if(O(hi,aww))if(O(hi,awx))var
Da=awb,C$=awc,C_=awd,vG=1;else
var
Ka=[0,sF,awh,awi,hz,nr,C6,C7,C8,awo,awr,awq],vG=0;else
var
Ka=[0,sG,aws,awt,hz,nr,C6,C7,C5,awg,awu,awv],vG=0;if(!vG)var
Da=Ka[3],C$=hz,C_=nr;function
sH(a,b){var
c=C(a);if(0!==c)if(!C$(a,c-1|0))return t(a,t(Da,b));return t(a,b)}var
Db=[N,awy,H(0)];CW(awB,[0,Db,0,awA,awz]);kj(function(b){if(b[1]===Db){var
d=b[2],f=b[4],g=b[3];if(typeof
d==="number"){var
e=d;if(34<=e)switch(e){case
34:var
a=aw$;break;case
35:var
a=axa;break;case
36:var
a=axb;break;case
37:var
a=axc;break;case
38:var
a=axd;break;case
39:var
a=axe;break;case
40:var
a=axf;break;case
41:var
a=axg;break;case
42:var
a=axh;break;case
43:var
a=axi;break;case
44:var
a=axj;break;case
45:var
a=axk;break;case
46:var
a=axl;break;case
47:var
a=axm;break;case
48:var
a=axn;break;case
49:var
a=axo;break;case
50:var
a=axp;break;case
51:var
a=axq;break;case
52:var
a=axr;break;case
53:var
a=axs;break;case
54:var
a=axt;break;case
55:var
a=axu;break;case
56:var
a=axv;break;case
57:var
a=axw;break;case
58:var
a=axx;break;case
59:var
a=axy;break;case
60:var
a=axz;break;case
61:var
a=axA;break;case
62:var
a=axB;break;case
63:var
a=axC;break;case
64:var
a=axD;break;case
65:var
a=axE;break;case
66:var
a=axF;break;default:var
a=axG}else
switch(e){case
0:var
a=awC;break;case
1:var
a=awE;break;case
2:var
a=awF;break;case
3:var
a=awG;break;case
4:var
a=awH;break;case
5:var
a=awI;break;case
6:var
a=awJ;break;case
7:var
a=awK;break;case
8:var
a=awL;break;case
9:var
a=awM;break;case
10:var
a=awN;break;case
11:var
a=awO;break;case
12:var
a=awP;break;case
13:var
a=awQ;break;case
14:var
a=awR;break;case
15:var
a=awS;break;case
16:var
a=awT;break;case
17:var
a=awU;break;case
18:var
a=awV;break;case
19:var
a=awW;break;case
20:var
a=awX;break;case
21:var
a=awY;break;case
22:var
a=awZ;break;case
23:var
a=aw0;break;case
24:var
a=aw1;break;case
25:var
a=aw2;break;case
26:var
a=aw3;break;case
27:var
a=aw4;break;case
28:var
a=aw5;break;case
29:var
a=aw6;break;case
30:var
a=aw7;break;case
31:var
a=aw8;break;case
32:var
a=aw9;break;default:var
a=aw_}}else
var
h=d[1],a=c(aN(axH),h);return[0,m(aN(awD),a,g,f)]}return 0});rG(axI);rG(axJ);try{rG(bCd)}catch(a){a=s(a);if(a[1]!==bz)throw a}try{rG(bCc)}catch(a){a=s(a);if(a[1]!==bz)throw a}cf(0,7);var
axL=[N,axK,H(0)];function
kr(a){d2(cL,axM);BA(a);throw axL}function
hA(b,a){return a?[0,c(b,a[1])]:0}function
axN(g,b){var
a=g,f=BJ(mZ,b);for(;;){if(a){var
c=a[1],h=a[2],d=sH(c,b),e=sH(c,f);if(mO(e))return e;if(mO(d))return d;var
a=h;continue}throw x}}function
Dc(a){switch(a){case
0:return axO;case
1:return axP;case
2:return axQ;case
3:return axR;case
4:return axS;case
5:return axT;case
6:return axU;default:return axV}}function
sJ(a){return typeof
a==="number"?0===a?axW:axX:0===a[0]?t(axY,Dc(a[1])):t(axZ,Dc(a[1]))}function
Dd(a){if(a)var
c=a[2]?er(ax0,B(sJ,a)):sJ(a[1]),b=c;else
var
b=sJ(1);return t(ax2,t(b,ax1))}function
De(a){if(O(a,ax3)){if(O(a,ax4)){if(O(a,ax5))throw x;return sK[2]}return sK[3]}return sK[1]}var
Df=1;function
ax6(d,b){try{var
a=De(b),e=Df?Dd(a):ax7;return e}catch(a){a=s(a);if(a===x)return c(d,b);throw a}}function
ax8(d,b){try{De(b);var
a=Df?Dd(ax9):ax_;return a}catch(a){a=s(a);if(a===x)return c(d,b);throw a}}var
aya=[N,ax$,H(0)];H(0);try{fK(bCb)}catch(a){a=s(a);if(a!==x)throw a;try{fK(bCa)}catch(a){a=s(a);if(a!==x)throw a}}if(a3(hi,ayb))try{var
J_=fK(bB8),J$=t(ap9(C(J_),function(b){var
a=I(J_,b);return 47===a?92:a}),bB9);t(J$,bB_);t(J$,bB$)}catch(a){a=s(a);if(a!==x)throw a}var
ayc=0,ayd=0,bUt=O(hi,aye)?O(hi,ayf)?O(hi,ayg)?1:0:1:0;function
Dg(g){var
a=hl([0,g[3]]),d=a[1],e=a[4],i=a[7],l=a[8],n=a[11],h=a[12],j=a[18],k=a[23],q=a[2],r=a[3],t=a[5],u=a[6],v=a[9],w=a[10],y=a[13],z=a[14],C=a[15],D=a[16],F=a[17],G=a[19],H=a[20],I=a[21],J=a[22],K=a[24],L=a[25];function
M(a,f){return m(h,function(c,g,a){var
d=b(f,c,g);return d?m(e,c,d[1],a):a},a,d)}function
o(a){return aZ(function(b,a){return m(e,a[1],a[2],b)},d,a)}function
N(d,c,e,a){return m(l,function(f,a,e){var
j=d?b(d[1],a,e):0;if(j)return[0,a];if(c)var
h=c[1],k=g[5],i=E(sl(ayh),k,f,h,a,h,e);else
var
l=g[5],i=b(sl(ayi),l,f);return kr(i)},e,a)}function
p(b,a){return m(i,function(d,b,a){if(b)var
c=a?a[1]:b[1];else{if(!a)return 0;var
c=a[1]}return[0,c]},b,a)}function
O(b,a){return p(a,b)}function
P(e,c,a){return m(i,function(f,c,a){if(c){if(a)return[0,b(e,c[1],a[1])];var
d=c}else
var
d=a;return d},c,a)}function
Q(a,c){try{var
d=b(k,c,a);return d}catch(a){a=s(a);if(a===x)return c;throw a}}function
R(b,a){var
d=c(j,a);return o(B(function(a){var
d=a[2];return[0,c(b,a[1]),d]},d))}function
S(d,c,a){function
e(c,a){return b(n,function(b,a){var
e=g[5];return aq(A(c),ayj,e,b,d,a)},a)}return m(A(c),ayk,e,a)}var
f=hk([0,g[3]]);function
T(a){var
c=f[1];return m(h,function(c,d,a){return b(f[4],c,a)},a,c)}function
U(a){var
b=c(j,a);return B(function(a){return a[2]},b)}function
V(b,a){function
g(a,d){return m(e,a,c(b,a),d)}return m(f[15],g,a,d)}function
W(a){return m(h,function(c,b,a){return m(e,b,c,a)},a,d)}return[0,d,q,r,e,t,u,i,l,v,w,n,h,y,z,C,D,F,j,G,H,I,J,k,K,L,M,o,N,p,O,P,Q,R,S,f,T,U,V,W,function(a){return m(h,function(g,d,a){var
i=1;try{var
j=b(k,d,a)}catch(a){i=0;a=s(a);if(a!==x)throw a;var
h=c(f[5],g)}if(i)var
h=b(f[4],g,j);return m(e,d,h,a)},a,d)}]}function
sM(f){var
aj=f[1],ak=f[2],al=f[3],am=f[4],an=f[5],d=hk([0,f[3]]),n=d[1],o=d[4],i=d[5],j=d[13],p=d[21],w=d[2],y=d[3],z=d[6],C=d[7],D=d[8],E=d[9],F=d[10],G=d[11],H=d[12],I=d[15],J=d[16],K=d[17],L=d[18],M=d[19],N=d[20],O=d[22],P=d[23],Q=d[24],R=d[25],S=d[26];function
T(a,c){ki(a,ayl);b(j,function(c){var
d=f[4];return b(ki(a,aym),d,c)},c);return ki(a,ayn)}function
q(c,a){function
d(c,a){return b(j,function(a){var
b=f[5];return m(A(c),ayo,b,a)},a)}return m(A(c),ayp,d,a)}function
U(a){return b(sl(ayq),q,a)}function
r(a){if(a){var
d=a[2],e=a[1];if(d){var
f=c(i,e);return aZ(function(c,a){return b(o,a,c)},f,d)}return c(i,e)}return n}var
V=[0,n,w,y,o,i,z,C,D,E,F,G,H,j,I,J,K,L,M,N,p,O,P,Q,R,S,T,q,U,r,function(b,a){return r(B(b,c(p,a)))}],a=Dg(f),e=km([0,f[1],f[2]]),k=e[1],h=e[5],t=e[7],l=e[13],W=e[2],X=e[3],Y=e[4],Z=e[6],_=e[8],$=e[9],aa=e[10],ab=e[11],ac=e[12],ad=e[14],af=e[15],g=Dg(f);function
ag(a){var
b=0;return m(l,function(c,b,a){return[0,[0,c,b],a]},a,b)}function
ah(b){var
a=c(k,42);ae(function(b){return m(h,a,b[1],b[2])},b);return a}function
u(a){return m(l,g[4],a,g[1])}function
v(a){var
d=c(k,c(g[17],a));function
e(b,a){return m(h,d,b,a)}b(g[11],e,a);return d}function
ai(e,g,d){try{var
a=b(t,e,d);return a}catch(a){a=s(a);if(a===x){var
f=c(g,d);m(h,e,d,f);return f}throw a}}var
ao=[0,k,W,X,Y,h,Z,t,_,$,aa,ab,ac,l,ad,af,ag,ah,u,v,ai,function(c,a){var
d=u(c);return v(b(g[24],a,d))}];return[0,f,aj,ak,al,am,an,V,[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19],a[20],a[21],a[22],a[23],a[24],a[25],a[26],a[27],a[28],a[29],a[30],a[31],a[32],a[33],a[36],a[37],a[38],a[39],a[40],a[34]],ao]}function
ayr(b,a){return b-a|0}function
ays(b,a){return c(ki(b,ayt),a)}function
ayu(a){return a}var
au=sM([0,function(b,a){return b===a?1:0},ayu,ayr,ays,auG])[8],ayv=cJ;function
ayw(b,a){return c(ki(b,ayx),a)}function
ayy(a){return mK(10,ci,0,a)}sM([0,function(b,a){return b==a?1:0},ayy,ayv,ayw,auH]);function
ayz(a){BA(a);BB(0);return bT$(2)}function
Dh(a){function
f(b){return[0,b,a[1][2][1],0,a[1][2][1]]}function
g(b,a){return[0,b,a[2],a[3],a[4]]}function
h(d,c,b){var
e=b[4],f=b[3],g=m(a[1][2][4],d,c,b[2]);return[0,b[1],g,f,e]}function
k(b){return[0,b[1],a[1][2][1],b[3],b[4]]}function
i(b,a){return[0,a[1],a[2],[0,b],a[4]]}function
j(d,c,b){var
e=m(a[1][2][4],d,c,b[4]);return[0,b[1],b[2],b[3],e]}var
d=[N,ayA,H(0)];function
e(e,k){var
f=[0,0],g=[0,C(e)],h=C(e)-1|0;if(!(h<0)){var
b=h;for(;;){if(aQ(e,b)===44){var
n=f[1];f[1]=[0,aD(e,b+1|0,(g[1]-b|0)-1|0),n];g[1]=b}var
o=b-1|0;if(0!==b){var
b=o;continue}break}}var
l=f[1],m=[0,aD(e,0,g[1]),l],p=c(mX(function(a){return O(ayB,a)}),m),q=k[1];k[1]=aZ(function(f,e){try{var
b=aqa(e,61)}catch(b){b=s(b);if(b===x){try{var
h=c(a[2][1],e)}catch(a){a=s(a);throw[0,d,a]}return i(h,f)}throw b}var
g=C(e);if(0<=b)if(b<g){if(0===b)throw[0,d,[0,bz,ayC]];var
k=aD(e,0,b);try{var
l=c(a[1][1],k)}catch(a){a=s(a);throw[0,d,a]}var
m=aD(e,b+1|0,(g-b|0)-1|0);try{var
n=c(a[2][1],m)}catch(a){a=s(a);throw[0,d,a]}return j(l,n,f)}throw[0,r,ayD]},q,p);return 0}function
l(f,c,a){try{e(f,a)}catch(a){a=s(a);if(a[1]===d){var
g=Ce(a[2]);return ayz(b(aN(ayE),g,c))}throw a}return 0}function
n(b,a){try{e(b,a)}catch(a){a=s(a);if(a[1]===d)return[0,a[2]];throw a}return 0}return[0,f,g,h,k,i,j,l,n,function(e,c){try{var
d=b(a[1][2][23],e,c[4]);return d}catch(d){d=s(d);if(d===x){var
f=c[3];if(f)return f[1];try{var
g=b(a[1][2][23],e,c[2]);return g}catch(a){a=s(a);if(a===x)return c[1];throw a}}throw d}}]}var
fS=Dh([0,[0,dk,[0,au[1],au[2],au[3],au[4],au[5],au[6],au[7],au[8],au[9],au[10],au[11],au[12],au[13],au[14],au[15],au[16],au[17],au[18],au[19],au[20],au[21],au[22],au[23],au[24],au[25]]],[0,dk]]),Di=Dh([0,[0,dk,[0,au[1],au[2],au[3],au[4],au[5],au[6],au[7],au[8],au[9],au[10],au[11],au[12],au[13],au[14],au[15],au[16],au[17],au[18],au[19],au[20],au[21],au[22],au[23],au[24],au[25]]],[0,j6]]);c(Di[1],1.25);c(fS[1],20);c(fS[1],5);c(fS[1],7);c(fS[1],3);c(fS[1],5);c(fS[1],4);c(Di[1],0.1);c(fS[1],y3);c(fS[1],0);c(fS[1],1);var
cg=0;function
gv(a){return a?a[5]:0}function
ez(b,f,e,a){var
c=gv(b),d=gv(a),g=d<=c?c+1|0:d+1|0;return[0,b,f,e,a,g]}function
Dj(b,f,e,a){var
h=gv(b),i=gv(a);if((i+1|0)<h){if(b){var
c=b[4],j=b[3],k=b[2],g=b[1],m=gv(c);if(m<=gv(g))return ez(g,k,j,ez(c,f,e,a));if(c){var
n=c[3],o=c[2],p=c[1],q=ez(c[4],f,e,a);return ez(ez(g,k,j,p),o,n,q)}}throw[0,r,ayF]}if((h+1|0)<i){if(a){var
d=a[1],l=a[4],s=a[3],t=a[2],u=gv(d);if(u<=gv(l))return ez(ez(b,f,e,d),t,s,l);if(d){var
v=d[3],w=d[2],x=d[1],y=ez(d[4],a[2],a[3],a[4]);return ez(ez(b,f,e,x),w,v,y)}}throw[0,r,ayG]}return ez(b,f,e,a)}function
dK(b,c,a){if(a){var
d=a[4],g=a[3],e=a[2],f=a[1],i=a[5],h=cJ(b,e);return 0===h?[0,f,b,c,d,i]:0<=h?Dj(f,e,g,dK(b,c,d)):Dj(dK(b,c,f),e,g,d)}return[0,0,b,c,0,1]}function
gw(d,c){var
a=c;for(;;){if(a){var
e=a[4],f=a[3],g=a[1],b=cJ(d,a[2]);if(0===b)return f;var
h=0<=b?e:g,a=h;continue}throw x}}function
Dk(a){return cf(0,13)}var
Dl=[N,ayH,H(0)];H(0);function
ayI(e,b,d,c){try{var
a=fQ(e,b),f=e4(d,a[1]),g=a[2];if(f)throw[0,Dl,b,c,g];return f}catch(a){a=s(a);if(a===x)return es(e,b,[0,d,c]);throw a}}var
Dm=61;function
ns(c){var
a=c+pF|0;if(25<a>>>0)throw[0,r,ayJ];switch(a){case
0:var
b=function(a){return 0===a?0:[0,a,b(a-1|0)]};return b(Dm);case
1:return 0;case
2:return ayK;case
3:return ayL;case
4:return ayM;case
5:return ayN;case
6:return 0;case
7:return 0;case
8:return 0;case
9:return 0;case
10:return ayO;case
11:return ayP;case
12:return ayQ;case
13:return 0;case
14:return 0;case
15:return ayR;case
16:return 0;case
17:return ayS;case
18:return ayT;case
19:return 0;case
20:return ayU;case
21:return ayV;case
22:return 0;case
23:return ayW;case
24:return ayX;default:return ayY}}var
sN=[0,[0,a_(62,1),a_(62,0)]];function
Dn(l,a){var
b=rS(sN[1][2]),h=rS(sN[1][1]),k=l?b:h;function
f(a){return z(k,a)[a+1]=1}function
g(a){return z(k,a)[a+1]=0}function
j(a){z(h,a)[a+1]=1;return z(b,a)[a+1]=1}function
i(a){throw[0,at8,ayZ]}function
n(e,d){var
c=e,b=d;for(;;){if(C(a)<=b)return[0,b,c];if(9<(I(a,b)+c_|0)>>>0)return[0,b,c];var
c=((10*c|0)+I(a,b)|0)-48|0,b=b+1|0;continue}}function
d(d,m){var
b=m;for(;;){if(C(a)<=b)return 0;var
c=I(a,b);if(65<=c){if(97<=c){if(!(ck<=c)){ae(g,ns(I(a,b)));var
b=b+1|0;continue}}else
if(!(91<=c)){ae(f,ns(mZ(I(a,b))));var
b=b+1|0;continue}}else
if(46<=c){if(64<=c){var
h=b+1|0;return d<50?e(d+1|0,j,h):ai(e,[0,j,h])}}else
if(43<=c)switch(c+y9|0){case
0:var
k=b+1|0;return d<50?e(d+1|0,f,k):ai(e,[0,f,k]);case
1:break;default:var
l=b+1|0;return d<50?e(d+1|0,g,l):ai(e,[0,g,l])}return i(0)}}function
e(f,l,b){if(C(a)<=b)return i(0);var
h=I(a,b);if(65<=h){if(97<=h){if(!(ck<=h)){ae(l,ns(I(a,b)));var
r=b+1|0;return f<50?d(f+1|0,r):ai(d,[0,r])}}else
if(!(91<=h)){ae(l,ns(mZ(I(a,b))));var
s=b+1|0;return f<50?d(f+1|0,s):ai(d,[0,s])}}else
if(!(9<(h+c_|0)>>>0)){var
o=n(0,b),e=o[2],g=o[1];if((g+2|0)<C(a))if(46===I(a,g))if(46===I(a,g+1|0)){var
p=n(0,g+2|0),q=p[2],v=p[1];if(q<e)i(0);var
m=[0,v,e,q],k=1}else
var
k=0;else
var
k=0;else
var
k=0;if(!k)var
m=[0,g,e,e];var
t=m[1],u=dm(m[3],Dm);if(!(u<e)){var
j=e;for(;;){c(l,j);var
w=j+1|0;if(u!==j){var
j=w;continue}break}}return f<50?d(f+1|0,t):ai(d,[0,t])}return i(0)}(function(a){return dE(d(0,a))}(0));sN[1]=[0,h,b];return 0}Dn(0,ay0);Dn(1,ay1);var
ay3=[N,ay2,H(0)];function
ks(b){var
a=[0,b,1,0,-1];return[0,a,a,1]}var
aO=ks(ay4);function
iE(c,a){return b(A(c),ay5,a)}function
Do(a){return sg(a,7,ay6)}function
nt(g,f,e,o){var
p=g?g[1]:aO,q=f?f[1]:0,r=e?e[1]:ay7,d=b5(64),a=hs(d),s=[0,Do],h=a[26],i=a[25],j=a[24],k=a[23];function
m(a){return ax8(j,a)}function
n(a){return ax6(k,a)}a[22]=1;a[23]=n;a[24]=m;a[25]=i;a[26]=h;var
c=iA[6];if(1<=c){a[6]=CC(c);var
l=a[8]<=a[6]?a[8]:hf(hf(a[6]-a[7]|0,a[6]/2|0),1),b=a[6]-l|0;if(1<=b){a[7]=CC(b);a[8]=a[6]-a[7]|0;CA(a)}}if(s)Do(a);return CH(function(b){e9(a,0);return[0,p,b6(d),q,r]},a,o)}var
sP=[0,0];function
hB(a){sP[1]=[0,a,sP[1]];return 0}function
nu(d,c,a){return b(nt([0,d],0,0,ay9),c,a)}function
sQ(b,a){return nu(ks(sO),b,a)}hB(function(a){if(a[1]===sI){var
h=a[2];return[0,c(nt([0,ks(sO)],0,0,ay_),h)]}if(a[1]===ay3){var
i=a[2];return[0,c(nt([0,ks(sO)],0,0,ay$),i)]}if(a[1]===aya){var
f=a[2],b=sP[1],j=a[4][1],k=a[3];for(;;){if(b){var
g=b[2],e=c(b[1],f);if(!e){var
b=g;continue}var
d=e}else
var
d=0;var
l=d?d[1]:[0,aO,Ce(f),0,ay8];return[0,c(nt([0,ks(j)],[0,[0,l,0]],0,aza),k)]}}return 0});var
azc=[N,azb,H(0)];hB(function(a){return a[1]===azc?[0,a[2]]:0});var
aze=[0,azd,aO];function
sR(a){var
b=[0,[1,[2,a[1],0]],a[2],0];return[0,aze,[0,[0,[0,[0,b,0],b[2]],0]]]}function
dM(e,d){var
f=e[1];if(f){var
g=f[1];if(O(g[1],azf))var
a=[0,sR(g),d],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=d;var
h=e[2];if(h){var
i=h[1];if(O(i[1],azg))var
j=ab(a,[0,sR(i),0]),c=1;else
var
c=0}else
var
c=0;if(!c)var
j=a;return j}var
sS=0;function
sT(b,a){if(b){var
c=b[1];if(O(c[1],azh))return ab(a,[0,sR(c),0])}return a}var
azj=[0,azi,aO];function
azk(a){var
b=[0,[1,[2,a[1],0]],a[2],0];return[0,azj,[0,[0,[0,[0,b,0],b[2]],0]]]}function
iF(b,a){return ab(B(azk,c(mX(function(a){return O(a[1],azl)?1:0}),b)),a)}cf(0,50);cf(0,50);cf(0,50);cf(0,50);cf(0,50);function
d6(b,a,c){var
d=b?b[1]:aO,e=a?a[1]:0;return[0,c,d,e]}function
cE(b,a,c){var
d=b?b[1]:aO,e=a?a[1]:0;return[0,c,d,e]}function
aV(b,a,c){var
d=b?b[1]:aO,e=a?a[1]:0;return[0,c,d,e]}function
hC(b,a,c){var
d=b?b[1]:aO,e=a?a[1]:0;return[0,c,d,e]}function
hD(b,a,c){var
d=b?b[1]:aO,e=a?a[1]:0;return[0,c,d,e]}function
dN(a,b){var
c=a?a[1]:aO;return[0,b,c]}function
de(a,b){var
c=a?a[1]:aO;return[0,b,c]}function
hE(b,a,c){var
d=b?b[1]:aO,e=a?a[1]:0;return[0,c,d,e]}function
nv(b,a,c){var
d=b?b[1]:aO,e=a?a[1]:0;return[0,c,d,e]}function
iG(c,b,a,d){var
e=c?c[1]:aO,f=b?b[1]:0,g=a?a[1]:dL;return[0,d,e,dM(g,f)]}function
hF(c,b,a,d){var
e=c?c[1]:aO,f=b?b[1]:0,g=a?a[1]:dL;return[0,d,e,dM(g,f)]}function
Dp(c,b,a,d){var
e=c?c[1]:aO,f=b?b[1]:0,g=a?a[1]:dL;return[0,d,e,dM(g,f)]}function
sU(b,a){var
d=a[2];return[0,c(b,a[1]),d]}function
Dq(b,a){var
d=a[1];return[0,d,c(b,a[2])]}function
nw(d,b,a){var
e=a[1],f=c(b,a[2]);return[0,c(d,e),f]}function
c2(b,a){return a?[0,c(b,a[1])]:0}function
aA(c,a){var
d=a[1];return[0,d,b(c[21],c,a[2])]}function
azn(a,g){var
d=g[1],i=g[3],e=b(a[21],a,g[2]),f=b(a[2],a,i);if(typeof
d==="number")return d6([0,e],[0,f],0);else
switch(d[0]){case
0:return d6([0,e],[0,f],[0,d[1]]);case
1:var
j=d[2],k=d[1],l=b(a[34],a,d[3]);return d6([0,e],[0,f],[1,k,b(a[34],a,j),l]);case
2:var
m=d[1];return d6([0,e],[0,f],[2,B(c(a[34],a),m)]);case
3:var
n=d[2],o=d[1],p=B(c(a[34],a),n);return d6([0,e],[0,f],[3,aA(a,o),p]);case
4:var
q=d[2],r=d[1],s=[0,f],t=[0,e];return d6(t,s,[4,B(function(c){var
d=c[2],e=c[1],f=b(a[34],a,c[3]);return[0,e,b(a[2],a,d),f]},r),q]);case
5:var
u=d[2],v=d[1],w=B(c(a[34],a),u);return d6([0,e],[0,f],[5,aA(a,v),w]);case
6:var
x=d[2];return d6([0,e],[0,f],[6,b(a[34],a,d[1]),x]);case
7:var
y=d[3],z=d[2],A=d[1],C=[0,f],D=[0,e];return d6(D,C,[7,B(function(d){if(0===d[0]){var
e=d[4],f=d[3],g=d[2],h=d[1],i=B(c(a[34],a),e);return[0,h,b(a[2],a,g),f,i]}return[1,b(a[34],a,d[1])]},A),z,y]);case
8:var
E=d[1];return d6([0,e],[0,f],[8,E,b(a[34],a,d[2])]);case
9:var
h=d[1],F=h[2],G=h[1],H=c(a[34],a),I=function(b){return aA(a,b)},J=B(function(a){return nw(I,H,a)},F);return d6([0,e],[0,f],[9,[0,aA(a,G),J]]);default:return d6([0,e],[0,f],[10,b(a[16],a,d[1])])}}function
azo(a,d){var
e=d[5],r=d[8],s=d[7],t=d[6],u=d[4],v=d[3],w=d[2],x=aA(a,d[1]),y=c2(c(a[34],a),t),f=b(a[37],a,u),C=c(a[21],a),D=c(a[34],a),z=[0,e],A=[0,f],E=c(a[34],a),g=B(function(a){var
b=a[2],d=a[1],e=c(C,a[3]),f=c(D,b);return[0,c(E,d),f,e]},v),F=[0,g],G=c(a[34],a),h=B(function(a){return sU(G,a)},w),i=b(a[2],a,s),j=b(a[21],a,r),H=[0,h],I=[0,i],k=[0,j]?j:aO,l=I?i:0,q=0,m=H?h:0,n=F?g:0,o=A?f:0,p=z?e:1;return[0,x,m,n,o,p,y,iF(q,dM(dL,l)),k]}function
azp(b,a){if(typeof
a==="number")return 0===a?0:1;else{if(0===a[0]){var
d=a[1];return[0,B(c(b[14],b),d)]}var
e=a[1];return[1,B(c(b[20],b),e)]}}function
Dr(a,b){if(0===b[0]){var
d=b[1];return[0,B(c(a[34],a),d)]}var
e=b[1];return[1,B(c(a[20],a),e)]}function
azq(a,d){var
e=d[4],k=d[5],l=d[3],m=d[2],n=d[1],o=B(c(a[17],a),l),p=aA(a,n),q=[0,e],r=c(a[34],a),f=B(function(a){return sU(r,a)},m),g=b(a[2],a,k),s=[0,f],h=[0,g]?g:0,i=s?f:0,j=q?e:1;return[0,p,i,o,j,dM(dL,h)]}function
azr(a,d){var
e=d[2],n=d[4],o=d[3],p=d[1];if(0===e[0])var
k=e[2],l=e[1],m=c2(c(a[34],a),k),f=[0,Dr(a,l),m];else
var
f=[1,aA(a,e[1])];var
q=aA(a,p),g=b(a[2],a,n),h=b(a[21],a,o),r=[0,g],i=[0,h]?h:aO,j=r?g:0;return[0,q,f,i,dM(dL,sT(sS,j))]}function
azs(a,g){var
d=g[1],h=g[3],e=b(a[21],a,g[2]),f=b(a[2],a,h);switch(d[0]){case
0:var
i=d[2],j=d[1],k=B(c(a[34],a),i);return nv([0,e],[0,f],[0,aA(a,j),k]);case
1:return nv([0,e],[0,f],[1,b(a[9],a,d[1])]);case
2:var
l=d[2],m=d[1],n=b(a[11],a,d[3]);return nv([0,e],[0,f],[2,m,b(a[34],a,l),n]);default:return nv([0,e],[0,f],[3,b(a[16],a,d[1])])}}function
azt(a,h){var
c=h[1],j=h[3],d=b(a[21],a,h[2]),e=b(a[2],a,j);switch(c[0]){case
0:return iG([0,d],[0,e],0,[0,b(a[11],a,c[1])]);case
1:var
f=c[1],k=f[3],l=f[2],m=f[1];return iG([0,d],[0,e],0,[1,[0,m,l,k,b(a[34],a,f[4])]]);case
2:var
g=c[1],n=g[3],o=g[2],p=g[1];return iG([0,d],[0,e],0,[2,[0,p,o,n,b(a[34],a,g[4])]]);case
3:var
i=c[1],q=i[1],r=b(a[34],a,i[2]);return iG([0,d],[0,e],0,[3,[0,b(a[34],a,q),r]]);case
4:return iG([0,d],0,0,[4,b(a[1],a,c[1])]);default:return iG([0,d],[0,e],0,[5,b(a[16],a,c[1])])}}function
azu(a,d){var
e=d[2],f=d[1],g=B(c(a[13],a),e);return[0,b(a[34],a,f),g]}function
azv(a,g){var
d=g[1],h=g[3],e=b(a[21],a,g[2]),f=b(a[2],a,h);switch(d[0]){case
0:return hC([0,e],[0,f],[0,aA(a,d[1])]);case
1:return hC([0,e],[0,f],[1,b(a[30],a,d[1])]);case
2:var
i=d[2],j=d[1],k=b(a[25],a,d[3]),l=hA(c(a[25],a),i);return hC([0,e],[0,f],[2,aA(a,j),l,k]);case
3:var
m=d[2],n=d[1],o=B(c(a[40],a),m);return hC([0,e],[0,f],[3,b(a[25],a,n),o]);case
4:return hC([0,e],[0,f],[4,b(a[24],a,d[1])]);case
5:return hC([0,e],[0,f],[5,b(a[16],a,d[1])]);default:return hC([0,e],[0,f],[6,aA(a,d[1])])}}function
azw(a,c){switch(c[0]){case
0:var
d=c[1],e=b(a[35],a,c[2]);return[0,aA(a,d),e];case
1:var
f=c[1],g=aA(a,c[2]);return[1,aA(a,f),g];case
2:return[2,b(a[35],a,c[1])];default:var
h=c[1],i=aA(a,c[2]);return[3,aA(a,h),i]}}function
azx(a,f){var
d=f[1],e=b(a[21],a,f[2]);switch(d[0]){case
0:return dN([0,e],[0,b(a[39],a,d[1])]);case
1:var
i=d[2],j=d[1];return dN([0,e],[1,j,B(c(a[35],a),i)]);case
2:return dN([0,e],[2,b(a[36],a,d[1])]);case
3:return dN([0,e],[3,b(a[17],a,d[1])]);case
4:return dN([0,e],[4,b(a[23],a,d[1])]);case
5:var
k=d[1];return dN([0,e],[5,B(c(a[23],a),k)]);case
6:return dN([0,e],[6,b(a[26],a,d[1])]);case
7:return dN([0,e],[7,b(a[27],a,d[1])]);case
8:return dN([0,e],[8,b(a[19],a,d[1])]);case
9:var
l=d[1];return dN([0,e],[9,B(c(a[6],a),l)]);case
10:var
m=d[1];return dN([0,e],[10,B(c(a[12],a),m)]);case
11:return dN([0,e],[11,b(a[1],a,d[1])]);default:var
n=d[2],o=b(a[16],a,d[1]),g=b(a[2],a,n),p=[0,e],h=[0,g]?g:0;return dN(p,[12,o,h])}}function
azy(a,g){var
d=g[1],h=g[3],e=b(a[21],a,g[2]),f=b(a[2],a,h);switch(d[0]){case
0:return hD([0,e],[0,f],[0,aA(a,d[1])]);case
1:return hD([0,e],[0,f],[1,b(a[32],a,d[1])]);case
2:var
i=d[2],j=d[1],k=b(a[24],a,d[3]),l=hA(c(a[25],a),i);return hD([0,e],[0,f],[2,aA(a,j),l,k]);case
3:var
m=d[1],n=b(a[24],a,d[2]);return hD([0,e],[0,f],[3,b(a[24],a,m),n]);case
4:var
o=d[1],p=b(a[25],a,d[2]);return hD([0,e],[0,f],[4,b(a[24],a,o),p]);case
5:return hD([0,e],[0,f],[5,b(a[15],a,d[1])]);default:return hD([0,e],[0,f],[6,b(a[16],a,d[1])])}}function
azz(a,f){var
d=f[1],e=b(a[21],a,f[2]);switch(d[0]){case
0:var
k=d[2],l=b(a[15],a,d[1]),g=b(a[2],a,k),m=[0,e],i=[0,g]?g:0;return de(m,[0,l,i]);case
1:var
n=d[2],o=d[1];return de([0,e],[1,o,B(c(a[38],a),n)]);case
2:return de([0,e],[2,b(a[39],a,d[1])]);case
3:var
p=d[2],q=d[1];return de([0,e],[3,q,B(c(a[35],a),p)]);case
4:return de([0,e],[4,b(a[36],a,d[1])]);case
5:return de([0,e],[5,b(a[17],a,d[1])]);case
6:return de([0,e],[6,b(a[22],a,d[1])]);case
7:var
r=d[1];return de([0,e],[7,B(c(a[22],a),r)]);case
8:return de([0,e],[8,b(a[26],a,d[1])]);case
9:return de([0,e],[9,b(a[27],a,d[1])]);case
10:var
s=d[1];return de([0,e],[10,B(c(a[5],a),s)]);case
11:var
t=d[1];return de([0,e],[11,B(c(a[12],a),t)]);case
12:return de([0,e],[12,b(a[18],a,d[1])]);case
13:return de([0,e],[13,b(a[1],a,d[1])]);default:var
u=d[2],v=b(a[16],a,d[1]),h=b(a[2],a,u),w=[0,e],j=[0,h]?h:0;return de(w,[14,v,j])}}function
azA(a,g){var
d=g[1],h=g[3],e=b(a[21],a,g[2]),f=b(a[2],a,h);if(typeof
d==="number")return aV([0,e],[0,f],0);else
switch(d[0]){case
0:return aV([0,e],[0,f],[0,aA(a,d[1])]);case
1:return aV([0,e],[0,f],[1,d[1]]);case
2:var
i=d[2],j=d[1],k=b(a[15],a,d[3]);return aV([0,e],[0,f],[2,j,B(c(a[38],a),i),k]);case
3:return aV([0,e],[0,f],[3,b(a[4],a,d[1])]);case
4:var
l=d[3],m=d[2],n=d[1],o=b(a[15],a,d[4]),p=b(a[28],a,l);return aV([0,e],[0,f],[4,n,c2(c(a[15],a),m),p,o]);case
5:var
q=d[2],r=d[1],s=c(a[15],a),t=B(function(a){return Dq(s,a)},q);return aV([0,e],[0,f],[5,b(a[15],a,r),t]);case
6:var
u=d[1],v=b(a[4],a,d[2]);return aV([0,e],[0,f],[6,b(a[15],a,u),v]);case
7:var
w=d[1],x=b(a[4],a,d[2]);return aV([0,e],[0,f],[7,b(a[15],a,w),x]);case
8:var
y=d[1];return aV([0,e],[0,f],[8,B(c(a[15],a),y)]);case
9:var
z=d[2],A=d[1],C=c2(c(a[15],a),z);return aV([0,e],[0,f],[9,aA(a,A),C]);case
10:var
D=d[2],E=d[1];return aV([0,e],[0,f],[10,E,c2(c(a[15],a),D)]);case
11:var
F=d[2],G=d[1],H=c2(c(a[15],a),F),I=c(a[15],a),J=function(b){return aA(a,b)},K=[0,f],L=[0,e];return aV(L,K,[11,B(function(a){return nw(J,I,a)},G),H]);case
12:var
M=d[1],N=aA(a,d[2]);return aV([0,e],[0,f],[12,b(a[15],a,M),N]);case
13:var
O=d[2],P=d[1],Q=b(a[15],a,d[3]),R=aA(a,O);return aV([0,e],[0,f],[13,b(a[15],a,P),R,Q]);case
14:var
S=d[1];return aV([0,e],[0,f],[14,B(c(a[15],a),S)]);case
15:var
T=d[3],U=d[2],V=d[1],W=c2(c(a[15],a),T),X=b(a[15],a,U);return aV([0,e],[0,f],[15,b(a[15],a,V),X,W]);case
16:var
Y=d[1],Z=b(a[15],a,d[2]);return aV([0,e],[0,f],[16,b(a[15],a,Y),Z]);case
17:var
_=d[1],$=b(a[15],a,d[2]);return aV([0,e],[0,f],[17,b(a[15],a,_),$]);case
18:var
aa=d[4],ab=d[3],ac=d[2],ad=d[1],ae=b(a[15],a,d[5]),af=b(a[15],a,ab),ag=b(a[15],a,ac);return aV([0,e],[0,f],[18,b(a[28],a,ad),ag,af,aa,ae]);case
19:var
ah=d[1],ai=b(a[34],a,d[2]);return aV([0,e],[0,f],[19,b(a[15],a,ah),ai]);case
20:var
aj=d[2],ak=d[1],al=b(a[34],a,d[3]),am=c2(c(a[34],a),aj);return aV([0,e],[0,f],[20,b(a[15],a,ak),am,al]);case
21:var
an=d[2];return aV([0,e],[0,f],[21,b(a[15],a,d[1]),an]);case
22:return aV([0,e],[0,f],[22,aA(a,d[1])]);case
23:var
ao=d[1],ap=b(a[15],a,d[2]);return aV([0,e],[0,f],[23,aA(a,ao),ap]);case
24:var
aq=d[1],ar=c(a[15],a),as=function(b){return aA(a,b)},at=[0,f],au=[0,e];return aV(au,at,[24,B(function(a){return nw(as,ar,a)},aq)]);case
25:var
av=d[2],aw=d[1],ax=b(a[15],a,d[3]),ay=b(a[24],a,av);return aV([0,e],[0,f],[25,aA(a,aw),ay,ax]);case
26:var
az=d[1],aB=b(a[15],a,d[2]);return aV([0,e],[0,f],[26,b(a[17],a,az),aB]);case
27:return aV([0,e],[0,f],[27,b(a[15],a,d[1])]);case
28:return aV([0,e],[0,f],[28,b(a[15],a,d[1])]);case
29:var
aC=d[2],aD=d[1],aE=c2(c(a[34],a),aC);return aV([0,e],[0,f],[29,b(a[15],a,aD),aE]);case
30:return aV([0,e],[0,f],[30,b(a[10],a,d[1])]);case
31:var
aF=d[1];return aV([0,e],[0,f],[31,aF,b(a[15],a,d[2])]);case
32:return aV([0,e],[0,f],[32,b(a[24],a,d[1])]);case
33:var
aG=d[2],aH=d[1],aI=b(a[15],a,d[3]);return aV([0,e],[0,f],[33,aH,aA(a,aG),aI]);default:return aV([0,e],[0,f],[34,b(a[16],a,d[1])])}}function
azB(a,g){var
d=g[1],h=g[3],e=b(a[21],a,g[2]),f=b(a[2],a,h);if(typeof
d==="number")return cE([0,e],[0,f],0);else
switch(d[0]){case
0:return cE([0,e],[0,f],[0,aA(a,d[1])]);case
1:var
i=d[1],j=aA(a,d[2]);return cE([0,e],[0,f],[1,b(a[28],a,i),j]);case
2:return cE([0,e],[0,f],[2,d[1]]);case
3:return cE([0,e],[0,f],[3,d[1],d[2]]);case
4:var
k=d[1];return cE([0,e],[0,f],[4,B(c(a[28],a),k)]);case
5:var
l=d[2],m=d[1],n=c2(c(a[28],a),l);return cE([0,e],[0,f],[5,aA(a,m),n]);case
6:var
o=d[2],p=d[1];return cE([0,e],[0,f],[6,p,c2(c(a[28],a),o)]);case
7:var
q=d[2],r=d[1],s=c(a[28],a),t=function(b){return aA(a,b)},u=[0,f],v=[0,e];return cE(v,u,[7,B(function(a){return nw(t,s,a)},r),q]);case
8:var
w=d[1];return cE([0,e],[0,f],[8,B(c(a[28],a),w)]);case
9:var
x=d[1],y=b(a[28],a,d[2]);return cE([0,e],[0,f],[9,b(a[28],a,x),y]);case
10:var
z=d[1],A=b(a[34],a,d[2]);return cE([0,e],[0,f],[10,b(a[28],a,z),A]);case
11:return cE([0,e],[0,f],[11,aA(a,d[1])]);case
12:return cE([0,e],[0,f],[12,b(a[28],a,d[1])]);case
13:return cE([0,e],[0,f],[13,aA(a,d[1])]);case
14:return cE([0,e],[0,f],[14,b(a[28],a,d[1])]);case
15:return cE([0,e],[0,f],[15,b(a[16],a,d[1])]);default:var
C=d[1],D=b(a[28],a,d[2]);return cE([0,e],[0,f],[16,aA(a,C),D])}}function
azC(a,g){var
d=g[1],h=g[3],e=b(a[21],a,g[2]),f=b(a[2],a,h);switch(d[0]){case
0:var
i=d[2],j=d[1],k=B(c(a[34],a),i);return hE([0,e],[0,f],[0,aA(a,j),k]);case
1:return hE([0,e],[0,f],[1,b(a[10],a,d[1])]);case
2:var
l=d[3],m=d[2],n=d[1],o=b(a[7],a,d[4]),p=b(a[28],a,l);return hE([0,e],[0,f],[2,n,c2(c(a[15],a),m),p,o]);case
3:var
q=d[2],r=d[1],s=c(a[15],a),t=B(function(a){return Dq(s,a)},q);return hE([0,e],[0,f],[3,b(a[7],a,r),t]);case
4:var
u=d[2],v=d[1],w=b(a[7],a,d[3]);return hE([0,e],[0,f],[4,v,B(c(a[38],a),u),w]);case
5:var
x=d[1],y=b(a[11],a,d[2]);return hE([0,e],[0,f],[5,b(a[7],a,x),y]);default:return hE([0,e],[0,f],[6,b(a[16],a,d[1])])}}function
Ds(c,a){if(0===a[0])return[0,b(c[34],c,a[1])];var
d=a[1];return[1,d,b(c[15],c,a[2])]}function
azD(a,f){var
c=f[1],j=f[3],d=b(a[21],a,f[2]),e=b(a[2],a,j);switch(c[0]){case
0:var
k=c[3],l=c[1];return hF([0,d],[0,e],0,[0,l,b(a[7],a,c[2]),k]);case
1:var
g=c[1],m=g[2],n=g[1],o=Ds(a,g[3]);return hF([0,d],[0,e],0,[1,[0,aA(a,n),m,o]]);case
2:var
h=c[1],p=h[2],q=h[1],r=Ds(a,h[3]);return hF([0,d],[0,e],0,[2,[0,aA(a,q),p,r]]);case
3:var
i=c[1],s=i[1],t=b(a[34],a,i[2]);return hF([0,d],[0,e],0,[3,[0,b(a[34],a,s),t]]);case
4:return hF([0,d],[0,e],0,[4,b(a[15],a,c[1])]);case
5:return hF([0,d],0,0,[5,b(a[1],a,c[1])]);default:return hF([0,d],[0,e],0,[6,b(a[16],a,c[1])])}}function
azE(a,d){var
e=d[2],f=d[1],g=B(c(a[8],a),e);return[0,b(a[28],a,f),g]}function
sV(a,n,d){var
e=d[1],o=d[6],p=d[5],q=d[3],r=d[2],s=c(n,d[4]),t=aA(a,q),u=c(a[34],a),f=B(function(a){return sU(u,a)},r),g=b(a[2],a,o),h=b(a[21],a,p),v=[0,f],w=[0,e],x=[0,g],i=[0,h]?h:aO,j=x?g:0,m=0,k=w?e:1,l=v?f:0;return[0,k,l,t,s,i,iF(m,dM(dL,j))]}function
azF(a,c){var
d=c[3],j=c[5],k=c[4],l=c[1],m=b(a[34],a,c[2]),n=aA(a,l),e=b(a[2],a,k),f=b(a[21],a,j),o=[0,d],p=[0,e],g=[0,f]?f:aO,h=p?e:0,i=o?d:0;return[0,n,m,i,dM(dL,h),g]}function
azG(a,c){var
h=c[4],i=c[3],j=c[1],k=b(a[15],a,c[2]),l=b(a[28],a,j),d=b(a[2],a,i),e=b(a[21],a,h),m=[0,d],f=[0,e]?e:aO,g=m?d:0;return[0,l,k,iF(0,dM(dL,g)),f]}function
azH(a,b){return B(c(a[33],a),b)}function
azI(a,b){return B(c(a[31],a),b)}function
azJ(a,d){switch(d[0]){case
0:return[0,b(a[32],a,d[1])];case
1:return[1,b(a[30],a,d[1])];case
2:return[2,b(a[34],a,d[1])];default:var
e=d[2],f=d[1],g=c2(c(a[15],a),e);return[3,b(a[28],a,f),g]}}function
azK(a,c){var
d=c[2],j=c[4],k=c[3],l=aA(a,c[1]),e=b(a[2],a,j),f=b(a[21],a,k),m=[0,d],n=[0,e],g=[0,f]?f:aO,h=n?e:0,i=m?d:1;return[0,l,i,g,dM(dL,h)]}function
azL(a,d){var
i=d[4],j=d[3],k=d[2],l=aA(a,d[1]),m=c2(c(a[25],a),k),e=b(a[2],a,j),f=b(a[21],a,i),n=[0,e],g=[0,f]?f:aO,h=n?e:0;return[0,l,m,iF(0,dM(dL,h)),g]}function
azM(a,c){var
h=c[4],i=c[3],j=c[1],k=b(a[25],a,c[2]),l=aA(a,j),d=b(a[2],a,i),e=b(a[21],a,h),m=[0,d],f=[0,e]?e:aO,g=m?d:0;return[0,l,k,iF(0,dM(dL,g)),f]}function
azN(a,c){var
h=c[4],i=c[3],j=c[1],k=b(a[24],a,c[2]),l=aA(a,j),d=b(a[2],a,i),e=b(a[21],a,h),m=[0,d],f=[0,e]?e:aO,g=m?d:0;return[0,l,k,iF(0,dM(dL,g)),f]}function
azO(a,c){var
d=c[2],j=c[5],k=c[4],l=c[1],m=b(a[34],a,c[3]),n=aA(a,l),e=b(a[2],a,j),f=b(a[21],a,k),o=[0,d],p=[0,e],g=[0,f]?f:aO,h=p?e:0,i=o?d:0;return[0,n,i,m,g,sT(sS,h)]}function
azP(a,c){var
d=c[3],e=c[2],f=b(a[25],a,c[1]),g=[0,b(a[2],a,d)];return Dp([0,b(a[21],a,e)],g,0,f)}function
azQ(a,c){var
d=c[3],e=c[2],f=b(a[24],a,c[1]),g=[0,b(a[2],a,d)];return Dp([0,b(a[21],a,e)],g,0,f)}function
azR(a,c){var
d=c[1],e=b(a[29],a,c[2]);return[0,aA(a,d),e]}function
azS(a,d){var
k=d[5],l=d[4],m=d[3],n=d[2],o=aA(a,d[1]),p=c2(c(a[34],a),m),e=Dr(a,n),f=b(a[2],a,k),g=b(a[21],a,l),q=[0,e],r=[0,f],h=[0,g]?g:aO,i=r?f:0,j=q?e:azm;return[0,o,j,p,h,sT(sS,i)]}function
azT(a){var
b=c(a[11],a);return function(c){return sV(a,b,c)}}function
azU(a){var
b=c(a[11],a);return function(c){return sV(a,b,c)}}function
azV(a){var
b=c(a[7],a);return function(c){return sV(a,b,c)}}function
azW(a,b){return B(c(a[3],a),b)}function
azX(a,d){var
e=d[2],f=d[1],g=b(a[15],a,d[3]),h=c2(c(a[15],a),e);return[0,b(a[28],a,f),h,g]}function
azY(a,b){return B(c(a[1],a),b)}function
azZ(a,c){var
d=c[1],e=b(a[29],a,c[2]);return[0,aA(a,d),e]}var
az1=[N,az0,H(0)];function
az2(c,a){if(0===a[0]){var
d=a[1];return b(A(c),az3,d)}var
e=a[1];return b(A(c),az4,e)}hB(function(a){return a[1]===az1?[0,nu(a[2],az2,a[3])]:0});function
Dt(l){var
c=l;for(;;){if(c){var
i=c[1],j=i[1][1];if(O(j,az5))if(O(j,az6)){var
c=c[2];continue}var
k=i[2];if(0===k[0]){var
e=k[1];if(e){var
g=e[1][1];if(0===g[0]){var
f=g[1][1];if(typeof
f==="number")var
b=1;else
if(1===f[0])if(e[2])var
a=0,b=0;else{var
h=f[1];if(2===h[0])var
d=[0,h[1]],a=1,b=0;else
var
d=0,a=1,b=0}else
var
b=1;if(b)var
a=0}else
var
a=0}else
var
a=0}else
var
a=0;if(!a)var
d=0;return d?[0,d[1]]:az7}return 0}}var
gx=[0,0],az8=1,az9=2;function
az_(a){gx[1]++;return[0,gx[1],a,0]}function
az$(a){gx[1]++;return[0,gx[1],a,az9]}function
iH(a){gx[1]++;return[0,gx[1],a[2],a[3]]}function
Du(a){return 0===a[1]?1:0}var
aAb=bP;function
aAc(a){gx[1]=hf(gx[1],a);return 0}function
aAd(c,a){var
d=a[1];if(-1===d){var
e=a[2];return b(A(c),aAe,e)}if(0===d){var
f=a[2];return b(A(c),aAf,f)}var
g=0!==(a[3]&1)?aAg:aAi,h=a[2];return p(A(c),aAh,h,d,g)}var
e$=0;function
eA(b,e,a){var
c=b?b[4]:0,d=a?a[4]:0,f=d<=c?c+1|0:d+1|0;return[0,b,e,a,f]}function
Dv(b,e,a){var
h=b?b[4]:0,i=a?a[4]:0;if((i+1|0)<h){if(b){var
c=b[3],j=b[2],f=b[1],k=c?c[4]:0,l=f?f[4]:0;if(k<=l)return eA(f,j,eA(c,e,a));if(c){var
m=c[2],n=c[1],o=eA(c[3],e,a);return eA(eA(f,j,n),m,o)}}throw[0,r,aAj]}if((h+1|0)<i){if(a){var
d=a[1],g=a[3],p=a[2],q=d?d[4]:0,s=g?g[4]:0;if(q<=s)return eA(eA(b,e,d),p,g);if(d){var
t=d[2],u=d[1],v=eA(d[3],a[2],a[3]);return eA(eA(b,e,u),t,v)}}throw[0,r,aAk]}return eA(b,e,a)}function
sW(b,c,a){if(a){var
e=a[3],d=a[2],f=a[1],h=a[4],g=cJ(b[2],d[1][2]);return 0===g?[0,f,[0,b,c,[0,d]],e,h]:0<=g?Dv(f,d,sW(b,c,e)):Dv(sW(b,c,f),d,e)}return[0,0,[0,b,c,0],0,1]}function
aAl(e,d){var
a=d;for(;;){if(a){var
b=a[2],f=a[3],g=a[1],c=cJ(e,b[1][2]);if(0===c)return b[2];var
h=0<=c?f:g,a=h;continue}throw x}}function
aAm(b,a){var
c=b[1]-a[1]|0;if(0===c){var
d=cJ(b[2],a[2]);return 0===d?cJ(b[3],a[3]):d}return c}function
aAn(d,b){var
c=t(aAa,a(q+b[1]));return d2(d,t(b[2],c))}var
aAo=sM([0,aAb,function(a){var
b=a[1];return I(a[2],0)^b},aAm,aAn,aAd])[4],fa=-1;function
Dw(f,e){var
b=f,a=e;for(;;){switch(b[0]){case
0:var
g=b[1];if(0===a[0])return bP(g,a[1]);break;case
1:var
h=b[2],i=b[1];if(1===a[0]){var
c=a3(h,a[2]),j=a[1];if(c){var
b=i,a=j;continue}return c}break;default:var
k=b[2],l=b[1];if(2===a[0]){var
m=a[2],d=Dw(l,a[1]);if(d){var
b=k,a=m;continue}return d}}return 0}}function
sX(h,g){var
c=h,a=g;for(;;){switch(c[0]){case
0:var
i=c[1];if(0===a[0])return b(aAo,i,a[1]);var
d=0;break;case
1:var
j=c[2],k=c[1];if(1===a[0]){var
l=a[2],e=sX(k,a[1]);return 0===e?he(j,l):e}var
d=0;break;default:var
m=c[2],n=c[1];if(2===a[0]){var
o=a[2],f=sX(n,a[1]);if(0===f){var
c=m,a=o;continue}return f}var
d=1}if(!d)if(0!==a[0])return-1;return 1}}function
sY(b){var
a=b;for(;;)switch(a[0]){case
0:return a[1][1];case
1:var
a=a[1];continue;default:var
c=a[1],d=sY(a[2]);return hf(sY(c),d)}}function
aAp(a){return 0}function
iI(e,a){var
b=e?e[1]:aAp;switch(a[0]){case
0:return a[1][2];case
1:var
d=a[2],f=a[1],g=c(b,d)?t(aAr,t(d,aAq)):t(aAs,d);return t(iI([0,b],f),g);default:var
h=a[1],i=t(aAu,t(iI([0,b],a[2]),aAt));return t(iI([0,b],h),i)}}function
Dx(b){var
a=b;for(;;)switch(a[0]){case
0:return a[1][2];case
1:return a[2];default:var
a=a[2];continue}}function
sZ(a){if(O(a,aAw))return 25<(I(a,0)+ah$|0)>>>0?0:1;throw[0,r,aAx]}var
aAz=[N,aAy,H(0)];function
aAA(a,b){switch(b){case
0:return c(A(a),aAB);case
1:return c(A(a),aAC);default:return c(A(a),aAD)}}hB(function(a){return a[1]===aAz?[0,nu(a[2],aAA,a[3])]:0});function
aAE(b,a){return b[3]-a[3]|0}var
aAF=hl([0,he]);function
s0(a){switch(a){case
0:return 1;case
1:return 2;case
2:return 4;case
3:return 8;case
4:return 16;case
5:return 32;default:return 64}}var
aAG=s0(3),aAH=s0(4),s1=s0(0)|aAH|aAG,iJ=hk([0,aAE]),DA=[0,-1],Dy=cU,s2=pc;function
DB(b,a){DA[1]++;return[0,a,b,DA[1]]}function
b9(a){return DB(s2,a)}function
kt(a,b){return b9([0,a])}var
DC=j_(1);function
ku(c){var
a=c;for(;;){if(typeof
a!=="number"){var
b=a[1][1];if(b){var
a=b[1];continue}}return a}}function
DD(j,d,i,h){var
e=j,c=i,b=h;for(;;){var
a=b[1];if(typeof
a!=="number")switch(a[0]){case
5:var
l=a[4];if(1===ku(a[2])){var
e=1,c=a,b=l;continue}break;case
6:var
e=1,c=a,b=a[1];continue}if(e){var
f=d0(DC,0),k=[1,d,d[1],c];if(f){var
g=[0,0];f[1][1]=[0,k,g];it(DC,0,[0,g])}d[1]=c}return b}}function
gy(b){var
a=b[1];if(typeof
a!=="number")switch(a[0]){case
5:var
c=a[4];if(1===ku(a[2]))return DD(0,b,a,c);break;case
6:return DD(0,b,a,a[1])}return b}function
s3(i){var
b=0,a=i;for(;;){if(typeof
a!=="number"){if(0!==a[0]){var
c=a[4],d=a[2],e=c[1],f=a[3],g=a[1];if(e){var
h=e[1],b=ab(b,d),a=h;continue}return[1,g,ab(b,d),f,c]}if(a[1])if(0!==b)return[0,[0,j$(b)]]}return a}}function
s4(o){var
b=0,a=o;for(;;){var
e=gy(a[2])[1];if(typeof
e!=="number"&&8===e[0]){var
f=a[1],m=e[1],n=0===f?b:[0,f,b],b=n,a=m;continue}if(0===b)return a;var
d=a[1],c=b,h=a[6],i=a[5],j=a[4],k=a[3],l=a[2];for(;;){if(c){var
g=c[2],d=ab(c[1],d),c=g;continue}return[0,d,l,k,j,i,h]}}}function
DE(c){var
a=s4(c),b=a[4];if(b){var
d=a[1];return mW(function(b){var
a=s3(b[2]);if(typeof
a!=="number"&&1===a[0])return 0;return 1},d)}return b}function
DF(b,f){var
a=f;for(;;){var
g=a[1];ae(function(e){var
a=s3(e[2]);if(typeof
a!=="number"){if(0!==a[0])return ae(b,a[2]);var
d=a[1];if(d)return c(b,d[1])}return 0},g);var
d=gy(a[2])[1];if(typeof
d!=="number")switch(d[0]){case
8:var
a=d[1];continue;case
0:case
3:case
7:case
9:break;default:throw[0,r,aAK]}var
e=a[6];return e?ae(b,e[1][2]):0}}function
DG(a,j){var
b=j[1];if(typeof
b==="number")return 0;else
switch(b[0]){case
0:return 0;case
1:var
k=b[3];c(a,b[2]);return c(a,k);case
2:return ae(a,b[1]);case
3:return ae(a,b[2]);case
4:var
g=b[1],h=b[2][1];if(h){var
l=h[1][2];c(a,g);return ae(a,l)}return c(a,g);case
5:var
m=b[4];c(a,b[3]);return c(a,m);case
6:return c(a,b[1]);case
7:return c(a,b[1]);case
8:var
i=b[1];DF(a,i);var
e=i;for(;;){var
f=gy(e[2]),d=f[1];if(typeof
d!=="number"&&8===d[0]){var
e=d[1];continue}return c(a,f)}case
9:return 0;case
10:var
n=b[2];c(a,b[1]);return ae(a,n);default:return ae(a,b[3])}}var
nx=[0,0];function
s5(b,a){nx[1]=[0,[0,b,a],nx[1]];return 0}var
DH=[0,0],aAP=[0,0];function
kv(c){var
a=nx[1];ae(function(a){a[1][1]=a[2];return 0},a);var
b=DH[1];ae(function(a){a[1]=0;return 0},b);nx[1]=0;DH[1]=0;aAP[1]=0;return 0}function
DI(c){var
a=gy(c),b=a[2]<0?1:0;return b?(a[2]=-1-a[2]|0,DG(DI,a)):b}var
hG=[0,cg,cg,cg,0,s2];function
iK(c,b,a){var
d=a[5],e=a[4],f=a[3],g=a[2];return[0,dK(c,b,a[1]),g,f,e,d]}function
kw(c,b,a){var
d=a[5],e=a[4],f=a[3],g=dK(c,b,a[2]);return[0,a[1],g,f,e,d]}function
DJ(c,b,a){var
d=a[5],e=a[4],f=dK(c,b,a[3]);return[0,a[1],a[2],f,e,d]}function
gz(b,a){return b[4]?aO:a}var
DK=[0,azZ,azY,azX,azW,azV,azU,azC,azD,azu,azE,azs,azT,azt,azS,azA,azR,azr,azQ,azP,azO,function(b,a){return aO},azN,azM,azy,azv,azL,azK,azB,azJ,azI,azx,azH,azz,azn,azo,azq,azp,azG,azF,azw];function
aAQ(b){var
a=b[1][1];return O(a,aAR)?O(a,aAS)?O(a,aAT)?O(a,aAU)?1:0:0:0:0}function
fT(d,a){var
e=d[4]?c(mX(aAQ),a):a;return d[4]?b(DK[2],DK,e):e}function
gA(b,a){switch(a[0]){case
0:var
c=a[1];try{var
d=gw(c,b[2]);return d}catch(b){b=s(b);if(b===x)return a;throw b}case
1:var
e=a[3],f=a[2];return[1,gA(b,a[1]),f,e];default:var
g=a[1],h=gA(b,a[2]);return[2,gA(b,g),h]}}function
aAV(b,a){switch(a[0]){case
0:var
d=a[1];try{var
c=gw(d,b[3]),e=0===c[0]?c[1]:kr(aAW);return e}catch(b){b=s(b);if(b===x)return a;throw b}case
1:var
f=a[3],g=a[2];return[1,gA(b,a[1]),g,f];default:return kr(aAX)}}function
s6(b,a){switch(a[0]){case
0:var
c=a[1];try{var
d=gw(c,b[1]);return d}catch(b){b=s(b);if(b===x)return a;throw b}case
1:var
e=a[3],f=a[2];return[1,gA(b,a[1]),f,e];default:return kr(aAY)}}function
gB(d,b){switch(b[0]){case
0:var
g=b[1];if(sZ(g[2]))var
a=[2,g],c=1;else
var
c=0;break;case
1:var
e=b[2],f=b[1];if(sZ(e))if(sZ(Dx(f)))var
a=[1,f,e],c=1;else
var
a=[3,f,e],c=1;else
var
c=0;break;default:var
c=0}if(!c)var
a=[0,b];switch(a[0]){case
0:return s6(d,a[1]);case
1:var
h=a[2];return[1,gA(d,a[1]),h,fa];case
2:return s6(d,b);default:var
i=a[2];return[1,s6(d,a[1]),i,fa]}}var
DL=[0,-1];function
s7(a){DL[1]+=-1;return[0,a,s2,DL[1]]}function
DM(a){if(typeof
a!=="number")switch(a[0]){case
0:if(!a[1])return aAZ;break;case
9:if(!a[1])return aA0;break}return a}function
bS(b,ax){var
c=gy(ax),h=c[1];if(typeof
h!=="number")switch(h[0]){case
5:var
aO=h[2],aP=h[1];if(!b[4])if(a3(aP,aAJ))if(1!==ku(aO))if(gy(c)[2]<pc)return c;break;case
7:return h[1];case
0:case
9:if(!b[4])if(0<=c[3]){if(c[2]<pc)c[2]=dm(c[2],b[5]);return c}var
aa=b[4]?s7(DM(h)):DB(c[2],h);s5(c,h);c[1]=[7,aa];return aa}var
d=c[1];s5(c,d);var
t=b[4]?s7(aA1):kt(0,0);c[1]=[7,t];if(typeof
d==="number")var
i=0;else
switch(d[0]){case
3:var
ay=d[2],az=d[1],aA=[0,0],aB=B(function(a){return bS(b,a)},ay),m=[3,gB(b,az),aB,aA],i=1;break;case
4:var
M=d[2][1],aC=d[1];if(M)var
N=M[1],aD=N[2],aE=N[1],aF=B(function(a){return bS(b,a)},aD),O=[0,[0,gB(b,aE),aF]];else
var
O=0;var
m=[4,bS(b,aC),[0,O]],i=1;break;case
5:var
aG=d[4];if(1===ku(d[2]))var
m=[6,bS(b,aG)],i=1;else
var
i=0;break;case
8:var
k=s4(d[1]),f=gy(k[2]),u=f[1];if(typeof
u==="number")var
l=0;else
if(7===u[0]){var
x=u[1][1];if(typeof
x==="number")var
o=1;else
if(2===x[0]){var
_=x[1];if(_){var
y=_[2];if(y)if(y[2])var
l=0,o=0;else{var
$=y[1];c[1]=[7,$];var
U=[6,$],l=1,o=0}else
var
l=0,o=0}else
var
l=0,o=0}else
var
o=1;if(o)var
l=0}else
var
l=0;if(!l){var
P=b[4];if(P)var
q=P;else{var
W=f[2]===pc?1:0;if(W)var
q=W;else{var
X=DE(k);if(X)var
q=X;else{var
Y=f[1];if(typeof
Y==="number")var
z=0;else
if(3===Y[0])var
Z=1,z=1;else
var
z=0;if(!z)var
Z=0;var
q=Z}}}var
v=f[1];if(typeof
v==="number")var
p=0;else
switch(v[0]){case
7:var
n=v[1],p=1;break;case
3:var
p=0;break;case
0:case
9:s5(f,f[1]);if(b[4])var
n=s7(DM(f[1])),p=1;else{if(q){var
D=f[1];if(typeof
D==="number")var
C=0;else
if(0===D[0])var
V=1,C=1;else
var
C=0;if(!C)var
V=0;if(V)var
n=b9(f[1]),p=1,A=0;else
var
A=1}else
var
A=1;if(A)var
n=f,p=1}break;default:throw[0,r,aA2]}if(!p)var
n=bS(b,f);f[1]=[7,b9([2,[0,n,[0,t,0]]])];var
aH=1-q,Q=1,w=function(a){return bS(b,a)},ab=k[1],ac=B(function(d){var
e=d[2],g=d[1],a=s3(e);if(typeof
a==="number")var
b=0;else
if(0===a[0]){var
f=a[1];if(f)var
c=[0,[0,w(f[1])]],b=1;else
var
b=0}else
var
h=a[4],i=a[3],j=a[2],l=a[1],m=aH?h:[0,0],n=k[5]?Q:i,c=[1,l,B(w,j),n,m],b=1;if(!b)var
c=e;return[0,g,c]},ab),F=k[6];if(F)var
G=F[1],ad=G[1],H=[0,[0,ad,B(w,G[2])]];else
var
H=0;var
I=k[5],ae=I?Q:I,j=[0,ac,n,0,k[4],ae,H],R=j[6];if(R)var
S=R[1],aI=S[2],aJ=[0,[0,gB(b,S[1]),aI]],T=[8,[0,j[1],j[2],j[3],j[4],j[5],aJ]];else
var
T=[8,j];var
U=T}var
m=U,i=1;break;case
11:var
aK=d[3],aL=d[2],aM=d[1],aN=B(function(a){return bS(b,a)},aK),m=[11,aAV(b,aM),aL,aN],i=1;break;default:var
i=0}if(!i){var
e=function(a){return bS(b,a)},a=d;for(;;){if(typeof
a==="number")var
g=0;else
switch(a[0]){case
0:var
g=aAM;break;case
1:var
s=a[4],af=a[3],ag=a[2],ah=a[1];for(;;){if(typeof
s!=="number"){var
E=s[1];if(1!==E[1]){var
s=E[1];continue}}var
ai=0===s?0:[0,[0,1]],aj=e(af),g=[1,ah,e(ag),aj,ai];break}break;case
2:var
g=[2,B(e,a[1])];break;case
3:var
ak=a[1],g=[3,ak,B(e,a[2]),[0,0]];break;case
4:var
J=a[1],K=a[2][1];if(K)var
L=K[1],al=L[1],am=[0,[0,[0,al,B(e,L[2])]]],g=[4,e(J),am];else
var
g=[4,e(J),[0,0]];break;case
5:var
an=a[3],ao=a[2],ap=a[1],aq=e(a[4]),ar=e(an),g=[5,ap,ku(ao),ar,aq];break;case
6:var
a=a[1][1];continue;case
7:throw[0,r,aAN];case
8:throw[0,r,aAO];case
9:var
g=a;break;case
10:var
as=a[2],at=a[1],au=B(function(d){var
a=e(d);for(;;){var
b=a[1];if(typeof
b!=="number")switch(b[0]){case
2:var
c=b[1];if(c){var
a=c[1];continue}break;case
6:var
a=b[1];continue;case
7:case
9:return a}throw[0,r,aAL]}},as),g=[10,e(at),au];break;default:var
av=a[2],aw=a[1],g=[11,aw,av,B(e,a[3])]}var
m=g;break}}t[1]=m;return t}function
DN(b,a){var
c=fT(b,a[5]),d=gz(b,a[4]),e=bS(b,a[3]);return[0,a[1],a[2],e,d,c]}function
DO(b,a){if(0===a[0]){var
c=a[1];return[0,B(function(a){return bS(b,a)},c)]}var
d=a[1];return[1,B(function(a){return DN(b,a)},d)]}function
s8(b,a){var
f=a[11],g=a[10],h=fT(b,a[9]),i=gz(b,a[8]),e=a[5],j=0,k=a[6],l=e?[0,bS(b,e[1])]:0,c=a[3],m=a[4];if(typeof
c==="number")var
d=0===c?0:1;else
if(0===c[0])var
q=c[2],r=c[1],d=[0,B(function(a){return DN(b,a)},r),q];else
var
s=c[1],d=[1,B(function(a){var
c=fT(b,a[5]),d=gz(b,a[4]),e=a[3],f=hA(function(a){return bS(b,a)},e),g=DO(b,a[2]);return[0,a[1],g,f,d,c]},s)];var
n=a[2],o=a[1],p=[0,B(function(a){return bS(b,a)},o),n,d,m,l,k,j,i,h,g,f];kv(0);return p}function
ny(a,c){switch(c[0]){case
0:var
k=c[2],l=c[1],m=ny(a,c[3]),n=B(function(b){return bS(a,b)},k);return[0,gB(a,l),n,m];case
1:var
d=c[1],e=d[4],f=B(function(b){var
c=b[2],d=b[1],e=B(function(b){return bS(a,b)},c);return[0,gB(a,d),e]},e),g=d[3],h=d[2],i=function(b){var
c=b[2],d=b[1];return[0,d,c,bS(a,b[3])]},j=b(aAF[24],i,h);return[1,[0,bS(a,d[1]),j,g,f]];default:var
o=c[2],p=c[1],q=ny(a,c[3]);return[2,p,bS(a,o),q]}}function
s9(b,a){var
d=fT(b,a[7]),e=gz(b,a[6]),c=a[4],f=a[5],g=c?[0,bS(b,c[1])]:0,h=gB(b,a[3]),i=ny(b,a[2]),j=a[1],k=[0,B(function(a){return bS(b,a)},j),i,h,g,f,e,d];if(1-b[4])kv(0);return k}function
s_(b,a){var
c=fT(b,a[6]),d=gz(b,a[5]),e=a[4],f=gB(b,a[3]),g=ny(b,a[2]),h=a[1],i=[0,B(function(a){return bS(b,a)},h),g,f,e,d,c];kv(0);return i}function
s$(b,a){var
d=fT(b,a[4]),e=gz(b,a[3]),f=a[2],c=bS(b,a[1]);kv(0);return[0,c,f,e,d]}function
ta(b,a){var
c=fT(b,a[7]),d=b[4]?aO:a[6],e=a[5],f=a[4],g=hA(function(a){return bS(b,a)},f),h=DO(b,a[3]),i=a[2],j=B(function(a){return bS(b,a)},i),k=[0,gB(b,a[1]),j,h,g,e,d,c];kv(0);return k}function
fU(b,a){switch(a[0]){case
0:var
c=a[1];switch(c[0]){case
0:var
f=c[1];try{var
g=gw(f,b[3]);return g}catch(b){b=s(b);if(b===x)return a;throw b}case
1:var
h=c[3],i=c[2];return[0,[1,gA(b,c[1]),i,h]];default:return kr(aA3)}case
1:return[1,DP(b,a[1])];case
2:var
d=a[1],j=a[3],k=a[2],e=iH(d),l=fU(kw(d,[0,e],b),j);return[2,e,hA(function(a){return fU(b,a)},k),l];default:var
m=a[1];return[3,m,gA(b,a[2])]}}function
DP(t,m){var
a=t,c=0,b=m;for(;;){if(b){var
d=b[1];switch(d[0]){case
1:var
e=d[1],o=b[2],f=iH(e),a=iK(e,[0,f],a),c=[0,f,c],b=o;continue;case
3:var
g=d[1],p=b[2],h=iH(g),a=kw(g,[0,h],a),c=[0,h,c],b=p;continue;case
4:var
i=d[1],q=b[2],j=iH(i),a=DJ(i,[0,[0,j]],a),c=[0,j,c],b=q;continue;case
0:case
2:var
n=b[2],c=[0,iH(d[1]),c],b=n;continue;default:var
k=d[1],r=b[2],l=iH(k),a=iK(k,[0,l],a),c=[0,l,c],b=r;continue}}var
s=aj(c);return BD(function(b,c){switch(b[0]){case
0:return[0,c,s$(a,b[2])];case
1:var
d=b[3];return[1,c,s8(a,b[2]),d];case
2:var
e=b[3];return[2,c,ta(a,b[2]),e];case
3:var
f=b[3];return[3,c,DQ(a,b[2]),f];case
4:return[4,c,tb(a,b[2])];case
5:var
g=b[3];return[5,c,s9(a,b[2]),g];default:var
h=b[3];return[6,c,s_(a,b[2]),h]}},m,s)}}function
DQ(b,a){var
c=gz(b,a[3]),d=fT(b,a[2]);return[0,fU(b,a[1]),d,c]}function
tb(b,a){var
c=gz(b,a[3]),d=fT(b,a[2]),e=a[1];return[0,hA(function(a){return fU(b,a)},e),d,c]}var
tc=[0,0];function
DR(d,a){var
b=c(d,a);tc[1]=[0,[0,a,b],tc[1]];return b}function
bZ(a){return DR(az_,a)}function
d7(a){return DR(az$,a)}var
DS=bZ(aA4),DT=bZ(aA5),td=bZ(aA6),DU=bZ(aA7),DV=bZ(aA8),DW=bZ(aA9),DX=bZ(aA_),aBa=bZ(aA$),DY=bZ(aBb),aBd=bZ(aBc),DZ=bZ(aBe),D0=bZ(aBf),D1=bZ(aBg),aBi=bZ(aBh),D2=bZ(aBj),D3=bZ(aBk),D4=[0,DX],iL=b9([3,[0,DS],0,[0,0]]);b9([3,[0,DT],0,[0,0]]);b9([3,[0,td],0,[0,0]]);b9([3,[0,DU],0,[0,0]]);b9([3,[0,DV],0,[0,0]]);b9([3,[0,DW],0,[0,0]]);b9([3,D4,0,[0,0]]);b9([3,[0,DZ],0,[0,0]]);b9([3,[0,D0],0,[0,0]]);b9([3,[0,D1],0,[0,0]]);var
hH=b9([3,[0,D2],0,[0,0]]);b9([3,[0,D3],0,[0,0]]);var
D5=d7(aBm),D6=d7(aBn),D7=d7(aBo),D8=d7(aBp),D9=d7(aBq),D_=d7(aBr),D$=d7(aBs),Ea=d7(aBt),Eb=d7(aBu),Ec=d7(aBv),Ed=d7(aBw),Ee=d7(aBx),P=[0,0,0,0,1,0,0,0,aO,0,0,Dz],Ef=[0,P[1],P[2],P[3],P[4],P[5],P[6],P[7],P[8],P[9],1,P[11]],aBl=[0,DY];function
hI(b,a){return[0,b,[0,a],0,aO,0]}var
aBz=bZ(aBy),aBB=bZ(aBA),aBD=bZ(aBC),aBF=bZ(aBE),aBH=bZ(aBG),aBJ=bZ(aBI),aBL=bZ(aBK);function
aBO(a,ak,aj){var
h=P[11],i=P[9],j=P[8],k=P[7],l=P[6],n=P[5],o=P[4],p=[0,hI(aBB,0),0],q=[1,[0,hI(aBz,0),p]],r=[0,P[1],P[2],q,o,n,l,k,j,i,1,h],s=P[11],t=P[9],u=P[8],v=P[7],w=P[6],x=P[5],y=P[4],z=[1,[0,hI(aBD,0),0]],A=[0,P[1],P[2],z,y,x,w,v,u,t,1,s],B=[0,P[1],P[2],1,P[4],P[5],P[6],P[7],P[8],P[9],P[10],P[11]],C=kt(0,0),D=[0,[0,C,0],1,P[3],P[4],P[5],[0,Dy,0],P[7],P[8],P[9],P[10],P[11]],e=kt(0,0),E=P[11],F=P[10],G=P[9],H=P[8],I=P[7],J=P[5],K=P[4],L=[0,hI(aBH,[0,e,[0,b9([3,aBl,[0,e,0],[0,0]]),0]]),0],M=[0,[0,e,0],1,[1,[0,hI(aBF,0),L]],K,J,[0,s1,0],I,H,G,F,E],f=kt(0,0),N=P[11],O=P[10],Q=P[9],R=P[8],S=P[7],T=P[5],U=P[4],V=[0,hI(aBL,[0,f,0]),0],W=[0,[0,f,0],1,[1,[0,hI(aBJ,0),V]],U,T,[0,s1,0],S,R,Q,O,N],X=kt(0,0),Y=[0,[0,X,0],1,P[3],P[4],P[5],[0,s1,0],P[7],P[8],P[9],P[10],P[11]];function
d(c,a){return b(ak,c,[0,D4,0,[0,a],0,1,aO,[0,[0,[0,aBN,aO],aBM],0]])}var
Z=m(a,D1,P,m(a,D0,P,m(a,DZ,P,m(a,aBi,Y,m(a,aBd,W,m(a,DY,M,m(a,aBa,D,m(a,DX,B,m(a,DW,A,m(a,DV,r,m(a,DU,P,m(a,D2,P,m(a,DT,Ef,m(a,DS,Ef,m(a,D3,P,aj))))))))))))))),_=c(d(Ee,[0,b9([2,[0,hH,[0,iL,[0,iL,0]]]]),0]),Z),$=c(d(Ed,[0,b9([2,[0,hH,[0,iL,[0,iL,0]]]]),0]),_),aa=c(d(Ea,0),$),ab=c(d(D$,0),aa),ac=c(d(D_,[0,hH,0]),ab),ad=c(d(Ec,0),ac),ae=c(d(D9,0),ad),af=c(d(D8,[0,hH,0]),ae),ag=c(d(D7,[0,hH,0]),af),ah=c(d(Eb,0),ag),ai=c(d(D6,0),ah),g=c(d(D5,[0,b9([2,[0,hH,[0,iL,[0,iL,0]]]]),0]),ai),al=m(a,td,P,g);return[0,al,m(a,td,[0,P[1],P[2],P[3],P[4],[0,hH],P[6],P[7],P[8],P[9],P[10],P[11]],g)]}var
aBP=[0,D5,[0,D6,[0,Eb,[0,D7,[0,D8,[0,D9,[0,D_,[0,D$,[0,Ea,[0,Ec,[0,Ed,[0,Ee,0]]]]]]]]]]]];B(function(a){a[3]=a[3]|1;return[0,a[2],a]},aBP);aAc(xA);aj(tc[1]);function
te(d,a){var
k=d?d[1]:0,c=[0,iJ[1]];function
e(l){var
g=l;for(;;){var
a=gy(g),h=0<=a[2]?1:0;if(h){a[2]=-1-a[2]|0;var
f=a[1];if(typeof
f!=="number")switch(f[0]){case
0:c[1]=b(iJ[4],a,c[1]);return 0;case
8:var
d=s4(f[1]);DF(e,d);var
i=1-DE(d);if(i){var
j=d[2][1];if(typeof
j!=="number"&&0===j[0])if(k){c[1]=b(iJ[4],a,c[1]);return 0}var
g=d[2];continue}return i}return DG(e,a)}return h}}e(a);DI(a);return c[1]}function
nz(b,a){return b9([3,b,a,[0,0]])}function
Eg(q,a,i,p,g){if(0===a[0])var
e=a[1];else
var
o=a[1],e=B(function(a){return a[3]},o);if(i)var
k=i[1],l=te(0,b9([2,e])),m=te(0,k),n=b(iJ[9],l,m),f=c(iJ[21],n);else
var
f=0;if(0===a[0])return[0,f,a[1],0];var
r=a[1],s=te(aBQ,b9([2,e])),d=c(iJ[21],s);if(typeof
g==="number")var
h=0;else
if(0===g[0])var
j=aAI,h=1;else
var
h=0;if(!h)var
j=Dz;var
t=0,u=0,v=0,w=B(function(a){return Dy},d),x=[0,[0,d,W(d),[0,r,g],q,0,w,v,aO,u,t,j]];return[0,f,[0,nz(p,d),0],x]}function
Eh(b,a){var
e=a[4],f=e?e[1]:nz(a[1],a[2]),c=Eg(a[5],a[3],a[4],b,2),d=c[2],g=c[3],h=c[1],i=a[7],j=a[6],k=a[5],l=0!==a[4]?1:0,m=W(d);return[0,Dx(b),f,h,d,m,[2,b,0===d?1:0],-1,-1,-1,l,k,j,i,g]}var
Ei=[0,aBU,-1,-1];H(0);var
aBW=[0,aBV,Ei,Ei,0,-1,[0],0,1,aO,0];function
Ej(u,a){var
b=a[3];if(typeof
b!=="number"&&1===b[0]){var
c=b[1],n=[0,0],o=[0,0],p=[0,0],v=nz(u,a[1]);ae(function(a){var
c=a[3];if(bP(a[2],aBR))n[1]++;else
o[1]++;var
b=0===c?1:0,d=b?(p[1]++,0):b;return d},c);var
e=function(g,c,f){if(f){var
h=f[2],b=f[1],d=b[3],i=b[2],q=b[1],w=b[5],x=b[4],y=d?d[1]:v;if(a[11][1]){if(0!==h)throw[0,r,aBT];var
k=0,j=0}else{if(0===i[0])if(i[1])var
m=0;else
var
k=[0,g],j=e(g+1|0,c,h),m=1;else
var
m=0;if(!m)var
k=[1,c],j=e(g,c+1|0,h)}var
s=q[2],z=a[11][1]?aBS:[1,c],l=Eg(a[4],i,d,[1,u,s,fa],z),t=l[2],A=l[3],B=l[1],C=a[4],D=p[1],E=o[1],F=n[1];return[0,[0,q,[0,s,y,B,t,W(t),k,F,E,D,0!==d?1:0,C,x,w,A]],j]}return 0};return e(0,0,c)}return 0}function
Ek(f,b){var
a=b[3];if(typeof
a!=="number"&&0===a[0]){var
c=a[1],i=a[2],j=b[4],k=nz(f,b[1]),d=a_(W(c),aBW),e=function(b,c){if(c){var
a=c[1],f=[0,a[1][2],k,a[3],a[2],b,d,i,j,a[4],a[5]],g=c[2];z(d,b)[b+1]=f;var
h=e(b+1|0,g);return[0,[0,a[1],f],h]}return 0};return e(0,c)}return 0}var
iM=[N,aBX,H(0)];function
aBY(a){var
b=Bc(a),c=b[2],d=b[1],e=Bc(a);return[0,d,c,e,Bc(a)]}function
aB1(b,a){switch(a[0]){case
0:var
c=a[1];return m(A(b),aB2,iE,c);case
1:var
d=a[2],e=a[1];return p(A(b),aB3,iE,e,d);default:var
f=a[1];return m(A(b),aB4,iE,f)}}hB(function(a){return a[1]===iM?[0,sQ(aB1,a[2])]:0});cf(0,16);cf(0,16);cf(0,16);cf(0,16);var
El=cf(0,ms),Em=[N,aB5,H(0)];function
tf(a){throw[0,Em,a]}function
En(e,b){var
a=b[1];switch(a[0]){case
0:return a[1];case
1:throw a[1];default:var
f=a[1];try{var
d=c(e,f);b[1]=[0,d];return d}catch(a){a=s(a);b[1]=[1,a];throw a}}}function
Eo(a){return[0,[2,a]]}var
aB6=hl([0,sX]);function
aB7(a){return 0}function
aB8(f,e,d,a){try{var
g=[0,[0,aAl(e,d)[1],a]],b=g}catch(a){a=s(a);if(a!==x)throw a;var
b=0}return c(f,b)}function
gC(d,h,c,a,g,f){if(d)var
i=d[1],e=function(e){var
d=c[2];return b(i,d,aB8(h,d,f,a))};else
var
e=aB7;return sW(c,[0,a,e],g)}function
tg(f,m){var
a=m;for(;;){if(a){var
b=a[2],i=a[3],j=a[1],h=cJ(f[2],b[1][2]);if(0===h){if(f[1]===b[1][1])var
g=b[2];else{var
d=b[3],k=f[1];for(;;){if(!d)throw x;var
e=d[1];if(e[1][1]!==k){var
d=e[3];continue}var
g=e[2];break}}var
n=g[1];c(g[2],0);return n}var
l=0<=h?i:j,a=l;continue}throw x}}function
aB9(a){return fU(a[1],a[2])}var
Ep=[0,e$,e$,e$,e$,e$,e$,e$,e$,e$,e$,0,aB6[1],0,0],Eq=[0,function(e,d,c,b,a){throw[0,r,aB_]}],Er=[0,function(a){throw[0,r,aB$]}],Es=[0,function(d,c,b,a){throw[0,r,aCa]}];function
aCb(d,c,b,a){throw[0,r,aCc]}function
th(a){return[0,a,0,aO]}function
kx(a){return En(Er[1],a[3])}var
tj=cf(0,17),aCd=Dk(0),nA=hk([0,hh]),Et=[0,nA[1]];function
Eu(a){Et[1]=b(nA[4],a,Et[1]);return 0}var
Ev=[0,nA[1]];function
aCe(a){try{var
b=a[4],c=ae(function(b){var
c=b[2],d=b[1];if(c){var
e=c[1];Eu(d);return ayI(aCd,d,e,a[5])}return 0},b);return c}catch(a){a=s(a);if(a[1]===Dl)return tf([1,a[2],a[4],a[3]]);throw a}}function
aCg(j,c,e){var
d=e[2],f=e[1],g=d[1],h=d[2],i=d[4],k=d[3],l=0,m=aZ(function(b,a){return typeof
a==="number"?b:[0,a[1]]},l,i),n=E(Eq[1],m,aO,Ep,hG,[0,[0,0,g,az8]],[1,h]),a=[0,g,[J,function(a){return DP(hG,h)}],n,k,f,i];if(O(a[1],c))tf([0,c,a[1],f]);var
o=a[6];ae(function(d){if(typeof
d==="number")switch(d){case
0:return tf([2,a[1],ti]);case
1:Ev[1]=b(nA[4],c,Ev[1]);return 0;default:return ayc}return 0},o);if(j)aCe(a);es(tj,c,[0,a]);return a}function
aCh(l,a){if(a3(a,aCi))throw x;try{var
d=fQ(tj,a)}catch(d){d=s(d);if(d===x){var
g=1;try{var
c=axN(ayd,t(a,aCf))}catch(a){g=0;a=s(a);if(a!==x)throw a;var
f=0}if(g){var
b=apL(c);try{var
e=apP(b,12);if(O(e,sL)){j7(b);var
i=aD(sL,0,9);if(a3(aD(e,0,9),i)){var
j=bT8(e,sL)?aBZ:aB0;throw[0,iM,[1,c,j]]}throw[0,iM,[0,c]]}var
k=aBY(b);j7(b)}catch(a){a=s(a);if(a!==d3)if(a[1]!==bz){if(a[1]===iM){var
h=a[2];j7(b);throw[0,iM,h]}throw a}j7(b);throw[0,iM,[2,c]]}var
f=[0,[0,c,k]]}if(f){var
m=f[1];Eu(a);return aCg(l,a,m)}es(tj,a,0);throw x}throw d}if(d)return d[1];throw x}function
Ew(a){return aCh(1,a)}function
ky(a,b){switch(a[0]){case
0:var
c=a[1];try{var
g=tg(c,b[7])[2];return g}catch(a){a=s(a);if(a===x){if(Du(c))if(!a3(c[2],ti))return Ew(c[2])[3];throw x}throw a}case
1:var
h=a[2],d=kx(ky(a[1],b));if(0===d[0])return gw(h,d[1][7])[1];throw x;default:var
e=a[1],i=a[2],f=kx(ky(e,b));if(0===f[0])throw x;return p(Es[1],f[1],b,e,i)}}function
aCj(n,a,e){switch(a[0]){case
0:var
c=a[1];try{var
p=tg(c,e[5])[2];return p}catch(a){a=s(a);if(a===x){if(Du(c))if(!a3(c[2],ti)){var
d=Ew(c[2])[2],i=bi(d),o=bu===i?d[1]:J===i?cd(d):d;return th([1,o])}throw x}throw a}case
1:var
q=a[2],j=kx(ky(a[1],e));if(0===j[0])return th(En(aB9,gw(q,j[1][5])[1]));throw x;default:var
f=a[2],k=kx(ky(a[1],e));if(0===k[0])throw x;var
b=k[1],g=b[3];if(3===g[0])var
l=g;else{if(n)var
h=g;else
try{var
t=fQ(b[5],f),h=t}catch(a){a=s(a);if(a!==x)throw a;var
r=b[3],m=fU(kw(b[1],f,hG),r);es(b[5],f,m);var
h=m}var
l=h}return th(l)}}var
aCk=0;function
aCl(a,b){return aCj(aCk,a,b)}function
aCm(a,c){switch(a[0]){case
0:var
d=tg(a[1],c[6])[2];break;case
1:var
f=a[2],b=kx(ky(a[1],c));if(0!==b[0])throw x;var
d=gw(f,b[1][6])[1];break;default:throw x}var
e=d[1];if(e)return e[1];throw x}H(0);function
tk(b,c,a){switch(a[0]){case
0:var
e=a[1];try{var
f=tk(b,c,aCm(e,b));return f}catch(b){b=s(b);if(b===x)return a;throw b}case
3:var
d=a[2];try{var
g=tk(b,[0,d],aCl(d,b)[1]);return g}catch(b){b=s(b);if(b===x)return a;throw b}default:return c?aCb(1,b,a,c[1]):a}}function
gD(a,b,e,c){if(c){var
d=c[1];switch(d[0]){case
0:var
B=c[2],C=[1,a,d[1][2],b],g=d[2][2];if(typeof
g==="number")var
f=0;else
if(0===g[0])var
h=b,f=1;else
var
f=0;if(!f)var
h=b+1|0;var
i=gD(a,h,e,B);return[0,[0,C,i[1]],i[2]];case
1:var
j=d[1],k=[1,a,j[2],fa],D=c[2],l=gD(a,b,iK(j,k,e),D);return[0,[0,k,l[1]],l[2]];case
2:var
m=d[1],n=[1,a,m[2],b],E=c[2],o=gD(a,b+1|0,iK(m,n,e),E);return[0,[0,n,o[1]],o[2]];case
3:var
p=d[1],q=[1,a,p[2],b],F=c[2],r=gD(a,b+1|0,kw(p,q,e),F);return[0,[0,q,r[1]],r[2]];case
4:var
s=d[1],t=[1,a,s[2],fa],G=c[2],u=gD(a,b,DJ(s,[0,t],e),G);return[0,[0,t,u[1]],u[2]];case
5:var
v=d[1],w=[1,a,v[2],b],H=c[2],x=gD(a,b+1|0,iK(v,w,e),H);return[0,[0,w,x[1]],x[2]];default:var
y=d[1],z=[1,a,y[2],fa],I=c[2],A=gD(a,b,iK(y,z,e),I);return[0,[0,z,A[1]],A[2]]}}return[0,0,e]}function
Ex(e,d,a){var
c=gD(e,0,d,a),b=c[2],f=c[1];return[0,f,b,[J,function(c){return B(function(a){switch(a[0]){case
0:var
c=a[1];return[0,c,s$(b,a[2])];case
1:var
d=a[3],e=a[1];return[1,e,s8(b,a[2]),d];case
2:var
f=a[3],g=a[1];return[2,g,ta(b,a[2]),f];case
3:var
h=a[3],i=a[1];return[3,i,DQ(b,a[2]),h];case
4:var
j=a[1];return[4,j,tb(b,a[2])];case
5:var
k=a[3],l=a[1];return[5,l,s9(b,a[2]),k];default:var
m=a[3],n=a[1];return[6,n,s_(b,a[2]),m]}},a)}]]}function
tl(a,b){var
c=sY(b)-1|0;return[0,a[1],a[2],a[3],a[4],c]}function
aCn(a,g,b){var
e=tl(g,a);if(bP(e,tl(hG,a))){try{var
i=fQ(El,a),c=i}catch(b){b=s(b);if(b!==x)throw b;var
d=[0,0];es(El,a,d);var
c=d}try{var
h=apV(b,c[1]);return h}catch(d){d=s(d);if(d===x){var
f=Ex(a,e,b);c[1]=[0,[0,b,f],c[1]];return f}throw d}}return Ex(a,e,b)}function
tm(b,d,a){try{var
e=gw(b,a),c=e}catch(a){a=s(a);if(a!==x)throw a;var
c=0}return dK(b,[0,d,c],a)}function
nB(f,e,d,c,b,a){return[0,f,e,Eo([0,d,c,b,a])]}function
aCo(c){var
e=c[3],d=c[2],i=c[1],b=tk(i,0,c[4]);switch(b[0]){case
1:var
j=b[1],a=[0,cg,cg,cg,cg,cg,cg,cg,cg,cg],k=aCn(e,d,j),h=k[2],f=[0,i],g=[0,0],l=k[1];rM(function(b,k){switch(b[0]){case
0:var
r=b[2],y=b[1],z=s$(h,r);a[1]=dK(y[2],[0,z,g[1]],a[1]);var
s=r[2];if(typeof
s!=="number"&&0===s[0])return 0;g[1]++;return 0;case
1:var
n=b[2],l=b[1],o=s8(h,n),A=Ej(k,o),t=B(function(a){return a[2]},A),C=Ek(k,o),u=B(function(a){return a[2]},C);a[4]=dK(l[2],[0,[0,o,[0,t,u]],fa],a[4]);ae(function(b){a[2]=tm(b[1],[0,b,fa],a[2]);return 0},t);ae(function(b){a[3]=tm(b[1],[0,b,fa],a[3]);return 0},u);var
d=f[1],D=0,P=d[14],Q=d[13],R=d[12],S=[1,d[11],l,n],T=d[10],U=d[9],V=d[8],W=d[7],X=d[6],Y=d[5],Z=f[1][4],_=d[4],$=[0,[0,l],[0,n,aCp]],aa=gC(D,function(a){return[0,afP,a]},l,$,_,Z);f[1]=[0,d[1],d[2],d[3],aa,Y,X,W,V,U,T,S,R,Q,P];return 0;case
2:var
E=b[1],F=Eh(k,ta(h,b[2]));a[2]=tm(E[2],[0,F,g[1]],a[2]);g[1]++;return 0;case
3:var
i=b[2],j=b[1],v=i[1],G=Eo([0,h,v]);a[5]=dK(j[2],[0,G,g[1]],a[5]);var
H=Dt(i[2]),I=nB(H,i[3],f[1],h,k,v);a[7]=dK(j[2],[0,I,g[1]],a[7]);var
w=f[1],c=f[1],p=[0,j],ab=Dt(i[2]),ac=c[14],ad=c[13],af=c[12],ag=[3,c[11],j,i],ah=c[10],ai=c[9],aj=c[8],ak=w[7],al=c[7],x=0,am=[0,p,nB(ab,i[3],c,hG,p,i[1])],an=gC(x,function(a){return[0,824627357,a]},j,am,al,ak),ao=c[6],ap=w[5],aq=c[5],ar=[0,p,i],as=gC(x,function(a){return[0,-177755956,a]},j,ar,aq,ap);f[1]=[0,c[1],c[2],c[3],c[4],as,ao,an,aj,ai,ah,ag,af,ad,ac];g[1]++;return 0;case
4:var
q=b[2],m=b[1],J=tb(h,q);a[6]=dK(m[2],[0,J,fa],a[6]);var
e=f[1],K=0,at=e[14],au=e[13],av=e[12],aw=[4,e[11],m,q],ax=e[10],ay=e[9],az=e[8],aA=e[7],aB=f[1][6],aC=e[6],aD=[0,[0,m],q],aE=gC(K,function(a){return[0,448725581,a]},m,aD,aC,aB);f[1]=[0,e[1],e[2],e[3],e[4],e[5],aE,aA,az,ay,ax,aw,av,au,at];return 0;case
5:var
L=b[1],M=s9(h,b[2]);a[8]=dK(L[2],[0,M,g[1]],a[8]);g[1]++;return 0;default:var
N=b[1],O=s_(h,b[2]);a[9]=dK(N[2],[0,O,g[1]],a[9]);return 0}},j,l);return[0,a];case
2:var
m=b[3],n=b[2],o=b[1],p=cf(0,17),q=cf(0,17),r=fU(tl(d,e),m);return[1,[0,o,hA(function(a){return fU(d,a)},n),r,q,p]];default:return[0,[0,cg,cg,cg,cg,cg,cg,cg,cg,cg]]}}function
aCq(b,f,e,a){try{var
c=fQ(b[4],a);return c}catch(c){c=s(c);if(c===x){var
g=kw(b[1],a,hG),d=nB(0,aO,f,hG,[2,e,a],fU(g,b[3]));es(b[4],a,d);return d}throw c}}Eq[1]=nB;Es[1]=aCq;Er[1]=aCo;function
aCr(b,c,a){var
d=a[14],e=a[13],f=a[12],g=[2,a[11],b,c],h=a[10],i=a[9],j=a[8],k=a[7],l=a[6],m=a[5],n=a[4],o=a[3],p=a[2],q=a[2],t=0,r=Eh([0,b],c),s=gC(t,function(a){return[0,O3,a]},b,r,q,p);return[0,a[1],s,o,n,m,l,k,j,i,h,g,f,e,d]}aBO(function(e,b,a){var
c=[0,e],f=Ej(c,b),g=Ek(c,b),d=0,h=B(function(a){return a[2]},g),i=[0,B(function(a){return a[2]},f),h],j=a[14],k=a[13],l=a[12],m=[1,a[11],e,b],n=a[10],o=a[9],p=a[8],q=a[7],r=a[6],s=a[5],t=a[4],u=a[4],v=[0,c,[0,b,i]],w=gC(d,function(a){return[0,afP,a]},e,v,u,t),x=a[3],y=fL(function(b,c){var
e=b[2],f=b[1],g=a[3];return gC(d,function(a){return[0,48004564,a]},f,e,c,g)},g,x),z=a[2],A=fL(function(b,c){var
e=b[2],f=b[1],g=a[2];return gC(d,function(a){return[0,O3,a]},f,e,c,g)},f,z);return[0,a[1],A,y,w,s,r,q,p,o,n,m,l,k,j]},aCr,Ep);function
Ey(d,a){switch(a[0]){case
0:var
h=a[3],i=a[2],j=a[1];return aq(A(d),aCs,iE,h,i,j);case
1:var
k=a[3],l=a[2],n=a[1];return E(A(d),aCt,iE,l,iE,k,n);case
2:var
o=a[2],q=a[1];return p(A(d),aCv,o,q,aCu);case
3:var
s=a[2],t=a[1];return p(A(d),aCx,s,t,aCw);case
4:var
f=a[3],g=a[2];c(A(d),aCy);if(Dw(g,f)){var
u=iI(0,g);b(A(d),aCz,u)}else{var
w=iI(0,f),x=iI(0,g);m(A(d),aCD,x,w)}var
e=f;for(;;)switch(e[0]){case
0:var
v=e[1][2];return p(A(d),aCC,aCB,v,aCA);case
1:var
e=e[1];continue;default:throw[0,r,aAv]}default:var
y=a[2];return b(A(d),aCE,y)}}hB(function(b){if(b[1]===Em){var
a=b[2];if(3<a[0]){var
c=a[1];if(e4(c,aO))return[0,nu(c,Ey,a)]}return[0,sQ(Ey,a)]}return 0});H(0);H(0);var
aCG=[N,aCF,H(0)];function
aCH(c,a){switch(a[0]){case
0:var
d=a[1];return b(A(c),aCI,d);case
1:var
e=a[1];return b(A(c),aCJ,e);case
2:var
f=a[1];return b(A(c),aCK,f);default:var
g=a[1];return b(A(c),aCL,g)}}hB(function(a){return a[1]===aCG?[0,sQ(aCH,a[2])]:0});var
aCN=[N,aCM,H(0)];kj(function(h){if(h[1]===aCN){var
a=h[2];if(typeof
a==="number")var
d=aCO;else
switch(a[0]){case
0:var
i=a[1],d=c(aN(aCQ),i);break;case
1:var
j=a[1],d=c(aN(aCR),j);break;case
2:var
k=a[1],d=c(aN(aCS),k);break;case
3:var
e=a[2],f=a[1];switch(e[0]){case
0:var
l=e[1],g=b(aN(aCT),f,l);break;case
1:var
m=e[1],g=b(aN(aCU),f,m);break;default:var
n=e[1],g=b(aN(aCV),f,n)}var
d=g;break;case
4:var
o=a[1],d=c(aN(aCW),o);break;case
5:var
p=a[1],d=c(aN(aCX),p);break;case
6:var
q=a[1],d=c(aN(aCY),q);break;default:var
r=a[1],d=c(aN(aCZ),r)}return[0,c(aN(aCP),d)]}return 0});Dk(0);bUj(0);var
aC0=aki,aC1=ic,aC2=-1073741823;function
iN(a){if(0<=a){var
b=apy(a);bUq(b,0,a);return b}return Y(aC3)}iN(2);iN(1);iN(2);function
Ez(a){if(0<=a){var
b=iN(1);return 0===a?b:(rF(b,0,a),b)}return Y(aC4)}rF(iN(2),0,V_);Ez(V_);iN(1);Ez(1);function
tn(a){var
b=apy(1);if(a===aki){rF(b,0,ic);bUi(b,0,1,1)}else
rF(b,0,iu(a));var
c=0===a?0:0<a?1:-1;return[0,c,b]}tn(aC0);tn(aC1);tn(aC2);e8(32,at);function
aC5(b){var
a=e8(32,0);dC(a,b>>>3|0,gq(ha(a,b>>>3|0)|1<<(b&7)));return a}var
EA=bX(cX),lh=0;function
aC6(c){var
b=bX(32),a=0;for(;;){dC(b,a,gq(ha(c,a)^at));var
d=a+1|0;if(31!==a){var
a=d;continue}return b}}for(;;){dC(EA,lh,BF(gq(lh)));var
bB7=lh+1|0;if(at!==lh){var
lh=bB7;continue}rO(EA);aC6(aC5(10));var
fV=function(b,a){return c(b,a)},EB=function(b){var
a=dm(b,fM-1|0);return[0,j_(a),a,0]},EC=function(f,b){var
d=b[3]-1|0;if(!(d<0)){var
a=d;for(;;){var
e=d0(b[1],a);if(e)c(f,e[1]);var
g=a-1|0;if(0!==a){var
a=g;continue}break}}return 0},ED=function(a){var
d=[0,0],c=[0,0],e=a[3]-1|0,g=0;if(!(e<0)){var
b=g;for(;;){var
f=d0(a[1],b);if(f){if(d[1])it(a[1],c[1],f);c[1]++}else
d[1]=1;var
h=b+1|0;if(e!==b){var
b=h;continue}break}}a[3]=c[1];return a[3]},EE=function(e,a){for(;;){if(a[3]<a[2]){it(a[1],a[3],[0,e]);a[3]=a[3]+1|0;return 0}var
b=ED(a);if((a[2]/3|0)<=b)if(b<((a[2]*2|0)/3|0))continue;var
c=dm(((b*3|0)/2|0)+2|0,fM-1|0);if(c===b)return aU(aC7);var
d=j_(c);mQ(a[1],0,d,0,a[3]);a[1]=d;a[2]=c;continue}},EF=function(a){for(;;){if(a[3]<=0)throw x;a[3]=a[3]-1|0;var
b=d0(a[1],a[3]);if(b)return b[1];continue}},to=function(i){function
j(c,b){var
a=j_(1);it(a,0,[0,c]);return[0,a,b]}function
k(b){var
a=EB(1);EE(b,a);return a}function
d(a){return k(j(a,0))}function
l(a){a:for(;;)for(;;){if(a[3]<=0)throw x;var
c=d0(a[1],a[3]-1|0);if(c){var
b=c[1],d=d0(b[1],0),e=b[2];if(d)return[0,d[1],e];if(b===EF(a))continue a;throw[0,r,aC8]}a[3]=a[3]-1|0;continue}}function
f(a){return l(a)[1]}function
o(c){var
a=[0,0];EC(function(b){var
c=d0(b[1],0),d=b[2];return c?(a[1]=[0,[0,c[1],d],a[1]],0):0},c);var
b=aj(a[1]);return B(function(a){return a[2]},b)}function
p(a){try{var
b=f(a),d=c(i[2],b);return d}catch(a){a=s(a);if(a===x)return 0;throw a}}var
a=Cm([0,function(c,a){try{var
d=f(a),e=f(c),g=b(i[1],e,d);return g}catch(a){a=s(a);if(a===x)return 0;throw a}},p]),q=a[1],t=a[2];function
u(e,c){try{var
f=d(c),g=o(b(a[6],e,f));return g}catch(a){a=s(a);if(a===x)return 0;throw a}}function
n(e,c){var
f=d(c);return l(b(a[6],e,f))[2]}function
g(e,c,g){var
f=j(c,g);try{var
i=d(c);EE(f,b(a[6],e,i))}catch(c){c=s(c);if(c!==x)throw c;var
h=k(f);b(a[4],e,h)}return bTr(function(a){return 0},c)}function
e(e,c){try{var
f=d(c);EF(b(a[6],e,f));var
g=0;return g}catch(a){a=s(a);if(a===x)return 0;throw a}}function
v(b,a,c){e(b,a);return g(b,a,c)}function
w(b,a){try{n(b,a);var
c=1;return c}catch(a){a=s(a);if(a===x)return 0;throw a}}function
h(d,c){function
e(a){var
c=d0(a[1],0),e=a[2];return c?b(d,c[1],e):0}function
f(a){return EC(e,a)}return b(a[9],f,c)}function
y(d,c,b){var
a=[0,b];h(function(c,b){a[1]=m(d,c,b,a[1]);return 0},c);return a[1]}function
z(b){var
c=0;function
d(a){var
b=ED(a);return function(a){return b+a|0}}return m(a[10],d,b,c)}function
A(d){var
f=((c(a[11],d)*3|0)/2|0)+2|0,e=c(a[1],f);function
g(c){var
d=EB(c[2]);mQ(c[1],0,d[1],0,c[3]);d[3]=c[3];return b(a[4],e,d)}b(a[9],g,d);return e}function
C(a){throw[0,r,aC9]}function
D(a){throw[0,r,aC_]}return[0,q,t,D,A,g,e,n,u,v,w,h,function(f,a){var
c=[0,0];h(function(e,d){var
a=b(f,e,d);if(a)if(a[1]===d)return 0;c[1]=[0,[0,e,a],c[1]];return 0},a);function
d(c){var
d=c[2],b=c[1];if(d){var
f=d[1];e(a,b);return g(a,b,f)}return e(a,b)}return ae(d,c[1])},y,z,C]},tp=to([0,function(b,a){return 0===cJ(b,a)?1:0},kk]),aC$=tp[1],tq=function(a){return c(aC$,a)},EG=function(d,a){return c(b(tp[5],d,a),0)},aDa=function(a){return a[4]},aDb=function(b,a){return b[4]===a[4]?1:0},EH=function(a){return a[5]},EI=function(b,a){return b[5]===a[5]?1:0},kz=Cm([0,EI,EH]),nD=c(kz[1],32),fW=[N,aDc,H(0)],tr=[N,aDd,H(0)],EJ=[0,0],aDf=[N,aDe,H(0)],EK=function(b){var
a=EJ[1];EJ[1]++;return a},ts=function(a,b){var
d=0;return fV(function(e){var
d=a[3];a[3]=function(e){c(b,a);return c(d,0)};return 0},d)},kA=function(a){function
b(a){throw tr}c(a[3],0);a[1]=b;a[2]=b;a[3]=function(a){return 0};return 0},EL=function(a){function
b(a){throw aDf}c(a[4],0);var
e=a[6];function
d(a,b){return EL(a)}c(c(tp[11],d),e);var
f=c(a[3],0);a[1]=b;a[2]=b;a[3]=function(a){return f};a[4]=function(a){return 0};return 0},iO=function(a){EL(a);return c(a[3],0)},tt=function(i,h,g,f){var
a=[],b=tq(2),j=0,d=EK(0);is(a,[0,i,h,function(b){fV(c(kz[5],nD),a);return c(f,0)},g,d,b]);function
e(b){return EG(b[6],a)}fV(function(a){return ae(e,a)},j);fV(c(kz[4],nD),a);return a},EM=function(a){return c(a[1],0)},aDg=function(f,b){if(b<0)Y(aDh);if(0===b)return aDi;var
d=bX(b),c=[0,b],a=[0,0];try{for(;;){if(0<c[1]){var
e=m(f[2],d,a[1],c[1]);if(0===e)throw fW;a[1]=a[1]+e|0;c[1]=c[1]-e|0;continue}return d}}catch(b){b=s(b);if(b===fW){if(0===a[1])throw b;return aD(d,0,a[1])}throw b}},tu=function(i,f,c,a){var
g=C(f)<(c+a|0)?1:0;if(g)var
h=g;else
var
j=c<0?1:0,h=j||(a<0?1:0);if(h)Y(aDj);var
b=[0,a],d=[0,c];for(;;){if(0<b[1]){var
e=m(i[2],f,d[1],b[1]);if(0===e)throw tv;d[1]=d[1]+e|0;b[1]=b[1]-e|0;continue}return a}},kB=function(b,a){return c(b[1],a)},bl=function(e,d){var
b=[0,0],a=[0,C(d)];for(;;){if(0<a[1]){var
c=m(e[2],d,b[1],a[1]);if(0===c)throw tv;b[1]=b[1]+c|0;a[1]=a[1]-c|0;continue}return 0}},iP=function(a){return c(a[4],0)},aDm=function(b){function
a(a){try{var
b=iP(a);return b}catch(a){return 0}}return fV(c(kz[9],a),nD)},aDn=function(e){var
a=0;function
c(b,a){return[0,b,a]}var
d=fV(b(kz[10],c,nD),a);return ae(function(a){try{var
b=iO(a);return b}catch(a){return 0}},d)},aDo=function(e){var
c=[0,0],b=[0,0],f=fE;function
a(d){for(;;){var
a=aDg(e,f);c[1]=[0,[0,a,b[1]],c[1]];b[1]=b[1]+C(a)|0;continue}}try{var
h=a(0);return h}catch(a){a=s(a);if(a!==fW)if(a!==tr)throw a;var
d=bX(b[1]),g=c[1];ae(function(a){var
b=a[1];return da(b,0,d,a[2],C(b))},g);return d}},aDp=16,tw=function(e){var
a=b5(aDp);function
b(b){return b6(a)}function
c(a){return 0}function
d(d,c,b){B3(a,d,c,b);return b}return tt(function(b){return bd(a,b)},d,c,b)},aDq=tq(0),aDr=-1,aDs=function(a){return 0},aDt=function(c,b,a){return 0},aDu=[0,function(a){return 32},aDt,aDs,aDr,aDq],EN=function(e,d,b){var
f=e?e[1]:1,j=d?d[1]:0,c=[0,aDu],k=j?function(a){return j7(b)}:function(a){return 0};function
l(g,e,d){var
a=rJ(b,g,e,d);if(0===a){if(f)kA(c[1]);throw fW}return a}function
m(d){try{var
a=bTS(b);return a}catch(a){a=s(a);if(a===d3){if(f)kA(c[1]);throw fW}throw a}}var
g=tq(2),a=[0,m,l,k,EK(0),g],i=0;function
h(b){return EG(b[5],a)}fV(function(a){return ae(h,a)},i);c[1]=a;return a},EO=function(b,a){var
c=b?b[1]:0,d=c?function(b){return mV(a)}:function(b){return cc(a)};function
e(b){return cc(a)}function
f(d,c,b){var
e=0<=c?0<=b?(C(d)-b|0)<c?0:(bTV(a,d,c,b),1):0:0;if(!e)Y(apJ);return b}return tt(function(b){return rA(a,b)},f,e,d)};H(0);var
EP=EN(0,0,mU),hJ=EO(0,e6),nE=EO(0,cL),aDv=function(a){return 0},aDw=function(a){return 0},aDx=function(c,b,a){return a};tt(function(a){return 0},aDx,aDw,aDv);var
tx=function(a,d){var
b=a[1];a[1]=c(d,b);return b},ty=function(a,b){a[1]=c(b,a[1]);return a[1]},aDy=function(b,a){var
c=b[1];b[1]=a[1];a[1]=c;return 0},aDz=function(a){return ty(a,function(a){return 1+a|0})},aDA=function(a){return ty(a,function(a){return a-1|0})},EQ=function(a){return tx(a,function(a){return 1+a|0})},aDB=function(a){return tx(a,function(a){return a-1|0})},ER=function(a){return[0,a[1]]},aDC=function(a,e,b){var
d=a[1];try{a[1]=e;var
f=c(b,0);a[1]=d;return f}catch(b){b=s(b);a[1]=d;throw b}},aDD=function(d,c,a){return b(d,c,a[1])},aDE=function(a){a[1]=1-a[1];return 0},aDF=function(b,a){b[1]=[0,a];return 0},aDG=function(b){var
a=b[1];if(a)return a[1];throw x},aDH=function(d,c,a){return b(d,c[1],a[1])},aDI=function(d,c,a){return b(d,c[1],a[1])},aDJ=function(d,c,a){return b(d,c[1],a[1])},cn=[N,aDM,H(0)],fX=function(c,b,a){return[0,b,c,a,1]},nF=function(a){throw[0,r,aDN]};H(0);var
ES=function(a){throw cn},ET=function(a){return 0},EU=function(a){return[0,ET,ES,EU,1]},aDO=function(a){a[2]=ES;a[1]=ET;a[3]=EU;return 0},tz=function(a){function
g(d,c){var
a=[0,d[1]],b=[0,c[1]],e=1;function
f(c){return g([0,a[1]],[0,b[1]])}function
h(f){var
c=a[1];if(c){var
d=c[2],e=c[1];b[1]+=-1;a[1]=d;return e}throw cn}return[0,function(a){return b[1]},h,f,e]}var
b=[0,0],d=0,e=[0,d];function
h(g){var
e=g;for(;;){var
f=[0,c(a[2],0),d];b[1]++;e[2]=f;var
e=f;continue}}try{e[1]=[0,c(a[2],0),d];b[1]++;h(e[1])}catch(a){a=s(a);if(a!==cn)throw a}var
f=g(e,b);a[3]=f[3];a[2]=f[2];a[1]=f[1];a[4]=1;return 0},tA=function(a){try{var
b=[0,c(a[2],0)];return b}catch(a){a=s(a);if(a===cn)return 0;throw a}},tB=function(a){return c(a[1],0)},EV=function(b,a){function
d(d){for(;;){c(b,c(a[2],0));continue}}try{var
e=d(0);return e}catch(a){a=s(a);if(a===cn)return 0;throw a}},aDP=function(e,d){function
a(f){var
a=f;for(;;){b(e,a,c(d[2],0));var
a=a+1|0;continue}}try{var
f=a(0);return f}catch(a){a=s(a);if(a===cn)return 0;throw a}},EW=function(f,e,a){var
d=[0,e];function
g(g){for(;;){var
e=c(a[2],0);d[1]=b(f,d[1],e);continue}}try{var
h=g(0);return h}catch(a){a=s(a);if(a===cn)return d[1];throw a}},kC=function(b,a){var
d=a[4];function
e(d){return kC(b,c(a[3],0))}function
f(d){return c(b,c(a[2],0))}return[0,a[1],f,e,d]},EX=function(g,e,d){var
b=[0,g];function
f(f){if(c(d,b[1])){var
a=b[1];b[1]=c(e,b[1]);return a}throw cn}var
a=[0,nF,nF,nF,0];a[2]=function(c){try{var
b=f(0);return b}catch(b){b=s(b);if(b===cn){aDO(a);throw cn}throw b}};a[1]=function(b){tz(a);return c(a[1],0)};a[3]=function(h){function
e(a){return[J,function(d){try{var
c=[0,f(0)],b=c}catch(a){a=s(a);if(a!==cn)throw a;var
b=0}if(b){var
a=b[1];return[0,a,e(0)]}return 0}]}var
g=e(0);function
d(e){var
b=[0,e];function
f(a){return d(b[1])}var
a=fX(function(f){var
a=b[1],d=bi(a),c=bu===d?a[1]:J===d?cd(a):a;if(c){var
e=c[1];b[1]=c[2];return e}throw cn},nF,f);a[1]=function(b){tz(a);return c(a[1],0)};a[4]=0;return a}var
b=d(g);a[2]=b[2];a[3]=b[3];a[1]=function(b){tz(a);return c(a[1],0)};a[4]=b[4];return c(a[3],0)};return a},nG=function(k,j,i,h,a,g){var
m=k?k[1]:aDT,d=j?j[1]:aDS,n=i?i[1]:aDR;bl(a,m);var
e=tA(g);if(e){b(h,a,e[1]);var
c=2147483646;for(;;){var
f=tA(g);if(f){var
l=f[1];if(0===c){bl(a,aDQ);return bl(a,d)}bl(a,n);b(h,a,l);var
c=c-1|0;continue}return bl(a,d)}}return bl(a,d)},EY=function
b(a){return b.fun(a)},tC=[0,0,0,0];is(EY,function(e){if(!tC[1]){var
a=a4(aDK),b=ds(a,aDU),d=hv(a,aDL),f=d[1],g=d[2],h=d[3],i=function(a){return c(EY,c(a[b+1][1][3],0))},j=function(a){return tB(a[b+1][1])};cm(a,[0,f,function(a){return c(a[b+1][1][2],0)},g,j,h,i]);var
k=function(d){var
c=aR(0,a);c[b+1]=d;return c};a5(a);tC[1]=k}return c(tC[1],[0,e])});var
aDV=function(a){var
b=14<=a?26===a?1:32===a?1:0:11===a?0:9<=a?1:0;return b?1:0},EZ=function(a){var
b=65<=a?1:0,c=b?a<=90?1:0:b;return c},aDW=function(a){var
c=EZ(a);if(c)return c;var
b=97<=a?1:0,d=b?a<=fD?1:0:b;return d},iQ=function(c,b){var
d=C(b);if(C(c)<d)return 0;var
a=0;for(;;){if(a===d)return 1;if(aQ(c,a)!==aQ(b,a))return 0;var
a=a+1|0;continue}},tD=function(c,f){var
g=C(c),e=C(f),h=0;if(g<0)throw[0,ct,aDX];if(0===e)var
d=h;else{var
a=h;a:for(;;){if((g-e|0)<a)throw x;var
b=0;for(;;){if(b!==e){if(aQ(c,a+b|0)!==aQ(f,b)){var
a=a+1|0;continue a}var
b=b+1|0;continue}var
d=a;break}break}}var
i=C(f),j=aD(c,d+i|0,(C(c)-d|0)-i|0);return[0,aD(c,0,d),j]},aDZ=1,E0=function(a){return dG(aDZ,a)},aD0=function(e,c){var
d=C(c)-1|0,f=0;if(!(d<0)){var
a=f;for(;;){b(e,a,I(c,a));var
g=a+1|0;if(d!==a){var
a=g;continue}break}}return 0},E1=function(b){return 0<=b?b:aU(t(aD1,a(q+b)))},E2=function(b,a){return E1(b+a|0)},aD2=1,E3=function(a){return E2(aD2,a)},kD=function(a){return C(a[2])},kE=function(b,a){return I(b[2],a)},hK=function(b,a){return aQ(b[2],a)},E4=function(a){var
b=kD(a);return aD(a[2],0,b)},E5=function(d,c,b){var
e=t(aD5,t(a(q+c),t(aD4,t(d,aD3))));return Y(t(aD6,t(dG(1,b),e)))},tE=function(c,b,a){return E5(E4(c),b,a)},nH=function(a){return Y(t(aD8,t(E4(a),aD7)))},aD9=function(b){function
a(f,e){var
c=f,a=e;for(;;){if(C(b)<=a)return[0,0,c];var
d=aQ(b,a);if(49<=d){if(!(58<=d))return[0,dk(aD(b,a,(C(b)-a|0)-1|0)),c]}else
if(45===d){var
c=1,a=a+1|0;continue}var
a=a+1|0;continue}}try{var
c=a(0,1);return c}catch(a){a=s(a);if(a[1]===bz)return E5(b,0,e1);throw a}},iR=function(j,i,e,h){var
f=i+1|0,c=b5((e-f|0)+10|0);bd(c,37);var
b=f,d=aj(h);for(;;){if(b<=e){var
g=hK(j,b);if(42===g){if(d){var
k=d[2];dH(c,a(q+d[1]));var
b=b+1|0,d=k;continue}throw[0,r,aD_]}bd(c,g);var
b=b+1|0;continue}return b6(c)}},E6=function(b,f,e,d,c){var
a=iR(f,e,d,c);if(78!==b)if(fn!==b)return a;dC(a,C(a)-1|0,im);return a},E7=function(a){return function(b,c){var
h=kD(b);function
i(l,j){var
m=40===l?41:cW,a=j;for(;;){if(h<=a)return nH(b);if(37===kE(b,a)){var
c=a+1|0;if(h<=c)return nH(b);var
d=kE(b,c),f=d-40|0;if(1<f>>>0){var
k=f-83|0;if(2<k>>>0)var
e=1;else
switch(k){case
0:var
g=0,e=0;break;case
1:var
e=1;break;default:var
g=1,e=0}if(e){var
a=c+1|0;continue}}else
var
g=0===f?0:1;if(g)return d===m?c+1|0:tE(b,j,d);var
a=i(d,c+1|0)+1|0;continue}var
a=a+1|0;continue}}return i(a,c)}},E8=function(h,f,p){var
k=kD(h)-1|0;function
q(v){var
j=v;a:for(;;){if(j<k){if(37===kE(h,j)){var
d=0,g=j+1|0;for(;;){if(k<g)var
c=nH(h);else{var
l=hK(h,g);if(58<=l){if(95===l){var
d=1,g=g+1|0;continue}}else
if(32<=l)switch(l+ie|0){case
10:var
g=m(f,d,g,di);continue;case
0:case
3:case
11:case
13:var
g=g+1|0;continue;case
1:case
2:case
4:case
5:case
6:case
7:case
8:case
9:case
12:case
15:break;default:var
g=g+1|0;continue}var
a=g;b:for(;;){if(k<a)var
c=nH(h);else{var
i=hK(h,a);if(dW<=i)var
e=0;else
switch(i){case
40:var
c=q(m(f,d,a,i)),e=1;break;case
123:var
t=m(f,d,a,i),u=b(E7(i),h,t),n=t;for(;;){if(n<(u-2|0)){var
n=b(p,n,kE(h,n));continue}var
a=u-1|0;continue b}case
67:case
99:var
c=m(f,d,a,99),e=1;break;case
66:case
98:var
c=m(f,d,a,66),e=1;break;case
41:case
125:var
c=m(f,d,a,i),e=1;break;case
33:case
37:case
44:var
c=a+1|0,e=1;break;case
83:case
91:case
115:var
c=m(f,d,a,e1),e=1;break;case
97:case
114:case
116:var
c=m(f,d,a,i),e=1;break;case
76:case
108:case
110:var
r=a+1|0;if(k<r)var
c=m(f,d,a,di),e=1;else{var
s=kE(h,r)+jL|0;if(32<s>>>0)var
o=1;else
switch(s){case
0:case
12:case
17:case
23:case
29:case
32:var
c=b(p,m(f,d,a,i),di),e=1,o=0;break;default:var
o=1}if(o)var
c=m(f,d,a,di),e=1}break;case
69:case
70:case
71:case
101:case
102:case
103:var
c=m(f,d,a,h_),e=1;break;case
78:case
88:case
100:case
105:case
111:case
117:case
120:var
c=m(f,d,a,di),e=1;break;default:var
e=0}if(!e)var
c=tE(h,a,i)}break}}var
j=c;continue a}}var
j=j+1|0;continue}return j}}q(0);return 0},E9=function(c){var
a=[0,0,0,0];function
b(f,e,b){var
d=41!==b?1:0,g=d?cW!==b?1:0:d;if(g){var
c=97===b?2:1;if(jt===b)a[3]=a[3]+1|0;if(f)a[2]=a[2]+c|0;else
a[1]=a[1]+c|0}return e+1|0}E8(c,b,function(a,b){return a+1|0});return(a[1]+a[2]|0)+a[3]|0},dO=function(a){return E3(a)},Fb=function(f,o,a){function
at(aK,a,h,au){var
aL=kD(h);function
l(d,aN,aM){var
i=aM;for(;;){if(aL<=i)return c(aK,o);var
aw=hK(h,i);if(37===aw){var
g=function(a){return z(au,a)[a+1]},a=aN,j=0,e=i+1|0;for(;;){var
H=hK(h,e)+ie|0;if(!(25<H>>>0))switch(H){case
10:var
az=[0,g(a),j],a=dO(a),j=az,e=e+1|0;continue;case
1:case
2:case
4:case
5:case
6:case
7:case
8:case
9:case
12:case
15:break;default:var
e=e+1|0;continue}var
k=hK(h,e);if(!(ep<=k))switch(k){case
33:var
I=e+1|0;iP(o);return d<50?l(d+1|0,a,I):ai(l,[0,a,I]);case
37:var
J=e+1|0;return d<50?f(d+1|0,a,E_,J):ai(f,[0,a,E_,J]);case
41:var
M=e+1|0;return d<50?f(d+1|0,a,E$,M):ai(f,[0,a,E$,M]);case
44:var
N=e+1|0;return d<50?f(d+1|0,a,Fa,N):ai(f,[0,a,Fa,N]);case
70:var
Y=e+1|0,Z=mT(g(a)),_=dO(a);return d<50?f(d+1|0,_,Z,Y):ai(f,[0,_,Z,Y]);case
97:var
aH=g(a),ao=E3(a),ap=e+1|0,aI=g(ao),aq=dO(ao);b(aH,o,aI);return d<50?l(d+1|0,aq,ap):ai(l,[0,aq,ap]);case
116:var
ar=e+1|0,aJ=g(a),as=dO(a);c(aJ,o);return d<50?l(d+1|0,as,ar):ai(l,[0,as,ar]);case
83:case
115:var
al=g(a),n=e1===k?al:t(aEd,t(gr(al),aEc));if(e===(i+1|0))var
A=n;else{var
E=aD9(iR(h,i,e,j)),p=E[1],m=C(n),ax=E[2],v=0,ay=32;if(p===m)var
w=n;else
if(p<=m)var
w=aD(n,v,m);else{var
u=dG(p,ay);if(ax)dF(n,v,u,0,m);else
dF(n,v,u,p-m|0,m);var
w=u}var
A=w}var
am=e+1|0,an=dO(a);return d<50?f(d+1|0,an,A,am):ai(f,[0,an,A,am]);case
67:case
99:var
R=g(a),S=99===k?dG(1,R):t(aEb,t(mY(R),aEa)),T=e+1|0,U=dO(a);return d<50?f(d+1|0,U,S,T):ai(f,[0,U,S,T]);case
66:case
98:var
O=e+1|0,P=Bx(g(a)),Q=dO(a);return d<50?f(d+1|0,Q,P,O):ai(f,[0,Q,P,O]);case
40:case
123:var
r=g(a),x=b(E7(k),h,e+1|0);if(ck===k){var
q=b5(kD(r)),F=function(b,a){bd(q,a);return b+1|0};E8(r,function(c,b,a){if(c)dH(q,aD$);else
bd(q,37);return F(b,a)},F);var
G=b6(q),K=dO(a);return d<50?f(d+1|0,K,G,x):ai(f,[0,K,G,x])}var
L=dO(a),aO=E2(E9(r),L);return at(function(a){return av(aO,x)},L,r,au);case
76:case
108:case
110:var
$=hK(h,e+1|0)+jL|0;if(!(32<$>>>0))switch($){case
0:case
12:case
17:case
23:case
29:case
32:var
s=e+1|0,ad=k+AY|0;if(2<ad>>>0)var
B=0;else{switch(ad){case
0:var
aE=g(a),ag=fG(iR(h,i,s,j),aE),D=1;break;case
1:var
B=0,D=0;break;default:var
aF=g(a),ag=fG(iR(h,i,s,j),aF),D=1}if(D)var
y=ag,B=1}if(!B)var
aC=g(a),y=Be(iR(h,i,s,j),aC);var
ae=s+1|0,af=dO(a);return d<50?f(d+1|0,af,y,ae):ai(f,[0,af,y,ae])}var
aB=g(a),aa=fG(E6(fn,h,i,e,j),aB),ab=e+1|0,ac=dO(a);return d<50?f(d+1|0,ac,aa,ab):ai(f,[0,ac,aa,ab]);case
69:case
71:case
101:case
102:case
103:var
aA=g(a),V=Ba(iR(h,i,e,j),aA),W=e+1|0,X=dO(a);return d<50?f(d+1|0,X,V,W):ai(f,[0,X,V,W]);case
78:case
88:case
100:case
105:case
111:case
117:case
120:var
aG=g(a),ah=fG(E6(k,h,i,e,j),aG),aj=e+1|0,ak=dO(a);return d<50?f(d+1|0,ak,ah,aj):ai(f,[0,ak,ah,aj])}return tE(h,e,k)}}kB(o,aw);var
i=i+1|0;continue}}function
f(c,b,d,a){bl(o,d);return c<50?l(c+1|0,b,a):ai(l,[0,b,a])}function
av(a,b){return dE(l(0,a,b))}return av(a,0)}var
g=E1(0);function
d(a,b){return at(f,g,a,b)}var
e=E9(a);if(6<e>>>0){var
h=function(j,i){if(e<=j){var
k=a_(e,0),l=function(c,b){var
a=(e-c|0)-1|0;return z(k,a)[a+1]=b},c=0,b=i;for(;;){if(b){var
f=b[2],g=b[1];if(f){l(c,g);var
c=c+1|0,b=f;continue}l(c,g)}return d(a,k)}}return function(a){return h(j+1|0,[0,a,i])}};return h(0,0)}switch(e){case
0:return d(a,[0]);case
1:return function(c){var
b=a_(1,0);z(b,0)[1]=c;return d(a,b)};case
2:return function(e,c){var
b=a_(2,0);z(b,0)[1]=e;z(b,1)[2]=c;return d(a,b)};case
3:return function(f,e,c){var
b=a_(3,0);z(b,0)[1]=f;z(b,1)[2]=e;z(b,2)[3]=c;return d(a,b)};case
4:return function(g,f,e,c){var
b=a_(4,0);z(b,0)[1]=g;z(b,1)[2]=f;z(b,2)[3]=e;z(b,3)[4]=c;return d(a,b)};case
5:return function(h,g,f,e,c){var
b=a_(5,0);z(b,0)[1]=h;z(b,1)[2]=g;z(b,2)[3]=f;z(b,3)[4]=e;z(b,4)[5]=c;return d(a,b)};default:return function(i,h,g,f,e,c){var
b=a_(6,0);z(b,0)[1]=i;z(b,1)[2]=h;z(b,2)[3]=g;z(b,3)[4]=f;z(b,4)[5]=e;z(b,5)[6]=c;return d(a,b)}}},ag=function(b,a){return Fb(function(a){return 0},b,a)},Fc=function(b,a){var
d=tw(0);return Fb(function(a){return c(b,iO(a))},d,a)},bT=function(a){return Fc(function(a){return a},a)};H(0);var
aEe=function(b,a){return a?a[1]:b},Fd=function(a){return a?1:0},iS=function(a){var
b=[0,ct,aEf];if(a)return a[1];throw b},Fe=function(a,b){return a?c(b,a[1]):0},aEi=function(b,a){try{var
d=[0,c(b,a)];return d}catch(a){a=s(a);return[1,a]}},nI=function(d,b,a){return c(d,c(b,a))},tF=b5(8);kc(cX,function(c){var
a=[0,c];B2(tF);var
b=1;for(;;){var
d=1===(a[1]&1)?49:48;bd(tF,d);a[1]=a[1]>>>1|0;var
e=b+1|0;if(8!==b){var
b=e;continue}return b6(tF)}});var
Ff=function(a){return 0===a?0:Ff(a/2|0)+(a%2|0)|0};kc(cX,Ff);kc(cX,function(f){var
b=a_(8,-1),d=-1,a=7,c=f;for(;;){if(0<=a){var
e=0===(c&a2)?d:a;z(b,a)[a+1]=e;var
d=e,a=a-1|0;c<<=1;continue}return b}});var
Fg=to([0,aDb,aDa]),Fh=to([0,EI,EH]),aEj=c(Fg[1],16),aEk=c(Fh[1],16),aEl=function(c,a){return fV(b(Fg[5],aEj,c),a)},Fi=function(c,a){return fV(b(Fh[5],aEk,c),a)};aEl(EP,mU);Fi(hJ,e6);Fi(nE,cL);H(0);no(aEo,function(a){var
b=ds(a,aEq),c=hv(a,aEn),d=c[1],e=c[2];function
f(a,c){return kA(a[b+1])}cm(a,[0,d,function(h,f,c,a){var
d=C(f)<(c+a|0)?1:0,i=h[b+1];if(d)var
e=d;else
var
g=c<0?1:0,e=g||(a<0?1:0);if(e)Y(aDk);return 0===a?0:m(i[2],f,c,a)},e,f]);return function(f,e,d){var
c=aR(e,a);c[b+1]=d;return c}});no(aEm,function(a){var
b=ds(a,aEr),c=hv(a,aEp),d=c[1],e=c[2],f=c[3];function
g(a,c){iO(a[b+1]);return 0}function
h(a,c){return iP(a[b+1])}cm(a,[0,d,function(h,f,c,a){var
d=C(f)<(c+a|0)?1:0,i=h[b+1];if(d)var
e=d;else
var
g=c<0?1:0,e=g||(a<0?1:0);if(e)Y(aDl);return m(i[2],f,c,a)},e,h,f,g]);return function(f,e,d){var
c=aR(e,a);c[b+1]=d;return c}});no(Fj,function(a){var
b=ds(a,aEs),c=hv(a,Fj),d=c[1],e=c[2];function
f(a,c){return kA(a[b+1])}cm(a,[0,d,function(a,d){try{var
c=EM(a[b+1]);return c}catch(a){a=s(a);if(a===fW)throw d3;throw a}},e,f]);return function(f,e,d){var
c=aR(e,a);c[b+1]=d;return c}});no(Fk,function(a){var
b=ds(a,aEt),c=hv(a,Fk),d=c[1],e=c[2],f=c[3];function
g(a,c){iO(a[b+1]);return 0}function
h(a,c){return iP(a[b+1])}cm(a,[0,d,function(c,a){return kB(c[b+1],a)},e,h,f,g]);return function(f,e,d){var
c=aR(e,a);c[b+1]=d;return c}});var
nJ=function(a){var
s=a[1],t=a[2],u=a[3],v=a[4],w=a[5],x=a[6],y=a[7],z=a[8],A=a[9],B=a[10],C=a[11],D=a[12],E=a[13],F=a[14],G=a[15],H=a[16],I=a[17],J=a[18],K=a[19],L=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]];function
M(d,c){return 0===b(a[13],d,c)?1:0}function
N(e,d){var
c=b(a[13],e,d);return 0<=c?0<c?2:1:0}var
d=a[12],f=a[10],g=a[9],h=a[8],i=a[7];function
e(d,c){function
e(d){return b(a[13],d,c)<=0?1:0}return EX(d,a[4],e)}var
c=[0,i,h,g,f,d,e,function(d,c){if(0<b(a[13],d,c)){var
f=function(d){return 0<=b(a[13],d,c)?1:0};return EX(d,a[5],f)}return e(d,c)}];function
j(d,c){return 0===b(a[13],d,c)?1:0}function
k(d,c){return b(a[13],d,c)<0?1:0}function
l(d,c){return 0<b(a[13],d,c)?1:0}function
m(d,c){return b(a[13],d,c)<=0?1:0}function
n(d,c){return 0<=b(a[13],d,c)?1:0}var
o=[0,function(d,c){return 0!==b(a[13],d,c)?1:0},n,m,l,k,j],O=c[1],P=c[2],Q=c[3],R=c[4],S=c[5],T=c[6],U=c[7];function
p(c,d){c[1]=b(a[7],c[1],d);return 0}function
q(c,d){c[1]=b(a[8],c[1],d);return 0}function
r(c,d){c[1]=b(a[9],c[1],d);return 0}return[0,s,t,u,x,y,z,A,B,C,D,E,M,N,F,G,J,K,H,I,L,v,w,c,o,O,P,Q,R,S,T,U,p,q,r,function(c,d){c[1]=b(a[10],c[1],d);return 0}]},tG=function(g,d,k,j,f){function
h(e,a){if(bP(a,g))return d;if(bP(a,d))return e;var
i=h(e,c(k,a)),l=bP(c(j,a),g)?d:e;return b(f,b(f,i,i),l)}return h},aEv=[N,aEu,H(0)],aEx=[N,aEw,H(0)],nK=function(b,a){return a<b?1:b<a?-1:0},Fl=function(b,a){return b<a?b:a},aEy=1,aEz=0,aEA=function(a){return-a},aEB=function(a){return a+1},aEC=function(a){return a-1},aED=function(a){return Math.abs(a)},aEE=function(b,a){return b/a},aEF=function(b,a){return b*a},aEG=function(b,a){return b-a},aEH=function(b,a){return b+a},aEI=function(b,a){return b%a},aEJ=function(b,a){return Math.pow(b,a)},aEK=cJ,aEL=function(a){return a},aEM=function(a){return a|0},aEN=j6,aEO=function(a){return a},Fm=nJ([0,aEz,aEy,aEA,aEB,aEC,aED,aEH,aEG,aEF,aEE,aEI,aEJ,aEK,aEL,aEM,aEN,mT,function(a){return a},aEO])[11];(function(c){var
b=Math.atan(c),a=A_(b);if(3===a)throw aEv;if(4<=a)throw aEx;return b}(1));var
aEP=hd,aEQ=function(b,a){return go(b,a)},aER=function(a){return 1&a},aES=tG(BP,BQ,function(a){return a>>1},aER,aEQ),aET=function(a){return a},aEU=function(a){return a|0},aEV=dk,aEW=function(a){return a},aEX=function(a){return a},aEY=ru,aEZ=function(b,a){return go(b,a)},aE0=function(b,a){return b-a|0},aE1=function(b,a){return b+a|0},Fn=nJ([0,BP,BQ,function(a){return-a|0},aql,aqm,aqn,aE1,aE0,aEZ,aEY,aEP,aES,aqq,aEX,aEW,aEV,aqo,aEU,aET])[11],aE2=bTI,aE3=Bg,aE4=function(a){return bTD(rV,a)},Fo=nJ([0,BR,rV,e3,aqr,aqt,aqv,Bd,Bi,Bg,bTE,aE2,tG(BR,rV,function(a){return bTK(a,1)},aE4,aE3),aqz,mL,api,Bh,aqx,bTJ,bTL])[11],aE5=hd,aE6=function(b,a){return go(b,a)},aE7=function(a){return 1&a},aE8=tG(BS,BT,function(a){return a>>1},aE7,aE6),aE9=function(a){return a},aE_=function(a){return a|0},aE$=dk,aFa=function(a){return a},aFb=function(a){return a},aFc=ru,aFd=function(b,a){return go(b,a)},aFe=function(b,a){return b-a|0},aFf=function(b,a){return b+a|0},Fp=nJ([0,BS,BT,function(a){return-a|0},aqA,aqB,aqC,aFf,aFe,aFd,aFc,aE5,aE8,aqF,aFb,aFa,aE$,aqD,aE_,aE9])[11],hL=function(a){return a?a[5]:0},iT=0,eB=function(b,f,e,a){var
c=hL(b),d=hL(a),g=d<=c?c+1|0:d+1|0;return[0,b,f,e,a,g]},co=function(b,f,e,a){var
g=b?b[5]:0,h=a?a[5]:0;if((h+2|0)<g){if(b){var
c=b[4],k=b[3],l=b[2],i=b[1],o=hL(c);if(o<=hL(i))return eB(i,l,k,eB(c,f,e,a));if(c){var
p=c[3],q=c[2],r=c[1],s=eB(c[4],f,e,a);return eB(eB(i,l,k,r),q,p,s)}return Y(aFg)}return Y(aFh)}if((g+2|0)<h){if(a){var
j=a[4],m=a[3],n=a[2],d=a[1],t=hL(d);if(t<=hL(j))return eB(eB(b,f,e,d),n,m,j);if(d){var
u=d[3],v=d[2],w=d[1],x=eB(d[4],n,m,j);return eB(eB(b,f,e,w),v,u,x)}return Y(aFi)}return Y(aFj)}var
y=h<=g?g+1|0:h+1|0;return[0,b,f,e,a,y]},nL=function(c){var
a=c;for(;;){if(a){var
b=a[1];if(b){var
a=b;continue}return[0,a[2],a[3]]}throw x}},Fq=function(a){if(a)return[0,a[2],a[3]];throw x},tH=function(a){if(a){var
b=a[1];if(b){var
c=a[4],d=a[3],e=a[2];return co(tH(b),e,d,c)}return a[4]}return Y(aFn)},nM=function(b,a){if(b){if(a){var
c=nL(a),d=c[2],e=c[1];return co(b,e,d,tH(a))}return b}return a},hM=function(c,h,k,a){function
d(a){if(a){var
e=a[4],i=a[3],f=a[2],g=a[1],l=a[5],j=b(k,c,f);return 0===j?[0,g,c,h,e,l]:0<=j?co(g,f,i,d(e)):co(d(g),f,i,e)}return[0,0,c,h,0,1]}return d(a)},aFo=function(f,e,d){var
a=d;for(;;){if(a){var
g=a[4],h=a[3],i=a[1],c=b(e,f,a[2]);if(0<=c){if(0<c){var
a=g;continue}return h}var
a=i;continue}throw x}},aFp=function(d,c,b,a){try{var
e=aFo(c,b,a);return e}catch(a){a=s(a);if(a===x)return d;throw a}},tI=function(d,b,a){function
c(f,e){var
b=f,a=e;for(;;){if(a){var
g=a[4],h=a[3],i=a[2],b=m(d,i,h,c(b,a[1])),a=g;continue}return b}}return c(a,b)};H(0);var
tJ=function(b,a){return[0,0,b,a,0,1]},Fr=function(c,b,a){if(a){var
d=a[4],e=a[3],f=a[2];return co(Fr(c,b,a[1]),f,e,d)}return tJ(c,b)},Fs=function(c,b,a){if(a){var
d=a[3],e=a[2],f=a[1];return co(f,e,d,Fs(c,b,a[4]))}return tJ(c,b)},iU=function(b,d,c,a){if(b){if(a){var
e=a[5],f=b[5],g=a[4],h=a[3],i=a[2],j=a[1],k=b[4],l=b[3],m=b[2],n=b[1];return(e+2|0)<f?co(n,m,l,iU(k,d,c,a)):(f+2|0)<e?co(iU(b,d,c,j),i,h,g):eB(b,d,c,a)}return Fs(d,c,b)}return Fr(d,c,a)},kF=function(d,c,a){if(a){var
e=a[4],f=a[3],g=a[2],h=a[1],k=b(c,d,g);if(0===k)return[0,h,[0,f],e];if(0<=k){var
i=kF(d,c,e),l=i[3],m=i[2];return[0,iU(h,g,f,i[1]),m,l]}var
j=kF(d,c,h),n=j[2],o=j[1];return[0,o,n,iU(j[3],g,f,e)]}return aFq},Ft=function(a){function
c(e,d){var
b=e,a=d;for(;;){if(a){var
f=a[1],b=c(b+1|0,a[4]),a=f;continue}return b}}return c(0,a)},Fu=function(d,c){var
b=d,a=c;for(;;){if(a){var
e=a[3],f=a[2],g=a[1],b=[0,[0,f,e],Fu(b,a[4])],a=g;continue}return b}},Fv=function(d,c){var
a=d,b=c;for(;;){if(a){var
e=[0,a[2],a[3],a[4],b],a=a[1],b=e;continue}return b}},Fw=function(d,c){var
a=d,b=c;for(;;){if(a){var
e=[0,a[2],a[3],a[1],b],a=a[4],b=e;continue}return b}},Fx=function(c,e){var
b=0,a=c[1];for(;;){if(a){var
d=a[4],b=(b+1|0)+Ft(a[3])|0,a=d;continue}return b}},nN=function(b){function
a(c){var
b=[0,c];function
d(c){return a(b[1])}function
e(a){return Fx(b,a)}return fX(function(e){var
a=b[1];if(a){var
c=a[2],d=a[1];b[1]=Fv(a[3],a[4]);return[0,d,c]}throw cn},e,d)}return a(Fv(b,0))},aFw=function(f,j,n,d){function
g(a){if(a){var
d=a[4],h=a[3],i=a[2],e=a[1],o=a[5],k=b(n,f,i);if(0===k){var
l=c(j,[0,h]);return l?[0,e,f,l[1],d,o]:nM(e,d)}return 0<=k?co(e,i,h,g(d)):co(g(e),i,h,d)}var
m=c(j,0);if(m)return[0,0,f,m[1],0,1];throw mS}try{var
a=g(d);return a}catch(a){a=s(a);if(a===mS)return d;throw a}},Fy=function(b,g,d,a){if(d)return iU(b,g,d[1],a);if(b){if(a){var
c=nL(a),e=c[2],f=c[1];return iU(b,f,e,tH(a))}return b}return a},gE=function(a){var
d=hl(a),e=d[4],g=d[9],h=d[10],i=d[11],j=d[12],f=d[23],t=d[1],u=d[2],v=d[3],w=d[6],y=d[8];function
z(a){return Ft(a)}function
A(a){return nN(a)}function
B(b){function
a(c){var
b=[0,c];function
d(c){return a(b[1])}function
e(a){return Fx(b,a)}return fX(function(e){var
a=b[1];if(a){var
c=a[2],d=a[1];b[1]=Fw(a[3],a[4]);return[0,d,c]}throw cn},e,d)}return a(Fw(b,0))}function
C(b){var
a=nN(b);return kC(function(a){return a[1]},a)}function
D(b){var
a=nN(b);return kC(function(a){return a[2]},a)}function
E(j,i,m,f){var
c=a[1];if(0===b(c,j,i)){var
e=function(a){if(a){var
d=a[5],f=a[4],k=a[3],g=a[2],h=a[1],l=b(c,g,j);return 0===l?[0,h,i,m,f,d]:0<=l?[0,h,g,k,e(f),d]:[0,e(h),g,k,f,d]}throw x};return e(f)}function
d(a){if(a){var
e=a[4],h=a[3],f=a[2],g=a[1],i=b(c,j,f);return 0===i?nM(g,e):0<=i?co(g,f,h,d(e)):co(d(g),f,h,e)}return 0}return hM(i,m,c,d(f))}function
F(d,c,b){return aFp(d,c,a[1],b)}function
G(b){var
c=a[1];return EW(function(b,a){return hM(a[1],a[2],c,b)},iT,b)}function
k(j,a){function
c(a){if(a){var
d=a[2],e=a[5],f=a[4],g=a[3],h=c(a[1]),i=b(j,d,g);return[0,h,d,i,c(f),e]}return 0}return c(a)}function
l(j,a){function
b(a){if(a){var
d=a[5],e=a[4],f=a[3],g=a[2],h=b(a[1]),i=c(j,f);return[0,h,g,i,b(e),d]}return 0}return b(a)}function
H(d,c,b,a,m,l,k,j){var
e=d?d[1]:aFv,f=c?c[1]:aFu,g=b?b[1]:aFt,h=a?a[1]:aFs,i=nN(j);return nG([0,e],[0,f],[0,g],function(b,a){var
c=a[2],d=a[1];return aq(ag(b,aFr),m,d,h,l,c)},k,i)}function
n(e,b){var
f=a[1];return tI(function(d,b,a){return c(e,b)?hM(d,b,f,a):a},b,iT)}function
o(e,c){var
f=a[1];return tI(function(d,c,a){return b(e,d,c)?hM(d,c,f,a):a},c,iT)}function
I(f,c){var
g=a[1];return tI(function(c,e,a){var
d=b(f,c,e);return d?hM(c,d[1],g,a):a},c,iT)}function
J(j,a){function
c(g){var
a=g;for(;;){if(a){var
h=a[4],i=a[1],d=b(j,a[2],a[3]);if(d)var
e=d;else{var
f=c(i);if(!f){var
a=h;continue}var
e=f}return e}return 0}}return c(a)}function
K(j,a){function
c(g){var
a=g;for(;;){if(a){var
h=a[4],i=a[1],d=b(j,a[2],a[3]);if(d){var
e=c(i);if(e){var
a=h;continue}var
f=e}else
var
f=d;return f}return 1}}return c(a)}function
L(a){return nL(a)}function
M(a){var
b=[0,Fq(a)];function
c(a){if(a){var
d=a[1];if(d){var
e=a[4],f=a[3],g=a[2];return co(c(d),g,f,e)}var
h=a[4];b[1]=[0,a[2],a[3]];return h}throw[0,r,aFk]}var
d=c(a);return[0,b[1],d]}function
N(e){var
a=e;for(;;){if(a){var
b=a[4],c=a[3],d=a[2];if(b){var
a=b;continue}return[0,d,c]}return Y(aFl)}}function
O(a){var
b=[0,Fq(a)];function
c(a){if(a){var
d=a[4],e=a[3],f=a[2],g=a[1];return d?co(g,f,e,c(d)):(b[1]=[0,f,e],g)}throw[0,r,aFm]}var
d=c(a);return[0,b[1],d]}function
p(a){return nL(a)}function
q(a){if(a)return[0,a[2],a[3]];throw x}function
P(d,c){var
b=kF(d,a[1],c);return[0,b[1],b[2],b[3]]}function
Q(n,e){var
l=a[1];function
c(g,f,a){if(a){var
d=a[3],e=a[2],m=a[4],h=c(g,f,a[1]),i=c(h[1],h[2],m),j=i[2],k=i[1];return b(n,e,d)?[0,hM(e,d,l,k),j]:[0,k,hM(e,d,l,j)]}return[0,g,f]}var
d=c(iT,iT,e);return[0,d[1],d[2]]}function
R(j,l,e){var
m=a[1];function
d(a){if(a){var
e=a[4],f=a[3],g=a[2],h=a[1],k=a[5],i=b(m,j,g);return 0===i?[0,h,j,c(l,f),e,k]:0<=i?co(h,g,f,d(e)):co(d(h),g,f,e)}throw x}return d(e)}function
S(m,i,k,e){var
n=a[1];function
d(a){if(a){var
e=a[4],f=a[3],g=a[2],h=a[1],l=a[5],j=b(n,i,g);return 0===j?[0,h,i,c(k,f),e,l]:0<=j?co(h,g,f,d(e)):co(d(h),g,f,e)}return[0,0,i,c(k,m),0,1]}return d(e)}function
T(d,c,b){return aFw(d,c,a[1],b)}function
U(m,e){var
n=a[1];function
c(a){if(a){var
d=a[4],e=a[3],f=a[2],g=a[1],h=b(n,m,f);if(0===h)return[0,e,nM(g,d)];if(0<=h){var
i=c(d),k=i[1];return[0,k,co(g,f,e,i[2])]}var
j=c(g),l=j[1];return[0,l,co(j[2],f,e,d)]}throw x}var
d=c(e);return[0,d[1],d[2]]}function
V(a){if(a){var
b=a[3],c=a[2];return[0,[0,c,b],nM(a[1],a[4])]}throw x}function
W(b,a){return tJ(b,a)}function
X(a){return Fu(0,a)}function
Z(h,d,b){var
i=a[1];function
c(b,a){if(b){var
d=b[2],j=b[5],k=b[4],l=b[3],n=b[1];if(hL(a)<=j){var
e=kF(d,i,a),o=e[2],p=e[1],q=c(k,e[3]),s=m(h,d,[0,l],o);return Fy(c(n,p),d,s,q)}}else
if(!a)return 0;if(a){var
f=a[2],t=a[4],u=a[3],v=a[1],g=kF(f,i,b),w=g[2],x=g[1],y=c(g[3],t),z=m(h,f,w,[0,u]);return Fy(c(x,v),f,z,y)}throw[0,r,aFx]}return c(d,b)}function
_(c,a){try{var
d=[0,b(f,c,a)];return d}catch(a){a=s(a);if(a===x)return 0;throw a}}function
$(a){try{var
b=[0,p(a)];return b}catch(a){a=s(a);if(a===x)return 0;throw a}}var
aa=[0,_,$,function(a){try{var
b=[0,q(a)];return b}catch(a){a=s(a);if(a===x)return 0;throw a}}];function
ab(c,a){return b(f,a,c)}var
ac=[0,ab,function(b,a){return m(e,a[1],a[2],b)}];function
ad(c,b,a){return m(e,c,b,a)}function
ae(c,a){return b(i,function(d,a){return b(c,d,a)},a)}function
af(b,a){return l(b,a)}function
ah(c,a){return k(function(d,a){return b(c,d,a)},a)}function
ai(c,b,a){return m(j,function(d,b,a){return m(c,d,b,a)},b,a)}function
aj(c,b,a){return m(g,c,b,a)}function
ak(c,b,a){return m(h,c,b,a)}function
al(a){return function(b){return n(a,b)}}return[0,t,u,v,e,w,y,g,h,i,j,f,z,A,B,C,D,E,F,G,k,l,H,n,o,I,J,K,L,M,N,O,p,q,P,Q,R,S,T,U,V,W,X,Z,aa,ac,[0,ad,ae,af,ah,ai,aj,ak,al,function(a){return function(b){return o(a,b)}}]]};gE([0,nK]);gE([0,Fn]);gE([0,Fo]);gE([0,Fp]);gE([0,Fm]);gE([0,BH]);gE([0,hh]);var
tK=function(c){var
a=gE(c),b=a[46];return[0,a[1],a[2],a[12],a[4],a[17],a[11],a[18],a[5],a[36],a[37],a[38],a[39],a[40],a[3],a[9],a[21],a[20],a[10],a[23],a[24],a[25],a[7],a[8],a[15],a[16],a[28],a[29],a[30],a[31],a[32],a[33],a[34],a[35],a[41],a[42],a[13],a[14],a[19],a[27],a[26],a[43],a[22],a[44],a[45],[0,b[1],b[2],b[3],b[4],b[8],b[9],b[5],b[6],b[7]]]},fY=function(a){return[0,0,0]},iV=function(a){return[0,a,0]},dt=function(c,b){var
a=iV(b);c[2]=a;return a},iW=function(a){return a?0:1},hN=function(d,c){if(c<0)Y(Fz);var
b=c,a=d;for(;;){if(a){var
e=a[2],f=a[1];if(0===b)return f;var
b=b-1|0,a=e;continue}return Y(tL)}},fZ=function(f){var
e=fY(0),d=e,b=f;a:for(;;){if(b){var
c=d,a=b[1],h=b[2];for(;;){if(a){var
g=a[2],c=dt(c,a[1]),a=g;continue}var
d=c,b=h;continue a}}return e[2]}},L=function(d,b){if(b){var
g=b[2],f=iV(c(d,b[1])),e=f,a=g;for(;;){if(a){var
h=a[2],e=dt(e,c(d,a[1])),a=h;continue}return f}}return 0},FA=function(d,c){var
b=d,a=c;for(;;){if(a){var
e=a[2];if(0<b){var
b=b-1|0,a=e;continue}}return a}},nO=function(f,e){var
d=fY(0),b=f,c=d,a=e;for(;;){if(a){var
g=a[2],h=a[1];if(0<b){var
b=b-1|0,c=dt(c,h),a=g;continue}}return d[2]}},hO=function(h,g){var
f=fY(0),b=f,a=g;for(;;){if(a){var
d=a[2],e=c(h,a[1]);if(e){var
b=dt(b,e[1]),a=d;continue}var
a=d;continue}return f[2]}},f0=function(c,a,f){function
g(h,e){if(e){var
i=e[2],j=e[1];if(h<g1)return b(c,j,g(h+1|0,i));var
d=f,a=aj(i);for(;;){if(a){var
k=a[2],d=b(c,a[1],d),a=k;continue}return b(c,j,d)}}return f}return g(0,a)},iX=function(i,h,g){var
e=fY(0),d=e,c=h,a=g;for(;;){if(c){if(a){var
j=a[2],k=c[2],d=dt(d,b(i,c[1],a[1])),c=k,a=j;continue}var
f=0}else
var
f=a?0:1;if(!f)Y(aFy);return e[2]}},FB=function(f,e,d){var
c=e,a=d;for(;;){if(c){if(a){var
g=a[2],h=c[2];b(f,c[1],a[1]);var
c=h,a=g;continue}}else
if(!a)return 0;return Y(aFz)}},kG=function(f,e,d){var
c=e,a=d;for(;;){if(c){if(a){var
g=a[2],h=c[2];if(b(f,c[1],a[1])){var
c=h,a=g;continue}return 0}}else
if(!a)return 1;return Y(aFB)}},kH=function(h,g){var
f=fY(0),b=f,a=g;for(;;){if(a){var
d=a[2],e=a[1];if(c(h,e)){var
b=dt(b,e),a=d;continue}var
a=d;continue}return f[2]}},FC=function(g){var
e=fY(0),f=fY(0),c=e,b=f,a=g;for(;;){if(a){var
d=a[1],h=a[2],i=d[1],j=dt(b,d[2]),c=dt(c,i),b=j,a=h;continue}return[0,e[2],f[2]]}},gF=function(d,b){var
e=[0,ct,aFC];if(d){if(b){var
h=b[2],i=d[2],f=iV([0,d[1],b[1]]),g=f,c=i,a=h;for(;;){if(c){if(a){var
j=a[2],k=c[2],g=dt(g,[0,c[1],a[1]]),c=k,a=j;continue}}else
if(!a)return f;throw e}}}else
if(!b)return 0;throw e},tM=function(c,d){if(c<0)Y(aFD);var
b=0,a=c;for(;;){if(0===a)return b;var
b=[0,d,b],a=a-1|0;continue}},FD=function(e,c){if(c){var
h=c[2],g=iV(b(e,0,c[1])),f=g,d=1,a=h;for(;;){if(a){var
i=a[2],f=dt(f,b(e,d,a[1])),d=d+1|0,a=i;continue}return g}}return 0},tN=function(c){var
a=c;for(;;){if(a){var
b=a[2],d=a[1];if(b){var
a=b;continue}return d}return Y(aFE)}},tO=function(c,b){if(b){var
h=b[2],i=b[1];if(0===c)return[0,0,b];if(0<=c){var
f=iV(i),d=c-1|0,e=f,a=h;for(;;){if(0===d)var
g=a;else{if(a){var
j=a[2],d=d-1|0,e=dt(e,a[1]),a=j;continue}var
g=Y(tL)}return[0,f,g]}}return Y(Fz)}return 0===c?aFF:Y(tL)},FE=function(a){function
c(b,a){function
d(d){return c([0,b[1]],[0,a[1]])}function
e(c){if(a[1]<0)a[1]=W(b[1]);return a[1]}return fX(function(f){var
c=b[1];if(c){var
d=c[2],e=c[1];a[1]+=-1;b[1]=d;return e}throw cn},e,d)}return c([0,a],[0,-1])},eC=function(i,h,g,d,a,c){var
e=i?i[1]:aFI,f=h?h[1]:aFH,l=g?g[1]:aFG;if(c){var
j=c[2],k=c[1];return j?(bl(a,e),b(d,a,k),ae(function(c){bl(a,l);return b(d,a,c)},j),bl(a,f)):(bl(a,e),b(d,a,k),bl(a,f))}bl(a,e);return bl(a,f)},FF=function(e,b){var
d=b.length-1-1|0,f=0;if(!(d<0)){var
a=f;for(;;){b[a+1]=c(e,b[a+1]);var
g=a+1|0;if(d!==a){var
a=g;continue}break}}return 0},FG=bX(62),tP=function(c,b,a){return dC(FG,a,hg((a-c|0)+b|0))},FH=C(FG)-1|0,aFJ=0;if(!(FH<0)){var
gW=aFJ;for(;;){if(10<=gW)if(36<=gW)tP(36,65,gW);else
tP(10,97,gW);else
tP(0,48,gW);var
bB6=gW+1|0;if(FH!==gW){var
gW=bB6;continue}break}}H(0);H(0);H(0);H(0);H(0);var
aFK=aq2(0),FI=function(a){var
b=bi(a);return bu===b?a[1]:J===b?cd(a):a},tQ=function(b){var
a=FI(b);return a?[0,[0,a[1],a[2]]]:0},FJ=[];is(FJ,[J,function(a){return[0,0,FJ]}]);z(aqg,0);rL(aDn);rL(aDm);var
aFL=0,tR=function(b,a){return[0,ab(b[1],a[1])]},iY=function(b,a){return c(b,a)},FK=function(a){return aFP},FL=function(f,a){var
b=tQ(a);if(b){var
d=b[1],e=d[1][1],g=d[2];if(c(f,e))return[0,e,g]}return FK(a)},tS=function(f,e,c){if(0===C(f)){var
b=iY(e,c);switch(b[0]){case
0:return b;case
1:return[1,b[1],aFQ,b[3]];case
2:return aFR;default:return aFS}}function
d(d){var
a=FI(c),e=0,b=a?[0,a[1]]:0,g=b?[0,b[1][2]]:0;return[0,[0,[0,g,f,d],e]]}var
a=iY(e,c);switch(a[0]){case
0:return a;case
1:var
g=a[3],h=a[1];return[1,h,d(a[2]),g];case
2:return[2,d(a[1])];default:return[3,d(a[1])]}},FM=function(j,a){function
e(b){return a}return function(k){var
a=iY(j,k);switch(a[0]){case
0:var
f=a[2];return c(iY(e,a[1]),f);case
1:var
d=a[2],g=a[3],b=c(iY(e,a[1]),g);switch(b[0]){case
0:return b;case
1:var
h=b[3],i=b[1];return[1,i,tR(d,b[2]),h];case
2:return[2,tR(d,b[1])];default:return[3,tR(d,b[1])]}default:return a}}},aFT=function(a){return tS(aFU,function(a){return tQ(a)?FK(a):[0,0,a]},a)},FN=function(a){function
b(b){return bP(a,b)}return function(a){return FL(b,a)}};H(0);var
nP=a_(48,0),aFV=48,tT=function(a){var
c=z(nP,a)[a+1];if(0===c){var
b=tT(a-1|0),d=b+tT(a-2|0)|0,e=b<d?d:b;z(nP,a)[a+1]=e;return e}return c};z(nP,0)[1]=17;z(nP,1)[2]=25;var
FO=kc(aFV,function(a){return 0===a?1:tT(a-1|0)});z(FO,FO.length-1-1|0);var
aFX=function(e){var
b=C(e);function
c(a){function
d(b){return c(ER(a))}function
f(c){return b-a[1]|0}return fX(function(c){if(a[1]===b)throw cn;return aQ(e,EQ(a))},f,d)}var
f=c([0,0]);function
a(b){return[J,function(d){var
b=tA(f);if(b){var
c=b[1];return[0,c,a(0)]}return 0}]}var
g=a(0);function
d(i,a){var
e=tQ(i);if(e){var
f=e[1],b=f[1],j=f[2];if(10===b)var
c=0;else
if(13===b)var
c=0;else
var
h=0,c=1;if(!c)var
h=1;var
g=h?[0,1,a[2]+1|0]:[0,a[1]+1|0,a[2]];return[J,function(a){return[0,[0,b,g],d(j,g)]}]}return aFK}return d(g,aFW)},aFY=function(a){var
b=FN(a),c=t(aF0,t(E0(a),aFZ));return function(a){return tS(c,b,a)}},aF1=function(a){return FL(aDW,a)},aF3=function(a){return tS(aF2,aF1,a)};H(0);H(0);aFY(95);H(0);var
tU=function(d,c,b,a){tu(d,c,b,a);return 0},tV=function(a,b){return kB(a,10)},tW=function(b){var
c=dG(80,32);return function(e){var
a=e;for(;;){var
d=0<a?1:0;if(d){if(80<a){tu(b,c,0,80);var
a=a+Af|0;continue}tu(b,c,0,a);return 0}return d}}},FP=function(a){function
c(b,c,d){return tU(a,b,c,d)}var
d=a[4],b=nf(c,d);ts(a,function(a){return e9(b,0)});var
e=tW(a);sm(b,c,d,function(b){return tV(a,b)},e);return b},aF4=function(a){ts(a,function(a){return e9(iA,0)});var
b=tW(a);function
c(b){return tV(a,b)}var
d=a[4];return sm(iA,function(b,c,d){return tU(a,b,c,d)},d,c,b)},FQ=function(b,a){ts(a,function(a){return e9(b,0)});var
c=tW(a);function
d(b){return tV(a,b)}var
e=a[4];return sm(b,function(b,c,d){return tU(a,b,c,d)},e,d,c)};FP(hJ);FP(nE);aF4(hJ);FQ(iA,hJ);FQ(e_,nE);var
FR=function(a){return cf(0,a)},nQ=function(c){function
f(k,j,i,h){var
d=[0,k],b=[0,j],e=[0,i],a=[0,h];function
g(f){var
b=-1===a[1]?1:0,d=b?(a[1]=c[1],e[1]=rS(c[2]),0):b;return d}function
l(i){for(;;){g(0);var
c=b[1];if(c){var
f=c[2],h=c[1];b[1]=c[3];a[1]+=-1;return[0,h,f]}if(0===a[1])throw cn;d[1]++;b[1]=e[1][d[1]+1];continue}}function
m(b){return-1===a[1]?c[1]:a[1]}return fX(l,m,function(c){g(0);return f(d[1],b[1],e[1],a[1])})}return f(-1,0,0,-1)},FS=[N,aF5,H(0)],FT=function(h,c){function
d(i){var
a=i;for(;;){if(a){var
e=a[3],f=a[2],g=a[1];if(b(h,g,f))return[0,g,f,d(e)];c[1]=c[1]-1|0;var
a=e;continue}return 0}}return FF(d,c[2])},FU=function(e){var
a=km(e),i=a[1],f=a[5],n=a[7],o=a[9],h=a[11],p=a[12],q=a[13],r=a[14],C=a[2],D=a[4],E=a[6],F=a[8],G=a[10];function
g(b,a){var
d=b[2].length-1-1|0;return c(e[2],a)&d}function
H(a){return nQ(a)}function
I(b){var
a=0;return Ck(function(c,b,a){return[0,[0,c,b],a]},b,a)}function
J(a){var
c=a[4]?tB(a):0,b=FR(c);EV(function(a){return es(b,a[1],a[2])},a);return b}function
K(b){var
a=nQ(b);return kC(function(a){return a[2]},a)}function
L(b){var
a=nQ(b);return kC(function(a){return a[1]},a)}function
t(g,a){function
c(a){if(a){var
d=a[1],e=a[2],f=c(a[3]);return[0,d,b(g,d,e),f]}return 0}var
d=a[4],e=a[3],f=hj(c,a[2]);return[0,a[1],f,e,d]}function
M(b){var
a=FR(11);ae(function(b){return es(a,b[1],b[2])},b);return a}function
u(g,a){function
c(a){if(a){var
d=a[1],e=a[2],f=c(a[3]);return[0,d,b(g,d,e),f]}return 0}return FF(c,a[2])}function
v(b,a){return FT(b,a)}function
w(b,a){return FT(function(d,a){return c(b,a)},a)}function
y(d,c){var
i=g(d,c),a=d[2][i+1];for(;;){if(a){var
f=a[3],h=a[2];if(b(e[1],a[1],c))return[0,h];var
a=f;continue}return 0}}function
N(d,c,f){var
j=g(d,c),a=d[2][j+1];for(;;){if(a){var
h=a[3],i=a[2];if(b(e[1],a[1],c))return i;var
a=h;continue}return f}}function
O(a,d){function
f(i){var
c=i;for(;;){if(c){var
g=c[3],h=c[1],j=c[2];if(b(e[1],h,d)){a[1]=a[1]-1|0;var
c=g;continue}return[0,h,j,f(g)]}return 0}}var
c=g(a,d),h=f(a[2][c+1]);a[2][c+1]=h;return 0}function
P(a){return 0===c(r,a)?1:0}function
Q(c,b,a,k,j,i,h){var
d=c?c[1]:aF_,e=b?b[1]:aF9,f=a?a[1]:aF8,g=nQ(h);return nG([0,d],[0,e],[0,f],function(b,a){var
c=a[2],d=a[1];return aq(ag(b,aF6),k,d,aF7,j,c)},i,g)}function
j(g,d){var
a=c(i,16);b(h,function(d,c){var
e=b(g,d,c);return e?m(f,a,d,c):e},d);return a}function
z(b,a){return j(function(d,a){return c(b,a)},a)}function
A(e,d){var
a=c(i,16);b(h,function(c,g){var
d=b(e,c,g);return d?m(f,a,c,d[1]):0},d);return a}function
k(d,h,a){function
i(f){if(f){var
g=f[3],j=f[2],k=f[1];if(b(e[1],k,d)){var
l=c(h,[0,j]);return l?[0,d,l[1],g]:(a[1]=a[1]-1|0,g)}return[0,k,j,i(g)]}throw FS}try{var
k=g(a,d),l=i(a[2][k+1]);a[2][k+1]=l;var
n=0;return n}catch(b){b=s(b);if(b===FS){var
j=c(h,0);return j?m(f,a,d,j[1]):0}throw b}}function
l(d,j,a){function
f(a){if(a){var
g=a[3],h=a[2],i=a[1];return b(e[1],i,d)?[0,d,c(j,h),g]:[0,i,h,f(g)]}throw x}var
h=g(a,d),i=f(a[2][h+1]);a[2][h+1]=i;return 0}function
B(e,d,a,b){return k(d,function(b){return b?[0,c(a,b[1])]:[0,c(a,e)]},b)}function
d(d,c,a){return b(d,c,a)}function
R(c,b,a){return m(f,c,b,a)}function
S(c,b,a){return m(o,c,b,a)}function
T(c,a){return b(h,function(a,b){return d(c,a,b)},a)}function
U(b,a){return t(function(a,c){return d(b,a,c)},a)}function
V(b,a){return u(function(a,c){return d(b,a,c)},a)}function
W(b,a){return z(b,a)}function
X(b,a){return w(b,a)}function
Y(b,a){return j(function(a,c){return d(b,a,c)},a)}function
Z(b,a){return v(function(a,c){return d(b,a,c)},a)}function
_(b,a){return A(function(a,c){return d(b,a,c)},a)}function
$(c,a){return b(p,function(a,b){return d(c,a,b)},a)}function
aa(c,b,a){return m(q,function(a,b){return d(c,a,b)},b,a)}function
ab(b,a){return function(c){return l(b,a,c)}}function
ac(c,b,a){return function(d){return B(c,b,a,d)}}function
ad(b,a){return function(c){return k(b,a,c)}}var
af=[0,y,function(b,a){function
c(c){return l(b,a,c)}return function(a){return aEi(c,a)}}];function
ah(c,a){return b(n,c,a)}return[0,i,r,P,C,D,f,E,O,n,F,N,y,o,G,h,q,t,u,z,w,j,v,A,p,l,B,k,L,K,H,I,J,M,Q,af,[0,ah,function(b,a){return m(f,b,a[1],a[2])}],[0,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad]]};(function(a){return sq(auY,function(c){try{var
b=EM(a);return b}catch(a){a=s(a);if(a===fW)throw d3;throw a}})}(EP));var
iZ=0,nR=function(a){return a?a[4]:0},eD=function(b,e,a){var
c=b?b[4]:0,d=a?a[4]:0,f=d<=c?c+1|0:d+1|0;return[0,b,e,a,f]},d8=function(b,e,a){var
f=b?b[4]:0,g=a?a[4]:0;if((g+2|0)<f){if(b){var
c=b[3],j=b[2],h=b[1],l=nR(c);if(l<=nR(h))return eD(h,j,eD(c,e,a));if(c){var
m=c[2],n=c[1],o=eD(c[3],e,a);return eD(eD(h,j,n),m,o)}return Y(aF$)}return Y(aGa)}if((f+2|0)<g){if(a){var
i=a[3],k=a[2],d=a[1],p=nR(d);if(p<=nR(i))return eD(eD(b,e,d),k,i);if(d){var
q=d[2],r=d[1],s=eD(d[3],k,i);return eD(eD(b,e,r),q,s)}return Y(aGb)}return Y(aGc)}var
t=g<=f?f+1|0:g+1|0;return[0,b,e,a,t]},nS=function(c){var
a=c;for(;;){if(a){var
b=a[1];if(b){var
a=b;continue}return a[2]}throw x}},nT=function(a){if(a)return a[2];throw x},tX=function(a){if(a){var
b=a[1];if(b){var
c=a[3],d=a[2];return d8(tX(b),d,c)}return a[3]}return Y(aGd)},FV=function(b,a){if(b){if(a){var
c=tX(a);return d8(b,nS(a),c)}return b}return a},c3=function(d,c,a){if(a){var
f=a[3],e=a[2],g=a[1],h=b(d,c,e);return 0===h?a:0<=h?d8(g,e,c3(d,c,f)):d8(c3(d,c,g),e,f)}return[0,0,c,0,1]},nU=function(d,c,a){if(a){var
e=a[3],f=a[2],g=a[1],h=b(d,c,f);return 0===h?FV(g,e):0<=h?d8(g,f,nU(d,c,e)):d8(nU(d,c,g),f,e)}return 0},tY=function(b,d){var
a=d;for(;;){if(a){var
e=a[3],f=a[2];tY(b,a[1]);c(b,f);var
a=e;continue}return 0}},i0=function(d,f,e){var
a=f,c=e;for(;;){if(a){var
g=a[3],h=a[2],i=b(d,h,i0(d,a[1],c)),a=g,c=i;continue}return c}},FW=[N,aGe,H(0)],aGf=function(b,a){if(b<0)Y(aGg);var
c=[0,nT(a)];try{var
d=0;i0(function(d,a){if(a!==b)return a+1|0;c[1]=d;throw FW},a,d);var
e=Y(aGh);return e}catch(a){a=s(a);if(a===FW)return c[1];throw a}},tZ=function(a){return[0,0,a,0,1]},FX=function(b,a){if(a){var
c=a[3],d=a[2];return d8(FX(b,a[1]),d,c)}return tZ(b)},FY=function(b,a){if(a){var
c=a[2],d=a[1];return d8(d,c,FY(b,a[3]))}return tZ(b)},d9=function(b,c,a){if(b){if(a){var
d=a[4],e=b[4],f=a[3],g=a[2],h=a[1],i=b[3],j=b[2],k=b[1];return(d+2|0)<e?d8(k,j,d9(i,c,a)):(e+2|0)<d?d8(d9(b,c,h),g,f):eD(b,c,a)}return FY(c,b)}return FX(c,a)},f1=function(d,c,a){if(a){var
e=a[3],f=a[2],g=a[1],j=b(d,c,f);if(0===j)return[0,g,1,e];if(0<=j){var
h=f1(d,c,e),k=h[3],l=h[2];return[0,d9(g,f,h[1]),l,k]}var
i=f1(d,c,g),m=i[2],n=i[1];return[0,n,m,d9(i[3],f,e)]}return aGi},kI=function(e,d,a){if(a){var
f=a[3],c=a[2],g=a[1],j=b(e,d,c);if(0===j)return[0,g,[0,c],f];if(0<=j){var
h=kI(e,d,f),k=h[3],l=h[2];return[0,d9(g,c,h[1]),l,k]}var
i=kI(e,d,g),m=i[2],n=i[1];return[0,n,m,d9(i[3],c,f)]}return aGj},kJ=function(a){if(a){var
b=a[1],c=kJ(a[3]);return(kJ(b)+1|0)+c|0}return 0},FZ=function(d,c){var
b=d,a=c;for(;;){if(a){var
e=a[2],f=a[1],b=[0,e,FZ(b,a[3])],a=f;continue}return b}},i1=function(d,c){var
a=d,b=c;for(;;){if(a){var
e=[0,a[2],a[3],b],a=a[1],b=e;continue}return b}},F0=function(d,c){var
a=d,b=c;for(;;){if(a){var
e=[0,a[2],a[1],b],a=a[3],b=e;continue}return b}},F1=function(c,e){var
b=0,a=c[1];for(;;){if(a){var
d=a[3],b=(b+1|0)+kJ(a[2])|0,a=d;continue}return b}},F2=function(b){function
a(c){var
b=[0,c];function
d(c){return a(b[1])}function
e(a){return F1(b,a)}return fX(function(d){var
a=b[1];if(a){var
c=a[1];b[1]=i1(a[2],a[3]);return c}throw cn},e,d)}return a(i1(b,0))},F3=function(b,g){var
a=g;for(;;){if(a){var
h=a[3],i=a[1],d=c(b,a[2]);if(d){var
e=F3(b,i);if(e){var
a=h;continue}var
f=e}else
var
f=d;return f}return 1}},F4=function(b,g){var
a=g;for(;;){if(a){var
h=a[3],i=a[1],d=c(b,a[2]);if(d)var
e=d;else{var
f=F4(b,i);if(!f){var
a=h;continue}var
e=f}return e}return 0}},t0=function(b,a){if(b){if(a){var
c=tX(a);return d9(b,nS(a),c)}return b}return a},kK=function(c,b,a){if(b){if(a){var
f=a[4],d=a[2],g=b[4],e=b[2],j=a[3],k=a[1],l=b[3],m=b[1];if(f<=g){if(1===f)return c3(c,d,b);var
h=f1(c,e,a),n=h[1],o=kK(c,l,h[3]);return d9(kK(c,m,n),e,o)}if(1===g)return c3(c,e,a);var
i=f1(c,d,b),p=i[1],q=kK(c,i[3],j);return d9(kK(c,p,k),d,q)}return b}return a},kL=function(b,a,d){if(a){if(d){var
e=a[3],f=a[2],g=a[1],c=f1(b,f,d),h=c[1];if(0===c[2]){var
i=kL(b,e,c[3]);return d9(kL(b,g,h),f,i)}var
j=kL(b,e,c[3]);return t0(kL(b,g,h),j)}return a}return d},kM=function(a,b,d){if(b){if(d){var
e=b[3],f=b[2],g=b[1],c=f1(a,f,d),h=c[1];if(0===c[2]){var
i=kM(a,e,c[3]);return t0(kM(a,g,h),i)}var
j=kM(a,e,c[3]);return d9(kM(a,g,h),f,j)}return 0}return 0},kN=function(b,a,d){if(a){if(d){var
e=a[3],f=a[2],g=a[1],c=f1(b,f,d),h=c[1];if(0===c[2]){var
i=kN(b,e,c[3]);return d9(kN(b,g,h),f,i)}var
j=kN(b,e,c[3]);return t0(kN(b,g,h),j)}return a}return 0},F5=function(d,g,f){var
a=g,b=f;for(;;){if(a)if(b){var
h=a[3],i=a[1],c=f1(d,a[2],b),j=c[1];if(0===c[2]){var
k=c[3],e=F5(d,i,j);if(e){var
a=h,b=k;continue}return e}return 0}return 1}},F6=function(g,f,e){var
m=i1(e,0),c=i1(f,0),a=m;for(;;){if(c){if(a){var
h=a[3],i=a[2],j=c[3],k=c[2],d=b(g,c[1],a[1]);if(0===d){var
l=i1(i,h),c=i1(k,j),a=l;continue}return d}return 1}return a?-1:0}},nV=function(d,o,n){var
a=o,c=n;for(;;){if(a){if(c){var
h=c[3],i=c[1],e=a[3],f=a[2],g=a[1],j=b(d,f,c[2]);if(0===j){var
k=nV(d,g,i);if(k){var
a=e,c=h;continue}return k}if(0<=j){var
l=nV(d,[0,0,f,e,0],h);if(l){var
a=g;continue}return l}var
m=nV(d,[0,g,f,0,0],i);if(m){var
a=e;continue}return m}return 0}return 1}},gG=function(a){var
f=hk(a),h=f[19],C=f[1],D=f[2],E=f[3];function
F(a){return kJ(a)}function
G(a){return F2(a)}function
H(b){var
c=a[1];return EW(function(b,a){return c3(c,a,b)},iZ,b)}function
I(b){function
a(c){var
b=[0,c];function
d(c){return a(b[1])}function
e(a){return F1(b,a)}return fX(function(d){var
a=b[1];if(a){var
c=a[1];b[1]=F0(a[2],a[3]);return c}throw cn},e,d)}return a(F0(b,0))}function
J(c,b){return nU(a[1],c,b)}function
K(j,i,e){var
c=a[1];if(0===b(c,j,i)){var
d=function(a){if(a){var
e=a[4],f=a[3],g=a[2],h=a[1],k=b(c,j,g);return 0===k?[0,h,i,f,e]:0<=k?[0,h,g,d(f),e]:[0,d(h),g,f,e]}throw x};return d(e)}return c3(c,i,nU(c,j,e))}function
i(c,b){return c3(a[1],c,b)}function
j(b,a){return tY(b,a)}function
L(b,a){return aGf(b,a)}function
k(d,b){var
e=a[1];return i0(function(b,a){return c3(e,c(d,b),a)},b,iZ)}function
l(c,b,a){return i0(c,b,a)}function
m(d,b){var
e=a[1];return i0(function(b,a){return c(d,b)?c3(e,b,a):a},b,iZ)}function
n(e,b){var
f=a[1];return i0(function(d,a){var
b=c(e,d);return b?c3(f,b[1],a):a},b,iZ)}function
o(j,i){var
c=i,k=a[1];for(;;){if(c){var
d=c[2],f=c[3],g=c[1],e=b(k,j,d);if(0===e)return d;var
h=0<=e?f:g,c=h;continue}throw x}}function
p(b,a){return F4(b,a)}function
q(b,a){return F3(b,a)}function
M(n,d){var
h=a[1];function
e(j,i){var
b=j,a=i;for(;;){var
f=b[2],g=b[1];if(a){var
d=a[2],k=a[3],l=a[1],m=c(n,d)?[0,c3(h,d,g),f]:[0,g,c3(h,d,f)],b=e(m,l),a=k;continue}return b}}var
b=e(aGo,d);return[0,b[1],b[2]]}function
r(a){return nS(a)}function
N(a){var
b=[0,nT(a)];function
c(a){if(a){var
d=a[1];if(d){var
e=a[3],f=a[2];return d8(c(d),f,e)}var
g=a[3];b[1]=a[2];return g}throw x}var
d=c(a);return[0,b[1],d]}function
O(a){var
b=[0,nT(a)];function
c(a){if(a){var
d=a[3],e=a[2],f=a[1];return d?d8(f,e,c(d)):(b[1]=e,f)}throw x}var
d=c(a);return[0,b[1],d]}function
t(d){var
a=d;for(;;){if(a){var
b=a[3],c=a[2];if(b){var
a=b;continue}return c}throw x}}function
u(a){return nS(a)}function
v(a){return nT(a)}function
P(a){if(a){var
b=a[2];return[0,b,FV(a[1],a[3])]}throw x}function
w(d,c){var
b=f1(a[1],d,c);return[0,b[1],b[2],b[3]]}function
Q(d,c){var
b=kI(a[1],d,c);return[0,b[1],b[2],b[3]]}function
R(h,g){var
f=a[1],b=kI(f,h,g),d=b[3],e=b[2],c=b[1],i=e?[0,c,c3(f,e[1],d)]:[0,c,d];return[0,c,i[2]]}function
S(h,g){var
f=a[1],b=kI(f,h,g),c=b[3],d=b[2],e=b[1],i=d?[0,c3(f,d[1],e),c]:[0,e,c];return[0,i[1],c]}function
T(a){return tZ(a)}function
y(a){return FZ(0,a)}function
U(a){if(a){var
d=a[2],b=a_(kJ(a),d),c=[0,0];tY(function(a){b[c[1]+1]=a;c[1]++;return 0},a);return b}return[0]}function
z(c,b){return kK(a[1],c,b)}function
A(c,b){return kN(a[1],c,b)}function
B(c,b){return kM(a[1],c,b)}function
V(c,b){return kL(a[1],c,b)}function
W(c,b){return F6(a[1],c,b)}function
g(c,b){return 0===F6(a[1],c,b)?1:0}function
d(c,b){return nV(a[1],c,b)}function
X(c,b){return F5(a[1],c,b)}function
e(b,d){if(b){if(d){var
g=b[3],h=b[1],c=w(b[2],d),i=c[1];if(0===c[2]){var
l=c[3];if(0<=e(h,i))if(0<=e(g,l))return 1;return Bw}var
m=c[3],n=e(h,i),f=e(g,m),j=n+1|0;if(!(2<j>>>0)){switch(j){case
0:var
a=1<(f+1|0)>>>0?0:1;break;case
1:var
k=f+1|0;if(2<k>>>0)var
a=0;else
switch(k){case
0:var
a=1;break;case
1:return 0;default:var
a=2}break;default:var
a=1<f>>>0?0:2}switch(a){case
0:break;case
1:return-1;default:return 1}}return Bw}return 1}return d?-1:0}function
Y(b,a){return e(b,a)}function
Z(b){var
c=a[1];return aZ(function(b,a){return c3(c,a,b)},iZ,b)}function
_(b){var
c=a[1];return rT(function(b,a){return c3(c,a,b)},iZ,b)}function
$(d,c,a,k,j,i){var
e=d?d[1]:aGn,f=c?c[1]:aGm,g=a?a[1]:aGl,h=F2(i);return nG([0,e],[0,f],[0,g],function(c,a){return b(ag(c,aGk),k,a)},j,h)}function
aa(b,a){return i(a,b)}function
ab(b,a){var
c=1-g(b,a);return c?d(b,a):c}function
ac(b,a){var
c=1-g(b,a);return c?d(a,b):c}var
ad=[0,aa,ab,ac,d,function(b,a){return d(a,b)},A,B,z];function
ae(a){try{var
b=[0,r(a)];return b}catch(a){a=s(a);if(a===x)return 0;throw a}}function
af(a){try{var
b=[0,t(a)];return b}catch(a){a=s(a);if(a===x)return 0;throw a}}function
ah(a){try{var
b=[0,u(a)];return b}catch(a){a=s(a);if(a===x)return 0;throw a}}function
ai(a){try{var
b=[0,v(a)];return b}catch(a){a=s(a);if(a===x)return 0;throw a}}var
aj=[0,ae,af,ah,ai,function(b,a){try{var
c=[0,o(b,a)];return c}catch(a){a=s(a);if(a===x)return 0;throw a}}];function
ak(b,a){return j(b,a)}function
al(c,b,a){return l(c,b,a)}function
am(b,a){return q(b,a)}function
an(b,a){return p(b,a)}function
ao(b,a){return k(b,a)}function
ap(b,a){return m(b,a)}function
aq(b,a){return n(b,a)}return[0,C,D,E,h,F,G,H,I,J,K,i,j,L,k,l,m,n,o,p,q,M,r,N,O,t,u,v,P,w,Q,R,S,T,y,y,U,z,A,B,V,W,g,d,X,Y,Z,_,$,ad,aj,[0,ak,al,am,an,ao,ap,aq,function(c,a){return b(h,c,a)}]]};gG([0,nK]);gG([0,Fn]);gG([0,Fo]);gG([0,Fp]);gG([0,Fm]);gG([0,BH]);gG([0,hh]);var
nW=function(b){var
a=gG(b);return[0,a[1],a[2],a[33],a[3],a[18],a[11],a[9],a[10],a[37],a[39],a[38],a[40],a[41],a[42],a[43],a[44],a[45],a[12],a[13],a[14],a[16],a[17],a[15],a[20],a[19],a[4],a[29],a[30],a[31],a[32],a[5],a[34],a[35],a[36],a[22],a[23],a[24],a[25],a[26],a[27],a[28],a[6],a[8],a[7],a[46],a[47],a[48],a[49],a[50],a[51]]};H(0);var
aGq=[N,aGp,H(0)],aGs=aGr.slice();(function(b){if(64!==b.length-1)throw aGq;var
c=a_(cX,-1),a=0;for(;;){c[b[a+1]+1]=a;var
d=a+1|0;if(63!==a){var
a=d;continue}return c}}(aGs));H(0);var
t1=0,F7=function(a){var
c=0<=a[2]?1:0;if(c){var
d=a[2]<=a[1].length-1?1:0;if(d){var
b=a[2];for(;;){if((a[1].length-1-1|0)<=b)return 1;var
e=a[1][b+1]===0?1:0;if(e){var
b=b+1|0;continue}return e}}var
f=d}else
var
f=c;return f},aGt=function(a){if(F7(a))return 0;throw[0,r,aGu]},F8=[N,aGv,H(0)],c4=function(c,b,a){throw[0,F8,c,b,a]},aGw=function(a){return a[2]},aGx=function(b,e,a){function
d(c){var
b=c;for(;;){if(a<=b)return b;var
b=b*2|0;continue}}if(1===a)return 1;if(0===b)return d(1);if(b<a)return d(b);var
c=b;for(;;){if((c/2|0)<a)return c;var
c=c/2|0;continue}},aGy=function(a){if(a<=0)c4(a,aGA,aGz);return function(c,d,b){if(!(c<b))if(!(b<(c-a|0)))return c;return(b+a|0)-hd(b,a)|0}},gH=function(b,e,a){function
d(c){var
b=c;for(;;){if(a<=b)return b;var
b=b*2|0;continue}}if(b<a)return 1===a?1:0===b?d(1):d(b);if(e<a){var
c=b;for(;;){if((c/2|0)<a)return c;var
c=c/2|0;continue}}return b},i2=function(a,b){var
d=a[1].length-1,e=m(a[3],d,a[2],b),f=e<b?b:e;if(f!==d){var
g=cZ(0,f),i=b<a[2]?b:a[2],h=i-1|0,j=0;if(!(h<0)){var
c=j;for(;;){g[c+1]=a[1][c+1];var
k=c+1|0;if(h!==c){var
c=k;continue}break}}a[1]=g}a[2]=b;return 0},aGB=function(a){var
c=a[2]!==a[1].length-1?1:0;if(c){var
d=cZ(0,a[2]),e=a[2]-1|0,g=0;if(!(e<0)){var
b=g;for(;;){d[b+1]=a[1][b+1];var
h=b+1|0;if(e!==b){var
b=h;continue}break}}a[1]=d;var
f=0}else
var
f=c;return f},aGC=function(a){return[0,cZ(0,0),0,a]},aGD=function(a){return[0,cZ(0,0),0,gH]},nX=function(a){if(a<0)c4(a,aGF,aGE);return[0,cZ(0,a),0,gH]},aGG=function(a,f){if(a<0)c4(a,aGI,aGH);var
d=cZ(0,a),e=a-1|0,g=0;if(!(e<0)){var
b=g;for(;;){d[b+1]=c(f,b);var
h=b+1|0;if(e!==b){var
b=h;continue}break}}return[0,d,a,gH]},aGJ=function(b,a){b[3]=a;return 0},aGK=function(a){return a[3]},aGL=function(a){return 0===a[2]?1:0},nY=function(b,a){var
c=a<0?1:0,d=c||(b[2]<=a?1:0);if(d)c4(a,aGN,aGM);return b[1][a+1]},aGO=function(a){if(0===a[2])c4(0,aGQ,aGP);return a[1][(a[2]-1|0)+1]},i3=function(b,a,c){var
d=a<0?1:0,e=d||(b[2]<=a?1:0);if(e)c4(a,aGS,aGR);return b[1][a+1]=c},aGT=function(a,b,e){var
f=b<0?1:0,g=f||(a[2]<b?1:0);if(g)c4(b,aGV,aGU);if(a[2]===a[1].length-1)i2(a,a[2]+1|0);else
a[2]=a[2]+1|0;if(b<(a[2]-1|0)){var
d=a[2]-2|0;if(!(d<b)){var
c=d;for(;;){a[1][(c+1|0)+1]=a[1][c+1];var
h=c-1|0;if(b!==c){var
c=h;continue}break}}}return a[1][b+1]=e},kO=function(a,b){if(a[2]===a[1].length-1)i2(a,a[2]+1|0);else
a[2]=a[2]+1|0;return a[1][(a[2]-1|0)+1]=b},aGW=function(a,b){var
n=b<0?1:0,o=n||(a[2]<=b?1:0);if(o)c4(b,aGY,aGX);var
g=a[1].length-1,h=m(a[3],g,a[2],a[2]-1|0),i=h<(a[2]-1|0)?a[2]-1|0:h;if(g!==i){var
f=cZ(0,i),j=b-1|0,p=0;if(!(j<0)){var
d=p;for(;;){f[d+1]=a[1][d+1];var
r=d+1|0;if(j!==d){var
d=r;continue}break}}var
k=a[2]-2|0;if(!(k<b)){var
c=b;for(;;){f[c+1]=a[1][(c+1|0)+1];var
q=c+1|0;if(k!==c){var
c=q;continue}break}}a[1]=f}else{var
l=a[2]-2|0;if(!(l<b)){var
e=b;for(;;){a[1][e+1]=a[1][(e+1|0)+1];var
s=e+1|0;if(l!==e){var
e=s;continue}break}}a[1][(a[2]-1|0)+1]=t1}a[2]=a[2]-1|0;return 0},aGZ=function(a,c,b){if(b<0)c4(b,aG1,aG0);var
r=c<0?1:0,s=r||(a[2]<(c+b|0)?1:0);if(s)c4(c,aG3,aG2);var
i=a[1].length-1,j=m(a[3],i,a[2],a[2]-b|0),k=j<(a[2]-b|0)?a[2]-b|0:j;if(i!==k){var
h=cZ(0,k),l=c-1|0,t=0;if(!(l<0)){var
e=t;for(;;){h[e+1]=a[1][e+1];var
v=e+1|0;if(l!==e){var
e=v;continue}break}}var
n=(a[2]-b|0)-1|0;if(!(n<c)){var
d=c;for(;;){h[d+1]=a[1][(d+b|0)+1];var
u=d+1|0;if(n!==d){var
d=u;continue}break}}a[1]=h}else{var
o=(a[2]-b|0)-1|0;if(!(o<c)){var
f=c;for(;;){a[1][f+1]=a[1][(f+b|0)+1];var
x=f+1|0;if(o!==f){var
f=x;continue}break}}var
p=a[2]-b|0,q=a[2]-1|0;if(!(q<p)){var
g=p;for(;;){a[1][g+1]=t1;var
w=g+1|0;if(q!==g){var
g=w;continue}break}}}a[2]=a[2]-b|0;return 0},aG4=function(a){a[2]=0;a[1]=cZ(0,0);return 0},aG5=function(a){if(a[2]<=0)c4(0,aG7,aG6);a[1][(a[2]-1|0)+1]=t1;return i2(a,a[2]-1|0)},F9=function(g,d,a,b,c){if(c<0)c4(c,aG9,aG8);var
k=d<0?1:0,l=k||(g[2]<(d+c|0)?1:0);if(l)c4(d,aG$,aG_);var
m=b<0?1:0,n=m||(a[2]<b?1:0);if(n)c4(b,aHb,aHa);var
h=b+c|0;if(a[1].length-1<h)i2(a,h);else
if(a[2]<h)a[2]=h;if(g[1]===a[1])if(d<b){var
i=c-1|0;if(!(i<0)){var
e=i;for(;;){a[1][(b+e|0)+1]=g[1][(d+e|0)+1];var
o=e-1|0;if(0!==e){var
e=o;continue}break}}return 0}var
j=c-1|0,p=0;if(!(j<0)){var
f=p;for(;;){a[1][(b+f|0)+1]=g[1][(d+f|0)+1];var
q=f+1|0;if(j!==f){var
f=q;continue}break}}return 0},aHc=function(b,a){return F9(b,0,a,a[2],b[2])},aHd=function(c){var
a=c[2]-1|0,b=0;for(;;){if(0<=a){var
d=[0,c[1][a+1],b],a=a-1|0,b=d;continue}return b}},aHe=function(a){if(0===a[2])return[0];var
c=a_(a[2],a[1][1]),d=a[2]-1|0,e=1;if(!(d<1)){var
b=e;for(;;){c[b+1]=a[1][b+1];var
f=b+1|0;if(d!==b){var
b=f;continue}break}}return c},aHf=function(c){var
d=W(c),e=cZ(0,d),b=0,a=c;for(;;){if(a){var
f=a[2];e[b+1]=a[1];var
b=b+1|0,a=f;continue}return[0,e,d,gH]}},aHg=function(b){var
c=b.length-1;if(bi(b)===gf){var
d=cZ(0,c),e=c-1|0,g=0;if(!(e<0)){var
a=g;for(;;){d[a+1]=b[a+1];var
h=a+1|0;if(e!==a){var
a=h;continue}break}}var
f=d}else
var
f=b.slice();return[0,f,c,gH]},aHh=function(a){return[0,a[1].slice(),a[2],a[3]]},aHi=function(d,c,a){if(a<0)c4(a,aHk,aHj);var
g=c<0?1:0,h=g||(d[2]<(c+a|0)?1:0);if(h)c4(c,aHm,aHl);var
e=cZ(0,a),f=a-1|0,i=0;if(!(f<0)){var
b=i;for(;;){e[b+1]=d[1][(b+c|0)+1];var
j=b+1|0;if(f!==b){var
b=j;continue}break}}return[0,e,a,d[3]]},aHn=function(d,b){var
a=[0,0];for(;;){if(a[1]<b[2]){c(d,b[1][a[1]+1]);a[1]++;continue}return 0}},aHo=function(d,c){var
a=[0,0];for(;;){if(a[1]<c[2]){b(d,a[1],c[1][a[1]+1]);a[1]++;continue}return 0}},F_=function(h,e){var
f=e[2],a=nX(f),b=[0,0],d=[0,0],i=e[1];for(;;){if(d[1]<e[2])if(d[1]<f){var
g=i[d[1]+1];if(c(h,g)){a[1][b[1]+1]=g;b[1]++}d[1]++;continue}a[2]=b[1];i2(a,b[1]);return a}},aHp=function(c,a){var
b=F_(c,a);a[1]=b[1];a[2]=b[2];return 0},aHq=function(h,e){var
f=e[2],a=nX(f),b=[0,0],d=[0,0],i=e[1];for(;;){if(d[1]<e[2])if(d[1]<f){var
g=c(h,i[d[1]+1]);if(g){a[1][b[1]+1]=g[1];b[1]++}d[1]++;continue}a[2]=b[1];i2(a,b[1]);return a}},aHr=function(d,b){var
a=0;for(;;){if(b[2]<=a)throw x;if(c(d,b[1][a+1]))return a;var
a=a+1|0;continue}},aHs=function(f,a){var
d=a[2],e=cZ(0,d),b=[0,0];for(;;){if(b[1]<a[2])if(b[1]<d){var
g=c(f,a[1][b[1]+1]);e[b[1]+1]=g;b[1]++;continue}var
h=a[3];return[0,e,Fl(d,a[2]),h]}},aHt=function(f,c){var
d=c[2],e=cZ(0,d),a=[0,0];for(;;){if(a[1]<c[2])if(a[1]<d){var
g=b(f,a[1],c[1][a[1]+1]);e[a[1]+1]=g;a[1]++;continue}var
h=c[3];return[0,e,Fl(d,c[2]),h]}},aHu=function(f,e,d){var
a=0,c=e;for(;;){if(d[2]<=a)return c;var
g=b(f,c,d[1][a+1]),a=a+1|0,c=g;continue}},aHv=function(f,c,e){var
a=c[2]-1|0,d=e;for(;;){if(0<=a)if(!(c[2]<=a)){var
g=b(f,c[1][a+1],d),a=a-1|0,d=g;continue}return d}},F$=function(b){function
c(d){var
a=[0,d];function
e(d){if(b[2]<=a[1])throw cn;var
c=b[1][a[1]+1];a[1]++;return c}function
f(c){return b[2]<=a[1]?0:b[2]-a[1]|0}return fX(e,f,function(b){return c(a[1])})}return c(0)},aHw=function(a){if(a[4]){var
b=tB(a),c=cZ(0,b);aDP(function(b,a){return c[b+1]=a},a);return[0,c,b,gH]}var
d=nX(0);EV(function(a){return kO(d,a)},a);return d},aHx=function(b,a){return b[1][a+1]},aHy=function(c,b,a){return c[1][b+1]=a},aHz=function(c,b,a,f,e,d){var
g=c?c[1]:aHC,h=b?b[1]:aHB,i=a?a[1]:aHA;return nG([0,g],[0,h],[0,i],f,e,F$(d))};H(0);H(0);cf(0,16);var
aHD=function(a){var
w=[N,aHE,H(0)],p=[N,aHF,H(0)],q=[N,aHG,H(0)],f=O(hi,aHH)?0:1;function
l(d,c){return 0===b(a[7],d,c)?1:0}function
y(b){return c(a[4],b)}var
d=[0,y];function
z(e,d){var
f=FM(e,aFT),b=iY(f,c(a[12][1],d)),g=1<b[0]?[1,b[1]]:[0,b[1]];return 0===g[0]?1:0}function
A(i,d){var
f=[0,[0,aHI,0]],e=[0,0];function
g(b,a){f[1]=[0,[0,b,a],f[1]];return 0}function
j(a,f){var
b=e[1],d=c(i,f);if(b){var
h=b[1];return 0===d?(e[1]=0,g(h,a)):0}return 0===d?0:(e[1]=[0,a],0)}b(a[9],j,d);var
h=e[1];if(h){var
k=h[1];g(k,c(a[1],d))}function
l(c,b){var
e=b[2],f=b[1],g=c[2];return[0,f,[0,m(a[10],d,e,c[1]-e|0),g]]}var
n=f[1];return aZ(l,[0,c(a[1],d),0],n)[2]}if(f)var
S=FN(c(a[3],58)),T=FM(a[12][2],S),n=function(a){return z(T,a)};else
var
n=function(a){return 0};function
g(a){return l(c(d[1],aHJ),a)}function
e(a){var
b=g(a);return b?b:n(a)}function
o(a){return l(c(d[1],aHK),a)}function
C(a){return l(c(d[1],aHL),a)}function
r(b){var
a=aj(b);if(a)if(e(a[1]))return 0;return 1}function
U(a){return 1-r(a)}var
V=[0,c(d[1],aHM),0];function
t(c){var
d=B(a[3],c);function
e(a){if(e7(a,d))throw p;return 0}return function(c){b(a[8],e,c);return 1}}var
D=t(aHN),E=t(aHO),W=f?E:D,F=[0,W];function
h(a){if(c(F[1],a))return a;throw p}function
G(b,a){return[0,h(a),b]}function
I(b,a){function
c(c){if(r(a))return ab(a,b);throw[0,ct,aHP]}if(f){if(b)if(g(b[1])){if(a)if(g(a[1]))throw[0,ct,aHQ];return ab(a,b)}return c(0)}return c(0)}var
X=[0,G,I],Y=0;function
j(b,a){var
n=y6<=b?1:0;function
i(r,p){var
b=r,a=p;for(;;){if(0===b){if(!a)return 0;if(!a[2])if(e(a[1]))return a}if(a){var
k=a[2],l=a[1];if(!k)if(e(l))throw q;if(n)if(C(l)){var
b=b+1|0,a=k;continue}if(0===b){var
j=a[2];if(j)if(!j[2]){var
u=j[1],v=a[1];if(f)if(o(v))if(g(u))return a}}var
h=a[2],m=a[1];if(h)if(!h[2]){var
t=h[1];if(f)if(o(m))if(g(t))throw q}if(o(m)){var
a=h;continue}if(0===b){var
s=a[1];return[0,s,i(0,a[2])]}var
b=b-1|0,a=a[2];continue}var
w=i(b-1|0,0);return[0,c(d[1],aHR),w]}}return i(0,a)}function
Z(a){return j(aaQ,a)}function
_(a){return j(y6,a)}function
$(a){return j(aaQ,a)}function
u(a){return j(y6,a)}function
aa(a){if(a){var
b=a[2],c=a[1];if(!b)if(e(c))throw[0,ct,aHS];return b}throw[0,ct,aHT]}function
ac(g,f){function
c(d,c){var
b=d,a=c;for(;;){if(b){var
e=b[2],f=b[1];if(a){var
g=a[2];if(bP(f,a[1])){var
b=e,a=g;continue}}return 0}return 1}}var
b=aj(g),a=aj(f);if(b){var
d=b[1];if(a)return bP(d,a[1])?c(b,a):0;if(e(d))throw[0,ct,aHU]}if(a)if(e(a[1]))throw[0,ct,aHV];return c(b,a)}function
v(m,l,k){var
n=u(l),o=u(k);function
h(g,f){var
b=g,a=f;for(;;){if(b){var
e=b[2],h=b[1];if(a){var
i=a[2];if(bP(h,a[1])){var
b=e,a=i;continue}}if(m)throw w;var
b=e,a=[0,c(d[1],aHW),a];continue}return a}}var
b=aj(n),a=aj(o);if(b){var
i=b[1];if(a)if(bP(i,a[1]))var
j=h(b,a),f=1,g=0;else
var
g=1;else
var
g=1;if(g){if(e(i))throw[0,ct,aHX];var
f=0}}else
var
f=0;if(!f){if(a)if(e(a[1]))throw[0,ct,aHY];var
j=h(b,a)}return aj(j)}function
ad(b,a){return v(0,b,a)}function
af(b,a){return v(1,b,a)}function
J(i){var
h=f?c(d[1],aHZ):c(d[1],aH4),e=aj(i);if(e){var
j=e[2];if(g(e[1])){var
k=f?c(d[1],aH0):c(d[1],aH2),l=[0,k,[0,b(a[6],h,j),0]],m=c(d[1],aH1);return b(a[6],m,l)}return b(a[6],h,e)}return c(d[1],aH3)}var
ag=f?aH5:aH$,ah=B(a[3],ag);function
K(a){return e7(a,ah)}function
L(b){var
d=J(b);return c(a[5],d)}function
M(k){var
a=A(K,k);if(a){var
i=a[1],l=a[2];if(e(i))var
b=[0,i],j=l,f=1;else
var
f=0}else
var
f=0;if(!f)var
b=0,j=a;var
d=c(mX(function(a){return g(a)?0:1}),j),m=b?[0,b[1],d]:d,n=aj(m);ae(function(a){h(a);return 0},d);return n}function
i(a,f){if(a){var
c=a[2],d=a[1];if(!c)if(e(d))throw[0,ct,aH6];return b(f,d,c)}throw[0,ct,aH7]}function
P(a){return i(a,function(a,b){return a})}function
ai(b,a){return i(a,function(d,a){return[0,h(c(b,d)),a]})}function
k(d){var
f=c(a[1],d);try{var
e=b(a[11],d,46),g=[0,m(a[10],d,e+1|0,f-(e+1|0)|0)],h=[0,m(a[10],d,0,e),g];return h}catch(a){a=s(a);if(a===x)return[0,d,0];throw a}}function
ak(a){return k(P(a))[2]}function
al(j,e){return i(e,function(l,e){var
f=k(l),g=f[1],i=c(j,f[2]);if(i){var
m=[0,g,[0,i[1],0]],n=c(d[1],aH8);return[0,h(b(a[6],n,m)),e]}return[0,g,e]})}function
am(a){return i(a,function(a,b){return k(a)[1]})}function
Q(a){return i(a,function(c,b){var
a=k(c);return[0,b,a[1],a[2]]})}function
R(e){var
f=e[3],g=e[2],j=e[1];if(f)var
k=[0,g,[0,f[1],0]],l=c(d[1],aH9),i=b(a[6],l,k);else
var
i=g;return[0,h(i),j]}function
an(b,a){return R(c(b,Q(a)))}return[0,w,p,q,f,l,y,d,z,A,n,g,e,o,C,r,U,V,t,D,E,F,h,G,I,X,Y,j,Z,_,$,u,aa,ac,v,ad,af,J,K,L,M,L,M,i,P,ai,k,ak,al,am,Q,R,an,function(e){var
d=aj(e);if(d){var
c=d[1];if(g(c))return 0;if(n(c))return[0,b(a[2],c,0)]}throw[0,ct,aH_]}]},aIa=C,aIb=I,aIc=function(a){return a},aId=function(a){return a},aIe=function(a){return a},i4=aHD([0,aIa,aIb,aIc,aId,aIe,function(b,a){return er(b,a)},he,rQ,aD0,aD,aqc,[0,aFX,aF3]]),kP=i4[40],Ga=i4[39],aIf=i4[47],aIg=i4[32],aIh=i4[24],aIi=i4[16],Gb=function(i,e,b){var
d=0!==b?1:0;if(d){var
a=[J,function(a){return bUs(rH(0))}];return eC(aIn,aIm,aIl,function(b,d){if(typeof
d==="number"){if($l===d){var
g=bi(a),e=bu===g?a[1]:J===g?cd(a):a,j=e[4],k=e[5]+1|0,l=e[6]+$W|0;return m(ag(b,aIj),l,k,j)}if(aiq<=d){var
h=bi(a),f=bu===h?a[1]:J===h?cd(a):a,n=f[3],o=f[2],p=f[1];return m(ag(b,aIk),n,o,p)}return i?bl(b,i[1]):0}return bl(b,c(d[2],0))},e,b)}return d},aIo=function(d){return function(e){var
g=[0,d[2]],f=[0,e[1]];function
a(k,h,j){var
i=0<=b(d[3],h,g[1])?1:0;if(i){var
a=f[1];Gb(k,a,e[3]);bl(a,e[2]);bl(a,c(d[1],h));bl(a,aIp);bl(a,j);return kB(a,10)}return i}return[0,g,f,a,function(o,i,h){if(0<=b(d[3],i,g[1])){var
a=f[1];Gb(o,a,e[3]);bl(a,e[2]);bl(a,c(d[1],i));bl(a,aIq);var
j=Gc[1],k=h[2],l=h[1],m=t(k,t(apQ,Gc[2]));return ag(a,[0,aY(l,j),m])}var
p=f[1];function
n(a){return 0}return br(n,p,h[1])}]}},aIr=function(a){return Uh<=a?L7<=a?Ml<=a?aIs:aIt:Mo<=a?aIu:aIv:wA===a?aIw:$J<=a?aIx:aIy},Gd=function(a){return Uh<=a?L7<=a?Ml<=a?0:5:Mo<=a?4:1:wA===a?6:$J<=a?3:2},aIz=wA,aIC=[0,nE,aIA,aIB];c(aIo([0,aIr,aIz,function(b,a){var
c=Gd(a);return nK(Gd(b),c)}]),aIC);var
aIE=[N,aID,H(0)],kQ=function(a){if(0<=a)if(!(cX<=a))return gq(a);throw aIE},aIF=function(a){return a},nZ=function(b,a){var
c=aQ(b,a),d=a2<=c?h2<c?mF<c?(((c+Sv|0)<<6|cU&aQ(b,a+1|0))<<6|cU&aQ(b,a+2|0))<<6|cU&aQ(b,a+3|0):((c+LN|0)<<6|cU&aQ(b,a+1|0))<<6|cU&aQ(b,a+2|0):(c+_H|0)<<6|cU&aQ(b,a+1|0):c;return d},n0=function(c,a){var
b=I(c,a);return a2<=b?h2<b?mF<b?a+4|0:a+3|0:a+2|0:a+1|0},t2=function(b,a){return cU<a?O2<a?eg<a?(bd(b,mx+(a>>>18|0)|0),bd(b,a2|(a>>>12|0)&63),bd(b,a2|(a>>>6|0)&63),bd(b,a2|a&63)):(bd(b,jD|a>>>12|0),bd(b,a2|(a>>>6|0)&63),bd(b,a2|a&63)):(bd(b,jT|a>>>6|0),bd(b,a2|a&63)):bd(b,a)},gI=[N,aIG,H(0)];H(0);var
n1=a_(48,0),t3=0,aIH=48,t4=function(a){var
c=z(n1,a)[a+1];if(0===c){var
b=t4(a-1|0),d=b+t4(a-2|0)|0,e=b<d?d:b;z(n1,a)[a+1]=e;return e}return c};z(n1,0)[1]=jA;z(n1,1)[2]=qC;var
Ge=kc(aIH,function(a){return 0===a?1:t4(a-1|0)});z(Ge,Ge.length-1-1|0);B(aIF,aII);try{fK(bB5)}catch(a){a=s(a);if(a!==x)throw a}var
aIL=[0,0],aIM=0,Gf=1;try{var
bB4=rI(bB3,jP,fK(bB2)),n2=bB4}catch(a){a=s(a);if(a!==x)throw a;var
n2=cL}var
n3=hk([0,hh]);try{var
oX=fK(bBZ),J9=function(d,a){try{var
c=m2(oX,a,58),f=aD(oX,a,c-a|0),g=J9(b(n3[4],f,d),c+1|0);return g}catch(c){c=s(c);if(c===x){var
e=aD(oX,a,C(oX)-a|0);return b(n3[4],e,d)}throw c}},bB0=J9(n3[1],0);b(n3[3],bB1,bB0)}catch(a){a=s(a);if(a!==x)throw a}var
Gg=[0,1],aIO=function(a){return cc(n2)};nf(function(f,b,e){var
c=(b+e|0)-1|0;if(!(c<b)){var
a=b;for(;;){if(Gg[1])d2(n2,aIN);var
d=I(f,a);rA(n2,d);Gg[1]=10===d?1:0;var
g=a+1|0;if(c!==a){var
a=g;continue}break}}return 0},aIO);var
i5=function(b){if(typeof
b==="number")return t(a(q+b),t(aIW,a(q+(b+1|0))));function
j(f,e){var
c=f,a=e;for(;;){if(0===a)return c;var
d=a-1|0,c=[0,b[d+1],c],a=d;continue}}function
v(a){if(typeof
a==="number")return 0;var
b=a[1];return[0,b,v(a[2])]}function
f(a){return t(aIY,t(a,aIX))}var
k=b.length-1,d=bi(b),e=b;for(;;){if(typeof
e==="number")var
w=bP(e,0);else{var
p=0===bi(e)?1:0,A=e.length-1;if(p){var
s=2===A?1:0;if(s){var
e=e[2];continue}var
u=s}else
var
u=p;var
w=u}if(w)return t(aI1,t(er(aI0,B(i5,v(b))),aIZ));if(0===d)return t(aI4,t(er(aI3,B(i5,j(0,k))),aI2));if(d===J)return f(aI5);if(d===lQ)return f(aI6);if(d===N){var
x=j(0,k);if(x){var
l=x[2];if(l){var
D=l[1],E=t(aI9,t(er(aI8,B(i5,l[2])),aI7));return t(aI_,t(i5(D),E))}}throw[0,r,aI$]}if(d===UL)return f(aJa);if(d===bu)return f(aJb);if(d<lW)return t(aJf,t(a(q+d),t(aJe,t(er(aJd,B(i5,j(0,k))),aJc))));if(d===lT)return t(aJh,t(gr(b),aJg));if(d===re){var
m=A_(b);if(3===m)return b<0?aIQ:aIR;if(4<=m)return aIS;var
n=c(aN(aIT),b);if(b==j6(n))var
g=n;else
var
o=c(aN(aIU),b),z=b==j6(o)?o:c(aN(aIV),b),g=z;var
h=0,y=C(g);for(;;){if(y<=h)return t(g,aIP);var
i=I(g,h),F=48<=i?58<=i?0:1:45===i?1:0;if(F){var
h=h+1|0;continue}return g}}return d===lW?f(aJi):d===at?f(aJj):aU(t(aJl,t(a(q+d),aJk)))}},aJn=function(a,d){if(0===bi(d)){var
h=d[1][1];b(A(a),aJo,h);if(1<d.length-1){b7(a,aJp);var
f=d.length-1-1|0,i=1;if(!(f<1)){var
e=i;for(;;){if(1<e)b7(a,aJr);var
g=i5(d[e+1]);b(A(a),aJm,g);var
j=e+1|0;if(f!==e){var
e=j;continue}break}}hr(a,41)}}else{var
k=d[1];b(A(a),aJs,k)}return c(A(a),aJq)},kR=[0,function(d,c,a){return b(c,d,a)}],aJt=function(a){var
d=kR[1];kR[1]=function(c,f,e){try{var
g=b(a,c,e);return g}catch(a){a=s(a);return m(d,c,f,a)}};return 0},n4=function(c){var
e=kR[1];kR[1]=function(d,f,a){return a[1]===c[1]?b(c[3],d,a[2]):m(e,d,f,a)};return[0]},Gh=function(d){return function(a){if(a===sa)return c(A(d),aJu);if(a[1]===r){var
e=a[2],g=e[3],h=e[2],i=e[1];return p(A(d),aJv,i,h,g)}if(a[1]===bG){var
f=a[2],j=f[3],k=f[2],l=f[1];return p(A(d),aJw,l,k,j)}if(a[1]===bz){var
n=a[2];return b(A(d),aJx,n)}if(a[1]===ct){var
o=a[2];return b(A(d),aJy,o)}if(a[1]===sI){var
q=a[2];return b(A(d),aJz,q)}if(a===af)return c(A(d),aJA);if(a[1]===bQ){var
s=a[2];return b(A(d),aJB,s)}return m(kR[1],d,aJn,a)}},kS=[0,0,0,0],kT=[0,0,0,0],aMt=function(d){var
a=m5(0);function
e(c,b){return rX(c,b,a)}var
b=m5(0);function
f(c,a){return rX(c,a,b)}var
c=m5(0);function
g(b,a){return rX(b,a,c)}function
h(b){return m6(b,a)}function
i(a){return m6(a,b)}return[0,d,h,i,function(a){return m6(a,c)},e,f,g]},aMu=[0,0,0,0],aMv=[0,0,0,0],aMw=[0,0,0,0],aMx=[0,0,0,0],aMy=[0,0,0,0],aMz=[0,0,0,0],aMA=function(g){function
G(a){if(2<C(a))if(92===I(a,0))if(36===I(a,1))return a;return gr(a)}var
d=g[2];function
j(c){var
a=c;for(;;)switch(a[0]){case
0:var
a=a[3];continue;case
1:var
d=a[3],b=j(a[2]);if(b){var
a=d;continue}return b;case
3:return 1;default:return 0}}function
k(a){return Y(aMB)}function
i(a){switch(a[0]){case
1:var
b=a[2];return 2===b[0]?k(0):j(b)?b:k(0);case
2:var
c=a[2],d=a[1],e=i(a[3]);return[0,d,i(c),e];case
4:var
f=a[2],g=a[1],h=i(a[3]);return[1,g,i(f),h];default:return k(0)}}function
ay(a){switch(a[0]){case
1:return a[2];case
4:return k(0);default:return i(a)}}function
l(a){return Y(aMC)}function
n(a){switch(a[0]){case
3:var
c=a[2],d=a[1],e=n(a[3]);return[1,d,n(c),e];case
7:var
b=a[2];return 2===b[0]?l(0):j(b)?b:l(0);default:return l(0)}}function
az(a){return 7===a[0]?a[2]:n(a)}function
o(a){return Y(aMD)}function
p(a){switch(a[0]){case
1:var
b=a[2];return 2===b[0]?o(0):j(b)?b:o(0);case
5:var
c=a[2],d=a[1],e=p(a[3]);return[1,d,p(c),e];default:return o(0)}}function
aA(a){return 1===a[0]?a[2]:p(a)}function
h(k){var
a=k;for(;;)switch(a[0]){case
0:return 1;case
1:var
b=a[2];switch(b[0]){case
2:return 1;case
3:if(!O(b[2],aME))return 1;break}return 0;case
2:var
l=a[3],c=h(a[2]);if(c){var
a=l;continue}return c;case
4:return 1;case
5:var
m=a[3],d=h(a[2]);if(d){var
a=m;continue}return d;case
7:var
n=a[3],e=h(a[2]);if(e){var
a=n;continue}return e;case
8:var
o=a[3],f=h(a[2]);if(f){var
a=o;continue}return f;case
15:var
g=a[3];if(0===g[0])return 1;var
a=g;continue;case
16:var
i=a[3];if(0===i[0])return 1;var
a=i;continue;case
17:var
a=a[3];continue;case
18:var
p=a[3],j=h(a[2]);if(j){var
a=p;continue}return j;case
20:var
a=a[2];continue;case
21:var
a=a[3];continue;case
23:var
a=a[2];continue;case
24:var
a=a[2];continue;case
27:var
a=a[2];continue;case
28:var
a=a[4];continue;case
29:return 1;case
30:var
a=a[2];continue;default:return 0}}function
s(b){var
a=b;for(;;)switch(a[0]){case
0:var
a=a[3];continue;case
3:return 1;case
4:throw[0,r,aMF];default:return 0}}function
aB(a){switch(a[0]){case
1:return s(a[2]);case
26:return 1;default:return 0}}function
y(c){var
a=c;for(;;)switch(a[0]){case
1:return s(a[2]);case
2:var
d=a[3],b=y(a[2]);if(b){var
a=d;continue}return b;case
39:return 1;default:return 0}}function
t(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[28,e,b,t(c)]}return b}return[0,d]}function
u(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[27,e,b,u(c)]}return b}return[0,d]}function
v(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[23,e,b,v(c)]}return b}return[0,d]}function
z(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[24,e,b,z(c)]}return b}return[0,d]}function
A(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[37,e,b,A(c)]}return b}return[0,d]}function
D(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[32,e,b,D(c)]}return b}return[0,d]}function
E(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[3,e,b,E(c)]}return b}return[0,d]}function
F(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[3,e,b,F(c)]}return b}return[0,d]}function
w(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[1,e,b,w(c)]}return b}return[0,d]}function
H(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[1,e,b,H(c)]}return b}return[0,d]}function
K(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[5,e,b,K(c)]}return b}return[0,d]}function
L(a){if(a){var
c=a[2],b=a[1];if(c){var
d=b[1];return[0,d,b,L(c)]}return b}throw[0,r,aMG]}function
M(a){if(a){var
c=a[2],b=a[1];if(c){var
d=b[1];return[1,d,b,M(c)]}return b}throw[0,r,aMH]}function
P(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[1,e,b,P(c)]}return b}return[0,d]}function
Q(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[1,e,b,Q(c)]}return b}return[0,d]}function
R(a){if(a){var
c=a[2],b=a[1];if(c){var
d=b[1];return[2,d,b,R(c)]}return b}throw[0,r,aMI]}function
T(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[7,e,b,T(c)]}return b}return[0,d]}function
V(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[4,e,b,V(c)]}return b}return[0,d]}function
W(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[2,e,b,W(c)]}return b}return[0,d]}function
X(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[1,e,b,X(c)]}return b}return[0,d]}function
Z(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[8,e,b,Z(c)]}return b}return[0,d]}function
$(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[7,e,b,$(c)]}return b}return[0,d]}function
aa(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[7,e,b,aa(c)]}return b}return[0,d]}function
ac(a){if(a){var
c=a[2],b=a[1];if(c){var
e=b[1];return[37,e,b,ac(c)]}return b}return[0,d]}function
ad(b){var
c=b[3],d=b[2],a=b[1];return c?[26,a,[7,a,[3,a,d]],u(c)]:[7,a,[3,a,d]]}function
ae(b){var
c=b[2],a=b[1];return 0===b[3]?[22,a,[7,a,[2,a,c]],b[4]]:[22,a,[7,a,[2,a,c]],[30,a,b[4]]]}function
af(a){var
b=a[1];return[2,b[1],b,a[2]]}function
aC(a){return t(B(ad,a))}function
aD(a){return v(B(ae,a))}function
aE(a){return w(B(af,a))}function
x(a){switch(a[0]){case
1:var
b=a[2],c=x(a[3]);return ab(x(b),c);case
2:return[0,[0,a[2],a[3]],0];default:throw[0,r,aMJ]}}function
ag(d,c){var
a=d,b=c;for(;;){if(1===a[0]){var
e=a[2],f=ag(a[3],b),a=e,b=f;continue}return[0,a,b]}}function
ah(d,c){var
a=d,b=c;for(;;){if(1===a[0]){var
e=a[2],f=ah(a[3],b),a=e,b=f;continue}return[0,a,b]}}function
ai(d,c){var
a=d,b=c;for(;;){if(5===a[0]){var
e=a[2],f=ai(a[3],b),a=e,b=f;continue}return[0,a,b]}}function
aj(d,c){var
a=d,b=c;for(;;)switch(a[0]){case
0:return b;case
23:case
24:case
27:case
28:case
32:case
37:var
e=a[2],f=aj(a[3],b),a=e,b=f;continue;default:return[0,a,b]}}function
ak(d,c){var
a=d,b=c;for(;;)switch(a[0]){case
0:return b;case
7:case
8:var
e=a[2],f=ak(a[3],b),a=e,b=f;continue;default:return[0,a,b]}}function
al(d,c){var
a=d,b=c;for(;;)switch(a[0]){case
0:return b;case
7:case
37:var
e=a[2],f=al(a[3],b),a=e,b=f;continue;default:return[0,a,b]}}function
am(d,c){var
a=d,b=c;for(;;)switch(a[0]){case
0:return b;case
3:var
e=a[2],f=am(a[3],b),a=e,b=f;continue;default:return[0,a,b]}}function
an(d,c){var
a=d,b=c;for(;;)switch(a[0]){case
0:return b;case
3:var
e=a[2],f=an(a[3],b),a=e,b=f;continue;default:return[0,a,b]}}function
ao(d,c){var
a=d,b=c;for(;;)switch(a[0]){case
0:return b;case
2:var
e=a[2],f=ao(a[3],b),a=e,b=f;continue;default:return[0,a,b]}}function
ap(d,c){var
a=d,b=c;for(;;)switch(a[0]){case
0:return b;case
1:var
e=a[2],f=ap(a[3],b),a=e,b=f;continue;default:return[0,a,b]}}function
aq(d,c){var
a=d,b=c;for(;;){if(4===a[0]){var
e=a[2],f=aq(a[3],b),a=e,b=f;continue}return[0,a,b]}}function
ar(d,c){var
a=d,b=c;for(;;){if(7===a[0]){var
e=a[2],f=ar(a[3],b),a=e,b=f;continue}return[0,a,b]}}function
as(d,c){var
a=d,b=c;for(;;){if(2===a[0]){var
e=a[2],f=as(a[3],b),a=e,b=f;continue}return[0,a,b]}}function
au(d,c){var
a=d,b=c;for(;;)switch(a[0]){case
0:return b;case
1:var
e=a[2],f=au(a[3],b),a=e,b=f;continue;default:return[0,a,b]}}function
av(d,c){var
a=d,b=c;for(;;){if(1<a[0])return[0,a,b];var
e=a[2],f=av(a[3],b),a=e,b=f;continue}}function
aw(d,c){var
a=d,b=c;for(;;){if(1===a[0]){var
e=a[2],f=aw(a[3],b),a=e,b=f;continue}return[0,a,b]}}function
aF(b,e){var
d=c(g[8],e),f=d[7],h=d[6],i=d[5],j=d[4],k=d[3],l=d[2],m=d[1],n=d[8]?[1,b,[3,b,aMK]]:[1,b,[3,b,aMN]];return[5,b,[1,b,[0,b,[3,b,aMM],[2,b,aML]]],[23,b,[7,b,[22,b,G(m)],[7,b,[7,b,[7,b,[7,b,[7,b,[7,b,[10,b,a(q+l)],[10,b,a(q+k)]],[10,b,a(q+j)]],[10,b,a(q+i)]],[10,b,a(q+h)]],[10,b,a(q+f)]],n]]]]}var
aG=[0,aF,function(b,e){var
d=c(g[8],e),f=d[7],h=d[6],i=d[5],j=d[4],k=d[3],l=d[2],m=d[1],n=d[8]?[1,b,[3,b,aMO]]:[1,b,[3,b,aMR]];return[4,b,[1,b,[0,b,[3,b,aMQ],[2,b,aMP]]],[36,b,[37,b,[34,b,G(m)],[37,b,[37,b,[37,b,[37,b,[37,b,[37,b,[17,b,a(q+l)],[17,b,a(q+k)]],[17,b,a(q+j)]],[17,b,a(q+i)]],[17,b,a(q+h)]],[17,b,a(q+f)]],n]]]]}];function
aH(a,b){return[1,a,[0,a,[3,a,aMT],[2,a,aMS]]]}var
aI=[0,aH,function(a,b){return[1,a,[0,a,[3,a,aMV],[2,a,aMU]]]}];function
aJ(a,b){return[1,a,[2,a,g[33][1]]]}var
e=[],aK=[0,aJ,function(a,b){return[1,a,[2,a,g[33][1]]]}];if(!kS[1])np(gJ,function(F){var
a=hv(F,Gi),z=a[1],A=a[2],G=a[3],g=a[4],p=a[5],B=a[6],H=a[7],r=a[8],u=a[9],v=a[10],i=a[11],q=a[12],C=a[13],k=a[14],n=a[15],w=a[16],I=a[17],D=a[18],s=a[20],d=a[21],x=a[22],j=a[23],e=a[24],J=a[25],h=a[26],l=a[27],y=a[28],E=a[29],o=a[30],t=a[31],K=a[19];function
L(b,a){return a}function
M(a,c){switch(c[0]){case
0:return[0,b(a[1][d+1],a,c[1])];case
1:var
f=c[3],h=c[2],j=b(a[1][d+1],a,c[1]),k=b(a[1][t+1],a,h);return[1,j,k,b(a[1][t+1],a,f)];case
2:var
l=c[3],m=c[2],n=b(a[1][d+1],a,c[1]),o=b(a[1][i+1],a,m);return[2,n,o,b(a[1][e+1],a,l)];default:var
p=c[2],q=b(a[1][d+1],a,c[1]);return[3,q,b(a[1][g+1],a,p)]}}function
N(a,c){switch(c[0]){case
0:return[0,b(a[1][d+1],a,c[1])];case
1:var
f=c[3],k=c[2],m=b(a[1][d+1],a,c[1]),n=b(a[1][o+1],a,k);return[1,m,n,b(a[1][e+1],a,f)];case
2:var
q=c[4],s=c[3],u=c[2],v=b(a[1][d+1],a,c[1]),w=b(a[1][A+1],a,u),x=b(a[1][j+1],a,s);return[2,v,w,x,b(a[1][h+1],a,q)];case
3:var
z=c[3],B=c[2],C=b(a[1][d+1],a,c[1]),D=b(a[1][i+1],a,B);return[3,C,D,b(a[1][o+1],a,z)];case
4:var
E=c[4],F=c[3],G=c[2],H=b(a[1][d+1],a,c[1]),I=b(a[1][r+1],a,G),J=b(a[1][t+1],a,F);return[4,H,I,J,b(a[1][o+1],a,E)];case
5:var
K=c[3],L=c[2],M=b(a[1][d+1],a,c[1]),N=b(a[1][i+1],a,L);return[5,M,N,b(a[1][y+1],a,K)];case
6:var
O=c[3],P=c[2],Q=b(a[1][d+1],a,c[1]),R=b(a[1][o+1],a,P);return[6,Q,R,b(a[1][l+1],a,O)];case
7:var
S=c[3],T=c[2],U=b(a[1][d+1],a,c[1]),V=b(a[1][o+1],a,T);return[7,U,V,b(a[1][o+1],a,S)];case
8:var
W=c[3],X=c[2],Y=b(a[1][d+1],a,c[1]),Z=b(a[1][o+1],a,X);return[8,Y,Z,b(a[1][o+1],a,W)];case
9:var
_=c[4],$=c[3],aa=c[2],ab=b(a[1][d+1],a,c[1]),ac=b(a[1][g+1],a,aa),ad=b(a[1][p+1],a,$);return[9,ab,ac,ad,b(a[1][o+1],a,_)];default:var
ae=c[2],af=b(a[1][d+1],a,c[1]);return[10,af,b(a[1][g+1],a,ae)]}}function
O(a,c){switch(c[0]){case
0:return[0,b(a[1][d+1],a,c[1])];case
1:var
e=c[3],f=c[2],i=b(a[1][d+1],a,c[1]),j=b(a[1][h+1],a,f);return[1,i,j,b(a[1][h+1],a,e)];case
2:var
k=c[3],m=c[2],n=b(a[1][d+1],a,c[1]),o=b(a[1][E+1],a,m);return[2,n,o,b(a[1][E+1],a,k)];case
3:var
p=c[2],q=b(a[1][d+1],a,c[1]);return[3,q,b(a[1][l+1],a,p)];case
4:var
r=c[4],s=c[3],t=c[2],u=b(a[1][d+1],a,c[1]),w=b(a[1][g+1],a,t),x=b(a[1][v+1],a,s);return[4,u,w,x,b(a[1][h+1],a,r)];case
5:var
y=c[5],z=c[4],B=c[3],D=c[2],F=b(a[1][d+1],a,c[1]),G=b(a[1][g+1],a,D),H=b(a[1][C+1],a,B),I=b(a[1][A+1],a,z);return[5,F,G,H,I,b(a[1][h+1],a,y)];case
6:var
J=c[4],K=c[3],L=c[2],M=b(a[1][d+1],a,c[1]),N=b(a[1][g+1],a,L),O=b(a[1][v+1],a,K);return[6,M,N,O,b(a[1][h+1],a,J)];default:var
P=c[2],Q=b(a[1][d+1],a,c[1]);return[7,Q,b(a[1][g+1],a,P)]}}function
P(a,c){switch(c[0]){case
0:return[0,b(a[1][d+1],a,c[1])];case
1:var
f=c[3],i=c[2],j=b(a[1][d+1],a,c[1]),k=b(a[1][y+1],a,i);return[1,j,k,b(a[1][y+1],a,f)];case
2:var
l=c[3],m=c[2],n=b(a[1][d+1],a,c[1]),p=b(a[1][h+1],a,m);return[2,n,p,b(a[1][h+1],a,l)];case
3:var
r=c[4],s=c[3],t=c[2],u=b(a[1][d+1],a,c[1]),w=b(a[1][q+1],a,t),x=b(a[1][o+1],a,s);return[3,u,w,x,b(a[1][g+1],a,r)];case
4:var
z=c[2],A=b(a[1][d+1],a,c[1]);return[4,A,b(a[1][e+1],a,z)];case
5:var
B=c[6],D=c[5],E=c[4],F=c[3],G=c[2],H=b(a[1][d+1],a,c[1]),I=b(a[1][g+1],a,G),J=b(a[1][q+1],a,F),K=b(a[1][v+1],a,E),L=b(a[1][e+1],a,D);return[5,H,I,J,K,L,b(a[1][h+1],a,B)];case
6:var
M=c[5],N=c[4],O=c[3],P=c[2],Q=b(a[1][d+1],a,c[1]),R=b(a[1][g+1],a,P),S=b(a[1][q+1],a,O),T=b(a[1][C+1],a,N);return[6,Q,R,S,T,b(a[1][e+1],a,M)];case
7:var
U=c[4],V=c[3],W=c[2],X=b(a[1][d+1],a,c[1]),Y=b(a[1][g+1],a,W),Z=b(a[1][v+1],a,V);return[7,X,Y,Z,b(a[1][h+1],a,U)];case
8:var
_=c[4],$=c[3],aa=c[2],ab=b(a[1][d+1],a,c[1]),ac=b(a[1][g+1],a,aa),ad=b(a[1][C+1],a,$);return[8,ab,ac,ad,b(a[1][h+1],a,_)];default:var
ae=c[2],af=b(a[1][d+1],a,c[1]);return[9,af,b(a[1][g+1],a,ae)]}}function
Q(a,c){switch(c[0]){case
0:return[0,b(a[1][d+1],a,c[1])];case
1:var
e=c[4],f=c[3],i=c[2],k=b(a[1][d+1],a,c[1]),m=b(a[1][A+1],a,i),n=b(a[1][j+1],a,f);return[1,k,m,n,b(a[1][h+1],a,e)];case
2:var
o=c[3],q=c[2],r=b(a[1][d+1],a,c[1]),s=b(a[1][h+1],a,q);return[2,r,s,b(a[1][l+1],a,o)];case
3:var
t=c[3],u=c[2],v=b(a[1][d+1],a,c[1]),w=b(a[1][h+1],a,u);return[3,v,w,b(a[1][E+1],a,t)];case
4:var
x=c[3],y=c[2],z=b(a[1][d+1],a,c[1]),B=b(a[1][l+1],a,y);return[4,z,B,b(a[1][l+1],a,x)];case
5:var
C=c[3],D=c[2],F=b(a[1][d+1],a,c[1]),G=b(a[1][l+1],a,D);return[5,F,G,b(a[1][l+1],a,C)];case
6:var
H=c[3],I=c[2],J=b(a[1][d+1],a,c[1]),K=b(a[1][l+1],a,I);return[6,J,K,b(a[1][l+1],a,H)];case
7:var
L=c[4],M=c[3],N=c[2],O=b(a[1][d+1],a,c[1]),P=b(a[1][g+1],a,N),Q=b(a[1][p+1],a,M);return[7,O,P,Q,b(a[1][l+1],a,L)];default:var
R=c[2],S=b(a[1][d+1],a,c[1]);return[8,S,b(a[1][g+1],a,R)]}}function
R(a,e){switch(e[0]){case
0:return[0,b(a[1][d+1],a,e[1])];case
1:var
i=e[3],l=e[2],n=b(a[1][d+1],a,e[1]),o=b(a[1][h+1],a,l);return[1,n,o,b(a[1][h+1],a,i)];case
2:return[2,b(a[1][d+1],a,e[1])];case
3:var
q=e[3],r=e[2],s=b(a[1][d+1],a,e[1]),t=b(a[1][h+1],a,r);return[3,s,t,b(a[1][h+1],a,q)];case
4:var
u=e[3],v=e[2],w=b(a[1][d+1],a,e[1]),y=b(a[1][h+1],a,v);return[4,w,y,b(a[1][h+1],a,u)];case
5:var
z=e[2],A=b(a[1][d+1],a,e[1]);return[5,A,b(a[1][j+1],a,z)];case
6:var
B=e[3],C=e[2],D=b(a[1][d+1],a,e[1]),E=b(a[1][g+1],a,C);return[6,D,E,b(a[1][h+1],a,B)];case
7:var
F=e[2],G=b(a[1][d+1],a,e[1]);return[7,G,b(a[1][j+1],a,F)];case
8:var
I=e[3],J=e[2],K=b(a[1][d+1],a,e[1]),L=b(a[1][h+1],a,J);return[8,K,L,b(a[1][h+1],a,I)];case
9:var
M=e[5],N=e[4],O=e[3],P=e[2],Q=b(a[1][d+1],a,e[1]),R=b(a[1][g+1],a,P),S=function(a){return c(f(a,U,407),a)},T=m(a[1][x+1],a,S,O),V=b(a[1][h+1],a,N),W=function(a,c){var
d=c[2],e=b(f(a,U,As),a,c[1]);return[0,e,b(f(a,U,xJ),a,d)]};return[9,Q,R,T,V,m(a[1][x+1],a,W,M)];case
10:var
X=e[4],Y=e[3],Z=e[2],_=b(a[1][d+1],a,e[1]),$=b(a[1][j+1],a,Z),aa=function(a){return c(f(a,U,410),a)},ab=m(a[1][x+1],a,aa,Y);return[10,_,$,ab,b(a[1][h+1],a,X)];case
11:var
ac=e[3],ad=e[2],ae=b(a[1][d+1],a,e[1]),af=b(a[1][h+1],a,ad);return[11,ae,af,b(a[1][H+1],a,ac)];case
12:var
ag=e[3],ah=e[2],ai=b(a[1][d+1],a,e[1]),aj=b(a[1][g+1],a,ah);return[12,ai,aj,b(a[1][h+1],a,ag)];case
13:var
ak=e[3],al=e[2],am=b(a[1][d+1],a,e[1]),an=b(a[1][h+1],a,al);return[13,am,an,b(a[1][h+1],a,ak)];case
14:var
ao=e[3],ap=e[2],aq=b(a[1][d+1],a,e[1]),ar=b(a[1][h+1],a,ap);return[14,aq,ar,b(a[1][h+1],a,ao)];case
15:var
as=e[2],at=b(a[1][d+1],a,e[1]);return[15,at,b(a[1][g+1],a,as)];case
16:var
au=e[2],av=b(a[1][d+1],a,e[1]);return[16,av,b(a[1][g+1],a,au)];case
17:var
aw=e[2],ax=b(a[1][d+1],a,e[1]);return[17,ax,b(a[1][g+1],a,aw)];case
18:return[18,b(a[1][d+1],a,e[1])];case
19:return[19,b(a[1][d+1],a,e[1])];case
20:var
ay=e[2],az=b(a[1][d+1],a,e[1]);return[20,az,b(a[1][g+1],a,ay)];case
21:var
aA=e[2],aB=b(a[1][d+1],a,e[1]);return[21,aB,b(a[1][h+1],a,aA)];case
22:var
aC=e[3],aD=e[2],aE=b(a[1][d+1],a,e[1]),aF=b(a[1][h+1],a,aD);return[22,aE,aF,b(a[1][h+1],a,aC)];case
23:var
aG=e[3],aH=e[2],aI=b(a[1][d+1],a,e[1]),aJ=b(a[1][h+1],a,aH);return[23,aI,aJ,b(a[1][h+1],a,aG)];case
24:var
aK=e[3],aL=e[2],aM=b(a[1][d+1],a,e[1]),aN=b(a[1][h+1],a,aL);return[24,aM,aN,b(a[1][h+1],a,aK)];case
25:var
aO=e[2],aP=b(a[1][d+1],a,e[1]);return[25,aP,b(a[1][h+1],a,aO)];case
26:var
aQ=e[3],aR=e[2],aS=b(a[1][d+1],a,e[1]),aT=b(a[1][h+1],a,aR);return[26,aS,aT,b(a[1][h+1],a,aQ)];case
27:var
aU=e[3],aV=e[2],aW=b(a[1][d+1],a,e[1]),aX=b(a[1][h+1],a,aV);return[27,aW,aX,b(a[1][h+1],a,aU)];case
28:var
aY=e[3],aZ=e[2],a0=b(a[1][d+1],a,e[1]),a1=b(a[1][h+1],a,aZ);return[28,a0,a1,b(a[1][h+1],a,aY)];case
29:var
a2=e[2],a3=b(a[1][d+1],a,e[1]);return[29,a3,b(a[1][h+1],a,a2)];case
30:var
a4=e[2],a5=b(a[1][d+1],a,e[1]);return[30,a5,b(a[1][h+1],a,a4)];case
31:var
a6=e[2],a7=b(a[1][d+1],a,e[1]);return[31,a7,b(a[1][h+1],a,a6)];case
32:var
a8=e[3],a9=e[2],a_=b(a[1][d+1],a,e[1]),a$=b(a[1][h+1],a,a9);return[32,a_,a$,b(a[1][h+1],a,a8)];case
33:var
ba=e[2],bb=b(a[1][d+1],a,e[1]);return[33,bb,b(a[1][h+1],a,ba)];case
34:var
bc=e[2],bd=b(a[1][d+1],a,e[1]);return[34,bd,b(a[1][h+1],a,bc)];case
35:var
be=e[2],bf=b(a[1][d+1],a,e[1]);return[35,bf,b(a[1][h+1],a,be)];case
36:var
bg=e[3],bh=e[2],bi=b(a[1][d+1],a,e[1]),bj=b(a[1][h+1],a,bh);return[36,bi,bj,b(a[1][h+1],a,bg)];case
37:var
bk=e[3],bl=e[2],bm=b(a[1][d+1],a,e[1]),bn=b(a[1][h+1],a,bl);return[37,bm,bn,b(a[1][h+1],a,bk)];case
38:var
bo=e[3],bp=e[2],bq=b(a[1][d+1],a,e[1]),br=b(a[1][h+1],a,bp);return[38,bq,br,b(a[1][h+1],a,bo)];case
39:var
bs=e[2],bt=b(a[1][d+1],a,e[1]);return[39,bt,b(a[1][k+1],a,bs)];case
40:return[40,b(a[1][d+1],a,e[1])];case
41:var
bu=e[4],bv=e[3],bw=e[2],bx=b(a[1][d+1],a,e[1]),by=b(a[1][g+1],a,bw),bz=b(a[1][p+1],a,bv);return[41,bx,by,bz,b(a[1][h+1],a,bu)];default:var
bA=e[2],bB=b(a[1][d+1],a,e[1]);return[42,bB,b(a[1][g+1],a,bA)]}}function
T(c,a){return typeof
a==="number"?0===a?0:1:[0,b(c[1][g+1],c,a[1])]}function
V(a,c){switch(c[0]){case
0:return[0,b(a[1][d+1],a,c[1])];case
1:var
f=c[2],k=b(a[1][d+1],a,c[1]);return[1,k,b(a[1][j+1],a,f)];case
2:var
l=c[3],m=c[2],o=b(a[1][d+1],a,c[1]),v=b(a[1][e+1],a,m);return[2,o,v,b(a[1][e+1],a,l)];case
3:var
w=c[2],x=b(a[1][d+1],a,c[1]);return[3,x,b(a[1][g+1],a,w)];case
4:var
z=c[3],A=c[2],B=b(a[1][d+1],a,c[1]),C=b(a[1][e+1],a,A);return[4,B,C,b(a[1][e+1],a,z)];case
5:var
D=c[3],E=c[2],F=b(a[1][d+1],a,c[1]),G=b(a[1][e+1],a,E);return[5,F,G,b(a[1][e+1],a,D)];case
6:var
H=c[2],I=b(a[1][d+1],a,c[1]);return[6,I,b(a[1][e+1],a,H)];case
7:var
K=c[3],L=c[2],M=b(a[1][d+1],a,c[1]),N=b(a[1][e+1],a,L);return[7,M,N,b(a[1][e+1],a,K)];case
8:return[8,b(a[1][d+1],a,c[1])];case
9:var
O=c[2],P=b(a[1][d+1],a,c[1]);return[9,P,b(a[1][e+1],a,O)];case
10:var
Q=c[3],R=c[2],S=b(a[1][d+1],a,c[1]),T=b(a[1][e+1],a,R);return[10,S,T,b(a[1][e+1],a,Q)];case
11:var
U=c[2],V=b(a[1][d+1],a,c[1]);return[11,V,b(a[1][g+1],a,U)];case
12:var
W=c[4],X=c[3],Y=c[2],Z=b(a[1][d+1],a,c[1]),_=b(a[1][e+1],a,Y),$=b(a[1][h+1],a,X);return[12,Z,_,$,b(a[1][h+1],a,W)];case
13:var
aa=c[2],ab=b(a[1][d+1],a,c[1]);return[13,ab,b(a[1][g+1],a,aa)];case
14:var
ac=c[6],ad=c[5],ae=c[4],af=c[3],ag=c[2],ah=b(a[1][d+1],a,c[1]),ai=b(a[1][i+1],a,ag),aj=b(a[1][e+1],a,af),ak=b(a[1][e+1],a,ae),al=b(a[1][J+1],a,ad);return[14,ah,ai,aj,ak,al,b(a[1][e+1],a,ac)];case
15:var
am=c[2],an=b(a[1][d+1],a,c[1]);return[15,an,b(a[1][s+1],a,am)];case
16:var
ao=c[4],ap=c[3],aq=c[2],ar=b(a[1][d+1],a,c[1]),as=b(a[1][e+1],a,aq),at=b(a[1][e+1],a,ap);return[16,ar,as,at,b(a[1][e+1],a,ao)];case
17:var
au=c[2],av=b(a[1][d+1],a,c[1]);return[17,av,b(a[1][g+1],a,au)];case
18:var
aw=c[2],ax=b(a[1][d+1],a,c[1]);return[18,ax,b(a[1][g+1],a,aw)];case
19:var
ay=c[2],az=b(a[1][d+1],a,c[1]);return[19,az,b(a[1][g+1],a,ay)];case
20:var
aA=c[2],aB=b(a[1][d+1],a,c[1]);return[20,aB,b(a[1][g+1],a,aA)];case
21:var
aC=c[3],aD=c[2],aE=b(a[1][d+1],a,c[1]),aF=b(a[1][g+1],a,aD);return[21,aE,aF,b(a[1][e+1],a,aC)];case
22:var
aG=c[2],aH=b(a[1][d+1],a,c[1]);return[22,aH,b(a[1][e+1],a,aG)];case
23:var
aI=c[4],aJ=c[3],aK=c[2],aL=b(a[1][d+1],a,c[1]),aM=b(a[1][r+1],a,aK),aN=b(a[1][t+1],a,aJ);return[23,aL,aM,aN,b(a[1][e+1],a,aI)];case
24:var
aO=c[4],aP=c[3],aQ=c[2],aR=b(a[1][d+1],a,c[1]),aS=b(a[1][g+1],a,aQ),aT=b(a[1][n+1],a,aP);return[24,aR,aS,aT,b(a[1][e+1],a,aO)];case
25:var
aU=c[3],aV=c[2],aW=b(a[1][d+1],a,c[1]),aX=b(a[1][e+1],a,aV);return[25,aW,aX,b(a[1][s+1],a,aU)];case
26:var
aY=c[2],aZ=b(a[1][d+1],a,c[1]);return[26,aZ,b(a[1][j+1],a,aY)];case
27:var
a0=c[3],a1=c[2],a2=b(a[1][d+1],a,c[1]),a3=b(a[1][i+1],a,a1);return[27,a2,a3,b(a[1][y+1],a,a0)];case
28:var
a4=c[3],a5=c[2],a6=b(a[1][d+1],a,c[1]),a7=b(a[1][g+1],a,a5);return[28,a6,a7,b(a[1][e+1],a,a4)];case
29:var
a8=c[2],a9=b(a[1][d+1],a,c[1]);return[29,a9,b(a[1][u+1],a,a8)];case
30:var
a_=c[3],a$=c[2],ba=b(a[1][d+1],a,c[1]),bb=b(a[1][u+1],a,a$);return[30,ba,bb,b(a[1][e+1],a,a_)];case
31:var
bc=c[2],bd=b(a[1][d+1],a,c[1]);return[31,bd,b(a[1][e+1],a,bc)];case
32:var
be=c[3],bf=c[2],bg=b(a[1][d+1],a,c[1]),bh=b(a[1][e+1],a,bf);return[32,bg,bh,b(a[1][g+1],a,be)];case
33:var
bi=c[3],bj=c[2],bk=b(a[1][d+1],a,c[1]),bl=b(a[1][e+1],a,bj);return[33,bk,bl,b(a[1][e+1],a,bi)];case
34:var
bm=c[2],bn=b(a[1][d+1],a,c[1]);return[34,bn,b(a[1][g+1],a,bm)];case
35:var
bo=c[3],bp=c[2],bq=b(a[1][d+1],a,c[1]),br=b(a[1][e+1],a,bp);return[35,bq,br,b(a[1][s+1],a,bo)];case
36:var
bs=c[2],bt=b(a[1][d+1],a,c[1]);return[36,bt,b(a[1][e+1],a,bs)];case
37:var
bu=c[3],bv=c[2],bw=b(a[1][d+1],a,c[1]),bx=b(a[1][e+1],a,bv);return[37,bw,bx,b(a[1][e+1],a,bu)];case
38:var
by=c[3],bz=c[2],bA=b(a[1][d+1],a,c[1]),bB=b(a[1][e+1],a,bz);return[38,bA,bB,b(a[1][h+1],a,by)];case
39:var
bC=c[2],bD=b(a[1][d+1],a,c[1]);return[39,bD,b(a[1][g+1],a,bC)];case
40:var
bE=c[3],bF=c[2],bG=b(a[1][d+1],a,c[1]),bH=b(a[1][e+1],a,bF);return[40,bG,bH,b(a[1][e+1],a,bE)];case
41:var
bI=c[4],bJ=c[3],bK=c[2],bL=b(a[1][d+1],a,c[1]),bM=b(a[1][j+1],a,bK),bN=b(a[1][q+1],a,bJ);return[41,bL,bM,bN,b(a[1][e+1],a,bI)];case
42:var
bO=c[3],bP=c[2],bQ=b(a[1][d+1],a,c[1]),bR=b(a[1][g+1],a,bP);return[42,bQ,bR,b(a[1][e+1],a,bO)];case
43:var
bS=c[2],bT=b(a[1][d+1],a,c[1]);return[43,bT,b(a[1][n+1],a,bS)];default:var
bU=c[4],bV=c[3],bW=c[2],bX=b(a[1][d+1],a,c[1]),bY=b(a[1][g+1],a,bW),bZ=b(a[1][p+1],a,bV);return[44,bX,bY,bZ,b(a[1][e+1],a,bU)]}}function
W(a,c){switch(c[0]){case
0:var
e=c[3],f=c[2],h=b(a[1][d+1],a,c[1]),i=b(a[1][j+1],a,f);return[0,h,i,b(a[1][j+1],a,e)];case
1:var
k=c[3],l=c[2],m=b(a[1][d+1],a,c[1]),n=b(a[1][j+1],a,l);return[1,m,n,b(a[1][j+1],a,k)];case
2:var
o=c[2],p=b(a[1][d+1],a,c[1]);return[2,p,b(a[1][g+1],a,o)];case
3:var
q=c[2],r=b(a[1][d+1],a,c[1]);return[3,r,b(a[1][g+1],a,q)];default:var
s=c[2],t=b(a[1][d+1],a,c[1]);return[4,t,b(a[1][g+1],a,s)]}}function
X(a){return c(a[1][G+1],a)}function
Y(a,c){switch(c[0]){case
0:return[0,b(a[1][d+1],a,c[1])];case
1:var
f=c[3],h=c[2],j=b(a[1][d+1],a,c[1]),k=b(a[1][s+1],a,h);return[1,j,k,b(a[1][s+1],a,f)];case
2:var
l=c[4],m=c[3],n=c[2],o=b(a[1][d+1],a,c[1]),p=b(a[1][i+1],a,n),q=b(a[1][e+1],a,m);return[2,o,p,q,b(a[1][e+1],a,l)];default:var
r=c[2],t=b(a[1][d+1],a,c[1]);return[3,t,b(a[1][g+1],a,r)]}}function
Z(c,a){return typeof
a==="number"?0===a?0:1:[0,b(c[1][g+1],c,a[1])]}function
_(c,d,a){if(typeof
a==="number")return 0;else{if(0===a[0]){var
e=a[2],f=b(d,c,a[1]);return[0,f,m(c[1][D+1],c,d,e)]}return[1,b(c[1][g+1],c,a[1])]}}function
$(c,d,a){return typeof
a==="number"?0:0===a[0]?[0,b(d,c,a[1])]:[1,b(c[1][g+1],c,a[1])]}function
aa(a,c){switch(c[0]){case
0:return[0,b(a[1][d+1],a,c[1])];case
1:var
e=c[3],f=c[2],h=b(a[1][d+1],a,c[1]),i=b(a[1][w+1],a,f);return[1,h,i,b(a[1][w+1],a,e)];case
2:var
j=c[4],l=c[3],m=c[2],o=b(a[1][d+1],a,c[1]),p=b(a[1][g+1],a,m),q=b(a[1][k+1],a,l);return[2,o,p,q,b(a[1][n+1],a,j)];case
3:var
r=c[3],s=c[2],t=b(a[1][d+1],a,c[1]),u=b(a[1][g+1],a,s);return[3,t,u,b(a[1][k+1],a,r)];default:var
v=c[2],x=b(a[1][d+1],a,c[1]);return[4,x,b(a[1][g+1],a,v)]}}function
ab(a,c){switch(c[0]){case
0:return[0,b(a[1][d+1],a,c[1])];case
1:var
f=c[2],h=b(a[1][d+1],a,c[1]);return[1,h,b(a[1][j+1],a,f)];case
2:var
i=c[3],l=c[2],m=b(a[1][d+1],a,c[1]),o=b(a[1][n+1],a,l);return[2,m,o,b(a[1][n+1],a,i)];case
3:var
q=c[4],r=c[3],s=c[2],t=b(a[1][d+1],a,c[1]),u=b(a[1][g+1],a,s),v=b(a[1][k+1],a,r);return[3,t,u,v,b(a[1][n+1],a,q)];case
4:var
w=c[2],x=b(a[1][d+1],a,c[1]);return[4,x,b(a[1][p+1],a,w)];case
5:var
y=c[3],z=c[2],A=b(a[1][d+1],a,c[1]),B=b(a[1][n+1],a,z);return[5,A,B,b(a[1][k+1],a,y)];case
6:var
C=c[2],D=b(a[1][d+1],a,c[1]);return[6,D,b(a[1][e+1],a,C)];case
7:var
E=c[4],F=c[3],G=c[2],H=b(a[1][d+1],a,c[1]),I=b(a[1][g+1],a,G),J=b(a[1][p+1],a,F);return[7,H,I,J,b(a[1][n+1],a,E)];default:var
K=c[2],L=b(a[1][d+1],a,c[1]);return[8,L,b(a[1][g+1],a,K)]}}function
ac(a,c){switch(c[0]){case
0:return[0,b(a[1][d+1],a,c[1])];case
1:var
e=c[2],f=b(a[1][d+1],a,c[1]);return[1,f,b(a[1][j+1],a,e)];case
2:var
h=c[2],i=b(a[1][d+1],a,c[1]);return[2,i,b(a[1][j+1],a,h)];case
3:var
l=c[4],m=c[3],o=c[2],q=b(a[1][d+1],a,c[1]),r=b(a[1][g+1],a,o),s=b(a[1][k+1],a,m);return[3,q,r,s,b(a[1][k+1],a,l)];case
4:var
t=c[2],u=b(a[1][d+1],a,c[1]);return[4,u,b(a[1][g+1],a,t)];case
5:var
v=c[2],w=b(a[1][d+1],a,c[1]);return[5,w,b(a[1][B+1],a,v)];case
6:var
x=c[3],y=c[2],A=b(a[1][d+1],a,c[1]),C=b(a[1][k+1],a,y);return[6,A,C,b(a[1][z+1],a,x)];case
7:var
D=c[2],E=b(a[1][d+1],a,c[1]);return[7,E,b(a[1][n+1],a,D)];case
8:var
F=c[4],G=c[3],H=c[2],I=b(a[1][d+1],a,c[1]),J=b(a[1][g+1],a,H),K=b(a[1][p+1],a,G);return[8,I,J,K,b(a[1][k+1],a,F)];default:var
L=c[2],M=b(a[1][d+1],a,c[1]);return[9,M,b(a[1][g+1],a,L)]}}function
ad(c,a){return typeof
a==="number"?0===a?0:1:[0,b(c[1][g+1],c,a[1])]}function
ae(c,a){return typeof
a==="number"?0===a?0:1:[0,b(c[1][g+1],c,a[1])]}function
af(a,c){switch(c[0]){case
0:return[0,b(a[1][d+1],a,c[1])];case
1:var
f=c[2],k=b(a[1][d+1],a,c[1]);return[1,k,b(a[1][j+1],a,f)];case
2:var
l=c[3],m=c[2],n=b(a[1][d+1],a,c[1]),o=b(a[1][i+1],a,m);return[2,n,o,b(a[1][i+1],a,l)];case
3:var
q=c[2],r=b(a[1][d+1],a,c[1]);return[3,r,b(a[1][g+1],a,q)];case
4:return[4,b(a[1][d+1],a,c[1])];case
5:var
s=c[3],t=c[2],u=b(a[1][d+1],a,c[1]),v=b(a[1][i+1],a,t);return[5,u,v,b(a[1][i+1],a,s)];case
6:var
w=c[2],x=b(a[1][d+1],a,c[1]);return[6,x,b(a[1][i+1],a,w)];case
7:var
y=c[3],z=c[2],A=b(a[1][d+1],a,c[1]),B=b(a[1][i+1],a,z);return[7,A,B,b(a[1][i+1],a,y)];case
8:var
C=c[3],D=c[2],E=b(a[1][d+1],a,c[1]),F=b(a[1][i+1],a,D);return[8,E,F,b(a[1][i+1],a,C)];case
9:var
G=c[2],H=b(a[1][d+1],a,c[1]);return[9,H,b(a[1][g+1],a,G)];case
10:var
I=c[2],J=b(a[1][d+1],a,c[1]);return[10,J,b(a[1][g+1],a,I)];case
11:var
K=c[2],L=b(a[1][d+1],a,c[1]);return[11,L,b(a[1][g+1],a,K)];case
12:var
M=c[2],N=b(a[1][d+1],a,c[1]);return[12,N,b(a[1][g+1],a,M)];case
13:var
O=c[2],P=b(a[1][d+1],a,c[1]);return[13,P,b(a[1][g+1],a,O)];case
14:var
Q=c[2],R=b(a[1][d+1],a,c[1]);return[14,R,b(a[1][g+1],a,Q)];case
15:var
S=c[3],T=c[2],U=b(a[1][d+1],a,c[1]),V=b(a[1][g+1],a,T);return[15,U,V,b(a[1][i+1],a,S)];case
16:var
W=c[3],X=c[2],Y=b(a[1][d+1],a,c[1]),Z=b(a[1][g+1],a,X);return[16,Y,Z,b(a[1][i+1],a,W)];case
17:var
_=c[4],$=c[3],aa=c[2],ab=b(a[1][d+1],a,c[1]),ac=b(a[1][g+1],a,aa),ad=b(a[1][i+1],a,$);return[17,ab,ac,ad,b(a[1][e+1],a,_)];case
18:var
ae=c[3],af=c[2],ag=b(a[1][d+1],a,c[1]),ah=b(a[1][i+1],a,af);return[18,ag,ah,b(a[1][i+1],a,ae)];case
19:var
ai=c[3],aj=c[2],ak=b(a[1][d+1],a,c[1]),al=b(a[1][i+1],a,aj);return[19,ak,al,b(a[1][i+1],a,ai)];case
20:var
am=c[2],an=b(a[1][d+1],a,c[1]);return[20,an,b(a[1][i+1],a,am)];case
21:var
ao=c[3],ap=c[2],aq=b(a[1][d+1],a,c[1]),ar=b(a[1][j+1],a,ap);return[21,aq,ar,b(a[1][i+1],a,ao)];case
22:var
as=c[2],at=b(a[1][d+1],a,c[1]);return[22,at,b(a[1][g+1],a,as)];case
23:var
au=c[2],av=b(a[1][d+1],a,c[1]);return[23,av,b(a[1][i+1],a,au)];case
24:var
aw=c[3],ax=c[2],ay=b(a[1][d+1],a,c[1]),az=b(a[1][i+1],a,ax);return[24,ay,az,b(a[1][h+1],a,aw)];case
25:var
aA=c[2],aB=b(a[1][d+1],a,c[1]);return[25,aB,b(a[1][j+1],a,aA)];case
26:var
aC=c[2],aD=b(a[1][d+1],a,c[1]);return[26,aD,b(a[1][g+1],a,aC)];case
27:var
aE=c[2],aF=b(a[1][d+1],a,c[1]);return[27,aF,b(a[1][i+1],a,aE)];case
28:var
aG=c[4],aH=c[3],aI=c[2],aJ=b(a[1][d+1],a,c[1]),aK=b(a[1][g+1],a,aI),aL=b(a[1][p+1],a,aH);return[28,aJ,aK,aL,b(a[1][i+1],a,aG)];case
29:var
aM=c[2],aN=b(a[1][d+1],a,c[1]);return[29,aN,b(a[1][g+1],a,aM)];default:var
aO=c[2],aP=b(a[1][d+1],a,c[1]);return[30,aP,b(a[1][i+1],a,aO)]}}function
ag(c,a){return typeof
a==="number"?0===a?0:1:[0,b(c[1][g+1],c,a[1])]}function
ah(a,c){switch(c[0]){case
0:return[0,b(a[1][d+1],a,c[1])];case
1:var
f=c[3],h=c[2],i=b(a[1][d+1],a,c[1]),k=b(a[1][u+1],a,h);return[1,i,k,b(a[1][u+1],a,f)];case
2:var
l=c[3],m=c[2],n=b(a[1][d+1],a,c[1]),o=b(a[1][j+1],a,m);return[2,n,o,b(a[1][e+1],a,l)];default:var
p=c[2],q=b(a[1][d+1],a,c[1]);return[3,q,b(a[1][g+1],a,p)]}}function
ai(c,a){if(typeof
a==="number")switch(a){case
0:return 0;case
1:return 1;default:return 2}return[0,b(c[1][g+1],c,a[1])]}function
aj(c,a){return typeof
a==="number"?0===a?0:1:[0,b(c[1][g+1],c,a[1])]}function
ak(a,i){switch(i[0]){case
0:return[0,b(a[1][d+1],a,i[1])];case
1:var
n=i[2],o=b(a[1][d+1],a,i[1]);return[1,o,b(a[1][l+1],a,n)];case
2:var
p=i[2],s=b(a[1][d+1],a,i[1]);return[2,s,b(a[1][l+1],a,p)];case
3:var
t=i[3],u=i[2],v=b(a[1][d+1],a,i[1]),x=b(a[1][B+1],a,u);return[3,v,x,b(a[1][B+1],a,t)];case
4:var
y=i[3],z=i[2],A=b(a[1][d+1],a,i[1]),C=b(a[1][g+1],a,z);return[4,A,C,b(a[1][e+1],a,y)];case
5:var
E=i[2],F=b(a[1][d+1],a,i[1]);return[5,F,b(a[1][h+1],a,E)];case
6:var
G=i[4],H=i[3],I=i[2],J=b(a[1][d+1],a,i[1]),K=b(a[1][g+1],a,I),L=b(a[1][h+1],a,H),M=function(a){return c(f(a,S,x6),a)};return[6,J,K,L,m(a[1][D+1],a,M,G)];case
7:var
N=i[2],O=b(a[1][d+1],a,i[1]);return[7,O,b(a[1][k+1],a,N)];case
8:var
P=i[3],Q=i[2],R=b(a[1][d+1],a,i[1]),T=b(a[1][g+1],a,Q);return[8,R,T,b(a[1][k+1],a,P)];case
9:var
U=i[2],V=b(a[1][d+1],a,i[1]);return[9,V,b(a[1][w+1],a,U)];case
10:var
W=i[3],X=i[2],Y=b(a[1][d+1],a,i[1]),Z=b(a[1][g+1],a,X);return[10,Y,Z,b(a[1][k+1],a,W)];case
11:var
_=i[3],$=i[2],aa=b(a[1][d+1],a,i[1]),ab=b(a[1][q+1],a,$);return[11,aa,ab,b(a[1][j+1],a,_)];case
12:var
ac=i[3],ad=i[2],ae=b(a[1][d+1],a,i[1]),af=b(a[1][r+1],a,ad);return[12,ae,af,b(a[1][h+1],a,ac)];case
13:var
ag=i[3],ah=i[2],ai=b(a[1][d+1],a,i[1]),aj=b(a[1][g+1],a,ah);return[13,ai,aj,b(a[1][h+1],a,ag)];default:var
ak=i[2],al=b(a[1][d+1],a,i[1]);return[14,al,b(a[1][g+1],a,ak)]}}function
al(a,i){switch(i[0]){case
0:return[0,b(a[1][d+1],a,i[1])];case
1:var
s=i[2],u=b(a[1][d+1],a,i[1]);return[1,u,b(a[1][o+1],a,s)];case
2:var
v=i[2],x=b(a[1][d+1],a,i[1]);return[2,x,b(a[1][l+1],a,v)];case
3:var
y=i[3],z=i[2],A=b(a[1][d+1],a,i[1]),B=b(a[1][p+1],a,z);return[3,A,B,b(a[1][p+1],a,y)];case
4:var
C=i[3],E=i[2],F=b(a[1][d+1],a,i[1]),G=b(a[1][g+1],a,E);return[4,F,G,b(a[1][e+1],a,C)];case
5:var
H=i[3],J=i[2],K=b(a[1][d+1],a,i[1]),L=b(a[1][h+1],a,J),M=function(a){return c(f(a,bt,YF),a)};return[5,K,L,m(a[1][I+1],a,M,H)];case
6:var
N=i[2],O=b(a[1][d+1],a,i[1]);return[6,O,b(a[1][e+1],a,N)];case
7:var
P=i[4],Q=i[3],R=i[2],T=b(a[1][d+1],a,i[1]),U=b(a[1][g+1],a,R),V=b(a[1][h+1],a,Q),W=function(a){return c(f(a,S,wg),a)};return[7,T,U,V,m(a[1][D+1],a,W,P)];case
8:var
X=i[2],Y=b(a[1][d+1],a,i[1]);return[8,Y,b(a[1][n+1],a,X)];case
9:var
Z=i[3],_=i[2],$=b(a[1][d+1],a,i[1]),aa=b(a[1][g+1],a,_);return[9,$,aa,b(a[1][n+1],a,Z)];case
10:var
ab=i[2],ac=b(a[1][d+1],a,i[1]);return[10,ac,b(a[1][w+1],a,ab)];case
11:var
ad=i[3],ae=i[2],af=b(a[1][d+1],a,i[1]),ag=b(a[1][g+1],a,ae);return[11,af,ag,b(a[1][k+1],a,ad)];case
12:var
ah=i[3],ai=i[2],aj=b(a[1][d+1],a,i[1]),ak=b(a[1][q+1],a,ai);return[12,aj,ak,b(a[1][j+1],a,ah)];case
13:var
al=i[3],am=i[2],an=b(a[1][d+1],a,i[1]),ao=b(a[1][r+1],a,am);return[13,an,ao,b(a[1][h+1],a,al)];case
14:var
ap=i[3],aq=i[2],ar=b(a[1][d+1],a,i[1]),as=b(a[1][r+1],a,aq);return[14,ar,as,b(a[1][t+1],a,ap)];default:var
at=i[2],au=b(a[1][d+1],a,i[1]);return[15,au,b(a[1][g+1],a,at)]}}function
am(c,a){return typeof
a==="number"?0===a?0:1:[0,b(c[1][g+1],c,a[1])]}function
an(a,c){switch(c[0]){case
0:return[0,b(a[1][d+1],a,c[1])];case
1:var
e=c[3],f=c[2],i=b(a[1][d+1],a,c[1]),k=b(a[1][h+1],a,f);return[1,i,k,b(a[1][h+1],a,e)];case
2:var
l=c[3],m=c[2],n=b(a[1][d+1],a,c[1]),o=b(a[1][j+1],a,m);return[2,n,o,b(a[1][j+1],a,l)];case
3:var
p=c[3],q=c[2],r=b(a[1][d+1],a,c[1]),s=b(a[1][h+1],a,q);return[3,r,s,b(a[1][h+1],a,p)];case
4:var
t=c[3],u=c[2],v=b(a[1][d+1],a,c[1]),w=b(a[1][j+1],a,u);return[4,v,w,b(a[1][j+1],a,t)];case
5:var
x=c[3],y=c[2],A=b(a[1][d+1],a,c[1]),B=b(a[1][z+1],a,y);return[5,A,B,b(a[1][z+1],a,x)];default:var
C=c[2],D=b(a[1][d+1],a,c[1]);return[6,D,b(a[1][g+1],a,C)]}}function
ao(c,d,a){if(a){var
e=a[2],f=b(d,c,a[1]);return[0,f,m(c[1][x+1],c,d,e)]}return 0}cm(F,[0,g,function(a){return c(a[1][G+1],a)},x,ao,z,an,A,am,p,al,B,ak,H,aj,r,ai,u,ah,v,ag,i,af,q,ae,C,ad,k,ac,n,ab,w,aa,I,$,D,_,K,Z,s,Y,d,X,j,W,e,V,J,T,h,R,l,Q,y,P,E,O,o,N,t,M,G,L]);return function(a){return function(a){return aR(a,F)}}},kS);var
aL=kS[1],aM=kS[2];is(e,[0,c(kS[1],0),aM,aL,0]);var
ax=[];if(!kT[1])np(gJ,function(g){var
d=hv(g,Gi),h=d[3],e=d[4],a=d[21],i=d[1],j=d[2],k=d[5],l=d[6],n=d[7],o=d[8],p=d[9],q=d[10],r=d[11],s=d[12],t=d[13],u=d[14],v=d[15],w=d[16],x=d[17],y=d[18],z=d[19],A=d[20],B=d[22],C=d[23],D=d[24],E=d[25],F=d[26],G=d[27],H=d[28],I=d[29],K=d[30],L=d[31];function
M(a,b){return a}function
O(d,c){switch(c[0]){case
0:return b(d[1][a+1],d,c[1]);case
1:var
k=c[3],l=c[2],e=b(d[1][a+1],d,c[1]),g=b(f(e,lS,18),e,l);return b(f(g,lS,19),g,k);case
2:var
m=c[3],n=c[2],h=b(d[1][a+1],d,c[1]),i=b(f(h,a6,20),h,n);return b(f(i,_,21),i,m);default:var
o=c[2],j=b(d[1][a+1],d,c[1]);return b(f(j,S,22),j,o)}}function
P(d,c){switch(c[0]){case
0:return b(d[1][a+1],d,c[1]);case
1:var
B=c[3],C=c[2],e=b(d[1][a+1],d,c[1]),g=b(f(e,eV,23),e,C);return b(f(g,_,24),g,B);case
2:var
D=c[4],E=c[3],F=c[2],h=b(d[1][a+1],d,c[1]),i=b(f(h,v1,25),h,F),j=b(f(i,bt,26),i,E);return b(f(j,U,27),j,D);case
3:var
G=c[3],H=c[2],k=b(d[1][a+1],d,c[1]),l=b(f(k,a6,28),k,H);return b(f(l,eV,29),l,G);case
4:var
I=c[4],J=c[3],K=c[2],m=b(d[1][a+1],d,c[1]),n=b(f(m,mD,30),m,K),o=b(f(n,lS,31),n,J);return b(f(o,eV,32),o,I);case
5:var
L=c[3],M=c[2],p=b(d[1][a+1],d,c[1]),q=b(f(p,a6,33),p,M);return b(f(q,p0,34),q,L);case
6:var
N=c[3],O=c[2],r=b(d[1][a+1],d,c[1]),s=b(f(r,eV,35),r,O);return b(f(s,dT,36),s,N);case
7:var
P=c[3],Q=c[2],t=b(d[1][a+1],d,c[1]),u=b(f(t,eV,37),t,Q);return b(f(u,eV,38),u,P);case
8:var
R=c[3],T=c[2],v=b(d[1][a+1],d,c[1]),w=b(f(v,eV,39),v,T);return b(f(w,eV,40),w,R);case
9:var
V=c[4],W=c[3],X=c[2],x=b(d[1][a+1],d,c[1]),y=b(f(x,S,41),x,X),z=b(f(y,fx,42),y,W);return b(f(z,eV,43),z,V);default:var
Y=c[2],A=b(d[1][a+1],d,c[1]);return b(f(A,S,44),A,Y)}}function
Q(d,c){switch(c[0]){case
0:return b(d[1][a+1],d,c[1]);case
1:var
v=c[3],w=c[2],e=b(d[1][a+1],d,c[1]),g=b(f(e,U,45),e,w);return b(f(g,U,46),g,v);case
2:var
x=c[3],y=c[2],h=b(d[1][a+1],d,c[1]),i=b(f(h,zr,47),h,y);return b(f(i,zr,48),i,x);case
3:var
z=c[2],j=b(d[1][a+1],d,c[1]);return b(f(j,dT,49),j,z);case
4:var
A=c[4],B=c[3],C=c[2],k=b(d[1][a+1],d,c[1]),l=b(f(k,S,50),k,C),m=b(f(l,pI,51),l,B);return b(f(m,U,52),m,A);case
5:var
D=c[5],E=c[4],F=c[3],G=c[2],n=b(d[1][a+1],d,c[1]),o=b(f(n,S,53),n,G),p=b(f(o,wi,54),o,F),q=b(f(p,v1,55),p,E);return b(f(q,U,56),q,D);case
6:var
H=c[4],I=c[3],J=c[2],r=b(d[1][a+1],d,c[1]),s=b(f(r,S,57),r,J),t=b(f(s,pI,58),s,I);return b(f(t,U,59),t,H);default:var
K=c[2],u=b(d[1][a+1],d,c[1]);return b(f(u,S,60),u,K)}}function
R(d,c){switch(c[0]){case
0:return b(d[1][a+1],d,c[1]);case
1:var
D=c[3],E=c[2],e=b(d[1][a+1],d,c[1]),g=b(f(e,p0,61),e,E);return b(f(g,p0,62),g,D);case
2:var
F=c[3],G=c[2],h=b(d[1][a+1],d,c[1]),i=b(f(h,U,63),h,G);return b(f(i,U,64),i,F);case
3:var
H=c[4],I=c[3],J=c[2],j=b(d[1][a+1],d,c[1]),k=b(f(j,jR,65),j,J),l=b(f(k,eV,66),k,I);return b(f(l,S,67),l,H);case
4:var
K=c[2],m=b(d[1][a+1],d,c[1]);return b(f(m,_,68),m,K);case
5:var
L=c[6],M=c[5],N=c[4],O=c[3],P=c[2],n=b(d[1][a+1],d,c[1]),o=b(f(n,S,69),n,P),p=b(f(o,jR,70),o,O),q=b(f(p,pI,71),p,N),r=b(f(q,_,72),q,M);return b(f(r,U,73),r,L);case
6:var
Q=c[5],R=c[4],T=c[3],V=c[2],s=b(d[1][a+1],d,c[1]),t=b(f(s,S,74),s,V),u=b(f(t,jR,75),t,T),v=b(f(u,wi,76),u,R);return b(f(v,_,77),v,Q);case
7:var
W=c[4],X=c[3],Y=c[2],w=b(d[1][a+1],d,c[1]),x=b(f(w,S,78),w,Y),y=b(f(x,pI,79),x,X);return b(f(y,U,80),y,W);case
8:var
Z=c[4],$=c[3],aa=c[2],z=b(d[1][a+1],d,c[1]),A=b(f(z,S,81),z,aa),B=b(f(A,wi,82),A,$);return b(f(B,U,83),B,Z);default:var
ab=c[2],C=b(d[1][a+1],d,c[1]);return b(f(C,S,84),C,ab)}}function
T(d,c){switch(c[0]){case
0:return b(d[1][a+1],d,c[1]);case
1:var
w=c[4],x=c[3],y=c[2],e=b(d[1][a+1],d,c[1]),g=b(f(e,v1,85),e,y),h=b(f(g,bt,86),g,x);return b(f(h,U,87),h,w);case
2:var
z=c[3],A=c[2],i=b(d[1][a+1],d,c[1]),j=b(f(i,U,88),i,A);return b(f(j,dT,89),j,z);case
3:var
B=c[3],C=c[2],k=b(d[1][a+1],d,c[1]),l=b(f(k,U,90),k,C);return b(f(l,zr,91),l,B);case
4:var
D=c[3],E=c[2],m=b(d[1][a+1],d,c[1]),n=b(f(m,dT,92),m,E);return b(f(n,dT,93),n,D);case
5:var
F=c[3],G=c[2],o=b(d[1][a+1],d,c[1]),p=b(f(o,dT,94),o,G);return b(f(p,dT,95),p,F);case
6:var
H=c[3],I=c[2],q=b(d[1][a+1],d,c[1]),r=b(f(q,dT,96),q,I);return b(f(r,dT,97),r,H);case
7:var
J=c[4],K=c[3],L=c[2],s=b(d[1][a+1],d,c[1]),t=b(f(s,S,98),s,L),u=b(f(t,fx,99),t,K);return b(f(u,dT,ci),u,J);default:var
M=c[2],v=b(d[1][a+1],d,c[1]);return b(f(v,S,jB),v,M)}}function
V(e,d){switch(d[0]){case
0:return b(e[1][a+1],e,d[1]);case
1:var
at=d[3],au=d[2],g=b(e[1][a+1],e,d[1]),h=b(f(g,U,h_),g,au);return b(f(h,U,l1),h,at);case
2:return b(e[1][a+1],e,d[1]);case
3:var
av=d[3],aw=d[2],i=b(e[1][a+1],e,d[1]),j=b(f(i,U,l9),i,aw);return b(f(j,U,di),j,av);case
4:var
ax=d[3],ay=d[2],k=b(e[1][a+1],e,d[1]),l=b(f(k,U,qP),k,ay);return b(f(l,U,mB),l,ax);case
5:var
az=d[2],n=b(e[1][a+1],e,d[1]);return b(f(n,bt,gj),n,az);case
6:var
aA=d[3],aB=d[2],o=b(e[1][a+1],e,d[1]),p=b(f(o,S,qx),o,aB);return b(f(p,U,fn),p,aA);case
7:var
aC=d[2],q=b(e[1][a+1],e,d[1]);return b(f(q,bt,gi),q,aC);case
8:var
aD=d[3],aE=d[2],r=b(e[1][a+1],e,d[1]),s=b(f(r,U,bL),r,aE);return b(f(s,U,ms),s,aD);case
9:var
aF=d[5],aG=d[4],aH=d[3],aI=d[2],t=b(e[1][a+1],e,d[1]),u=b(f(t,S,jt),t,aI),v=m(f(u,qM,jv),u,function(a){return c(f(a,U,e1),a)},aH),w=b(f(v,U,im),v,aG);return m(f(w,qM,fr),w,function(c,a){var
e=a[2],d=b(f(c,U,jV),c,a[1]);return b(f(d,U,md),d,e)},aF);case
10:var
aJ=d[4],aK=d[3],aL=d[2],x=b(e[1][a+1],e,d[1]),y=b(f(x,bt,lE),x,aL),z=m(f(y,qM,ck),y,function(a){return c(f(a,U,fD),a)},aK);return b(f(z,U,ep),z,aJ);case
11:var
aM=d[3],aN=d[2],A=b(e[1][a+1],e,d[1]),B=b(f(A,U,cW),A,aN);return b(f(B,-62659255,dW),B,aM);case
12:var
aO=d[3],aP=d[2],C=b(e[1][a+1],e,d[1]),D=b(f(C,S,cU),C,aP);return b(f(D,U,a2),D,aO);case
13:var
aQ=d[3],aR=d[2],E=b(e[1][a+1],e,d[1]),F=b(f(E,U,zx),E,aR);return b(f(F,U,qo),F,aQ);case
14:var
aS=d[3],aT=d[2],G=b(e[1][a+1],e,d[1]),H=b(f(G,U,zk),G,aT);return b(f(H,U,ra),H,aS);case
15:var
aU=d[2],I=b(e[1][a+1],e,d[1]);return b(f(I,S,wE),I,aU);case
16:var
aV=d[2],J=b(e[1][a+1],e,d[1]);return b(f(J,S,yr),J,aV);case
17:var
aW=d[2],K=b(e[1][a+1],e,d[1]);return b(f(K,S,x$),K,aW);case
18:return b(e[1][a+1],e,d[1]);case
19:return b(e[1][a+1],e,d[1]);case
20:var
aX=d[2],L=b(e[1][a+1],e,d[1]);return b(f(L,S,x_),L,aX);case
21:var
aY=d[2],M=b(e[1][a+1],e,d[1]);return b(f(M,U,wo),M,aY);case
22:var
aZ=d[3],a0=d[2],N=b(e[1][a+1],e,d[1]),O=b(f(N,U,ww),N,a0);return b(f(O,U,wz),O,aZ);case
23:var
a1=d[3],a3=d[2],P=b(e[1][a+1],e,d[1]),Q=b(f(P,U,rr),P,a3);return b(f(Q,U,rt),Q,a1);case
24:var
a4=d[3],a5=d[2],R=b(e[1][a+1],e,d[1]),T=b(f(R,U,yC),R,a5);return b(f(T,U,Ac),T,a4);case
25:var
a6=d[2],V=b(e[1][a+1],e,d[1]);return b(f(V,U,Aw),V,a6);case
26:var
a7=d[3],a8=d[2],W=b(e[1][a+1],e,d[1]),X=b(f(W,U,z6),W,a8);return b(f(X,U,x1),X,a7);case
27:var
a9=d[3],a_=d[2],Y=b(e[1][a+1],e,d[1]),Z=b(f(Y,U,An),Y,a_);return b(f(Z,U,Al),Z,a9);case
28:var
a$=d[3],ba=d[2],_=b(e[1][a+1],e,d[1]),$=b(f(_,U,yN),_,ba);return b(f($,U,rl),$,a$);case
29:var
bb=d[2],aa=b(e[1][a+1],e,d[1]);return b(f(aa,U,wp),aa,bb);case
30:var
bc=d[2],ab=b(e[1][a+1],e,d[1]);return b(f(ab,U,A6),ab,bc);case
31:var
bd=d[2],ac=b(e[1][a+1],e,d[1]);return b(f(ac,U,yZ),ac,bd);case
32:var
be=d[3],bf=d[2],ad=b(e[1][a+1],e,d[1]),ae=b(f(ad,U,yQ),ad,bf);return b(f(ae,U,z1),ae,be);case
33:var
bg=d[2],af=b(e[1][a+1],e,d[1]);return b(f(af,U,yF),af,bg);case
34:var
bh=d[2],ag=b(e[1][a+1],e,d[1]);return b(f(ag,U,v8),ag,bh);case
35:var
bi=d[2],ah=b(e[1][a+1],e,d[1]);return b(f(ah,U,zJ),ah,bi);case
36:var
bj=d[3],bk=d[2],ai=b(e[1][a+1],e,d[1]),aj=b(f(ai,U,jF),ai,bk);return b(f(aj,U,jX),aj,bj);case
37:var
bl=d[3],bm=d[2],ak=b(e[1][a+1],e,d[1]),al=b(f(ak,U,lY),ak,bm);return b(f(al,U,o5),al,bl);case
38:var
bn=d[3],bo=d[2],am=b(e[1][a+1],e,d[1]),an=b(f(am,U,yV),am,bo);return b(f(an,U,qs),an,bn);case
39:var
bp=d[2],ao=b(e[1][a+1],e,d[1]);return b(f(ao,dY,qe),ao,bp);case
40:return b(e[1][a+1],e,d[1]);case
41:var
bq=d[4],br=d[3],bs=d[2],ap=b(e[1][a+1],e,d[1]),aq=b(f(ap,S,l8),ap,bs),ar=b(f(aq,fx,l0),aq,br);return b(f(ar,U,lJ),ar,bq);default:var
bu=d[2],as=b(e[1][a+1],e,d[1]);return b(f(as,S,js),as,bu)}}function
W(a,c){return typeof
c==="number"?0===c?a:a:b(a[1][e+1],a,c[1])}function
X(d,c){switch(c[0]){case
0:return b(d[1][a+1],d,c[1]);case
1:var
aE=c[2],e=b(d[1][a+1],d,c[1]);return b(f(e,bt,ml),e,aE);case
2:var
aF=c[3],aG=c[2],g=b(d[1][a+1],d,c[1]),h=b(f(g,_,mG),g,aG);return b(f(h,_,mi),h,aF);case
3:var
aH=c[2],i=b(d[1][a+1],d,c[1]);return b(f(i,S,lC),i,aH);case
4:var
aI=c[3],aJ=c[2],j=b(d[1][a+1],d,c[1]),k=b(f(j,_,l2),j,aJ);return b(f(k,_,l5),k,aI);case
5:var
aK=c[3],aL=c[2],l=b(d[1][a+1],d,c[1]),m=b(f(l,_,mI),l,aL);return b(f(m,_,j0),m,aK);case
6:var
aM=c[2],n=b(d[1][a+1],d,c[1]);return b(f(n,_,ll),n,aM);case
7:var
aN=c[3],aO=c[2],o=b(d[1][a+1],d,c[1]),p=b(f(o,_,rg),o,aO);return b(f(p,_,wv),p,aN);case
8:return b(d[1][a+1],d,c[1]);case
9:var
aP=c[2],q=b(d[1][a+1],d,c[1]);return b(f(q,_,fB),q,aP);case
10:var
aQ=c[3],aR=c[2],r=b(d[1][a+1],d,c[1]),s=b(f(r,_,mp),r,aR);return b(f(s,_,L2),s,aQ);case
11:var
aS=c[2],t=b(d[1][a+1],d,c[1]);return b(f(t,S,p8),t,aS);case
12:var
aT=c[4],aU=c[3],aV=c[2],u=b(d[1][a+1],d,c[1]),v=b(f(u,_,p6),u,aV),w=b(f(v,U,wm),v,aU);return b(f(w,U,qK),w,aT);case
13:var
aW=c[2],x=b(d[1][a+1],d,c[1]);return b(f(x,S,oZ),x,aW);case
14:var
aX=c[6],aY=c[5],aZ=c[4],a0=c[3],a1=c[2],y=b(d[1][a+1],d,c[1]),z=b(f(y,a6,ak_),y,a1),A=b(f(z,_,jy),z,a0),B=b(f(A,_,mg),A,aZ),C=b(f(B,677855468,jT),B,aY);return b(f(C,_,193),C,aX);case
15:var
a2=c[2],D=b(d[1][a+1],d,c[1]);return b(f(D,mo,amU),D,a2);case
16:var
a3=c[4],a4=c[3],a5=c[2],E=b(d[1][a+1],d,c[1]),F=b(f(E,_,195),E,a5),G=b(f(F,_,196),F,a4);return b(f(G,_,197),G,a3);case
17:var
a7=c[2],H=b(d[1][a+1],d,c[1]);return b(f(H,S,198),H,a7);case
18:var
a8=c[2],I=b(d[1][a+1],d,c[1]);return b(f(I,S,199),I,a8);case
19:var
a9=c[2],J=b(d[1][a+1],d,c[1]);return b(f(J,S,200),J,a9);case
20:var
a_=c[2],K=b(d[1][a+1],d,c[1]);return b(f(K,S,agk),K,a_);case
21:var
a$=c[3],ba=c[2],L=b(d[1][a+1],d,c[1]),M=b(f(L,S,am$),L,ba);return b(f(M,_,aji),M,a$);case
22:var
bb=c[2],N=b(d[1][a+1],d,c[1]);return b(f(N,_,204),N,bb);case
23:var
bc=c[4],bd=c[3],be=c[2],O=b(d[1][a+1],d,c[1]),P=b(f(O,mD,205),O,be),Q=b(f(P,lS,206),P,bd);return b(f(Q,_,Rf),Q,bc);case
24:var
bf=c[4],bg=c[3],bh=c[2],R=b(d[1][a+1],d,c[1]),T=b(f(R,S,208),R,bh),V=b(f(T,eO,209),T,bg);return b(f(V,_,210),V,bf);case
25:var
bi=c[3],bj=c[2],W=b(d[1][a+1],d,c[1]),X=b(f(W,_,P5),W,bj);return b(f(X,mo,212),X,bi);case
26:var
bk=c[2],Y=b(d[1][a+1],d,c[1]);return b(f(Y,bt,adv),Y,bk);case
27:var
bl=c[3],bm=c[2],Z=b(d[1][a+1],d,c[1]),$=b(f(Z,a6,y1),Z,bm);return b(f($,p0,qS),$,bl);case
28:var
bn=c[3],bo=c[2],aa=b(d[1][a+1],d,c[1]),ab=b(f(aa,S,qg),aa,bo);return b(f(ab,_,217),ab,bn);case
29:var
bp=c[2],ac=b(d[1][a+1],d,c[1]);return b(f(ac,pt,218),ac,bp);case
30:var
bq=c[3],br=c[2],ad=b(d[1][a+1],d,c[1]),ae=b(f(ad,pt,219),ad,br);return b(f(ae,_,220),ae,bq);case
31:var
bs=c[2],af=b(d[1][a+1],d,c[1]);return b(f(af,_,221),af,bs);case
32:var
bu=c[3],bv=c[2],ag=b(d[1][a+1],d,c[1]),ah=b(f(ag,_,zi),ag,bv);return b(f(ah,S,h2),ah,bu);case
33:var
bw=c[3],bx=c[2],ai=b(d[1][a+1],d,c[1]),aj=b(f(ai,_,jD),ai,bx);return b(f(aj,_,225),aj,bw);case
34:var
by=c[2],ak=b(d[1][a+1],d,c[1]);return b(f(ak,S,226),ak,by);case
35:var
bz=c[3],bA=c[2],al=b(d[1][a+1],d,c[1]),am=b(f(al,_,ye),al,bA);return b(f(am,mo,228),am,bz);case
36:var
bB=c[2],an=b(d[1][a+1],d,c[1]);return b(f(an,_,229),an,bB);case
37:var
bC=c[3],bD=c[2],ao=b(d[1][a+1],d,c[1]),ap=b(f(ao,_,agG),ao,bD);return b(f(ap,_,231),ap,bC);case
38:var
bE=c[3],bF=c[2],aq=b(d[1][a+1],d,c[1]),ar=b(f(aq,_,v$),aq,bF);return b(f(ar,U,Qe),ar,bE);case
39:var
bG=c[2],as=b(d[1][a+1],d,c[1]);return b(f(as,S,234),as,bG);case
40:var
bH=c[3],bI=c[2],at=b(d[1][a+1],d,c[1]),au=b(f(at,_,235),at,bI);return b(f(au,_,236),au,bH);case
41:var
bJ=c[4],bK=c[3],bL=c[2],av=b(d[1][a+1],d,c[1]),aw=b(f(av,bt,237),av,bL),ax=b(f(aw,jR,238),aw,bK);return b(f(ax,_,mF),ax,bJ);case
42:var
bM=c[3],bN=c[2],ay=b(d[1][a+1],d,c[1]),az=b(f(ay,S,mx),ay,bN);return b(f(az,_,241),az,bM);case
43:var
bO=c[2],aA=b(d[1][a+1],d,c[1]);return b(f(aA,eO,242),aA,bO);default:var
bP=c[4],bQ=c[3],bR=c[2],aB=b(d[1][a+1],d,c[1]),aC=b(f(aB,S,243),aB,bR),aD=b(f(aC,fx,QP),aC,bQ);return b(f(aD,_,aa7),aD,bP)}}function
Y(d,c){switch(c[0]){case
0:var
m=c[3],n=c[2],e=b(d[1][a+1],d,c[1]),g=b(f(e,bt,J),e,n);return b(f(g,bt,lQ),g,m);case
1:var
o=c[3],p=c[2],h=b(d[1][a+1],d,c[1]),i=b(f(h,bt,N),h,p);return b(f(i,bt,UL),i,o);case
2:var
q=c[2],j=b(d[1][a+1],d,c[1]);return b(f(j,S,bu),j,q);case
3:var
r=c[2],k=b(d[1][a+1],d,c[1]);return b(f(k,S,lW),k,r);default:var
s=c[2],l=b(d[1][a+1],d,c[1]);return b(f(l,S,lT),l,s)}}function
Z(a){return c(a[1][h+1],a)}function
$(d,c){switch(c[0]){case
0:return b(d[1][a+1],d,c[1]);case
1:var
l=c[3],m=c[2],e=b(d[1][a+1],d,c[1]),g=b(f(e,mo,re),e,m);return b(f(g,mo,gf),g,l);case
2:var
n=c[4],o=c[3],p=c[2],h=b(d[1][a+1],d,c[1]),i=b(f(h,a6,at),h,p),j=b(f(i,_,cX),i,o);return b(f(j,_,jA),j,n);default:var
q=c[2],k=b(d[1][a+1],d,c[1]);return b(f(k,S,xg),k,q)}}function
aa(a,c){return typeof
c==="number"?0===c?a:a:b(a[1][e+1],a,c[1])}function
ab(c,d,a){if(typeof
a==="number")return c;else{if(0===a[0]){var
h=a[2],g=b(d,c,a[1]);return m(f(g,A5,p3),g,d,h)}return b(c[1][e+1],c,a[1])}}function
ac(c,d,a){return typeof
a==="number"?c:0===a[0]?b(d,c,a[1]):b(c[1][e+1],c,a[1])}function
ad(d,c){switch(c[0]){case
0:return b(d[1][a+1],d,c[1]);case
1:var
n=c[3],o=c[2],e=b(d[1][a+1],d,c[1]),g=b(f(e,rd,wM),e,o);return b(f(g,rd,x8),g,n);case
2:var
p=c[4],q=c[3],r=c[2],h=b(d[1][a+1],d,c[1]),i=b(f(h,S,AI),h,r),j=b(f(i,dY,AP),i,q);return b(f(j,eO,p1),j,p);case
3:var
s=c[3],t=c[2],k=b(d[1][a+1],d,c[1]),l=b(f(k,S,pZ),k,t);return b(f(l,dY,xk),l,s);default:var
u=c[2],m=b(d[1][a+1],d,c[1]);return b(f(m,S,yp),m,u)}}function
ae(d,c){switch(c[0]){case
0:return b(d[1][a+1],d,c[1]);case
1:var
t=c[2],e=b(d[1][a+1],d,c[1]);return b(f(e,bt,Ad),e,t);case
2:var
u=c[3],v=c[2],g=b(d[1][a+1],d,c[1]),h=b(f(g,eO,xa),g,v);return b(f(h,eO,v7),h,u);case
3:var
w=c[4],x=c[3],y=c[2],i=b(d[1][a+1],d,c[1]),j=b(f(i,S,ws),i,y),k=b(f(j,dY,yn),j,x);return b(f(k,eO,pf),k,w);case
4:var
z=c[2],l=b(d[1][a+1],d,c[1]);return b(f(l,fx,qR),l,z);case
5:var
A=c[3],B=c[2],m=b(d[1][a+1],d,c[1]),n=b(f(m,eO,yO),m,B);return b(f(n,dY,zE),n,A);case
6:var
C=c[2],o=b(d[1][a+1],d,c[1]);return b(f(o,_,x2),o,C);case
7:var
D=c[4],E=c[3],F=c[2],p=b(d[1][a+1],d,c[1]),q=b(f(p,S,w0),p,F),r=b(f(q,fx,yg),q,E);return b(f(r,eO,o1),r,D);default:var
G=c[2],s=b(d[1][a+1],d,c[1]);return b(f(s,S,pM),s,G)}}function
af(d,c){switch(c[0]){case
0:return b(d[1][a+1],d,c[1]);case
1:var
t=c[2],e=b(d[1][a+1],d,c[1]);return b(f(e,bt,wY),e,t);case
2:var
u=c[2],g=b(d[1][a+1],d,c[1]);return b(f(g,bt,zZ),g,u);case
3:var
v=c[4],w=c[3],x=c[2],h=b(d[1][a+1],d,c[1]),i=b(f(h,S,xS),h,x),j=b(f(i,dY,yU),i,w);return b(f(j,dY,wP),j,v);case
4:var
y=c[2],k=b(d[1][a+1],d,c[1]);return b(f(k,S,wK),k,y);case
5:var
z=c[2],l=b(d[1][a+1],d,c[1]);return b(f(l,yq,w7),l,z);case
6:var
A=c[3],B=c[2],m=b(d[1][a+1],d,c[1]),n=b(f(m,dY,v6),m,B);return b(f(n,yk,pJ),n,A);case
7:var
C=c[2],o=b(d[1][a+1],d,c[1]);return b(f(o,eO,wH),o,C);case
8:var
D=c[4],E=c[3],F=c[2],p=b(d[1][a+1],d,c[1]),q=b(f(p,S,w8),p,F),r=b(f(q,fx,A8),q,E);return b(f(r,dY,AR),r,D);default:var
G=c[2],s=b(d[1][a+1],d,c[1]);return b(f(s,S,wT),s,G)}}function
ag(a,c){return typeof
c==="number"?0===c?a:a:b(a[1][e+1],a,c[1])}function
ah(a,c){return typeof
c==="number"?0===c?a:a:b(a[1][e+1],a,c[1])}function
ai(d,c){switch(c[0]){case
0:return b(d[1][a+1],d,c[1]);case
1:var
Y=c[2],e=b(d[1][a+1],d,c[1]);return b(f(e,bt,ps),e,Y);case
2:var
Z=c[3],$=c[2],g=b(d[1][a+1],d,c[1]),h=b(f(g,a6,xD),g,$);return b(f(h,a6,wI),h,Z);case
3:var
aa=c[2],i=b(d[1][a+1],d,c[1]);return b(f(i,S,w5),i,aa);case
4:return b(d[1][a+1],d,c[1]);case
5:var
ab=c[3],ac=c[2],j=b(d[1][a+1],d,c[1]),k=b(f(j,a6,Ak),j,ac);return b(f(k,a6,qt),k,ab);case
6:var
ad=c[2],l=b(d[1][a+1],d,c[1]);return b(f(l,a6,x5),l,ad);case
7:var
ae=c[3],af=c[2],m=b(d[1][a+1],d,c[1]),n=b(f(m,a6,xV),m,af);return b(f(n,a6,zI),n,ae);case
8:var
ag=c[3],ah=c[2],o=b(d[1][a+1],d,c[1]),p=b(f(o,a6,vW),o,ah);return b(f(p,a6,qZ),p,ag);case
9:var
ai=c[2],q=b(d[1][a+1],d,c[1]);return b(f(q,S,w9),q,ai);case
10:var
aj=c[2],r=b(d[1][a+1],d,c[1]);return b(f(r,S,wS),r,aj);case
11:var
ak=c[2],s=b(d[1][a+1],d,c[1]);return b(f(s,S,ri),s,ak);case
12:var
al=c[2],t=b(d[1][a+1],d,c[1]);return b(f(t,S,yH),t,al);case
13:var
am=c[2],u=b(d[1][a+1],d,c[1]);return b(f(u,S,x0),u,am);case
14:var
an=c[2],v=b(d[1][a+1],d,c[1]);return b(f(v,S,WY),v,an);case
15:var
ao=c[3],ap=c[2],w=b(d[1][a+1],d,c[1]),x=b(f(w,S,Az),w,ap);return b(f(x,a6,zL),x,ao);case
16:var
aq=c[3],ar=c[2],y=b(d[1][a+1],d,c[1]),z=b(f(y,S,xX),y,ar);return b(f(z,a6,lO),z,aq);case
17:var
as=c[4],at=c[3],au=c[2],A=b(d[1][a+1],d,c[1]),B=b(f(A,S,qw),A,au),C=b(f(B,a6,xj),B,at);return b(f(C,_,qq),C,as);case
18:var
av=c[3],aw=c[2],D=b(d[1][a+1],d,c[1]),E=b(f(D,a6,v2),D,aw);return b(f(E,a6,AF),E,av);case
19:var
ax=c[3],ay=c[2],F=b(d[1][a+1],d,c[1]),G=b(f(F,a6,xC),F,ay);return b(f(G,a6,wu),G,ax);case
20:var
az=c[2],H=b(d[1][a+1],d,c[1]);return b(f(H,a6,w1),H,az);case
21:var
aA=c[3],aB=c[2],I=b(d[1][a+1],d,c[1]),J=b(f(I,bt,yc),I,aB);return b(f(J,a6,pq),J,aA);case
22:var
aC=c[2],K=b(d[1][a+1],d,c[1]);return b(f(K,S,q7),K,aC);case
23:var
aD=c[2],L=b(d[1][a+1],d,c[1]);return b(f(L,a6,U2),L,aD);case
24:var
aE=c[3],aF=c[2],M=b(d[1][a+1],d,c[1]),N=b(f(M,a6,V8),M,aF);return b(f(N,U,we),N,aE);case
25:var
aG=c[2],O=b(d[1][a+1],d,c[1]);return b(f(O,bt,AG),O,aG);case
26:var
aH=c[2],P=b(d[1][a+1],d,c[1]);return b(f(P,S,ya),P,aH);case
27:var
aI=c[2],Q=b(d[1][a+1],d,c[1]);return b(f(Q,a6,xN),Q,aI);case
28:var
aJ=c[4],aK=c[3],aL=c[2],R=b(d[1][a+1],d,c[1]),T=b(f(R,S,xv),R,aL),V=b(f(T,fx,zc),T,aK);return b(f(V,a6,zt),V,aJ);case
29:var
aM=c[2],W=b(d[1][a+1],d,c[1]);return b(f(W,S,qW),W,aM);default:var
aN=c[2],X=b(d[1][a+1],d,c[1]);return b(f(X,a6,AZ),X,aN)}}function
aj(a,c){return typeof
c==="number"?0===c?a:a:b(a[1][e+1],a,c[1])}function
ak(d,c){switch(c[0]){case
0:return b(d[1][a+1],d,c[1]);case
1:var
k=c[3],l=c[2],e=b(d[1][a+1],d,c[1]),g=b(f(e,pt,vK),e,l);return b(f(g,pt,xp),g,k);case
2:var
m=c[3],n=c[2],h=b(d[1][a+1],d,c[1]),i=b(f(h,bt,yG),h,n);return b(f(i,_,AM),i,m);default:var
o=c[2],j=b(d[1][a+1],d,c[1]);return b(f(j,S,AS),j,o)}}function
al(a,c){if(typeof
c==="number")switch(c){case
0:return a;case
1:return a;default:return a}return b(a[1][e+1],a,c[1])}function
am(a,c){return typeof
c==="number"?0===c?a:a:b(a[1][e+1],a,c[1])}function
an(e,d){switch(d[0]){case
0:return b(e[1][a+1],e,d[1]);case
1:var
E=d[2],g=b(e[1][a+1],e,d[1]);return b(f(g,dT,wa),g,E);case
2:var
F=d[2],h=b(e[1][a+1],e,d[1]);return b(f(h,dT,yK),h,F);case
3:var
G=d[3],H=d[2],i=b(e[1][a+1],e,d[1]),j=b(f(i,yq,AB),i,H);return b(f(j,yq,my),j,G);case
4:var
I=d[3],J=d[2],k=b(e[1][a+1],e,d[1]),l=b(f(k,S,wb),k,J);return b(f(l,_,pj),l,I);case
5:var
K=d[2],n=b(e[1][a+1],e,d[1]);return b(f(n,U,AX),n,K);case
6:var
L=d[4],M=d[3],N=d[2],o=b(e[1][a+1],e,d[1]),p=b(f(o,S,zj),o,N),q=b(f(p,U,zR),p,M);return m(f(q,A5,y7),q,function(a){return c(f(a,S,pa),a)},L);case
7:var
O=d[2],r=b(e[1][a+1],e,d[1]);return b(f(r,dY,wl),r,O);case
8:var
P=d[3],Q=d[2],s=b(e[1][a+1],e,d[1]),t=b(f(s,S,xc),s,Q);return b(f(t,dY,yP),t,P);case
9:var
R=d[2],u=b(e[1][a+1],e,d[1]);return b(f(u,rd,xz),u,R);case
10:var
T=d[3],V=d[2],v=b(e[1][a+1],e,d[1]),w=b(f(v,S,v0),v,V);return b(f(w,dY,yW),w,T);case
11:var
W=d[3],X=d[2],x=b(e[1][a+1],e,d[1]),y=b(f(x,jR,yz),x,X);return b(f(y,bt,ph),y,W);case
12:var
Y=d[3],Z=d[2],z=b(e[1][a+1],e,d[1]),A=b(f(z,mD,vU),z,Z);return b(f(A,U,Ar),A,Y);case
13:var
$=d[3],aa=d[2],B=b(e[1][a+1],e,d[1]),C=b(f(B,S,qy),B,aa);return b(f(C,U,yv),C,$);default:var
ab=d[2],D=b(e[1][a+1],e,d[1]);return b(f(D,S,vN),D,ab)}}function
ao(e,d){switch(d[0]){case
0:return b(e[1][a+1],e,d[1]);case
1:var
G=d[2],g=b(e[1][a+1],e,d[1]);return b(f(g,eV,pP),g,G);case
2:var
H=d[2],h=b(e[1][a+1],e,d[1]);return b(f(h,dT,zY),h,H);case
3:var
I=d[3],J=d[2],i=b(e[1][a+1],e,d[1]),j=b(f(i,fx,vR),i,J);return b(f(j,fx,y4),j,I);case
4:var
K=d[3],L=d[2],k=b(e[1][a+1],e,d[1]),l=b(f(k,S,zw),k,L);return b(f(l,_,yi),l,K);case
5:var
M=d[3],N=d[2],n=b(e[1][a+1],e,d[1]),o=b(f(n,U,wx),n,N);return m(f(o,394767599,aoJ),o,function(a){return c(f(a,bt,z_),a)},M);case
6:var
O=d[2],p=b(e[1][a+1],e,d[1]);return b(f(p,_,ahO),p,O);case
7:var
P=d[4],Q=d[3],R=d[2],q=b(e[1][a+1],e,d[1]),r=b(f(q,S,w3),q,R),s=b(f(r,U,pL),r,Q);return m(f(s,A5,vZ),s,function(a){return c(f(a,S,AJ),a)},P);case
8:var
T=d[2],t=b(e[1][a+1],e,d[1]);return b(f(t,eO,Pk),t,T);case
9:var
V=d[3],W=d[2],u=b(e[1][a+1],e,d[1]),v=b(f(u,S,383),u,W);return b(f(v,eO,aai),v,V);case
10:var
X=d[2],w=b(e[1][a+1],e,d[1]);return b(f(w,rd,qC),w,X);case
11:var
Y=d[3],Z=d[2],x=b(e[1][a+1],e,d[1]),y=b(f(x,S,ajP),x,Z);return b(f(y,dY,xO),y,Y);case
12:var
$=d[3],aa=d[2],z=b(e[1][a+1],e,d[1]),A=b(f(z,jR,yA),z,aa);return b(f(A,bt,o9),A,$);case
13:var
ab=d[3],ac=d[2],B=b(e[1][a+1],e,d[1]),C=b(f(B,mD,abQ),B,ac);return b(f(C,U,aeV),C,ab);case
14:var
ad=d[3],ae=d[2],D=b(e[1][a+1],e,d[1]),E=b(f(D,mD,Ah),D,ae);return b(f(E,lS,U9),E,ad);default:var
af=d[2],F=b(e[1][a+1],e,d[1]);return b(f(F,S,394),F,af)}}function
ap(a,c){return typeof
c==="number"?0===c?a:a:b(a[1][e+1],a,c[1])}function
aq(d,c){switch(c[0]){case
0:return b(d[1][a+1],d,c[1]);case
1:var
q=c[3],r=c[2],e=b(d[1][a+1],d,c[1]),g=b(f(e,U,_g),e,r);return b(f(g,U,XU),g,q);case
2:var
s=c[3],t=c[2],h=b(d[1][a+1],d,c[1]),i=b(f(h,bt,UW),h,t);return b(f(i,bt,Z_),i,s);case
3:var
u=c[3],v=c[2],j=b(d[1][a+1],d,c[1]),k=b(f(j,U,399),j,v);return b(f(k,U,400),k,u);case
4:var
w=c[3],x=c[2],l=b(d[1][a+1],d,c[1]),m=b(f(l,bt,aiL),l,x);return b(f(m,bt,Ax),m,w);case
5:var
y=c[3],z=c[2],n=b(d[1][a+1],d,c[1]),o=b(f(n,yk,X0),n,z);return b(f(o,yk,ajQ),o,y);default:var
A=c[2],p=b(d[1][a+1],d,c[1]);return b(f(p,S,Ao),p,A)}}function
ar(d,c,a){if(a){var
g=a[2],e=b(c,d,a[1]);return m(f(e,qM,yL),e,c,g)}return d}cm(g,[0,e,function(a){return c(a[1][h+1],a)},B,ar,i,aq,j,ap,k,ao,l,an,n,am,o,al,p,ak,q,aj,r,ai,s,ah,t,ag,u,af,v,ae,w,ad,x,ac,y,ab,z,aa,A,$,a,Z,C,Y,D,X,E,W,F,V,G,T,H,R,I,Q,K,P,L,O,h,M]);return function(a){return function(a){return aR(a,g)}}},kT);var
aN=kT[1],aO=kT[2];is(ax,[0,c(kT[1],0),aO,aN,0]);function
aP(h){var
d=hy(aMz,[0,e[2]]);if(!d[1]){var
a=a4(gJ),f=ds(a,a1W),i=ey(a,a1X),g=hw(a,0,0,i6,e,0),j=g[1],k=g[9];dr(a,i,function(a,b){var
d=a[f+1],e=c(c(k,a),b);return c(d[1],e)});var
l=function(d){var
e=d[1],c=aR(0,a);b(j,d[2],c);c[f+1]=e;return hx(0,c,a)};a5(a);d[1]=l}return c(d[1],[0,[0,h],e[4]])}function
aQ(h){var
d=hy(aMy,[0,e[2]]);if(!d[1]){var
a=a4(gJ),f=ds(a,a1Y),i=ey(a,a1Z),g=hw(a,0,0,i6,e,0),j=g[1],k=g[22];dr(a,i,function(a,b){var
d=a[f+1],e=c(c(k,a),b);return c(d[1],e)});var
l=function(d){var
e=d[1],c=aR(0,a);b(j,d[2],c);c[f+1]=e;return hx(0,c,a)};a5(a);d[1]=l}return c(d[1],[0,[0,h],e[4]])}function
aS(h){var
d=hy(aMx,[0,e[2]]);if(!d[1]){var
a=a4(gJ),f=ds(a,a10),i=ey(a,a11),g=hw(a,0,0,i6,e,0),j=g[1],k=g[7];dr(a,i,function(a,b){var
d=a[f+1],e=c(c(k,a),b);return c(d[1],e)});var
l=function(d){var
e=d[1],c=aR(0,a);b(j,d[2],c);c[f+1]=e;return hx(0,c,a)};a5(a);d[1]=l}return c(d[1],[0,[0,h],e[4]])}function
aT(h){var
d=hy(aMw,[0,e[2]]);if(!d[1]){var
a=a4(gJ),f=ds(a,a12),i=ey(a,a13),g=hw(a,0,0,i6,e,0),j=g[1],k=g[28];dr(a,i,function(a,b){var
d=a[f+1],e=c(c(k,a),b);return c(d[1],e)});var
l=function(d){var
e=d[1],c=aR(0,a);b(j,d[2],c);c[f+1]=e;return hx(0,c,a)};a5(a);d[1]=l}return c(d[1],[0,[0,h],e[4]])}function
aU(h){var
d=hy(aMv,[0,e[2]]);if(!d[1]){var
a=a4(gJ),f=ds(a,a14),i=ey(a,a15),g=hw(a,0,0,i6,e,0),j=g[1],k=g[27];dr(a,i,function(a,b){var
d=a[f+1],e=c(c(k,a),b);return c(d[1],e)});var
l=function(d){var
e=d[1],c=aR(0,a);b(j,d[2],c);c[f+1]=e;return hx(0,c,a)};a5(a);d[1]=l}return c(d[1],[0,[0,h],e[4]])}function
aV(h){var
d=hy(aMu,[0,e[2]]);if(!d[1]){var
a=a4(gJ),f=ds(a,a16),i=ey(a,a17),g=hw(a,0,0,i6,e,0),j=g[1],k=g[12];dr(a,i,function(a,b){var
d=a[f+1],e=c(c(k,a),b);return c(d[1],e)});var
l=function(d){var
e=d[1],c=aR(0,a);b(j,d[2],c);c[f+1]=e;return hx(0,c,a)};a5(a);d[1]=l}return c(d[1],[0,[0,h],e[4]])}var
aW=[0,aG,aI,aK,function(a){var
c=a[2];function
g(b,a){return[34,b,G(a)]}function
af(b,a){return[17,b,a]}function
ag(b,a){return[13,b,a]}function
ah(b,a){return[11,b,gr(a)]}function
ai(a,b){return 0===b?[1,a,[3,a,aMW]]:[1,a,[3,a,aMX]]}function
H(d,a,c){if(c){var
e=c[1],f=H(d,a,c[2]);return[4,a,[4,a,[1,a,[3,a,aMY]],b(d,a,e)],f]}return[1,a,[3,a,aMZ]]}function
A(a,d){switch(d[0]){case
0:return[4,a,[1,a,[0,a,[3,a,aM1],[3,a,aM0]]],b(c,a,d[1])];case
1:var
e=d[2],f=d[1],g=A(a,d[3]),h=A(a,e);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aM3],[3,a,aM2]]],b(c,a,f)],h],g];case
2:var
j=d[2],l=d[1],m=i(a,d[3]),n=k(a,j);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aM5],[3,a,aM4]]],b(c,a,l)],n],m];default:return[3,d[1],d[2]]}}function
s(a,d){switch(d[0]){case
0:return[4,a,[1,a,[0,a,[3,a,aM7],[3,a,aM6]]],b(c,a,d[1])];case
1:var
f=d[2],h=d[1],j=i(a,d[3]),l=s(a,f);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aM9],[3,a,aM8]]],b(c,a,h)],l],j];case
2:var
n=d[3],p=d[2],q=d[1],r=e(a,d[4]),t=m(a,n),u=U(a,p);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aM$],[3,a,aM_]]],b(c,a,q)],u],t],r];case
3:var
v=d[2],x=d[1],y=s(a,d[3]),z=k(a,v);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNb],[3,a,aNa]]],b(c,a,x)],z],y];case
4:var
B=d[3],D=d[2],E=d[1],F=s(a,d[4]),G=A(a,B),H=C(a,D);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNd],[3,a,aNc]]],b(c,a,E)],H],G],F];case
5:var
J=d[2],K=d[1],L=I(a,d[3]),M=k(a,J);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNf],[3,a,aNe]]],b(c,a,K)],M],L];case
6:var
N=d[2],O=d[1],P=o(a,d[3]),Q=s(a,N);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNh],[3,a,aNg]]],b(c,a,O)],Q],P];case
7:var
R=d[2],S=d[1],T=s(a,d[3]),V=s(a,R);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNj],[3,a,aNi]]],b(c,a,S)],V],T];case
8:var
W=d[2],X=d[1],Y=s(a,d[3]),Z=s(a,W);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNl],[3,a,aNk]]],b(c,a,X)],Z],Y];case
9:var
_=d[3],$=d[2],aa=d[1],ab=s(a,d[4]),ac=w(a,_),ad=g(a,$);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNn],[3,a,aNm]]],b(c,a,aa)],ad],ac],ab];default:return[3,d[1],d[2]]}}function
R(a,d){switch(d[0]){case
0:return[4,a,[1,a,[0,a,[3,a,aNp],[3,a,aNo]]],b(c,a,d[1])];case
1:var
f=d[2],h=d[1],i=e(a,d[3]),j=e(a,f);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNr],[3,a,aNq]]],b(c,a,h)],j],i];case
2:var
k=d[2],l=d[1],m=R(a,d[3]),n=R(a,k);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNt],[3,a,aNs]]],b(c,a,l)],n],m];case
3:var
p=d[1],q=o(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aNv],[3,a,aNu]]],b(c,a,p)],q];case
4:var
r=d[3],s=d[2],t=d[1],u=e(a,d[4]),v=K(a,r),w=g(a,s);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNx],[3,a,aNw]]],b(c,a,t)],w],v],u];case
5:var
x=d[4],y=d[3],z=d[2],A=d[1],B=e(a,d[5]),C=U(a,x),D=S(a,y),E=g(a,z);return[4,a,[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNz],[3,a,aNy]]],b(c,a,A)],E],D],C],B];case
6:var
F=d[3],G=d[2],H=d[1],I=e(a,d[4]),J=K(a,F),L=g(a,G);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNB],[3,a,aNA]]],b(c,a,H)],L],J],I];default:return[3,d[1],d[2]]}}function
I(a,d){switch(d[0]){case
0:return[4,a,[1,a,[0,a,[3,a,aND],[3,a,aNC]]],b(c,a,d[1])];case
1:var
f=d[2],h=d[1],j=I(a,d[3]),k=I(a,f);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNF],[3,a,aNE]]],b(c,a,h)],k],j];case
2:var
l=d[2],m=d[1],n=e(a,d[3]),o=e(a,l);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNH],[3,a,aNG]]],b(c,a,m)],o],n];case
3:var
p=d[3],q=d[2],r=d[1],t=g(a,d[4]),u=s(a,p),v=y(a,q);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNJ],[3,a,aNI]]],b(c,a,r)],v],u],t];case
4:var
w=d[1],x=i(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aNL],[3,a,aNK]]],b(c,a,w)],x];case
5:var
z=d[5],A=d[4],B=d[3],C=d[2],D=d[1],E=e(a,d[6]),F=i(a,z),G=K(a,A),H=y(a,B),J=g(a,C);return[4,a,[4,a,[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNN],[3,a,aNM]]],b(c,a,D)],J],H],G],F],E];case
6:var
L=d[4],M=d[3],N=d[2],O=d[1],P=i(a,d[5]),Q=S(a,L),R=y(a,M),T=g(a,N);return[4,a,[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNP],[3,a,aNO]]],b(c,a,O)],T],R],Q],P];case
7:var
U=d[3],V=d[2],W=d[1],X=e(a,d[4]),Y=K(a,U),Z=g(a,V);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNR],[3,a,aNQ]]],b(c,a,W)],Z],Y],X];case
8:var
_=d[3],$=d[2],aa=d[1],ab=e(a,d[4]),ac=S(a,_),ad=g(a,$);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNT],[3,a,aNS]]],b(c,a,aa)],ad],ac],ab];default:return[3,d[1],d[2]]}}function
o(a,d){switch(d[0]){case
0:return[4,a,[1,a,[0,a,[3,a,aNV],[3,a,aNU]]],b(c,a,d[1])];case
1:var
f=d[3],h=d[2],i=d[1],j=e(a,d[4]),k=m(a,f),l=U(a,h);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNX],[3,a,aNW]]],b(c,a,i)],l],k],j];case
2:var
n=d[2],p=d[1],q=o(a,d[3]),r=e(a,n);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aNZ],[3,a,aNY]]],b(c,a,p)],r],q];case
3:var
s=d[2],t=d[1],u=R(a,d[3]),v=e(a,s);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aN1],[3,a,aN0]]],b(c,a,t)],v],u];case
4:var
x=d[2],y=d[1],z=o(a,d[3]),A=o(a,x);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aN3],[3,a,aN2]]],b(c,a,y)],A],z];case
5:var
B=d[2],C=d[1],D=o(a,d[3]),E=o(a,B);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aN5],[3,a,aN4]]],b(c,a,C)],E],D];case
6:var
F=d[2],G=d[1],H=o(a,d[3]),I=o(a,F);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aN7],[3,a,aN6]]],b(c,a,G)],I],H];case
7:var
J=d[3],K=d[2],L=d[1],M=o(a,d[4]),N=w(a,J),O=g(a,K);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aN9],[3,a,aN8]]],b(c,a,L)],O],N],M];default:return[3,d[1],d[2]]}}function
e(a,d){switch(d[0]){case
0:return[4,a,[1,a,[0,a,[3,a,aN$],[3,a,aN_]]],b(c,a,d[1])];case
1:var
f=d[2],h=d[1],i=e(a,d[3]),j=e(a,f);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aOb],[3,a,aOa]]],b(c,a,h)],j],i];case
2:return[4,a,[1,a,[0,a,[3,a,aOd],[3,a,aOc]]],b(c,a,d[1])];case
3:var
k=d[2],l=d[1],n=e(a,d[3]),o=e(a,k);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aOf],[3,a,aOe]]],b(c,a,l)],o],n];case
4:var
q=d[2],r=d[1],s=e(a,d[3]),t=e(a,q);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aOh],[3,a,aOg]]],b(c,a,r)],t],s];case
5:var
u=d[1],v=m(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aOj],[3,a,aOi]]],b(c,a,u)],v];case
6:var
x=d[2],y=d[1],z=e(a,d[3]),A=g(a,x);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aOl],[3,a,aOk]]],b(c,a,y)],A],z];case
7:var
B=d[1],C=m(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aOn],[3,a,aOm]]],b(c,a,B)],C];case
8:var
D=d[2],E=d[1],F=e(a,d[3]),G=e(a,D);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aOp],[3,a,aOo]]],b(c,a,E)],G],F];case
9:var
I=d[5],J=d[4],K=d[3],L=d[2],M=d[1],N=H(function(a,b){var
c=b[1],d=e(a,b[2]);return[36,a,[37,a,e(a,c),d]]},a,I),O=e(a,J),P=H(e,a,K),Q=g(a,L);return[4,a,[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aOr],[3,a,aOq]]],b(c,a,M)],Q],P],O],N];case
10:var
R=d[3],S=d[2],T=d[1],U=e(a,d[4]),V=H(e,a,R),W=m(a,S);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aOt],[3,a,aOs]]],b(c,a,T)],W],V],U];case
11:var
X=d[2],Y=d[1],Z=ac(a,d[3]),_=e(a,X);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aOv],[3,a,aOu]]],b(c,a,Y)],_],Z];case
12:var
$=d[2],aa=d[1],ab=e(a,d[3]),ad=g(a,$);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aOx],[3,a,aOw]]],b(c,a,aa)],ad],ab];case
13:var
ae=d[2],af=d[1],ag=e(a,d[3]),ah=e(a,ae);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aOz],[3,a,aOy]]],b(c,a,af)],ah],ag];case
14:var
ai=d[2],aj=d[1],ak=e(a,d[3]),al=e(a,ai);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aOB],[3,a,aOA]]],b(c,a,aj)],al],ak];case
15:var
am=d[1],an=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aOD],[3,a,aOC]]],b(c,a,am)],an];case
16:var
ao=d[1],ap=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aOF],[3,a,aOE]]],b(c,a,ao)],ap];case
17:var
aq=d[1],ar=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aOH],[3,a,aOG]]],b(c,a,aq)],ar];case
18:return[4,a,[1,a,[0,a,[3,a,aOJ],[3,a,aOI]]],b(c,a,d[1])];case
19:return[4,a,[1,a,[0,a,[3,a,aOL],[3,a,aOK]]],b(c,a,d[1])];case
20:var
as=d[1],at=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aON],[3,a,aOM]]],b(c,a,as)],at];case
21:var
au=d[1],av=e(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aOP],[3,a,aOO]]],b(c,a,au)],av];case
22:var
aw=d[2],ax=d[1],ay=e(a,d[3]),az=e(a,aw);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aOR],[3,a,aOQ]]],b(c,a,ax)],az],ay];case
23:var
aA=d[2],aB=d[1],aC=e(a,d[3]),aD=e(a,aA);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aOT],[3,a,aOS]]],b(c,a,aB)],aD],aC];case
24:var
aE=d[2],aF=d[1],aG=e(a,d[3]),aH=e(a,aE);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aOV],[3,a,aOU]]],b(c,a,aF)],aH],aG];case
25:var
aI=d[1],aJ=e(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aOX],[3,a,aOW]]],b(c,a,aI)],aJ];case
26:var
aK=d[2],aL=d[1],aM=e(a,d[3]),aN=e(a,aK);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aOZ],[3,a,aOY]]],b(c,a,aL)],aN],aM];case
27:var
aO=d[2],aP=d[1],aQ=e(a,d[3]),aR=e(a,aO);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aO1],[3,a,aO0]]],b(c,a,aP)],aR],aQ];case
28:var
aS=d[2],aT=d[1],aU=e(a,d[3]),aV=e(a,aS);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aO3],[3,a,aO2]]],b(c,a,aT)],aV],aU];case
29:var
aW=d[1],aX=e(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aO5],[3,a,aO4]]],b(c,a,aW)],aX];case
30:var
aY=d[1],aZ=e(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aO7],[3,a,aO6]]],b(c,a,aY)],aZ];case
31:var
a0=d[1],a1=e(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aO9],[3,a,aO8]]],b(c,a,a0)],a1];case
32:var
a2=d[2],a3=d[1],a4=e(a,d[3]),a5=e(a,a2);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aO$],[3,a,aO_]]],b(c,a,a3)],a5],a4];case
33:var
a6=d[1],a7=e(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aPb],[3,a,aPa]]],b(c,a,a6)],a7];case
34:var
a8=d[1],a9=e(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aPd],[3,a,aPc]]],b(c,a,a8)],a9];case
35:var
a_=d[1],a$=e(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aPf],[3,a,aPe]]],b(c,a,a_)],a$];case
36:var
ba=d[2],bb=d[1],bc=e(a,d[3]),bd=e(a,ba);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aPh],[3,a,aPg]]],b(c,a,bb)],bd],bc];case
37:var
be=d[2],bf=d[1],bg=e(a,d[3]),bh=e(a,be);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aPj],[3,a,aPi]]],b(c,a,bf)],bh],bg];case
38:var
bi=d[2],bj=d[1],bk=e(a,d[3]),bl=e(a,bi);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aPl],[3,a,aPk]]],b(c,a,bj)],bl],bk];case
39:var
bm=d[1],bn=p(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aPn],[3,a,aPm]]],b(c,a,bm)],bn];case
40:return[4,a,[1,a,[0,a,[3,a,aPp],[3,a,aPo]]],b(c,a,d[1])];case
41:var
bo=d[3],bp=d[2],bq=d[1],br=e(a,d[4]),bs=w(a,bo),bt=g(a,bp);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aPr],[3,a,aPq]]],b(c,a,bq)],bt],bs],br];default:return[3,d[1],d[2]]}}function
ab(a,b){return typeof
b==="number"?0===b?[1,a,[0,a,[3,a,aPt],[3,a,aPs]]]:[1,a,[0,a,[3,a,aPv],[3,a,aPu]]]:[3,a,b[1]]}function
i(a,d){switch(d[0]){case
0:return[4,a,[1,a,[0,a,[3,a,aPx],[3,a,aPw]]],b(c,a,d[1])];case
1:var
f=d[1],h=m(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aPz],[3,a,aPy]]],b(c,a,f)],h];case
2:var
j=d[2],l=d[1],n=i(a,d[3]),o=i(a,j);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aPB],[3,a,aPA]]],b(c,a,l)],o],n];case
3:return[3,d[1],d[2]];case
4:var
p=d[2],q=d[1],r=i(a,d[3]),s=i(a,p);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aPD],[3,a,aPC]]],b(c,a,q)],s],r];case
5:var
u=d[2],v=d[1],x=i(a,d[3]),z=i(a,u);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aPF],[3,a,aPE]]],b(c,a,v)],z],x];case
6:var
D=d[1],E=i(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aPH],[3,a,aPG]]],b(c,a,D)],E];case
7:var
F=d[2],G=d[1],H=i(a,d[3]),J=i(a,F);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aPJ],[3,a,aPI]]],b(c,a,G)],J],H];case
8:return[4,a,[1,a,[0,a,[3,a,aPL],[3,a,aPK]]],b(c,a,d[1])];case
9:var
K=d[1],M=i(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aPN],[3,a,aPM]]],b(c,a,K)],M];case
10:var
N=d[2],O=d[1],P=i(a,d[3]),Q=i(a,N);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aPP],[3,a,aPO]]],b(c,a,O)],Q],P];case
11:var
R=d[1],S=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aPR],[3,a,aPQ]]],b(c,a,R)],S];case
12:var
T=d[3],U=d[2],V=d[1],W=e(a,d[4]),X=e(a,T),Y=i(a,U);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aPT],[3,a,aPS]]],b(c,a,V)],Y],X],W];case
13:var
Z=d[1],_=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aPV],[3,a,aPU]]],b(c,a,Z)],_];case
14:var
$=d[5],aa=d[4],ac=d[3],ad=d[2],ae=d[1],af=i(a,d[6]),ag=ab(a,$),ah=i(a,aa),ai=i(a,ac),aj=k(a,ad);return[4,a,[4,a,[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aPX],[3,a,aPW]]],b(c,a,ae)],aj],ai],ah],ag],af];case
15:var
ak=d[1],al=B(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aPZ],[3,a,aPY]]],b(c,a,ak)],al];case
16:var
am=d[3],an=d[2],ao=d[1],ap=i(a,d[4]),aq=i(a,am),ar=i(a,an);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aP1],[3,a,aP0]]],b(c,a,ao)],ar],aq],ap];case
17:var
as=d[1],at=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aP3],[3,a,aP2]]],b(c,a,as)],at];case
18:var
au=d[1],av=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aP5],[3,a,aP4]]],b(c,a,au)],av];case
19:var
aw=d[1],ax=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aP7],[3,a,aP6]]],b(c,a,aw)],ax];case
20:var
ay=d[1],az=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aP9],[3,a,aP8]]],b(c,a,ay)],az];case
21:var
aA=d[2],aB=d[1],aC=i(a,d[3]),aD=g(a,aA);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aP$],[3,a,aP_]]],b(c,a,aB)],aD],aC];case
22:var
aE=d[1],aF=i(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aQb],[3,a,aQa]]],b(c,a,aE)],aF];case
23:var
aG=d[3],aH=d[2],aI=d[1],aJ=i(a,d[4]),aK=A(a,aG),aL=C(a,aH);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQd],[3,a,aQc]]],b(c,a,aI)],aL],aK],aJ];case
24:var
aM=d[3],aN=d[2],aO=d[1],aP=i(a,d[4]),aQ=t(a,aM),aR=g(a,aN);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQf],[3,a,aQe]]],b(c,a,aO)],aR],aQ],aP];case
25:var
aS=d[2],aT=d[1],aU=B(a,d[3]),aV=i(a,aS);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQh],[3,a,aQg]]],b(c,a,aT)],aV],aU];case
26:var
aW=d[1],aX=m(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aQj],[3,a,aQi]]],b(c,a,aW)],aX];case
27:var
aY=d[2],aZ=d[1],a0=I(a,d[3]),a1=k(a,aY);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQl],[3,a,aQk]]],b(c,a,aZ)],a1],a0];case
28:var
a2=d[2],a3=d[1],a4=i(a,d[3]),a5=g(a,a2);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQn],[3,a,aQm]]],b(c,a,a3)],a5],a4];case
29:var
a6=d[1],a7=L(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aQp],[3,a,aQo]]],b(c,a,a6)],a7];case
30:var
a8=d[2],a9=d[1],a_=i(a,d[3]),a$=L(a,a8);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQr],[3,a,aQq]]],b(c,a,a9)],a$],a_];case
31:var
ba=d[1],bb=i(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aQt],[3,a,aQs]]],b(c,a,ba)],bb];case
32:var
bc=d[2],bd=d[1],be=g(a,d[3]),bf=i(a,bc);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQv],[3,a,aQu]]],b(c,a,bd)],bf],be];case
33:var
bg=d[2],bh=d[1],bi=i(a,d[3]),bj=i(a,bg);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQx],[3,a,aQw]]],b(c,a,bh)],bj],bi];case
34:var
bk=d[1],bl=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aQz],[3,a,aQy]]],b(c,a,bk)],bl];case
35:var
bm=d[2],bn=d[1],bo=B(a,d[3]),bp=i(a,bm);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQB],[3,a,aQA]]],b(c,a,bn)],bp],bo];case
36:var
bq=d[1],br=i(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aQD],[3,a,aQC]]],b(c,a,bq)],br];case
37:var
bs=d[2],bt=d[1],bu=i(a,d[3]),bv=i(a,bs);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQF],[3,a,aQE]]],b(c,a,bt)],bv],bu];case
38:var
bw=d[2],bx=d[1],by=e(a,d[3]),bz=i(a,bw);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQH],[3,a,aQG]]],b(c,a,bx)],bz],by];case
39:var
bA=d[1],bB=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aQJ],[3,a,aQI]]],b(c,a,bA)],bB];case
40:var
bC=d[2],bD=d[1],bE=i(a,d[3]),bF=i(a,bC);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQL],[3,a,aQK]]],b(c,a,bD)],bF],bE];case
41:var
bG=d[3],bH=d[2],bI=d[1],bJ=i(a,d[4]),bK=y(a,bG),bL=m(a,bH);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQN],[3,a,aQM]]],b(c,a,bI)],bL],bK],bJ];case
42:var
bM=d[2],bN=d[1],bO=i(a,d[3]),bP=g(a,bM);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQP],[3,a,aQO]]],b(c,a,bN)],bP],bO];case
43:var
bQ=d[1],bR=t(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aQR],[3,a,aQQ]]],b(c,a,bQ)],bR];default:var
bS=d[3],bT=d[2],bU=d[1],bV=i(a,d[4]),bW=w(a,bS),bX=g(a,bT);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQT],[3,a,aQS]]],b(c,a,bU)],bX],bW],bV]}}function
m(a,d){switch(d[0]){case
0:var
e=d[2],f=d[1],h=m(a,d[3]),i=m(a,e);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQV],[3,a,aQU]]],b(c,a,f)],i],h];case
1:var
j=d[2],k=d[1],l=m(a,d[3]),n=m(a,j);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQX],[3,a,aQW]]],b(c,a,k)],n],l];case
2:var
o=d[1],p=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aQZ],[3,a,aQY]]],b(c,a,o)],p];case
3:var
q=d[1],r=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aQ1],[3,a,aQ0]]],b(c,a,q)],r];default:return[3,d[1],d[2]]}}function
B(a,d){switch(d[0]){case
0:return[4,a,[1,a,[0,a,[3,a,aQ3],[3,a,aQ2]]],b(c,a,d[1])];case
1:var
e=d[2],f=d[1],g=B(a,d[3]),h=B(a,e);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQ5],[3,a,aQ4]]],b(c,a,f)],h],g];case
2:var
j=d[3],l=d[2],m=d[1],n=i(a,d[4]),o=i(a,j),p=k(a,l);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aQ7],[3,a,aQ6]]],b(c,a,m)],p],o],n];default:return[3,d[1],d[2]]}}function
$(d,a,c){if(typeof
c==="number")return[1,a,[0,a,[3,a,aQ9],[3,a,aQ8]]];else{if(0===c[0]){var
e=c[1],f=$(d,a,c[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aQ$],[3,a,aQ_]]],b(d,a,e)],f]}return[3,a,c[1]]}}function
J(a,d){switch(d[0]){case
0:return[4,a,[1,a,[0,a,[3,a,aRf],[3,a,aRe]]],b(c,a,d[1])];case
1:var
e=d[2],f=d[1],h=J(a,d[3]),i=J(a,e);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aRh],[3,a,aRg]]],b(c,a,f)],i],h];case
2:var
j=d[3],k=d[2],l=d[1],m=t(a,d[4]),n=p(a,j),o=g(a,k);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aRj],[3,a,aRi]]],b(c,a,l)],o],n],m];case
3:var
q=d[2],r=d[1],s=p(a,d[3]),u=g(a,q);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aRl],[3,a,aRk]]],b(c,a,r)],u],s];default:return[3,d[1],d[2]]}}function
t(a,d){switch(d[0]){case
0:return[4,a,[1,a,[0,a,[3,a,aRn],[3,a,aRm]]],b(c,a,d[1])];case
1:var
e=d[1],f=m(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aRp],[3,a,aRo]]],b(c,a,e)],f];case
2:var
h=d[2],j=d[1],k=t(a,d[3]),l=t(a,h);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aRr],[3,a,aRq]]],b(c,a,j)],l],k];case
3:var
n=d[3],o=d[2],q=d[1],r=t(a,d[4]),s=p(a,n),u=g(a,o);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aRt],[3,a,aRs]]],b(c,a,q)],u],s],r];case
4:var
v=d[1],x=w(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aRv],[3,a,aRu]]],b(c,a,v)],x];case
5:var
y=d[2],z=d[1],A=p(a,d[3]),B=t(a,y);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aRx],[3,a,aRw]]],b(c,a,z)],B],A];case
6:var
C=d[1],D=i(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aRz],[3,a,aRy]]],b(c,a,C)],D];case
7:var
E=d[3],F=d[2],G=d[1],H=t(a,d[4]),I=w(a,E),J=g(a,F);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aRB],[3,a,aRA]]],b(c,a,G)],J],I],H];default:return[3,d[1],d[2]]}}function
p(a,d){switch(d[0]){case
0:return[4,a,[1,a,[0,a,[3,a,aRD],[3,a,aRC]]],b(c,a,d[1])];case
1:var
e=d[1],f=m(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aRF],[3,a,aRE]]],b(c,a,e)],f];case
2:var
h=d[1],i=m(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aRH],[3,a,aRG]]],b(c,a,h)],i];case
3:var
j=d[3],k=d[2],l=d[1],n=p(a,d[4]),o=p(a,j),q=g(a,k);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aRJ],[3,a,aRI]]],b(c,a,l)],q],o],n];case
4:var
r=d[1],s=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aRL],[3,a,aRK]]],b(c,a,r)],s];case
5:var
u=d[1],v=T(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aRN],[3,a,aRM]]],b(c,a,u)],v];case
6:var
x=d[2],y=d[1],z=V(a,d[3]),A=p(a,x);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aRP],[3,a,aRO]]],b(c,a,y)],A],z];case
7:var
B=d[1],C=t(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aRR],[3,a,aRQ]]],b(c,a,B)],C];case
8:var
D=d[3],E=d[2],F=d[1],G=p(a,d[4]),H=w(a,D),I=g(a,E);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aRT],[3,a,aRS]]],b(c,a,F)],I],H],G];default:return[3,d[1],d[2]]}}function
S(a,b){return typeof
b==="number"?0===b?[1,a,[0,a,[3,a,aRV],[3,a,aRU]]]:[1,a,[0,a,[3,a,aRX],[3,a,aRW]]]:[3,a,b[1]]}function
y(a,b){return typeof
b==="number"?0===b?[1,a,[0,a,[3,a,aRZ],[3,a,aRY]]]:[1,a,[0,a,[3,a,aR1],[3,a,aR0]]]:[3,a,b[1]]}function
k(a,d){switch(d[0]){case
0:return[4,a,[1,a,[0,a,[3,a,aR3],[3,a,aR2]]],b(c,a,d[1])];case
1:var
f=d[1],h=m(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aR5],[3,a,aR4]]],b(c,a,f)],h];case
2:var
j=d[2],l=d[1],n=k(a,d[3]),o=k(a,j);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aR7],[3,a,aR6]]],b(c,a,l)],o],n];case
3:return[3,d[1],d[2]];case
4:return[4,a,[1,a,[0,a,[3,a,aR9],[3,a,aR8]]],b(c,a,d[1])];case
5:var
p=d[2],q=d[1],r=k(a,d[3]),s=k(a,p);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aR$],[3,a,aR_]]],b(c,a,q)],s],r];case
6:var
t=d[1],u=k(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aSb],[3,a,aSa]]],b(c,a,t)],u];case
7:var
v=d[2],x=d[1],y=k(a,d[3]),z=k(a,v);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aSd],[3,a,aSc]]],b(c,a,x)],z],y];case
8:var
A=d[2],B=d[1],C=k(a,d[3]),D=k(a,A);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aSf],[3,a,aSe]]],b(c,a,B)],D],C];case
9:var
E=d[1],F=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aSh],[3,a,aSg]]],b(c,a,E)],F];case
10:var
G=d[1],H=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aSj],[3,a,aSi]]],b(c,a,G)],H];case
11:var
I=d[1],J=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aSl],[3,a,aSk]]],b(c,a,I)],J];case
12:var
K=d[1],L=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aSn],[3,a,aSm]]],b(c,a,K)],L];case
13:var
M=d[1],N=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aSp],[3,a,aSo]]],b(c,a,M)],N];case
14:var
O=d[1],P=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aSr],[3,a,aSq]]],b(c,a,O)],P];case
15:var
Q=d[2],R=d[1],S=k(a,d[3]),T=g(a,Q);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aSt],[3,a,aSs]]],b(c,a,R)],T],S];case
16:var
U=d[2],V=d[1],W=k(a,d[3]),X=g(a,U);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aSv],[3,a,aSu]]],b(c,a,V)],X],W];case
17:var
Y=d[3],Z=d[2],_=d[1],$=i(a,d[4]),aa=k(a,Y),ab=g(a,Z);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aSx],[3,a,aSw]]],b(c,a,_)],ab],aa],$];case
18:var
ac=d[2],ad=d[1],ae=k(a,d[3]),af=k(a,ac);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aSz],[3,a,aSy]]],b(c,a,ad)],af],ae];case
19:var
ag=d[2],ah=d[1],ai=k(a,d[3]),aj=k(a,ag);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aSB],[3,a,aSA]]],b(c,a,ah)],aj],ai];case
20:var
ak=d[1],al=k(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aSD],[3,a,aSC]]],b(c,a,ak)],al];case
21:var
am=d[2],an=d[1],ao=k(a,d[3]),ap=m(a,am);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aSF],[3,a,aSE]]],b(c,a,an)],ap],ao];case
22:var
aq=d[1],ar=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aSH],[3,a,aSG]]],b(c,a,aq)],ar];case
23:var
as=d[1],at=k(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aSJ],[3,a,aSI]]],b(c,a,as)],at];case
24:var
au=d[2],av=d[1],aw=e(a,d[3]),ax=k(a,au);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aSL],[3,a,aSK]]],b(c,a,av)],ax],aw];case
25:var
ay=d[1],az=m(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aSN],[3,a,aSM]]],b(c,a,ay)],az];case
26:var
aA=d[1],aB=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aSP],[3,a,aSO]]],b(c,a,aA)],aB];case
27:var
aC=d[1],aD=k(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aSR],[3,a,aSQ]]],b(c,a,aC)],aD];case
28:var
aE=d[3],aF=d[2],aG=d[1],aH=k(a,d[4]),aI=w(a,aE),aJ=g(a,aF);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aST],[3,a,aSS]]],b(c,a,aG)],aJ],aI],aH];case
29:var
aK=d[1],aL=g(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aSV],[3,a,aSU]]],b(c,a,aK)],aL];default:var
aM=d[1],aN=k(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aSX],[3,a,aSW]]],b(c,a,aM)],aN]}}function
K(a,b){return typeof
b==="number"?0===b?[1,a,[0,a,[3,a,aSZ],[3,a,aSY]]]:[1,a,[0,a,[3,a,aS1],[3,a,aS0]]]:[3,a,b[1]]}function
L(a,d){switch(d[0]){case
0:return[4,a,[1,a,[0,a,[3,a,aS3],[3,a,aS2]]],b(c,a,d[1])];case
1:var
e=d[2],f=d[1],g=L(a,d[3]),h=L(a,e);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aS5],[3,a,aS4]]],b(c,a,f)],h],g];case
2:var
j=d[2],k=d[1],l=i(a,d[3]),n=m(a,j);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aS7],[3,a,aS6]]],b(c,a,k)],n],l];default:return[3,d[1],d[2]]}}function
C(a,b){if(typeof
b==="number")switch(b){case
0:return[1,a,[0,a,[3,a,aS9],[3,a,aS8]]];case
1:return[1,a,[0,a,[3,a,aS$],[3,a,aS_]]];default:return[1,a,[0,a,[3,a,aTb],[3,a,aTa]]]}return[3,a,b[1]]}function
ac(a,b){return typeof
b==="number"?0===b?[1,a,[0,a,[3,a,aTd],[3,a,aTc]]]:[1,a,[0,a,[3,a,aTf],[3,a,aTe]]]:[3,a,b[1]]}function
T(a,d){switch(d[0]){case
0:return[4,a,[1,a,[0,a,[3,a,aTh],[3,a,aTg]]],b(c,a,d[1])];case
1:var
f=d[1],h=o(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aTj],[3,a,aTi]]],b(c,a,f)],h];case
2:var
j=d[1],k=o(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aTl],[3,a,aTk]]],b(c,a,j)],k];case
3:var
l=d[2],n=d[1],q=T(a,d[3]),r=T(a,l);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aTn],[3,a,aTm]]],b(c,a,n)],r],q];case
4:var
s=d[2],t=d[1],u=i(a,d[3]),v=g(a,s);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aTp],[3,a,aTo]]],b(c,a,t)],v],u];case
5:var
w=d[1],x=e(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aTr],[3,a,aTq]]],b(c,a,w)],x];case
6:var
z=d[3],A=d[2],B=d[1],D=$(g,a,d[4]),E=e(a,z),F=g(a,A);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aTt],[3,a,aTs]]],b(c,a,B)],F],E],D];case
7:var
G=d[1],H=p(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aTv],[3,a,aTu]]],b(c,a,G)],H];case
8:var
I=d[2],K=d[1],L=p(a,d[3]),M=g(a,I);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aTx],[3,a,aTw]]],b(c,a,K)],M],L];case
9:var
N=d[1],O=J(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aTz],[3,a,aTy]]],b(c,a,N)],O];case
10:var
P=d[2],Q=d[1],R=p(a,d[3]),S=g(a,P);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aTB],[3,a,aTA]]],b(c,a,Q)],S],R];case
11:var
U=d[2],V=d[1],W=m(a,d[3]),X=y(a,U);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aTD],[3,a,aTC]]],b(c,a,V)],X],W];case
12:var
Y=d[2],Z=d[1],_=e(a,d[3]),aa=C(a,Y);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aTF],[3,a,aTE]]],b(c,a,Z)],aa],_];case
13:var
ab=d[2],ac=d[1],ad=e(a,d[3]),ae=g(a,ab);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aTH],[3,a,aTG]]],b(c,a,ac)],ae],ad];default:return[3,d[1],d[2]]}}function
w(a,d){switch(d[0]){case
0:return[4,a,[1,a,[0,a,[3,a,aTJ],[3,a,aTI]]],b(c,a,d[1])];case
1:var
h=d[1],j=s(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aTL],[3,a,aTK]]],b(c,a,h)],j];case
2:var
k=d[1],l=o(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aTN],[3,a,aTM]]],b(c,a,k)],l];case
3:var
n=d[2],q=d[1],r=w(a,d[3]),u=w(a,n);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aTP],[3,a,aTO]]],b(c,a,q)],u],r];case
4:var
v=d[2],x=d[1],z=i(a,d[3]),B=g(a,v);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aTR],[3,a,aTQ]]],b(c,a,x)],B],z];case
5:var
f=d[3],D=d[2],E=d[1],F=typeof
f==="number"?[1,a,[0,a,[3,a,aRb],[3,a,aRa]]]:0===f[0]?[4,a,[1,a,[0,a,[3,a,aRd],[3,a,aRc]]],m(a,f[1])]:[3,a,f[1]],G=e(a,D);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aTT],[3,a,aTS]]],b(c,a,E)],G],F];case
6:var
H=d[1],I=i(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aTV],[3,a,aTU]]],b(c,a,H)],I];case
7:var
K=d[3],L=d[2],M=d[1],N=$(g,a,d[4]),O=e(a,K),P=g(a,L);return[4,a,[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aTX],[3,a,aTW]]],b(c,a,M)],P],O],N];case
8:var
Q=d[1],R=t(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aTZ],[3,a,aTY]]],b(c,a,Q)],R];case
9:var
S=d[2],T=d[1],U=t(a,d[3]),V=g(a,S);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aT1],[3,a,aT0]]],b(c,a,T)],V],U];case
10:var
W=d[1],X=J(a,d[2]);return[4,a,[4,a,[1,a,[0,a,[3,a,aT3],[3,a,aT2]]],b(c,a,W)],X];case
11:var
Y=d[2],Z=d[1],_=p(a,d[3]),aa=g(a,Y);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aT5],[3,a,aT4]]],b(c,a,Z)],aa],_];case
12:var
ab=d[2],ac=d[1],ad=m(a,d[3]),ae=y(a,ab);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aT7],[3,a,aT6]]],b(c,a,ac)],ae],ad];case
13:var
af=d[2],ag=d[1],ah=e(a,d[3]),ai=C(a,af);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aT9],[3,a,aT8]]],b(c,a,ag)],ai],ah];case
14:var
aj=d[2],ak=d[1],al=A(a,d[3]),am=C(a,aj);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aT$],[3,a,aT_]]],b(c,a,ak)],am],al];default:return[3,d[1],d[2]]}}function
U(a,b){return typeof
b==="number"?0===b?[1,a,[0,a,[3,a,aUb],[3,a,aUa]]]:[1,a,[0,a,[3,a,aUd],[3,a,aUc]]]:[3,a,b[1]]}function
V(a,d){switch(d[0]){case
0:return[4,a,[1,a,[0,a,[3,a,aUf],[3,a,aUe]]],b(c,a,d[1])];case
1:var
f=d[2],g=d[1],h=e(a,d[3]),i=e(a,f);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aUh],[3,a,aUg]]],b(c,a,g)],i],h];case
2:var
j=d[2],k=d[1],l=m(a,d[3]),n=m(a,j);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aUj],[3,a,aUi]]],b(c,a,k)],n],l];case
3:var
o=d[2],p=d[1],q=e(a,d[3]),r=e(a,o);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aUl],[3,a,aUk]]],b(c,a,p)],r],q];case
4:var
s=d[2],t=d[1],u=m(a,d[3]),v=m(a,s);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aUn],[3,a,aUm]]],b(c,a,t)],v],u];case
5:var
w=d[2],x=d[1],y=V(a,d[3]),z=V(a,w);return[4,a,[4,a,[4,a,[1,a,[0,a,[3,a,aUp],[3,a,aUo]]],b(c,a,x)],z],y];default:return[3,d[1],d[2]]}}var
d=a[1];function
h(b,a){return[22,b,G(a)]}function
aj(b,a){return[10,b,a]}function
ak(b,a){return[14,b,a]}function
al(b,a){return[9,b,gr(a)]}function
am(a,b){return 0===b?[1,a,[3,a,aUq]]:[1,a,[3,a,aUr]]}function
M(d,a,c){if(c){var
e=c[1],f=M(d,a,c[2]);return[5,a,[5,a,[1,a,[3,a,aUs]],b(d,a,e)],f]}return[1,a,[3,a,aUt]]}function
D(a,c){switch(c[0]){case
0:return[5,a,[1,a,[0,a,[3,a,aUv],[3,a,aUu]]],b(d,a,c[1])];case
1:var
e=c[2],f=c[1],g=D(a,c[3]),h=D(a,e);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aUx],[3,a,aUw]]],b(d,a,f)],h],g];case
2:var
i=c[2],k=c[1],m=j(a,c[3]),n=l(a,i);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aUz],[3,a,aUy]]],b(d,a,k)],n],m];default:return[3,c[1],c[2]]}}function
u(a,c){switch(c[0]){case
0:return[5,a,[1,a,[0,a,[3,a,aUB],[3,a,aUA]]],b(d,a,c[1])];case
1:var
e=c[2],g=c[1],i=j(a,c[3]),k=u(a,e);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aUD],[3,a,aUC]]],b(d,a,g)],k],i];case
2:var
m=c[3],o=c[2],p=c[1],r=f(a,c[4]),s=n(a,m),t=Z(a,o);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aUF],[3,a,aUE]]],b(d,a,p)],t],s],r];case
3:var
v=c[2],w=c[1],y=u(a,c[3]),z=l(a,v);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aUH],[3,a,aUG]]],b(d,a,w)],z],y];case
4:var
A=c[3],B=c[2],C=c[1],E=u(a,c[4]),G=D(a,A),H=F(a,B);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aUJ],[3,a,aUI]]],b(d,a,C)],H],G],E];case
5:var
I=c[2],J=c[1],K=N(a,c[3]),L=l(a,I);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aUL],[3,a,aUK]]],b(d,a,J)],L],K];case
6:var
M=c[2],O=c[1],P=q(a,c[3]),Q=u(a,M);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aUN],[3,a,aUM]]],b(d,a,O)],Q],P];case
7:var
R=c[2],S=c[1],T=u(a,c[3]),U=u(a,R);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aUP],[3,a,aUO]]],b(d,a,S)],U],T];case
8:var
V=c[2],W=c[1],X=u(a,c[3]),Y=u(a,V);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aUR],[3,a,aUQ]]],b(d,a,W)],Y],X];case
9:var
_=c[3],$=c[2],aa=c[1],ab=u(a,c[4]),ac=x(a,_),ad=h(a,$);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aUT],[3,a,aUS]]],b(d,a,aa)],ad],ac],ab];default:return[3,c[1],c[2]]}}function
W(a,c){switch(c[0]){case
0:return[5,a,[1,a,[0,a,[3,a,aUV],[3,a,aUU]]],b(d,a,c[1])];case
1:var
e=c[2],g=c[1],i=f(a,c[3]),j=f(a,e);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aUX],[3,a,aUW]]],b(d,a,g)],j],i];case
2:var
k=c[2],l=c[1],m=W(a,c[3]),n=W(a,k);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aUZ],[3,a,aUY]]],b(d,a,l)],n],m];case
3:var
o=c[1],p=q(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aU1],[3,a,aU0]]],b(d,a,o)],p];case
4:var
r=c[3],s=c[2],t=c[1],u=f(a,c[4]),v=P(a,r),w=h(a,s);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aU3],[3,a,aU2]]],b(d,a,t)],w],v],u];case
5:var
x=c[4],y=c[3],z=c[2],A=c[1],B=f(a,c[5]),C=Z(a,x),D=X(a,y),E=h(a,z);return[5,a,[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aU5],[3,a,aU4]]],b(d,a,A)],E],D],C],B];case
6:var
F=c[3],G=c[2],H=c[1],I=f(a,c[4]),J=P(a,F),K=h(a,G);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aU7],[3,a,aU6]]],b(d,a,H)],K],J],I];default:return[3,c[1],c[2]]}}function
N(a,c){switch(c[0]){case
0:return[5,a,[1,a,[0,a,[3,a,aU9],[3,a,aU8]]],b(d,a,c[1])];case
1:var
e=c[2],g=c[1],i=N(a,c[3]),k=N(a,e);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aU$],[3,a,aU_]]],b(d,a,g)],k],i];case
2:var
l=c[2],m=c[1],n=f(a,c[3]),o=f(a,l);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVb],[3,a,aVa]]],b(d,a,m)],o],n];case
3:var
p=c[3],q=c[2],r=c[1],s=h(a,c[4]),t=u(a,p),v=z(a,q);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVd],[3,a,aVc]]],b(d,a,r)],v],t],s];case
4:var
w=c[1],x=j(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aVf],[3,a,aVe]]],b(d,a,w)],x];case
5:var
y=c[5],A=c[4],B=c[3],C=c[2],D=c[1],E=f(a,c[6]),F=j(a,y),G=P(a,A),H=z(a,B),I=h(a,C);return[5,a,[5,a,[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVh],[3,a,aVg]]],b(d,a,D)],I],H],G],F],E];case
6:var
J=c[4],K=c[3],L=c[2],M=c[1],O=j(a,c[5]),Q=X(a,J),R=z(a,K),S=h(a,L);return[5,a,[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVj],[3,a,aVi]]],b(d,a,M)],S],R],Q],O];case
7:var
T=c[3],U=c[2],V=c[1],W=f(a,c[4]),Y=P(a,T),Z=h(a,U);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVl],[3,a,aVk]]],b(d,a,V)],Z],Y],W];case
8:var
_=c[3],$=c[2],aa=c[1],ab=f(a,c[4]),ac=X(a,_),ad=h(a,$);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVn],[3,a,aVm]]],b(d,a,aa)],ad],ac],ab];default:return[3,c[1],c[2]]}}function
q(a,c){switch(c[0]){case
0:return[5,a,[1,a,[0,a,[3,a,aVp],[3,a,aVo]]],b(d,a,c[1])];case
1:var
e=c[3],g=c[2],i=c[1],j=f(a,c[4]),k=n(a,e),l=Z(a,g);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVr],[3,a,aVq]]],b(d,a,i)],l],k],j];case
2:var
m=c[2],o=c[1],p=q(a,c[3]),r=f(a,m);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVt],[3,a,aVs]]],b(d,a,o)],r],p];case
3:var
s=c[2],t=c[1],u=W(a,c[3]),v=f(a,s);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVv],[3,a,aVu]]],b(d,a,t)],v],u];case
4:var
w=c[2],y=c[1],z=q(a,c[3]),A=q(a,w);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVx],[3,a,aVw]]],b(d,a,y)],A],z];case
5:var
B=c[2],C=c[1],D=q(a,c[3]),E=q(a,B);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVz],[3,a,aVy]]],b(d,a,C)],E],D];case
6:var
F=c[2],G=c[1],H=q(a,c[3]),I=q(a,F);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVB],[3,a,aVA]]],b(d,a,G)],I],H];case
7:var
J=c[3],K=c[2],L=c[1],M=q(a,c[4]),N=x(a,J),O=h(a,K);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVD],[3,a,aVC]]],b(d,a,L)],O],N],M];default:return[3,c[1],c[2]]}}function
f(a,c){switch(c[0]){case
0:return[5,a,[1,a,[0,a,[3,a,aVF],[3,a,aVE]]],b(d,a,c[1])];case
1:var
e=c[2],g=c[1],i=f(a,c[3]),j=f(a,e);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVH],[3,a,aVG]]],b(d,a,g)],j],i];case
2:return[5,a,[1,a,[0,a,[3,a,aVJ],[3,a,aVI]]],b(d,a,c[1])];case
3:var
k=c[2],l=c[1],m=f(a,c[3]),o=f(a,k);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVL],[3,a,aVK]]],b(d,a,l)],o],m];case
4:var
p=c[2],q=c[1],s=f(a,c[3]),t=f(a,p);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVN],[3,a,aVM]]],b(d,a,q)],t],s];case
5:var
u=c[1],v=n(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aVP],[3,a,aVO]]],b(d,a,u)],v];case
6:var
w=c[2],y=c[1],z=f(a,c[3]),A=h(a,w);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVR],[3,a,aVQ]]],b(d,a,y)],A],z];case
7:var
B=c[1],C=n(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aVT],[3,a,aVS]]],b(d,a,B)],C];case
8:var
D=c[2],E=c[1],F=f(a,c[3]),G=f(a,D);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVV],[3,a,aVU]]],b(d,a,E)],G],F];case
9:var
H=c[5],I=c[4],J=c[3],K=c[2],L=c[1],N=M(function(a,b){var
c=b[1],d=f(a,b[2]);return[23,a,[7,a,f(a,c),d]]},a,H),O=f(a,I),P=M(f,a,J),Q=h(a,K);return[5,a,[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVX],[3,a,aVW]]],b(d,a,L)],Q],P],O],N];case
10:var
R=c[3],S=c[2],T=c[1],U=f(a,c[4]),V=M(f,a,R),W=n(a,S);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aVZ],[3,a,aVY]]],b(d,a,T)],W],V],U];case
11:var
X=c[2],Y=c[1],Z=ae(a,c[3]),_=f(a,X);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aV1],[3,a,aV0]]],b(d,a,Y)],_],Z];case
12:var
$=c[2],aa=c[1],ab=f(a,c[3]),ac=h(a,$);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aV3],[3,a,aV2]]],b(d,a,aa)],ac],ab];case
13:var
ad=c[2],af=c[1],ag=f(a,c[3]),ah=f(a,ad);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aV5],[3,a,aV4]]],b(d,a,af)],ah],ag];case
14:var
ai=c[2],aj=c[1],ak=f(a,c[3]),al=f(a,ai);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aV7],[3,a,aV6]]],b(d,a,aj)],al],ak];case
15:var
am=c[1],an=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aV9],[3,a,aV8]]],b(d,a,am)],an];case
16:var
ao=c[1],ap=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aV$],[3,a,aV_]]],b(d,a,ao)],ap];case
17:var
aq=c[1],ar=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aWb],[3,a,aWa]]],b(d,a,aq)],ar];case
18:return[5,a,[1,a,[0,a,[3,a,aWd],[3,a,aWc]]],b(d,a,c[1])];case
19:return[5,a,[1,a,[0,a,[3,a,aWf],[3,a,aWe]]],b(d,a,c[1])];case
20:var
as=c[1],at=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aWh],[3,a,aWg]]],b(d,a,as)],at];case
21:var
au=c[1],av=f(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aWj],[3,a,aWi]]],b(d,a,au)],av];case
22:var
aw=c[2],ax=c[1],ay=f(a,c[3]),az=f(a,aw);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aWl],[3,a,aWk]]],b(d,a,ax)],az],ay];case
23:var
aA=c[2],aB=c[1],aC=f(a,c[3]),aD=f(a,aA);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aWn],[3,a,aWm]]],b(d,a,aB)],aD],aC];case
24:var
aE=c[2],aF=c[1],aG=f(a,c[3]),aH=f(a,aE);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aWp],[3,a,aWo]]],b(d,a,aF)],aH],aG];case
25:var
aI=c[1],aJ=f(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aWr],[3,a,aWq]]],b(d,a,aI)],aJ];case
26:var
aK=c[2],aL=c[1],aM=f(a,c[3]),aN=f(a,aK);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aWt],[3,a,aWs]]],b(d,a,aL)],aN],aM];case
27:var
aO=c[2],aP=c[1],aQ=f(a,c[3]),aR=f(a,aO);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aWv],[3,a,aWu]]],b(d,a,aP)],aR],aQ];case
28:var
aS=c[2],aT=c[1],aU=f(a,c[3]),aV=f(a,aS);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aWx],[3,a,aWw]]],b(d,a,aT)],aV],aU];case
29:var
aW=c[1],aX=f(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aWz],[3,a,aWy]]],b(d,a,aW)],aX];case
30:var
aY=c[1],aZ=f(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aWB],[3,a,aWA]]],b(d,a,aY)],aZ];case
31:var
a0=c[1],a1=f(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aWD],[3,a,aWC]]],b(d,a,a0)],a1];case
32:var
a2=c[2],a3=c[1],a4=f(a,c[3]),a5=f(a,a2);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aWF],[3,a,aWE]]],b(d,a,a3)],a5],a4];case
33:var
a6=c[1],a7=f(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aWH],[3,a,aWG]]],b(d,a,a6)],a7];case
34:var
a8=c[1],a9=f(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aWJ],[3,a,aWI]]],b(d,a,a8)],a9];case
35:var
a_=c[1],a$=f(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aWL],[3,a,aWK]]],b(d,a,a_)],a$];case
36:var
ba=c[2],bb=c[1],bc=f(a,c[3]),bd=f(a,ba);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aWN],[3,a,aWM]]],b(d,a,bb)],bd],bc];case
37:var
be=c[2],bf=c[1],bg=f(a,c[3]),bh=f(a,be);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aWP],[3,a,aWO]]],b(d,a,bf)],bh],bg];case
38:var
bi=c[2],bj=c[1],bk=f(a,c[3]),bl=f(a,bi);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aWR],[3,a,aWQ]]],b(d,a,bj)],bl],bk];case
39:var
bm=c[1],bn=r(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aWT],[3,a,aWS]]],b(d,a,bm)],bn];case
40:return[5,a,[1,a,[0,a,[3,a,aWV],[3,a,aWU]]],b(d,a,c[1])];case
41:var
bo=c[3],bp=c[2],bq=c[1],br=f(a,c[4]),bs=x(a,bo),bt=h(a,bp);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aWX],[3,a,aWW]]],b(d,a,bq)],bt],bs],br];default:return[3,c[1],c[2]]}}function
ad(a,b){return typeof
b==="number"?0===b?[1,a,[0,a,[3,a,aWZ],[3,a,aWY]]]:[1,a,[0,a,[3,a,aW1],[3,a,aW0]]]:[3,a,b[1]]}function
j(a,c){switch(c[0]){case
0:return[5,a,[1,a,[0,a,[3,a,aW3],[3,a,aW2]]],b(d,a,c[1])];case
1:var
e=c[1],g=n(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aW5],[3,a,aW4]]],b(d,a,e)],g];case
2:var
i=c[2],k=c[1],m=j(a,c[3]),o=j(a,i);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aW7],[3,a,aW6]]],b(d,a,k)],o],m];case
3:return[3,c[1],c[2]];case
4:var
p=c[2],q=c[1],r=j(a,c[3]),s=j(a,p);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aW9],[3,a,aW8]]],b(d,a,q)],s],r];case
5:var
t=c[2],u=c[1],w=j(a,c[3]),y=j(a,t);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aW$],[3,a,aW_]]],b(d,a,u)],y],w];case
6:var
A=c[1],B=j(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aXb],[3,a,aXa]]],b(d,a,A)],B];case
7:var
C=c[2],G=c[1],H=j(a,c[3]),I=j(a,C);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aXd],[3,a,aXc]]],b(d,a,G)],I],H];case
8:return[5,a,[1,a,[0,a,[3,a,aXf],[3,a,aXe]]],b(d,a,c[1])];case
9:var
J=c[1],K=j(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aXh],[3,a,aXg]]],b(d,a,J)],K];case
10:var
L=c[2],M=c[1],O=j(a,c[3]),P=j(a,L);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aXj],[3,a,aXi]]],b(d,a,M)],P],O];case
11:var
R=c[1],S=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aXl],[3,a,aXk]]],b(d,a,R)],S];case
12:var
T=c[3],U=c[2],V=c[1],W=f(a,c[4]),X=f(a,T),Y=j(a,U);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aXn],[3,a,aXm]]],b(d,a,V)],Y],X],W];case
13:var
Z=c[1],_=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aXp],[3,a,aXo]]],b(d,a,Z)],_];case
14:var
$=c[5],aa=c[4],ab=c[3],ac=c[2],ae=c[1],af=j(a,c[6]),ag=ad(a,$),ah=j(a,aa),ai=j(a,ab),aj=l(a,ac);return[5,a,[5,a,[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aXr],[3,a,aXq]]],b(d,a,ae)],aj],ai],ah],ag],af];case
15:var
ak=c[1],al=E(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aXt],[3,a,aXs]]],b(d,a,ak)],al];case
16:var
am=c[3],an=c[2],ao=c[1],ap=j(a,c[4]),aq=j(a,am),ar=j(a,an);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aXv],[3,a,aXu]]],b(d,a,ao)],ar],aq],ap];case
17:var
as=c[1],at=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aXx],[3,a,aXw]]],b(d,a,as)],at];case
18:var
au=c[1],av=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aXz],[3,a,aXy]]],b(d,a,au)],av];case
19:var
aw=c[1],ax=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aXB],[3,a,aXA]]],b(d,a,aw)],ax];case
20:var
ay=c[1],az=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aXD],[3,a,aXC]]],b(d,a,ay)],az];case
21:var
aA=c[2],aB=c[1],aC=j(a,c[3]),aD=h(a,aA);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aXF],[3,a,aXE]]],b(d,a,aB)],aD],aC];case
22:var
aE=c[1],aF=j(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aXH],[3,a,aXG]]],b(d,a,aE)],aF];case
23:var
aG=c[3],aH=c[2],aI=c[1],aJ=j(a,c[4]),aK=D(a,aG),aL=F(a,aH);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aXJ],[3,a,aXI]]],b(d,a,aI)],aL],aK],aJ];case
24:var
aM=c[3],aN=c[2],aO=c[1],aP=j(a,c[4]),aQ=v(a,aM),aR=h(a,aN);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aXL],[3,a,aXK]]],b(d,a,aO)],aR],aQ],aP];case
25:var
aS=c[2],aT=c[1],aU=E(a,c[3]),aV=j(a,aS);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aXN],[3,a,aXM]]],b(d,a,aT)],aV],aU];case
26:var
aW=c[1],aX=n(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aXP],[3,a,aXO]]],b(d,a,aW)],aX];case
27:var
aY=c[2],aZ=c[1],a0=N(a,c[3]),a1=l(a,aY);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aXR],[3,a,aXQ]]],b(d,a,aZ)],a1],a0];case
28:var
a2=c[2],a3=c[1],a4=j(a,c[3]),a5=h(a,a2);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aXT],[3,a,aXS]]],b(d,a,a3)],a5],a4];case
29:var
a6=c[1],a7=Q(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aXV],[3,a,aXU]]],b(d,a,a6)],a7];case
30:var
a8=c[2],a9=c[1],a_=j(a,c[3]),a$=Q(a,a8);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aXX],[3,a,aXW]]],b(d,a,a9)],a$],a_];case
31:var
ba=c[1],bb=j(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aXZ],[3,a,aXY]]],b(d,a,ba)],bb];case
32:var
bc=c[2],bd=c[1],be=h(a,c[3]),bf=j(a,bc);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aX1],[3,a,aX0]]],b(d,a,bd)],bf],be];case
33:var
bg=c[2],bh=c[1],bi=j(a,c[3]),bj=j(a,bg);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aX3],[3,a,aX2]]],b(d,a,bh)],bj],bi];case
34:var
bk=c[1],bl=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aX5],[3,a,aX4]]],b(d,a,bk)],bl];case
35:var
bm=c[2],bn=c[1],bo=E(a,c[3]),bp=j(a,bm);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aX7],[3,a,aX6]]],b(d,a,bn)],bp],bo];case
36:var
bq=c[1],br=j(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aX9],[3,a,aX8]]],b(d,a,bq)],br];case
37:var
bs=c[2],bt=c[1],bu=j(a,c[3]),bv=j(a,bs);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aX$],[3,a,aX_]]],b(d,a,bt)],bv],bu];case
38:var
bw=c[2],bx=c[1],by=f(a,c[3]),bz=j(a,bw);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aYb],[3,a,aYa]]],b(d,a,bx)],bz],by];case
39:var
bA=c[1],bB=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aYd],[3,a,aYc]]],b(d,a,bA)],bB];case
40:var
bC=c[2],bD=c[1],bE=j(a,c[3]),bF=j(a,bC);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aYf],[3,a,aYe]]],b(d,a,bD)],bF],bE];case
41:var
bG=c[3],bH=c[2],bI=c[1],bJ=j(a,c[4]),bK=z(a,bG),bL=n(a,bH);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aYh],[3,a,aYg]]],b(d,a,bI)],bL],bK],bJ];case
42:var
bM=c[2],bN=c[1],bO=j(a,c[3]),bP=h(a,bM);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aYj],[3,a,aYi]]],b(d,a,bN)],bP],bO];case
43:var
bQ=c[1],bR=v(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aYl],[3,a,aYk]]],b(d,a,bQ)],bR];default:var
bS=c[3],bT=c[2],bU=c[1],bV=j(a,c[4]),bW=x(a,bS),bX=h(a,bT);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aYn],[3,a,aYm]]],b(d,a,bU)],bX],bW],bV]}}function
n(a,c){switch(c[0]){case
0:var
e=c[2],f=c[1],g=n(a,c[3]),i=n(a,e);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aYp],[3,a,aYo]]],b(d,a,f)],i],g];case
1:var
j=c[2],k=c[1],l=n(a,c[3]),m=n(a,j);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aYr],[3,a,aYq]]],b(d,a,k)],m],l];case
2:var
o=c[1],p=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aYt],[3,a,aYs]]],b(d,a,o)],p];case
3:var
q=c[1],r=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aYv],[3,a,aYu]]],b(d,a,q)],r];default:return[3,c[1],c[2]]}}function
E(a,c){switch(c[0]){case
0:return[5,a,[1,a,[0,a,[3,a,aYx],[3,a,aYw]]],b(d,a,c[1])];case
1:var
e=c[2],f=c[1],g=E(a,c[3]),h=E(a,e);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aYz],[3,a,aYy]]],b(d,a,f)],h],g];case
2:var
i=c[3],k=c[2],m=c[1],n=j(a,c[4]),o=j(a,i),p=l(a,k);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aYB],[3,a,aYA]]],b(d,a,m)],p],o],n];default:return[3,c[1],c[2]]}}function
aa(d,a,c){if(typeof
c==="number")return[1,a,[0,a,[3,a,aYD],[3,a,aYC]]];else{if(0===c[0]){var
e=c[1],f=aa(d,a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aYF],[3,a,aYE]]],b(d,a,e)],f]}return[3,a,c[1]]}}function
O(a,c){switch(c[0]){case
0:return[5,a,[1,a,[0,a,[3,a,aYL],[3,a,aYK]]],b(d,a,c[1])];case
1:var
e=c[2],f=c[1],g=O(a,c[3]),i=O(a,e);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aYN],[3,a,aYM]]],b(d,a,f)],i],g];case
2:var
j=c[3],k=c[2],l=c[1],m=v(a,c[4]),n=r(a,j),o=h(a,k);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aYP],[3,a,aYO]]],b(d,a,l)],o],n],m];case
3:var
p=c[2],q=c[1],s=r(a,c[3]),t=h(a,p);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aYR],[3,a,aYQ]]],b(d,a,q)],t],s];default:return[3,c[1],c[2]]}}function
v(a,c){switch(c[0]){case
0:return[5,a,[1,a,[0,a,[3,a,aYT],[3,a,aYS]]],b(d,a,c[1])];case
1:var
e=c[1],f=n(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aYV],[3,a,aYU]]],b(d,a,e)],f];case
2:var
g=c[2],i=c[1],k=v(a,c[3]),l=v(a,g);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aYX],[3,a,aYW]]],b(d,a,i)],l],k];case
3:var
m=c[3],o=c[2],p=c[1],q=v(a,c[4]),s=r(a,m),t=h(a,o);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aYZ],[3,a,aYY]]],b(d,a,p)],t],s],q];case
4:var
u=c[1],w=x(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aY1],[3,a,aY0]]],b(d,a,u)],w];case
5:var
y=c[2],z=c[1],A=r(a,c[3]),B=v(a,y);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aY3],[3,a,aY2]]],b(d,a,z)],B],A];case
6:var
C=c[1],D=j(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aY5],[3,a,aY4]]],b(d,a,C)],D];case
7:var
E=c[3],F=c[2],G=c[1],H=v(a,c[4]),I=x(a,E),J=h(a,F);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aY7],[3,a,aY6]]],b(d,a,G)],J],I],H];default:return[3,c[1],c[2]]}}function
r(a,c){switch(c[0]){case
0:return[5,a,[1,a,[0,a,[3,a,aY9],[3,a,aY8]]],b(d,a,c[1])];case
1:var
e=c[1],f=n(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aY$],[3,a,aY_]]],b(d,a,e)],f];case
2:var
g=c[1],i=n(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aZb],[3,a,aZa]]],b(d,a,g)],i];case
3:var
j=c[3],k=c[2],l=c[1],m=r(a,c[4]),o=r(a,j),p=h(a,k);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aZd],[3,a,aZc]]],b(d,a,l)],p],o],m];case
4:var
q=c[1],s=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aZf],[3,a,aZe]]],b(d,a,q)],s];case
5:var
t=c[1],u=Y(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aZh],[3,a,aZg]]],b(d,a,t)],u];case
6:var
w=c[2],y=c[1],z=_(a,c[3]),A=r(a,w);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aZj],[3,a,aZi]]],b(d,a,y)],A],z];case
7:var
B=c[1],C=v(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aZl],[3,a,aZk]]],b(d,a,B)],C];case
8:var
D=c[3],E=c[2],F=c[1],G=r(a,c[4]),H=x(a,D),I=h(a,E);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aZn],[3,a,aZm]]],b(d,a,F)],I],H],G];default:return[3,c[1],c[2]]}}function
X(a,b){return typeof
b==="number"?0===b?[1,a,[0,a,[3,a,aZp],[3,a,aZo]]]:[1,a,[0,a,[3,a,aZr],[3,a,aZq]]]:[3,a,b[1]]}function
z(a,b){return typeof
b==="number"?0===b?[1,a,[0,a,[3,a,aZt],[3,a,aZs]]]:[1,a,[0,a,[3,a,aZv],[3,a,aZu]]]:[3,a,b[1]]}function
l(a,c){switch(c[0]){case
0:return[5,a,[1,a,[0,a,[3,a,aZx],[3,a,aZw]]],b(d,a,c[1])];case
1:var
e=c[1],g=n(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aZz],[3,a,aZy]]],b(d,a,e)],g];case
2:var
i=c[2],k=c[1],m=l(a,c[3]),o=l(a,i);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aZB],[3,a,aZA]]],b(d,a,k)],o],m];case
3:return[3,c[1],c[2]];case
4:return[5,a,[1,a,[0,a,[3,a,aZD],[3,a,aZC]]],b(d,a,c[1])];case
5:var
p=c[2],q=c[1],r=l(a,c[3]),s=l(a,p);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aZF],[3,a,aZE]]],b(d,a,q)],s],r];case
6:var
t=c[1],u=l(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aZH],[3,a,aZG]]],b(d,a,t)],u];case
7:var
v=c[2],w=c[1],y=l(a,c[3]),z=l(a,v);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aZJ],[3,a,aZI]]],b(d,a,w)],z],y];case
8:var
A=c[2],B=c[1],C=l(a,c[3]),D=l(a,A);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aZL],[3,a,aZK]]],b(d,a,B)],D],C];case
9:var
E=c[1],F=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aZN],[3,a,aZM]]],b(d,a,E)],F];case
10:var
G=c[1],H=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aZP],[3,a,aZO]]],b(d,a,G)],H];case
11:var
I=c[1],J=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aZR],[3,a,aZQ]]],b(d,a,I)],J];case
12:var
K=c[1],L=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aZT],[3,a,aZS]]],b(d,a,K)],L];case
13:var
M=c[1],N=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aZV],[3,a,aZU]]],b(d,a,M)],N];case
14:var
O=c[1],P=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aZX],[3,a,aZW]]],b(d,a,O)],P];case
15:var
Q=c[2],R=c[1],S=l(a,c[3]),T=h(a,Q);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aZZ],[3,a,aZY]]],b(d,a,R)],T],S];case
16:var
U=c[2],V=c[1],W=l(a,c[3]),X=h(a,U);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aZ1],[3,a,aZ0]]],b(d,a,V)],X],W];case
17:var
Y=c[3],Z=c[2],_=c[1],$=j(a,c[4]),aa=l(a,Y),ab=h(a,Z);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aZ3],[3,a,aZ2]]],b(d,a,_)],ab],aa],$];case
18:var
ac=c[2],ad=c[1],ae=l(a,c[3]),af=l(a,ac);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aZ5],[3,a,aZ4]]],b(d,a,ad)],af],ae];case
19:var
ag=c[2],ah=c[1],ai=l(a,c[3]),aj=l(a,ag);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aZ7],[3,a,aZ6]]],b(d,a,ah)],aj],ai];case
20:var
ak=c[1],al=l(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,aZ9],[3,a,aZ8]]],b(d,a,ak)],al];case
21:var
am=c[2],an=c[1],ao=l(a,c[3]),ap=n(a,am);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,aZ$],[3,a,aZ_]]],b(d,a,an)],ap],ao];case
22:var
aq=c[1],ar=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a0b],[3,a,a0a]]],b(d,a,aq)],ar];case
23:var
as=c[1],at=l(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a0d],[3,a,a0c]]],b(d,a,as)],at];case
24:var
au=c[2],av=c[1],aw=f(a,c[3]),ax=l(a,au);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a0f],[3,a,a0e]]],b(d,a,av)],ax],aw];case
25:var
ay=c[1],az=n(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a0h],[3,a,a0g]]],b(d,a,ay)],az];case
26:var
aA=c[1],aB=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a0j],[3,a,a0i]]],b(d,a,aA)],aB];case
27:var
aC=c[1],aD=l(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a0l],[3,a,a0k]]],b(d,a,aC)],aD];case
28:var
aE=c[3],aF=c[2],aG=c[1],aH=l(a,c[4]),aI=x(a,aE),aJ=h(a,aF);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a0n],[3,a,a0m]]],b(d,a,aG)],aJ],aI],aH];case
29:var
aK=c[1],aL=h(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a0p],[3,a,a0o]]],b(d,a,aK)],aL];default:var
aM=c[1],aN=l(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a0r],[3,a,a0q]]],b(d,a,aM)],aN]}}function
P(a,b){return typeof
b==="number"?0===b?[1,a,[0,a,[3,a,a0t],[3,a,a0s]]]:[1,a,[0,a,[3,a,a0v],[3,a,a0u]]]:[3,a,b[1]]}function
Q(a,c){switch(c[0]){case
0:return[5,a,[1,a,[0,a,[3,a,a0x],[3,a,a0w]]],b(d,a,c[1])];case
1:var
e=c[2],f=c[1],g=Q(a,c[3]),h=Q(a,e);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a0z],[3,a,a0y]]],b(d,a,f)],h],g];case
2:var
i=c[2],k=c[1],l=j(a,c[3]),m=n(a,i);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a0B],[3,a,a0A]]],b(d,a,k)],m],l];default:return[3,c[1],c[2]]}}function
F(a,b){if(typeof
b==="number")switch(b){case
0:return[1,a,[0,a,[3,a,a0D],[3,a,a0C]]];case
1:return[1,a,[0,a,[3,a,a0F],[3,a,a0E]]];default:return[1,a,[0,a,[3,a,a0H],[3,a,a0G]]]}return[3,a,b[1]]}function
ae(a,b){return typeof
b==="number"?0===b?[1,a,[0,a,[3,a,a0J],[3,a,a0I]]]:[1,a,[0,a,[3,a,a0L],[3,a,a0K]]]:[3,a,b[1]]}function
Y(a,c){switch(c[0]){case
0:return[5,a,[1,a,[0,a,[3,a,a0N],[3,a,a0M]]],b(d,a,c[1])];case
1:var
e=c[1],g=q(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a0P],[3,a,a0O]]],b(d,a,e)],g];case
2:var
i=c[1],k=q(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a0R],[3,a,a0Q]]],b(d,a,i)],k];case
3:var
l=c[2],m=c[1],o=Y(a,c[3]),p=Y(a,l);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a0T],[3,a,a0S]]],b(d,a,m)],p],o];case
4:var
s=c[2],t=c[1],u=j(a,c[3]),v=h(a,s);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a0V],[3,a,a0U]]],b(d,a,t)],v],u];case
5:var
w=c[1],x=f(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a0X],[3,a,a0W]]],b(d,a,w)],x];case
6:var
y=c[3],A=c[2],B=c[1],C=aa(h,a,c[4]),D=f(a,y),E=h(a,A);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a0Z],[3,a,a0Y]]],b(d,a,B)],E],D],C];case
7:var
G=c[1],H=r(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a01],[3,a,a00]]],b(d,a,G)],H];case
8:var
I=c[2],J=c[1],K=r(a,c[3]),L=h(a,I);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a03],[3,a,a02]]],b(d,a,J)],L],K];case
9:var
M=c[1],N=O(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a05],[3,a,a04]]],b(d,a,M)],N];case
10:var
P=c[2],Q=c[1],R=r(a,c[3]),S=h(a,P);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a07],[3,a,a06]]],b(d,a,Q)],S],R];case
11:var
T=c[2],U=c[1],V=n(a,c[3]),W=z(a,T);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a09],[3,a,a08]]],b(d,a,U)],W],V];case
12:var
X=c[2],Z=c[1],_=f(a,c[3]),$=F(a,X);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a0$],[3,a,a0_]]],b(d,a,Z)],$],_];case
13:var
ab=c[2],ac=c[1],ad=f(a,c[3]),ae=h(a,ab);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a1b],[3,a,a1a]]],b(d,a,ac)],ae],ad];default:return[3,c[1],c[2]]}}function
x(a,c){switch(c[0]){case
0:return[5,a,[1,a,[0,a,[3,a,a1d],[3,a,a1c]]],b(d,a,c[1])];case
1:var
g=c[1],i=u(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a1f],[3,a,a1e]]],b(d,a,g)],i];case
2:var
k=c[1],l=q(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a1h],[3,a,a1g]]],b(d,a,k)],l];case
3:var
m=c[2],o=c[1],p=x(a,c[3]),s=x(a,m);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a1j],[3,a,a1i]]],b(d,a,o)],s],p];case
4:var
t=c[2],w=c[1],y=j(a,c[3]),A=h(a,t);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a1l],[3,a,a1k]]],b(d,a,w)],A],y];case
5:var
e=c[3],B=c[2],C=c[1],E=typeof
e==="number"?[1,a,[0,a,[3,a,aYH],[3,a,aYG]]]:0===e[0]?[5,a,[1,a,[0,a,[3,a,aYJ],[3,a,aYI]]],n(a,e[1])]:[3,a,e[1]],G=f(a,B);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a1n],[3,a,a1m]]],b(d,a,C)],G],E];case
6:var
H=c[1],I=j(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a1p],[3,a,a1o]]],b(d,a,H)],I];case
7:var
J=c[3],K=c[2],L=c[1],M=aa(h,a,c[4]),N=f(a,J),P=h(a,K);return[5,a,[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a1r],[3,a,a1q]]],b(d,a,L)],P],N],M];case
8:var
Q=c[1],R=v(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a1t],[3,a,a1s]]],b(d,a,Q)],R];case
9:var
S=c[2],T=c[1],U=v(a,c[3]),V=h(a,S);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a1v],[3,a,a1u]]],b(d,a,T)],V],U];case
10:var
W=c[1],X=O(a,c[2]);return[5,a,[5,a,[1,a,[0,a,[3,a,a1x],[3,a,a1w]]],b(d,a,W)],X];case
11:var
Y=c[2],Z=c[1],_=r(a,c[3]),$=h(a,Y);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a1z],[3,a,a1y]]],b(d,a,Z)],$],_];case
12:var
ab=c[2],ac=c[1],ad=n(a,c[3]),ae=z(a,ab);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a1B],[3,a,a1A]]],b(d,a,ac)],ae],ad];case
13:var
af=c[2],ag=c[1],ah=f(a,c[3]),ai=F(a,af);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a1D],[3,a,a1C]]],b(d,a,ag)],ai],ah];case
14:var
aj=c[2],ak=c[1],al=D(a,c[3]),am=F(a,aj);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a1F],[3,a,a1E]]],b(d,a,ak)],am],al];default:return[3,c[1],c[2]]}}function
Z(a,b){return typeof
b==="number"?0===b?[1,a,[0,a,[3,a,a1H],[3,a,a1G]]]:[1,a,[0,a,[3,a,a1J],[3,a,a1I]]]:[3,a,b[1]]}function
_(a,c){switch(c[0]){case
0:return[5,a,[1,a,[0,a,[3,a,a1L],[3,a,a1K]]],b(d,a,c[1])];case
1:var
e=c[2],g=c[1],h=f(a,c[3]),i=f(a,e);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a1N],[3,a,a1M]]],b(d,a,g)],i],h];case
2:var
j=c[2],k=c[1],l=n(a,c[3]),m=n(a,j);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a1P],[3,a,a1O]]],b(d,a,k)],m],l];case
3:var
o=c[2],p=c[1],q=f(a,c[3]),r=f(a,o);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a1R],[3,a,a1Q]]],b(d,a,p)],r],q];case
4:var
s=c[2],t=c[1],u=n(a,c[3]),v=n(a,s);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a1T],[3,a,a1S]]],b(d,a,t)],v],u];case
5:var
w=c[2],x=c[1],y=_(a,c[3]),z=_(a,w);return[5,a,[5,a,[5,a,[1,a,[0,a,[3,a,a1V],[3,a,a1U]]],b(d,a,x)],z],y];default:return[3,c[1],c[2]]}}return[0,[0,g,af,ag,ah,ai,H,A,L,s,R,I,o,e,i,m,B,J,t,p,k,T,w,V,C,S,U,K,ac,y,ab],[0,h,aj,ak,al,am,M,D,Q,u,W,N,q,f,j,n,E,O,v,r,l,Y,x,_,F,X,Z,P,ae,z,ad]]}];function
aX(a){return a[1]}function
aY(a){return a[1]}function
aZ(a){return a[1]}function
a0(a){return a[1]}function
a1(a){return a[1]}function
a3(a){return a[1]}function
a7(a){return a[1]}function
a8(a){return a[1]}function
a9(a){return a[1]}function
a_(a){return a[1]}function
a$(a){return a[1]}function
ba(a){return a[1]}function
bb(a){return a[1]}function
bc(a){return a[1]}function
bd(a){return a[1]}function
be(a){return a[1]}return[0,g,function(a){return a[1]},be,bd,bc,bb,ba,a$,a_,a9,a8,a7,a3,a1,a0,aZ,aY,aX,aW,e,ax,aP,aQ,aS,aT,aU,aV,ay,aA,az,w,H,Z,$,t,u,A,v,z,D,E,F,X,W,V,T,K,R,Q,P,L,M,aa,ac,aj,ag,ah,ai,ak,al,am,an,ao,ap,aq,ar,as,aw,au,av,G,h,s,aB,y,ad,ae,af,x,aE,aC,aD]},a18=function(b,a){function
d(b){return a[4]?c(A(b),a19):0}var
e=a[3][3]-a[3][2]|0,f=a[3][1],g=a[3][3]-a[2][2]|0,h=a[2][3]-a[2][2]|0,i=a[2][1],j=a[1];return bx(A(b),a1_,j,i,h,g,f,e,d)},a2a=[0,a1$,n5,n5,1],a2b=function(a){return[0,a,n5,n5,0]},a2c=function(a){return[0,a[1],[0,a[2],a[3],a[4]],[0,a[5],a[6],a[7]],a[8]]},a2d=function(a){var
b=a[3],c=a[2];return[0,a[1],c[1],c[2],c[3],b[1],b[2],b[3],a[4]]},i7=function(a){return[0,a[2],a[3],a[4]]},n6=function(a,b){return[0,b,a[1],a[2],a[3]]},Gj=function(a,b){return O(a,a2e)?O(b,a2f)?O(a,a2g)?O(b,a2h)?a:a:b:a:O(b,a2i)?b:a},a2j=function(a){var
b=a[11],c=a[12],d=i7(c),e=i7(b);return[0,Gj(b[1],c[1]),e,d,0]},a2k=function(a){var
b=i7(a),c=i7(a);return[0,a[1],c,b,0]},a2l=function(a){var
b=a[4],c=n6(a[3],a[1]);return[0,n6(a[2],a[1]),c,b]},a2m=function(a){var
b=a[2],c=a[1],d=a[3],e=i7(b),f=i7(c);return[0,Gj(c[1],b[1]),f,e,d]},a2n=function(a){return n6(a[2],a[1])},a2o=function(a){return n6(a[3],a[1])},a2p=function(a,b){if(a===b)return a;var
c=b[4],d=0===a[4]?0===c?[0,a[1],a[2],b[3],a[4]]:[0,b[1],a[2],b[3],b[4]]:0===c?[0,a[1],a[2],b[3],a[4]]:[0,a[1],a[2],b[3],a[4]];return d},a2q=function(a){return[0,a[1],a[2],a[2],a[4]]},Gk=function(b,d,a){if(-866390014===d){var
e=a[4],f=c(b,a[3]);return[0,a[1],a[2],f,e]}if(agf<=d){var
g=a[4],h=a[3],i=c(b,a[2]);return[0,a[1],i,h,g]}var
j=a[4],k=c(b,a[3]),l=c(b,a[2]);return[0,a[1],l,k,j]},Gl=function(b,a){return[0,a[1],a[2],a[3]+b|0]},a2r=function(c,b,a){return Gk(function(a){return Gl(b,a)},c,a)},a2s=function(b,a){return Gk(function(a){return[0,a[1]+b|0,a[3],a[3]]},$u,a)},a2t=function(b,a){var
c=a[4],d=Gl(b,a[3]);return[0,a[1],a[3],d,c]},a2u=function(a){return a[1]},a2v=function(a){return a[2][1]},a2w=function(a){return a[3][1]},a2x=function(a){return a[2][2]},a2y=function(a){return a[3][2]},a2z=function(a){return a[2][3]},a2A=function(a){return a[3][3]},a2B=function(a){return a[4]},a2C=function(b,a){return[0,b,a[2],a[3],a[4]]},a2D=function(a){return[0,a[1],a[2],a[3],1]},a2E=function(a){var
b=bUc(0);if(C_(a[1])){var
c=a[4],d=a[3],e=a[2];return[0,sH(b,a[1]),e,d,c]}return a},a2F=function(b,a){var
c=b[3][3]<a[2][3]?1:0,d=c?a3(b[1],a[1]):c;return d},Gm=function(a){var
c=a[3],b=a[2],e=c[3]-b[2]|0,f=b[3]-b[2]|0,g=b[1],h=a[1],d=p(bs(a2G),h,g,f,e);if(a[2][1]!==a[3][1]){var
i=c[3]-c[2]|0,j=a[3][1];return m(bs(a2H),d,j,i)}return d},Gn=function(b,a){return b7(b,Gm(a))},n7=[N,a2I,H(0)];aJt(function(b,a){if(a[1]===n7){var
c=a[3],d=a[2];return aq(A(b),a2J,Gn,d,Gh,c)}throw a});var
a2L=[0,a2K],Go=[0,a2b,a2a,a2k,a2l,a2m,a2j,a2c,a2d,a2p,a2q,a2r,a2t,a2s,a2u,a2v,a2w,a2x,a2y,a2z,a2A,a2n,a2o,a2B,a2D,a2C,a2F,a2E,Gn,a18,Gm,n7,function(b,a){if(a[1]===n7)throw a;throw[0,n7,b,a]},a2L],a2M=function(i){function
d(a){if(typeof
a==="number")return 0===a?bs(a2N):bs(a2O);else
switch(a[0]){case
0:var
g=a[1];return c(bs(a2P),g);case
1:var
h=a[1];return c(bs(a2Q),h);case
2:var
i=a[1];return c(bs(a2R),i);case
3:var
j=a[1];return c(bs(a2S),j);case
4:var
k=a[1];return c(bs(a2T),k);case
5:var
l=a[2];return c(bs(a2U),l);case
6:var
m=a[2];return c(bs(a2V),m);case
7:var
n=a[2];return c(bs(a2W),n);case
8:var
o=a[2];return c(bs(a2X),o);case
9:var
q=a[2];return c(bs(a2Y),q);case
10:var
r=a[2];return c(bs(a2Z),r);case
11:var
s=a[2];return c(bs(a20),s);case
12:var
t=a[1];return c(bs(a21),t);case
13:var
u=a[1];return c(bs(a22),u);case
14:var
d=a[1],v=d[4],w=d[3],x=d[2],y=d[1];return p(bs(a23),y,x,w,v);case
15:var
z=a[2],A=a[1];return b(bs(a24),A,z);case
16:var
B=a[1];return c(bs(a25),B);case
17:var
C=a[1];return c(bs(a26),C);default:var
e=a[2],f=a[1];if(e){var
D=e[1];return b(bs(a27),f,D)}return c(bs(a28),f)}}function
h(b,a){return b7(b,d(a))}function
j(b,a){if(typeof
a!=="number"&&0===a[0])if(a3(b,a[1]))return 1;return 0}function
k(a){if(typeof
a==="number")var
b=0;else
switch(a[0]){case
14:case
15:case
18:var
b=0;break;case
5:case
6:case
7:case
8:case
9:case
10:case
11:var
c=a[2],b=1;break;default:var
c=a[1],b=1}return b?c:Y(t(a29,d(a)))}var
g=[N,a2_,H(0)];function
a(c,a){switch(a[0]){case
0:var
d=a[1];return b(A(c),a2$,d);case
1:var
e=a[1];return b(A(c),a3a,e);case
2:var
f=a[2],g=a[1];return m(A(c),a3b,g,f);default:var
h=a[1];return b(A(c),a3c,h)}}function
e(d){var
c=b5(50);b(sn(c,a3d),a,d);return b6(c)}n4([0,g,e,a]);function
f(a){for(;;){var
c=bA(a);if(c){var
d=c[1],b=d[1],e=typeof
b==="number"?1===b?0:1:15<b[0]?1:0;if(e){aL(a);continue}aL(a);return r1(d,hn(function(b){return f(a)}))}return hm}}function
l(a){return[0,a,f]}function
n(h){function
b(a){var
e=bA(a);if(e){var
f=e[1],k=f[2],d=f[1];aL(a);var
j=hn(function(c){return b(a)});return m8(function(n){var
l=h[1];if(typeof
d==="number")var
e=0;else
switch(d[0]){case
4:var
a=[2,d[1]],e=1;break;case
1:case
2:case
3:var
j=d[1];if(c(l,j))var
a=[0,j],e=1;else
var
e=0;break;default:var
e=0}if(!e)var
a=d;var
m=h[1];if(typeof
a==="number")var
f=0;else
switch(a[0]){case
12:var
b=a[1],f=1;break;case
13:var
b=a[1],f=1;break;default:var
f=0}if(!f)var
b=a3e;if(O(b,a3f))if(c(m,b))throw[0,i[31],k,[0,g,[1,b]]];return[0,a,k]},j)}return hm}function
d(a){var
b=bA(a);if(b){var
c=b[1];aL(a);return r1(c,hn(function(b){return d(a)}))}return hm}return function(a){var
e=b(a);return d(c(h[2],e))}}function
o(a,b){a[2]=c(b,a[2]);return 0}function
q(c,b,a){return 0}var
r=[0,g,e,a];return[0,i,d,h,j,k,[0,l,o,n,q,function(b,a){return 0}],r]},Gp=function(a){return 97<=a?a+ahB|0:65<=a?a+T8|0:a+c_|0},Gq=function(a){for(;;){var
b=bA(a);if(b){var
c=b[1],d=9===c?0:32===c?0:1;if(!d){aL(a);continue}}return 0}},a3g=function(a){var
b=bA(a);if(b)if(10===b[1]){aL(a);return 0}return 0},Gr=function(a){if(0<=a)if(!(at<a))return gq(a);return aU(a3h)},Gs=function(a){var
e=bA(a);if(e){var
b=e[1];if(32<=b)if(58<=b){var
f=b+aao|0;if(!(28<f>>>0))switch(f){case
0:aL(a);return 92;case
6:aL(a);return 8;case
18:aL(a);return 10;case
22:aL(a);return 13;case
24:aL(a);return 9;case
28:aL(a);var
g=bA(a);if(g){var
h=g[1],c=h+c_|0,p=22<c>>>0?5<(c+rs|0)>>>0?1:0:6<(c+lM|0)>>>0?0:1;if(!p){aL(a);var
i=bA(a);if(i){var
j=i[1],d=j+c_|0,q=22<d>>>0?5<(d+rs|0)>>>0?1:0:6<(d+lM|0)>>>0?0:1;if(!q){aL(a);var
o=Gp(j);return Gr((16*Gp(h)|0)+o|0)}}throw[0,bQ,a3j]}}throw[0,bQ,a3i]}}else
if(40<=b){if(48<=b){aL(a);var
k=bA(a);if(k){var
l=k[1];if(!(9<(l+c_|0)>>>0)){aL(a);var
m=bA(a);if(m){var
n=m[1];if(!(9<(n+c_|0)>>>0)){aL(a);return Gr(((ci*(b-48|0)|0)+(10*(l-48|0)|0)|0)+(n-48|0)|0)}}throw[0,bQ,a3l]}}throw[0,bQ,a3k]}}else
switch(b+ie|0){case
0:aL(a);return 32;case
2:aL(a);return 34;case
7:aL(a);return 39}else{if(10===b){aL(a);return 10}if(13===b){aL(a);return 13}}}throw af},n8=function(a){if(1===C(a))return I(a,0);if(0===C(a))return aU(a3n);var
b=r0(a),c=bA(b);if(c)if(92===c[1]){aL(b);try{var
d=Gs(b);return d}catch(a){a=s(a);if(a===af)throw[0,bQ,a3o];throw a}}return aU(a3p)},Gt=function(n,a){var
g=b5(23);function
b(a){return bd(g,a)}function
c(a){for(;;){var
h=bA(a);if(h){var
i=h[1];if(92===i){aL(a);try{var
d=bA(a),o=0!==n?1:0;if(d)var
e=d[1],j=10===e?(aL(a),Gq(a),1):13===e?(aL(a),a3g(a),Gq(a),1):0;else
var
j=0;if(!j){try{var
m=[0,Gs(a)],c=m}catch(a){a=s(a);if(a!==af)throw a;var
c=0}if(c)b(c[1]);else{var
f=bA(a);if(f)var
l=f[1],k=o?0:(aL(a),b(92),b(l),1);else
var
k=0;if(!k)aU(a3m)}}}catch(a){a=s(a);if(a===af)throw[0,bQ,a3q];throw a}continue}aL(a);b(i);continue}return b6(g)}}return c(r0(a))},a3r=[0,Gu,Gu,1],Gv=function(f){function
d(c,a){return b(f[1][32],c,[0,bz,a])}function
R(c,a){try{var
d=n8(a);return d}catch(a){a=s(a);if(a[1]===bz)return b(f[1][32],c,a);throw a}}function
aA(c,a){try{var
d=Gt(0,a);return d}catch(a){a=s(a);if(a[1]===bz)return b(f[1][32],c,a);throw a}}function
aB(f){var
b=BI(f),d=cK(b),a=0,c=0;for(;;){if(d<=a){var
g=d<=c?b:rP(b,0,c);return rO(g)}var
e=ha(b,a);if(95===e){var
a=a+1|0;continue}dC(b,c,e);var
a=a+1|0,c=c+1|0;continue}}var
j=f[1][4];function
i(b,a){return[0,b,c(j,a)]}function
o(b,a){return[0,a,c(j,b),0]}function
k(b,a){return[0,a,c(j,b),0]}function
S(d,b){var
a=c(f[1][24],d);return[0,b,c(f[1][4],a),0]}function
g(b,a){return[0,a,c(j,b),0]}function
C(b,a){return[0,a,c(j,b),0]}function
w(b,a){return[0,a,c(j,b)]}function
A(b,a){return[0,a,c(j,b),0]}function
q(b,a){return[0,a,c(j,b)]}function
M(b,a){return[0,a,c(j,b),0]}function
z(b,a){return[0,a,c(j,b),0]}function
D(b,a){return[0,a,c(j,b),0]}function
N(b,a){return[0,a,c(j,b),0]}function
E(a){var
b=a[1];if(typeof
b!=="number"&&8===b[0])return a;return[0,[8,0,a],a[2],a[3]]}function
$(a){if(typeof
a==="number")return 0===a?0:1;throw[0,r,a3t]}function
aT(a){return[0,a]}function
H(b,a){return i([0,b],a)}var
a=cf(0,73);ae(function(b){return es(a,b[1],b[2])},a3v);function
l(b){try{var
c=fQ(a,b);return c}catch(a){a=s(a);if(a===x)return b;throw a}}var
ax=cf(0,73);ae(function(a){return es(ax,a[1],a[2])},a3w);function
aa(b){try{var
a=fQ(ax,b);return a}catch(a){a=s(a);if(a===x)return b;throw a}}function
T(c,b,a){return i([1,[0,b],a],c)}function
ac(a){if(typeof
a==="number")return 0===a?1:0;throw[0,r,a3x]}function
ay(a){if(typeof
a==="number")return 1===a?0:1;throw[0,r,a3y]}function
ad(e,d,c){var
b=aT,a=c;for(;;){if(a){var
f=a[2],g=b(a[1]),b=function(b){return function(a){return[1,b,a]}}(g),a=f;continue}return i(b(d),e)}}function
af(a,b){var
i=a?a[1]:function(a){return a};function
e(u,t){var
a=u,b=t;for(;;)switch(a[0]){case
0:var
v=a[3],w=[0,e(a[2],b)],a=v,b=w;continue;case
1:var
x=a[2],y=e(a[3],0)[1],z=[2,e(x,0)[1],y],A=b?d(c(f[18],a),a3z):z;return[0,A,pv];case
2:var
j=a[2];if(b){var
k=b[1],l=k[2],B=k[1];if(lA===l)var
g=0;else
if(pv===l)var
g=0;else
var
m=d(c(f[18],a),a3A),g=1;if(!g)var
m=[1,B,c(i,j)];var
n=m}else
var
n=[0,c(i,j)];return[0,n,Po];case
3:var
o=a[2];if(b){var
p=b[1],q=p[2],C=p[1];if(lA===q)var
h=0;else
if(pv===q)var
h=0;else
var
r=d(c(f[18],a),a3B),h=1;if(!h)var
r=[1,C,o];var
s=r}else
var
s=[0,o];return[0,s,lA];default:return d(c(f[18],a),a3C)}}return e(b,0)}function
az(b,a){return af(b,a)[1]}function
I(b,a){var
d=c(f[18],a);return i(az(b,a),d)}function
aC(e,a){var
b=af(0,a),g=b[1];return Po===b[2]?i(g,c(f[18],a)):d(c(f[18],a),e)}function
P(a){return aC(a3D,a)}function
aD(a){return aC(a3E,a)}function
p(k,g){var
m=c(f[18],g),j=k?k[1]:function(a){return a},e=af(0,g),a=e[1];switch(a[0]){case
0:if(lA===e[2])var
h=[0,c(j,a[1])],b=1;else
var
b=0;break;case
1:if(lA===e[2])var
l=a[1],h=[1,l,c(j,a[2])],b=1;else
var
b=0;break;default:var
b=0}if(!b)var
h=pv===e[2]?a:d(c(f[18],g),a3F);return i(h,m)}function
ag(a){switch(a[0]){case
3:var
b=a[2],c=ag(a[3]);return ab(ag(b),c);case
15:return[0,a[2],0];default:throw[0,r,a3I]}}var
aE=[0,function(c,b,a){throw[0,r,a3J]}];function
F(c,b,a){return m(aE[1],c,b,a)}function
h(a){switch(a[0]){case
1:var
l=a[3],m=a[2],s=a[1],t=15===l[0]?[0,m,l[2]]:15===m[0]?[0,l,m[2]]:d(s,a3L),A=t[2];return o(s,[6,h(t[1]),A]);case
2:return o(a[1],0);case
3:var
u=a[1],j=0,e=a;for(;;){if(3===e[0]){var
j=[0,e[3],j],e=e[2];continue}switch(e[0]){case
3:var
i=d(e[1],a3H);break;case
5:var
i=[0,1,I(0,e[2])];break;case
7:var
i=[0,0,P(e[2])];break;default:var
i=d(c(f[2],e),a3G)}var
v=i[2];return i[1]?o(u,[5,v,B(h,j)]):o(u,[3,v,B(h,j)])}case
4:var
g=a[2],n=a[1];switch(g[0]){case
6:var
D=g[3],E=g[2],G=h(a[3]);return o(n,[1,[0,E],h(D),G]);case
12:var
H=g[3],K=g[2],L=h(a[3]);return o(n,[1,[1,K],h(H),L]);default:var
C=h(a[3]);return o(n,[1,0,h(g),C])}case
5:var
M=a[1];return o(M,[5,I(0,a[2]),0]);case
6:return d(a[1],a3M);case
7:var
N=a[1];return o(N,[3,P(a[2]),0]);case
8:return d(a[1],a3N);case
11:var
w=a[3],p=a[1];if(typeof
w==="number"){var
x=a[2];return 0===w?o(p,[4,ai(x,0),1]):o(p,[4,ai(x,0),0])}var
k=p;break;case
12:return d(a[1],a3O);case
13:var
O=a[2],Q=a[1],R=h(a[3]);return o(Q,[8,ag(O),R]);case
14:return d(a[1],a3P);case
15:return o(a[1],[0,a[2]]);case
21:return d(a[1],a3Q);case
22:return d(a[1],a3R);case
23:return d(a[1],a3S);case
25:return d(a[1],a3T);case
26:return d(a[1],a3U);case
27:return d(a[1],a3V);case
28:return d(a[1],a3W);case
29:return d(a[1],a3X);case
30:return d(a[1],a3Y);case
31:var
q=a[2],y=a[1];if(32===q[0]){var
S=q[2],T=b(f[55],q[3],0);return o(y,[2,B(h,b(f[55],S,T))])}var
k=y;break;case
33:var
U=a[1];return o(U,[7,J(a[2]),0,0]);case
34:var
V=a[1];return o(V,[7,J(a[2]),1,0]);case
35:var
W=a[1];return o(W,[7,J(a[2]),0,a3Z]);case
36:var
X=a[2],Y=a[1],Z=[0,ah(a[3])];return o(Y,[7,J(X),0,Z]);case
39:var
_=a[1],z=ak(a[2]);return o(_,[9,[0,z[1],z[2]]]);case
41:var
$=a[3],aa=a[2],ac=a[1],r=h(a[4]),ad=[0,F(ac,aa,$),0],ae=ab(r[3],ad);return[0,r[1],r[2],ae];case
42:return d(a[1],a30);default:var
k=a[1]}return d(k,a3K)}function
J(a){switch(a[0]){case
0:return 0;case
20:return[0,[0,l(a[2]),0,1,0],0];case
26:var
c=a[2];if(20===c[0]){var
e=c[2],g=B(h,b(f[55],a[3],0));return[0,[0,l(e),0,0,g],0]}break;case
28:var
i=a[2],j=J(a[3]);return ab(J(i),j);case
38:var
d=a[2];if(20===d[0]){var
k=d[2],m=B(h,b(f[55],a[3],0));return[0,[0,l(k),0,1,m],0]}break}return[0,[1,h(a)],0]}function
ah(a){switch(a[0]){case
3:var
b=a[2],c=ah(a[3]);return ab(ah(b),c);case
20:return[0,a[2],0];default:throw[0,r,a31]}}function
ai(f,e){var
a=f,b=e;for(;;){switch(a[0]){case
0:return b;case
22:var
c=a[2];if(7===c[0]){var
d=c[2];if(2===d[0]){var
g=d[2];return[0,[0,g,0,E(h(a[3]))],b]}}break;case
23:var
i=a[2],j=ai(a[3],b),a=i,b=j;continue}throw[0,r,a32]}}function
aF(i,g){var
a=i,b=g;for(;;){switch(a[0]){case
0:return b;case
1:var
e=a[2];if(7===e[0]){var
j=e[2],k=h(a[3]);return[0,[0,I(0,j),k],b]}break;case
5:var
l=a[2],m=aF(a[3],b),a=l,b=m;continue}return d(c(f[13],a),a33)}}function
ak(a){switch(a[0]){case
1:return[0,p(0,a[2]),0];case
6:var
b=a[2];if(1===b[0]){var
e=b[2],g=aF(a[3],0);return[0,p(0,e),g]}break}return d(c(f[5],a),a34)}function
U(h,g,f,e,d,b,a){return[0,g,f,e,d,b,a,0,c(j,h)]}function
Q(a){return a?0:1}function
V(a){if(typeof
a==="number")return 0===a?0:1;throw[0,r,a35]}function
aV(a){if(22===a[0]){var
e=a[2];if(7===e[0]){var
b=e[2];if(2===b[0]){var
d=a[3],f=b[2],g=b[1],k=a[1];if(30===d[0]){var
n=d[2],o=c(j,k),p=E(h(n));return[0,i(f,g),1,p,o,0]}var
l=c(j,k),m=E(h(d));return[0,i(f,g),0,m,l,0]}}}throw[0,r,a36]}function
aW(a){switch(a[0]){case
7:var
e=a[2];if(3===e[0]){var
s=e[2],t=e[1],u=c(j,a[1]);return[0,i(l(s),t),a38,0,u,0]}break;case
22:var
m=a[2];if(7===m[0]){var
g=m[2];if(3===g[0]){var
d=a[3],n=g[2],o=g[1],p=a[1];if(4===d[0]){var
x=d[3],y=d[2],z=c(j,p),A=[0,h(x)],C=[0,B(h,b(f[55],y,0))];return[0,i(l(n),o),C,A,z,0]}var
v=c(j,p),w=[0,h(d)];return[0,i(l(n),o),a39,w,v,0]}}break;case
26:var
q=a[2];if(7===q[0]){var
k=q[2];if(3===k[0]){var
D=a[3],E=k[2],F=k[1],G=c(j,a[1]),H=[0,B(h,b(f[55],D,0))];return[0,i(l(E),F),H,0,G,0]}}break}throw[0,r,a37]}function
aX(a){switch(a[0]){case
7:var
e=a[2];if(3===e[0]){var
w=e[2],x=e[1],y=c(j,a[1]);return[0,i(l(w),x),a3$,y,0]}break;case
8:var
n=a[2];if(7===n[0]){var
g=n[2];if(3===g[0]){var
o=a[3];if(7===o[0]){var
z=o[2],A=g[2],C=g[1],D=c(j,a[1]),E=[1,p(0,z)];return[0,i(l(A),C),E,D,0]}}}break;case
22:var
q=a[2];if(7===q[0]){var
k=q[2];if(3===k[0]){var
d=a[3],s=k[2],t=k[1],u=a[1];if(4===d[0]){var
H=d[3],I=d[2],J=c(j,u),K=[0,h(H)],L=[0,[0,B(h,b(f[55],I,0))],K];return[0,i(l(s),t),L,J,0]}var
F=c(j,u),G=[0,a4a,[0,h(d)]];return[0,i(l(s),t),G,F,0]}}break;case
26:var
v=a[2];if(7===v[0]){var
m=v[2];if(3===m[0]){var
M=a[3],N=m[2],O=m[1],P=c(j,a[1]),Q=[0,[0,B(h,b(f[55],M,0))],0];return[0,i(l(N),O),Q,P,0]}}break}throw[0,r,a3_]}function
al(e,d,b,a){var
f=c(j,e);return[0,d,h(b),a,0,f]}function
am(a){if(typeof
a==="number")return 0;else{if(0===a[0]){var
b=a[1];return[0,b,am(a[2])]}throw[0,r,a4g]}}function
an(a){if(typeof
a==="number")return 0===a?1:0;throw[0,r,a4h]}function
W(e,b){if(O(e,a4i))return e;switch(b[0]){case
1:var
g=b[2];if(2===g[0])var
h=g[2],a=1;else
var
a=0;break;case
24:var
i=b[2];if(1===i[0]){var
j=i[2];if(2===j[0])var
h=j[2],a=1;else
var
a=0}else
var
a=0;break;default:var
a=0}return a?h:d(c(f[3],b),a4j)}function
aG(b,a){return[0,a,c(j,b),0]}function
K(b,a){return aG(b,[0,a])}function
ao(a){return aG(a,0)}function
X(d,c){var
a=d,b=c;for(;;)switch(a[0]){case
2:return[0,[0,ao(a[1]),2],b];case
3:var
e=a[2],f=X(a[3],b),a=e,b=f;continue;case
15:return[0,[0,K(a[1],a[2]),2],b];case
16:return[0,[0,K(a[1],a[2]),0],b];case
17:return[0,[0,K(a[1],a[2]),1],b];case
18:return[0,[0,ao(a[1]),0],b];case
19:return[0,[0,ao(a[1]),1],b];default:throw[0,r,a4k]}}function
ap(d,c){var
a=d,b=c;for(;;)switch(a[0]){case
15:return[0,[0,K(a[1],a[2]),2],b];case
16:return[0,[0,K(a[1],a[2]),0],b];case
17:return[0,[0,K(a[1],a[2]),1],b];case
24:var
e=a[2],f=ap(a[3],b),a=e,b=f;continue;default:throw[0,r,a4l]}}function
aH(p,o,n,f){var
a=n,d=0;for(;;)switch(a[0]){case
3:var
l=a[2],m=X(a[3],d),a=l,d=m;continue;case
7:var
e=I(0,a[2]),g=29===f[0]?[0,0,0,h(f[2])]:[0,0,1,h(f)],q=g[3],s=g[2],t=g[1],u=c(j,o),i=e[1],v=0,w=[0,q],x=0,y=e[2];switch(i[0]){case
0:var
k=i[1];break;case
1:var
k=i[2];break;default:var
k=aU(a3s)}return b(p,e,[0,[0,k,y],d,x,t,s,w,v,u]);default:throw[0,r,a4m]}}function
aI(j,i){var
a=j,c=i;for(;;)switch(a[0]){case
0:return c;case
1:var
k=a[3],l=a[2],m=a[1];return[0,aH(function(b,a){return[0,b,a]},m,l,k),c];case
2:var
n=a[2],o=p(0,a[3]);return[0,[1,p(0,n),o],c];case
3:var
e=a[1],q=a[3],r=a[2];return[0,aH(function(c,a){if(0!==c[1][0])b(f[1][32],e,[0,bz,a4n]);return[2,a]},e,r,q),c];case
4:var
s=a[3],t=a[1],g=p(0,a[2]),h=g[1];if(0===h[0]){var
u=g[2],v=h[1];return[0,[3,[0,v,u],p(0,s)],c]}return d(t,a4o);case
5:var
w=a[2],x=aI(a[3],c),a=w,c=x;continue;default:return d(a[1],a4p)}}function
aJ(b,a,c){if(a===c)return S(b,[2,[1,a]]);var
d=aJ(b,gq(a+1|0),c);return S(b,[9,S(b,[2,[1,a]]),d])}function
n(a){switch(a[0]){case
1:var
t=a[2],T=a[1];return 2===t[0]?k(T,[0,i(t[2],t[1])]):k(T,[5,p([0,l],t),0]);case
2:var
z=a[3],A=a[2],U=a[1];if(1===z[0]){var
D=z[2];if(2===D[0])var
u=[0,A,i(D[2],D[1])],L=1;else
var
L=0}else
var
L=0;if(!L){if(1===A[0]){var
C=A[2];if(2===C[0])var
u=[0,z,i(C[2],C[1])],M=1;else
var
M=0}else
var
M=0;if(!M)var
u=d(U,a4r)}var
ag=u[2];return k(U,[1,n(u[1]),ag]);case
3:return d(a[1],a4s);case
4:return k(a[1],0);case
5:var
V=a[2],r=a[1];if(1===V[0]){var
E=V[2];if(3===E[0]){var
Y=a[3];if(23===Y[0]){var
Z=Y[2];if(4===Z[0]){var
ak=E[2],al=E[1],am=[0,k(Z[1],0)];return k(r,[5,H(l(ak),al),am])}}}}var
y=0,j=a;for(;;){if(5===j[0]){var
y=[0,j[3],y],j=j[2];continue}var
e=B(n,y),m=n(j)[1];if(typeof
m!=="number")switch(m[0]){case
5:if(!m[2]){var
ah=m[1];if(e)if(e[2])var
N=0;else
var
W=e[1],N=1;else
var
N=0;if(!N)var
W=k(r,[4,e]);return k(r,[5,ah,[0,W]])}break;case
6:if(!m[2]){var
ai=m[1];if(e)if(e[2])var
O=0;else
var
X=e[1],O=1;else
var
O=0;if(!O)var
X=k(r,[4,e]);return k(r,[6,ai,[0,X]])}break}return d(c(f[3],j),a4t)}case
6:var
an=a[1];return k(an,[8,B(n,b(f[59],a[2],0))]);case
9:var
_=a[1];return k(_,[2,[1,R(_,a[2])]]);case
10:return k(a[1],[2,[0,a[2],0]]);case
11:return k(a[1],[2,[0,a[2],a4u]]);case
12:return k(a[1],[2,[0,a[2],a4v]]);case
13:return k(a[1],[2,[0,a[2],a4w]]);case
14:var
ao=a[1];return k(ao,[2,[3,aB(a[2]),0]]);case
15:return d(a[1],a4x);case
18:var
ap=a[2],aq=a[1],ar=n(a[3]);return k(aq,[9,n(ap),ar]);case
19:var
G=a[3],I=a[2],s=a[1];if(9===I[0])if(9===G[0]){var
as=G[2],at=G[1],au=R(I[1],I[2]),g=au,q=R(at,as);for(;;){if(q<g){var
aO=q,q=g,g=aO;continue}if(g===q)return k(s,[2,[1,g]]);var
af=aJ(s,gq(g+1|0),q);return k(s,[9,S(s,[2,[1,g]]),af])}}return d(s,a4z);case
20:var
av=a[1],w=0,v=0,o=b(f[59],a[2],0);for(;;){if(o){var
Q=o[2],x=o[1],ad=4===x[0]?1:0;if(ad){var
w=[0,x,w],o=Q;continue}var
v=[0,x,v],o=Q;continue}var
ae=aj(v),aw=0===aj(w)?0:1;return k(av,[7,B(aY,ae),aw])}case
22:var
$=a[1];return k($,[2,[2,aA($,a[2]),0]]);case
23:var
J=a[2],aa=a[1];if(7===J[0]){var
ax=J[2],ay=b(f[59],J[3],0);return k(aa,[4,B(n,b(f[59],ax,ay))])}return d(aa,a4A);case
24:var
az=a[2],aC=a[1],aD=h(a[3]);return k(aC,[10,n(az),aD]);case
25:var
aE=a[1];return k(aE,[11,P(a[2])]);case
26:var
aF=a[1];return k(aF,[6,l(a[2]),0]);case
27:var
aG=a[1];return k(aG,[12,n(a[2])]);case
28:var
aH=a[3],aI=a[2],aK=a[1],K=n(a[4]),aL=[0,F(aK,aI,aH),0],aM=ab(K[3],aL);return[0,K[1],K[2],aM];case
29:var
ac=a[1];return k(ac,[13,i(a[2],ac)]);case
30:var
aN=a[1];return k(aN,[14,n(a[2])]);case
16:case
17:return d(a[1],a4y);default:return d(c(f[3],a),a4q)}}function
aY(a){if(21===a[0]){var
b=a[2],e=n(a[3]);return[0,I([0,aa],b),e]}return d(c(f[3],a),a4B)}function
aK(k,j){var
d=k,a=j;for(;;){switch(a[0]){case
1:var
g=a[2],i=a[1];switch(g[0]){case
0:var
e=function(a){switch(a[0]){case
0:var
b=a[2],c=a[1],d=e(a[3]);return[2,c,e(b),d];case
1:var
f=a[2],g=a[1],h=e(a[3]);return[4,g,e(f),h];default:return[1,a[1],a]}},a=e(g);continue;case
3:var
l=g[2];if(d){var
h=d[1],m=d[2],n=h[3],o=[0,l,h[2]];return[0,[0,b(f[1][9],i,h[1]),o,n],m]}return[0,[0,i,0,a],0]}break;case
2:var
p=a[2],d=aK(d,a[3]),a=p;continue}return[0,[0,c(f[4],a),0,a],d]}}function
L(b,a){return typeof
a==="number"?0===a?0:1:d(b,a4C)}function
aL(c,a){return 0===c[0]?a:b(f[55],c,a)}function
aq(h,f,d,c,b,a){if(0===a[0])return g(h,[4,f,d,c,e(b)]);throw[0,r,a5c]}function
e(a){switch(a[0]){case
1:var
X=a[2],s=a[1];switch(X[0]){case
0:var
$=s,Q=0;break;case
2:return g(s,[0,H(X[2],s)]);case
3:var
aE=X[2];return O(aE,a4H)?g(s,[9,H(l(aE),s),0]):g(s,[9,H(a4I,s),0]);default:var
Q=1}break;case
2:var
aF=a[3],G=a[1],bi=a[2];if(1===aF[0]){var
aG=aF[2];if(2===aG[0])if(!O(aG[2],a4J)){var
bj=[0,[0,0,e(bi)],0];return g(G,[5,g(G,[0,H(a4K,G)]),bj])}}var
$=G,Q=0;break;case
3:return d(a[1],a4L);case
4:var
z=a[1],V=0,t=a;for(;;){if(4===t[0]){var
V=[0,t[3],V],t=t[2];continue}var
aj=B(aN,V),u=e(t)[1];if(typeof
u!=="number")switch(u[0]){case
9:if(!u[2]){var
bk=u[1],I=B(function(a){return a[2]},aj);if(I)if(I[2])var
au=0;else
var
aH=I[1],au=1;else
var
au=0;if(!au)var
aH=g(z,[8,I]);return g(z,[9,bk,[0,aH]])}break;case
10:if(!u[2]){var
bl=u[1],J=B(function(a){return a[2]},aj);if(J)if(J[2])var
aw=0;else
var
aI=J[1],aw=1;else
var
aw=0;if(!aw)var
aI=g(z,[8,J]);return g(z,[10,bl,[0,aI]])}break}return g(z,[5,e(t),aj])}case
5:var
al=a[1],bm=a[2],bn=[0,[0,0,e(a[3])],0],bo=[0,[0,0,e(bm)],bn];return g(al,[5,g(al,[0,T(al,a4N,a4M)]),bo]);case
6:var
bp=a[1];return g(bp,[14,B(e,b(f[60],a[2],0))]);case
7:return d(a[1],a4O);case
8:var
am=a[1];return g(am,[27,g(am,[9,[0,a4P,c(j,am)],0])]);case
9:var
bq=a[1];return g(bq,[27,e(a[2])]);case
10:var
A=a[3],k=a[2],aJ=a[1];switch(k[0]){case
1:var
an=k[2];if(2===an[0])var
br=an[2],bs=an[1],bt=e(A),C=[23,i(br,bs),bt],x=1;else
var
x=0;break;case
2:var
aL=k[3],ao=k[1],bu=k[2];if(1===aL[0]){var
aR=aL[2];if(2===aR[0])if(O(aR[2],a4S))var
S=0;else
var
bx=[0,[0,0,e(A)],0],by=[0,[0,0,e(bu)],bx],aQ=[5,g(ao,[0,H(a4T,ao)]),by],S=1;else
var
S=0}else
var
S=0;if(!S){var
K=e(k)[1];if(typeof
K==="number")var
ax=0;else
if(12===K[0])var
bv=K[2],bw=K[1],aM=[13,bw,bv,e(A)],ax=1;else
var
ax=0;if(!ax)var
aM=d(ao,a4R);var
aQ=aM}var
C=aQ,x=1;break;case
5:var
aS=k[1],bz=k[3],bA=k[2],bB=[0,[0,0,e(A)],0],bC=[0,[0,0,e(bz)],bB],bD=[0,[0,0,e(bA)],bC],C=[5,g(aS,[0,T(aS,a4V,a4U)]),bD],x=1;break;case
33:var
aT=k[1],bE=k[3],bF=k[2],bG=[0,[0,0,e(A)],0],bH=[0,[0,0,e(bE)],bG],bI=[0,[0,0,e(bF)],bH],C=[5,g(aT,[0,T(aT,a4X,a4W)]),bI],x=1;break;default:var
x=0}if(!x)var
C=d(aJ,a4Q);return g(aJ,C);case
11:var
aU=a[1];return g(aU,[1,[1,R(aU,a[2])]]);case
12:var
aV=a[3],bJ=a[4],bK=a[2],bL=a[1],bM=0===aV[0]?0:[0,h(aV)],bN=h(bJ);return g(bL,[20,e(bK),bM,bN]);case
13:var
bO=a[1];return g(bO,[1,[3,aB(a[2]),0]]);case
14:var
aW=a[5],aX=a[1],bP=a[4],bQ=a[3],bR=a[2],bS=e([31,aX,a[6]]);if(typeof
aW==="number"){var
bT=0===aW?0:1,bU=e(bP),bV=e(bQ);return g(aX,[18,n(bR),bV,bU,bT,bS])}throw[0,r,a3u];case
15:var
m=a[2],w=a[1];if(2===m[0]){var
q=m[2];switch(q[0]){case
15:var
aY=q[2],bW=m[4],bX=m[3];return aq(w,[0,aY],0,Y(w,aY,q[3]),bW,bX);case
16:var
a0=q[3],bY=m[4],bZ=m[3],a1=W(q[2],a0);return aq(w,[1,a1],0,Y(w,a1,a0),bY,bZ);case
17:var
a2=q[3],b0=m[4],b1=m[3],b2=q[4],b3=W(q[2],a2),b4=n(a2);return aq(w,[1,b3],[0,e(b2)],b4,b0,b1)}}return g(w,[3,_(m,0)]);case
16:var
b5=a[3],b6=a[2],b7=a[1],b8=[0,e(a[4])],b9=e(b5);return g(b7,[15,e(b6),b9,b8]);case
17:return g(a[1],[1,[0,a[2],0]]);case
18:return g(a[1],[1,[0,a[2],a4Y]]);case
19:return g(a[1],[1,[0,a[2],a4Z]]);case
20:return g(a[1],[1,[0,a[2],a40]]);case
21:return d(a[1],a41);case
22:var
b_=a[1];return g(b_,[28,e(a[2])]);case
23:var
b$=a[3],ca=a[2],cb=a[1],a3=e(a[4]),a4=Z(b$,0);return a4?g(cb,[2,ac(ca),a4,a3]):a3;case
24:var
a5=a[1],cc=a[3],cd=a[2],ce=e(a[4]),cf=v(cc);return g(a5,[25,i(cd,a5),cf,ce]);case
25:var
cg=a[2],ch=a[1],ci=_(a[3],0);return g(ch,[6,e(cg),ci]);case
26:var
cj=a[1];return g(cj,[22,P(a[2])]);case
27:var
a6=a[2],a7=a[1],ck=a[3],cl=0===a6[0]?[4,a7]:a6,cm=av(ck,0);return g(a7,[30,[0,n(cl),cm]]);case
28:return d(a[1],a42);case
29:var
cn=a[1];return g(cn,[24,aP(a[2],0)]);case
30:var
a8=a[3],a9=a[2],a_=a[1];if(0===a9[0])return d(a_,a43);var
co=0===a8[0]?0:[0,e(a8)];return g(a_,[11,aO(a9,0),co]);case
31:var
ap=a[1],cp=a[2],a$=function(a){if(a){var
h=a[2],d=a[1];if(h){var
i=c(f[4],d),j=b(f[1][9],i,ap),k=a$(h);return g(j,[16,e(d),k])}return e(d)}return e([1,ap,[3,ap,a44]])};return a$(b(f[60],cp,0));case
32:var
cq=a[3],cr=a[1];return g(cr,[21,e(a[2]),cq]);case
33:var
ar=a[1],cs=a[2],ct=[0,[0,0,e(a[3])],0],cu=[0,[0,0,e(cs)],ct];return g(ar,[5,g(ar,[0,T(ar,a46,a45)]),cu]);case
34:var
ba=a[1];return g(ba,[1,[2,aA(ba,a[2]),0]]);case
35:var
cv=a[2],cw=a[1],cx=_(a[3],0);return g(cw,[7,e(cv),cx]);case
36:var
as=a[2],bb=a[1];if(37===as[0]){var
cy=as[2],cz=b(f[60],as[3],0);return g(bb,[8,B(e,b(f[60],cy,cz))])}return d(bb,a47);case
37:return d(a[1],a48);case
38:var
cA=a[2],cB=a[1],cC=h(a[3]);return g(cB,[19,e(cA),cC]);case
39:var
cD=a[1];return g(cD,[10,l(a[2]),0]);case
40:var
bc=a[1],cE=a[2],cF=e([31,bc,a[3]]);return g(bc,[17,e(cE),cF]);case
41:var
bd=a[1],cG=a[4],cH=a[2],cI=L(bd,a[3]),cJ=e(cG);return g(bd,[33,cI,p(0,cH),cJ]);case
42:var
cK=a[2],cL=a[1];return g(cL,[31,cK,e(a[3])]);case
43:var
M=a[2],N=a[1];if(5===M[0]){var
cM=M[2],cN=o(N,[9,ak(M[3])]);return g(N,[19,g(N,[32,v(cM)]),cN])}return g(N,[32,v(M)]);case
44:var
cO=a[3],cP=a[2],cQ=a[1],at=e(a[4]),cR=[0,F(cQ,cP,cO),0],cS=ab(at[3],cR);return[0,at[1],at[2],cS];default:var
Q=1}if(Q)return d(c(f[4],a),a4E);var
y=aK(0,a);if(y){var
D=y[1],ae=D[2],E=D[1],aC=D[3];if(1===aC[0]){var
ah=aC[2];switch(ah[0]){case
2:var
bg=y[2],ai=[0,g(E,[0,ad(E,ah[2],ae)]),bg],az=1;break;case
3:var
bh=y[2],ai=[0,g(E,[9,ad(E,l(ah[2]),ae),0]),bh],az=1;break;default:var
ay=1,az=0}if(az)var
ag=ai[1],af=ai[2],U=1,ay=0}else
var
ay=1;if(ay)if(ae)var
U=0;else
var
bf=y[2],ag=e(D[3]),af=bf,U=1}else
var
U=0;if(!U)var
aD=d($,a4F),ag=aD[1],af=aD[2];var
be=[0,$,ag];return aZ(function(h,e){var
a=e[3],k=e[2],l=e[1],m=h[2],n=h[1];if(1===a[0]){var
i=a[2];if(2===i[0]){var
o=i[2],p=a[1],j=b(f[1][9],n,l);return[0,j,g(j,[12,m,ad(p,aa(o),k)])]}}return d(c(f[4],a),a4G)},be,af)[2]}function
Y(b,c,a){return 0===a[0]?n([1,b,[2,b,c]]):n(a)}function
aM(b,c,a){return 0===a[0]?e([1,b,[2,b,c]]):e(a)}function
aN(a){switch(a[0]){case
21:var
b=a[2];return[0,[0,b],aM(a[1],b,a[3])];case
28:var
c=a[2];return[0,[1,c],aM(a[1],c,a[3])];default:return[0,0,e(a)]}}function
Z(E,D){var
a=E,f=D;for(;;)switch(a[0]){case
0:return f;case
1:var
F=a[2],G=Z(a[3],f),a=F,f=G;continue;case
2:var
l=a[2],d=a[1];if(1===l[0]){var
x=l[2];if(2===x[0]){var
q=a[3];if(38===q[0]){var
s=q[3];if(14===s[0]){var
y=s[3],O=s[2],P=q[2],Q=x[2],R=l[1],u=function(a){switch(a[0]){case
3:var
c=a[2],d=u(a[3]);return ab(u(c),d);case
7:var
b=a[2];if(2===b[0])return[0,b[2],0];break}throw[0,r,a49]},v=u(O),S=B(function(a){return t(a4_,a)},v),T=h(y),b=function(e){var
a=e[1];if(typeof
a==="number")var
c=0;else
switch(a[0]){case
0:var
c=[0,a[1]];break;case
1:var
k=a[2],l=a[1],m=b(a[3]),c=[1,l,b(k),m];break;case
2:var
c=[2,B(b,a[1])];break;case
3:var
f=a[1],g=f[1];if(0===g[0])if(a[2])var
d=0;else{var
i=g[1];if(e7(i,v))var
h=[0,t(a4D,i)],d=1;else
var
d=0}else
var
d=0;if(!d)var
h=[3,f,B(b,a[2])];var
c=h;break;case
4:var
n=a[2],o=a[1],c=[4,B(function(a){var
c=a[2],d=a[1];return[0,d,c,b(a[3])]},o),n];break;case
5:var
p=a[1],c=[5,p,B(b,a[2])];break;case
6:var
q=a[2],c=[6,b(a[1]),q];break;case
7:var
r=a[3],s=a[2],c=[7,B(C,a[1]),s,r];break;case
8:var
u=a[1],c=[8,u,b(a[2])];break;case
9:var
j=a[1],w=j[2],x=j[1],c=[9,[0,x,B(function(a){var
c=a[1];return[0,c,b(a[2])]},w)]];break;default:var
c=[10,a[1]]}return[0,c,e[2],e[3]]},C=function(a){if(0===a[0]){var
c=a[3],d=a[2],e=a[1];return[0,e,d,c,B(b,a[4])]}return[1,b(a[1])]},U=b(T),w=function(a){return g(d,a)},z=function(a){return k(d,a)},V=h(y),W=w([19,e(P),V]),A=function(a){if(a){var
b=a[2],c=a[1];return b?w([31,c,A(b)]):w([31,c,W])}throw[0,r,a4$]},X=o(d,[8,S,U]),Y=z([10,z([0,i(Q,R)]),X]),_=A(v);return[0,[0,Y,_,0,c(j,d)],f]}}}}var
m=a[3];if(38===m[0]){var
p=m[3];if(13===p[0]){var
J=p[3],K=p[2],L=m[2],M=c(j,d),N=e(L);return[0,[0,n([24,d,l,[13,d,K,J]]),N,0,M],f]}}var
H=c(j,d),I=e(m);return[0,[0,n(l),I,0,H],f];default:throw[0,r,a5a]}}function
_(f,d){var
a=f,b=d;for(;;)switch(a[0]){case
0:return b;case
1:var
g=a[2],h=_(a[3],b),a=g,b=h;continue;case
2:var
c=a[3],i=a[4],j=n(a[2]),k=0===c[0]?0:[0,e(c)];return[0,[0,j,k,e(i)],b];default:throw[0,r,a5b]}}function
aO(d,c){var
a=d,b=c;for(;;)switch(a[0]){case
1:var
f=a[2],g=aO(a[3],b),a=f,b=g;continue;case
2:var
h=a[2],i=e(a[3]);return[0,[0,I([0,aa],h),i],b];default:throw[0,r,a5d]}}function
aP(f,d){var
a=f,b=d;for(;;){switch(a[0]){case
0:return b;case
1:var
g=a[2],h=aP(a[3],b),a=g,b=h;continue;case
2:var
c=a[2];if(2===c[0]){var
j=c[2],k=c[1],l=e(a[3]);return[0,[0,i(j,k),l],b]}break}throw[0,r,a5e]}}function
ar(L,K){var
a=L,g=K;for(;;)switch(a[0]){case
9:var
n=a[1],M=a[5],N=a[4],O=a[3],R=a[2],p=B(function(a){var
d=a[2],e=a[1],g=c(f[2],d),i=c(f[2],e),k=c(j,b(f[1][9],i,g)),l=h(d);return[0,h(e),l,k]},M),q=fL(X,O,0),s=i(R,n),o=0,l=0,e=N;for(;;){switch(e[0]){case
8:var
x=e[3],o=[0,h(e[2])],e=x;continue;case
21:var
y=e[2],z=Q(l),k=U(n,s,q,p,[1,B(aV,b(f[55],y,0))],z,o);break;case
25:var
A=e[2],C=Q(l),k=U(n,s,q,p,[0,B(aW,b(f[55],A,0))],C,o);break;case
29:var
D=e[2],E=e[1];if(!l){var
l=1,e=D;continue}var
k=d(E,a4c);break;case
40:var
F=e[1],k=U(F,s,q,p,1,Q(l),o);break;default:if(0===o)var
w=0===e[0]?0:[0,h(e)],k=U(n,s,q,p,0,Q(l),w);else
var
k=d(n,a4b)}return typeof
g==="number"?[0,_7,[0,k,0]]:me<=g[1]?d(n,a5g):[0,_7,[0,k,g[2]]]}case
10:var
v=a[1],S=a[4],T=a[3],V=a[2];if(typeof
g==="number"){var
W=fL(X,T,0),u=0,m=S,Y=P(V);for(;;){switch(m[0]){case
8:var
t=d(m[1],a4e);break;case
25:var
G=m[2],H=Q(u),t=[0,Y,W,B(aX,b(f[55],G,0)),H,0];break;case
29:var
I=m[2],J=m[1];if(!u){var
u=1,m=I;continue}var
t=d(J,a4f);break;default:var
t=d(v,a4d)}return[0,me,t]}}return me<=g[1]?d(v,a5h):d(v,a5i);case
27:var
Z=a[2],_=ar(a[3],g),a=Z,g=_;continue;default:throw[0,r,a5f]}}function
u(a){switch(a[0]){case
0:return d(a[1],a5j);case
1:var
f=a[1];return C(f,[0,p(0,a[2])]);case
2:var
g=a[1];return C(g,[6,p(0,a[2])]);case
3:var
e=a[2],b=a[1];if(!O(e,a5k))if(0===a[3][0]){var
l=u(a[4]);return C(b,[2,i(a5l,b),0,l])}var
h=a[3],j=u(a[4]),k=[0,u(h)];return C(b,[2,i(e,b),k,j]);case
4:return d(a[1],a5m);case
5:var
m=a[1];return C(m,[1,as(a[2],0)]);case
6:var
n=a[2],o=a[1],q=aI(a[3],0);return C(o,[3,u(n),q]);case
7:var
s=a[1];return C(s,[4,v(a[2])]);case
8:var
t=a[3],w=a[2],x=a[1],c=u(a[4]),y=[0,F(x,w,t),0],z=ab(c[3],y);return[0,c[1],c[2],z];default:throw[0,r,a5n]}}function
as(F,E){var
a=F,e=E;for(;;)switch(a[0]){case
0:return e;case
1:var
G=a[1];return[0,w(G,[9,B(au,b(f[65],a[2],0))]),e];case
2:var
H=a[1];return[0,w(H,[10,B(au,b(f[65],a[2],0))]),e];case
3:var
I=a[2],J=as(a[3],e),a=I,e=J;continue;case
4:return e;case
5:var
k=a[2],g=a[1];switch(k[0]){case
7:var
v=k[2];if(3===v[0]){var
K=v[2],M=c(j,g);return[0,w(g,[3,[0,i(l(K),g),a5p,M,0]]),e]}break;case
26:var
x=k[2];if(7===x[0]){var
y=x[2];if(3===y[0]){var
N=k[3],O=y[2],P=c(j,g),Q=[0,[0,B(h,b(f[55],N,0))],0];return[0,w(g,[3,[0,i(l(O),g),Q,P,0]]),e]}}break}throw[0,r,a5o];case
6:var
n=a[1],R=a[3],S=a[2],T=am(a[4]);return[0,w(n,[0,al(n,i(S,n),R,T)]),e];case
7:var
z=a[1],U=a[2],V=c(j,z);return[0,w(z,[8,[0,u(U),V,0]]),e];case
8:var
o=a[1],W=a[3],X=a[2],Y=c(j,o),Z=u(W);return[0,w(o,[4,[0,i(X,o),Z,0,Y]]),e];case
9:var
_=a[1];return[0,w(_,[5,aQ(a[2],0)]),e];case
10:var
A=a[3],q=a[1],$=a[2],aa=4===A[0]?0:[0,u(A)],ab=c(j,q);return[0,w(q,[6,[0,i($,q),aa,0,ab]]),e];case
11:var
s=a[1],ac=a[3],ad=L(s,a[2]),ae=c(j,s);return[0,w(s,[7,[0,p(0,ac),ad,ae,0]]),e];case
12:var
af=a[3],ag=a[1],C=ay(a[2]),m=ar(af,agg);if(typeof
m==="number")var
D=[1,C,0];else
var
ah=me<=m[1]?[2,m[2]]:[1,C,m[2]],D=ah;return[0,w(ag,D),e];case
13:var
t=a[1],ai=a[3];return[0,w(t,[0,al(t,i(a[2],t),ai,0)]),e];default:return d(a[1],a5q)}}function
aQ(f,e){var
a=f,b=e;for(;;)switch(a[0]){case
1:var
g=a[2],h=aQ(a[3],b),a=g,b=h;continue;case
3:var
d=a[1],k=a[3],l=a[2],m=c(j,d),n=u(k);return[0,[0,i(l,d),n,0,m],b];default:throw[0,r,a5r]}}function
aR(f,e){var
a=f,b=e;for(;;)switch(a[0]){case
1:var
g=a[2],h=aR(a[3],b),a=g,b=h;continue;case
2:var
d=a[1],k=a[4],l=a[3],m=a[2],n=c(j,d),o=u(l),p=[0,[4,v(k),o],a3r,0];return[0,[0,i(m,d),p,0,n],b];default:throw[0,r,a5s]}}function
v(a){switch(a[0]){case
0:return d(a[1],a5t);case
1:var
l=a[1];return A(l,[0,p(0,a[2])]);case
2:var
m=a[2],n=a[1],q=v(a[3]);return A(n,[3,v(m),q]);case
3:var
j=a[2],b=a[1];if(!O(j,a5u))if(0===a[3][0]){var
w=v(a[4]);return A(b,[2,i(a5v,b),0,w])}var
r=a[3],s=v(a[4]),t=[0,u(r)];return A(b,[2,i(j,b),t,s]);case
4:var
x=a[1];return A(x,[1,at(a[2],0)]);case
5:var
y=a[2],z=a[1],B=u(a[3]);return A(z,[4,v(y),B]);case
6:var
c=a[2],f=a[1];if(38===c[0]){var
k=c[3];if(39===k[0]){var
C=c[2],D=o(f,[9,ak(k[2])]);return A(f,[5,g(f,[19,e(C),D])])}}return A(f,[5,e(c)]);case
7:var
E=a[3],G=a[2],H=a[1],h=v(a[4]),I=[0,F(H,G,E),0],J=ab(h[3],I);return[0,h[1],h[2],J];default:return d(a[1],a5w)}}function
at(J,I){var
a=J,g=I;for(;;)switch(a[0]){case
0:return g;case
1:var
K=a[1];return[0,q(K,[10,B(a0,b(f[66],a[2],0))]),g];case
2:var
M=a[1];return[0,q(M,[11,B(au,b(f[65],a[2],0))]),g];case
3:var
N=a[2],O=at(a[3],g),a=N,g=O;continue;case
4:return g;case
5:var
m=a[2],k=a[1];switch(m[0]){case
7:var
y=m[2];if(3===y[0]){var
o=a[3],z=y[2];if(typeof
o==="number"){var
P=c(j,k);return[0,q(k,[5,[0,i(l(z),k),a5y,P,0]]),g]}else
if(0===o[0]){var
Q=o[1],R=c(j,k),S=[1,p([0,l],Q)];return[0,q(k,[5,[0,i(l(z),k),S,R,0]]),g]}}break;case
26:var
A=m[2];if(7===A[0]){var
C=A[2];if(3===C[0]){var
D=a[3],T=m[3],U=C[2];if(typeof
D==="number"){var
V=c(j,k),W=[0,[0,B(h,b(f[55],T,0))],0];return[0,q(k,[5,[0,i(l(U),k),W,V,0]]),g]}else
if(0===D[0])return d(k,a5z)}}break}throw[0,r,a5x];case
6:var
X=a[1];return[0,q(X,[0,e(a[2]),0]),g];case
7:var
s=a[1],Y=a[3],_=a[2],$=am(a[4]);return[0,q(s,[2,al(s,i(_,s),Y,$)]),g];case
8:var
E=a[1],aa=a[2],ab=c(j,E);return[0,q(E,[12,[0,v(aa),ab,0]]),g];case
9:var
t=a[1],ad=a[3],ae=a[2],af=c(j,t),ag=v(ad);return[0,q(t,[6,[0,i(ae,t),ag,0,af]]),g];case
10:var
ah=a[1];return[0,q(ah,[7,aR(a[2],0)]),g];case
11:var
F=a[3],w=a[1],ai=a[2],aj=4===F[0]?0:[0,u(F)],ak=c(j,w);return[0,q(w,[8,[0,i(ai,w),aj,0,ak]]),g];case
12:var
x=a[1],an=a[3],ao=L(x,a[2]),ap=c(j,x);return[0,q(x,[9,[0,p(0,an),ao,ap,0]]),g];case
13:var
aq=a[3],as=a[1],G=ay(a[2]),n=ar(aq,agg);if(typeof
n==="number")var
H=[3,G,0];else
var
av=me<=n[1]?[4,n[2]]:[3,G,n[2]],H=av;return[0,q(as,H),g];case
14:var
aw=a[2],ax=a[1],az=Z(a[3],0);return[0,q(ax,[1,ac(aw),az]),g];default:return d(a[1],a5A)}}function
G(a){switch(a[0]){case
1:var
f=a[2],g=a[1];if(typeof
f==="number")if(0!==f){var
k=a[3],l=B(h,aL(a[4],0));return M(g,[0,aD(k),l])}return d(g,a5C);case
2:var
b=a[2],c=a[1];switch(b[0]){case
6:var
n=b[3],o=b[2],p=G(a[3]);return M(c,[2,[0,o],h(n),p]);case
12:var
q=b[3],s=b[2],t=G(a[3]);return M(c,[2,[1,s],h(q),t]);default:var
m=G(a[3]);return M(c,[2,0,h(b),m])}case
3:var
i=a[2],j=a[1],u=a[3],v=0===i[0]?[2,j]:i,w=aS(u,0);return M(j,[1,[0,h(v),w]]);case
7:var
x=a[3],y=a[2],z=a[1],e=G(a[4]),A=[0,F(z,y,x),0],C=ab(e[3],A);return[0,e[1],e[2],C];default:throw[0,r,a5B]}}function
a0(b){if(8===b[0]){var
a=b[2];if(2===a[0]){var
e=a[3];if(2===e[0]){var
g=a[4],h=b[3],k=e[2],l=e[1],m=a[2],n=a[1],o=0===g[0]?0:ap(g,0),p=c(j,n),q=y(h),r=i(k,l);return[0,$(m),o,r,q,p,0]}}}return d(c(f[11],b),a5D)}function
au(b){switch(b[0]){case
5:var
e=b[2];if(1===e[0]){var
h=e[3];if(2===h[0])var
q=b[3],k=e[4],p=h[2],o=h[1],n=e[2],m=e[1],a=1;else
var
a=0}else
var
a=0;break;case
6:var
g=b[2];if(1===g[0]){var
l=g[3];if(2===l[0])var
q=b[3],k=g[4],p=l[2],o=l[1],n=g[2],m=g[1],a=1;else
var
a=0}else
var
a=0;break;default:var
a=0}if(a){var
r=0===k[0]?0:ap(k,0),s=c(j,m),t=G(q),u=i(p,o);return[0,$(n),r,u,t,s,0]}return d(c(f[9],b),a5E)}function
aS(d,c){var
a=d,b=c;for(;;)switch(a[0]){case
0:return b;case
1:var
e=a[2],f=a[1],g=h(a[3]);return[0,N(f,[3,[0,h(e),g]]),b];case
2:var
i=a[2],j=aS(a[3],b),a=i,b=j;continue;case
3:var
k=a[1];return[0,N(k,[0,G(a[2])]),b];case
4:var
l=a[3],m=a[2],n=a[1],o=E(h(a[4]));return[0,N(n,[2,[0,m,V(l),1,o]]),b];case
5:var
p=a[4],q=a[3],s=a[2],t=a[1],u=h(a[5]),v=$(p);return[0,N(t,[1,[0,s,an(q),v,u]]),b];case
6:var
w=a[3],x=a[2],y=a[1],z=E(h(a[4]));return[0,N(y,[2,[0,x,V(w),0,z]]),b];default:throw[0,r,a5F]}}function
y(a){switch(a[0]){case
1:var
g=0,f=a,t=a[1];for(;;){if(1===f[0]){var
g=[0,f[3],g],f=f[2];continue}var
u=B(aN,g);return z(t,[3,y(f),u])}case
2:var
j=a[2],k=a[1];if(typeof
j==="number")if(0!==j){var
v=a[3],w=B(h,aL(a[4],0));return z(k,[0,aD(v),w])}return d(k,a5H);case
3:var
b=a[2],c=a[1];switch(b[0]){case
15:var
l=b[2],A=b[3],C=y(a[3]);return z(c,[2,[0,l],0,Y(c,l,A),C]);case
16:var
m=b[3],D=a[3],o=W(b[2],m),E=y(D);return z(c,[2,[1,o],0,Y(c,o,m),E]);case
17:var
p=b[3],H=a[3],I=b[4],J=W(b[2],p),K=y(H),L=n(p);return z(c,[2,[1,J],[0,e(I)],L,K]);default:var
x=y(a[3]);return z(c,[2,0,0,n(b),x])}case
4:var
M=a[3],N=a[2],O=a[1],P=y(a[4]),Q=Z(M,0);return z(O,[4,ac(N),Q,P]);case
5:var
q=a[2],s=a[1],R=a[3],S=0===q[0]?[4,s]:q,T=av(R,0);return z(s,[1,[0,n(S),T]]);case
6:var
U=a[2],V=a[1],X=G(a[3]);return z(V,[5,y(U),X]);case
9:var
_=a[3],$=a[2],aa=a[1],i=y(a[4]),ad=[0,F(aa,$,_),0],ae=ab(i[3],ad);return[0,i[1],i[2],ae];default:throw[0,r,a5G]}}function
av(o,n){var
a=o,b=n;for(;;)switch(a[0]){case
0:return b;case
1:var
p=a[2],q=av(a[3],b),a=p,b=q;continue;case
2:var
s=a[2],t=a[1],u=h(a[3]);return[0,D(t,[3,[0,h(s),u]]),b];case
3:var
f=a[4],j=a[1],v=a[3],w=a[2],x=a3(f,a5I)?0:[0,f],z=y(v);return[0,D(j,[0,L(j,w),z,x]),b];case
4:var
A=a[1];return[0,D(A,[4,e(a[2])]),b];case
5:var
k=a[6],c=a[1],B=a[5],C=a[4],F=a[3],G=a[2],H=0===k[0]?0:[0,E(h(k))],I=g(c,[29,e(B),H]),J=[1,L(c,F),I],K=V(C);return[0,D(c,[2,[0,i(G,c),K,J]]),b];case
6:var
d=a[1],M=a[4],N=a[3],O=a[2],P=e(a[5]),Q=[1,L(d,N),P],R=an(M);return[0,D(d,[1,[0,i(O,d),R,Q]]),b];case
7:var
l=a[1],S=a[3],T=a[2],U=[0,E(h(a[4]))],W=V(S);return[0,D(l,[2,[0,i(T,l),W,U]]),b];case
8:var
m=a[1],X=a[3],Y=a[2],Z=[0,h(a[4])],_=an(X);return[0,D(m,[1,[0,i(Y,m),_,Z]]),b];default:throw[0,r,a5J]}}function
a1(a){return as(a,0)}function
aw(a){return at(a,0)}function
a2(e){if(4===e[0]){var
d=e[3],i=e[2];switch(d[0]){case
0:var
b=0,a=1;break;case
1:var
g=d[2];if(3===g[0]){var
h=g[2];if(O(h,a5K))if(O(h,a5L))var
a=0;else
var
b=a5M,a=1;else
var
b=a5N,a=1}else
var
a=0;break;case
17:var
b=[1,d[2],0],a=1;break;case
34:var
b=[0,d[2]],a=1;break;default:var
a=0}if(!a)var
b=[2,az(0,c(f[28],d))];return[1,i,b]}return[0,aw(e)]}aE[1]=function(c,b,a){var
d=[0,aw(a)];return[0,i(b,c),d]};return[0,a1,aw,a2]};H(0);H(0);var
t5=function(G){var
d=G[1],af=[N,a5O,H(0)];function
I(a,d){if(typeof
d==="number")switch(d){case
0:return c(A(a),a5P);case
1:return c(A(a),a5Q);case
2:return c(A(a),a5R);case
3:return c(A(a),a5S);case
4:return c(A(a),a5T);case
5:return c(A(a),a5U);default:return c(A(a),a5V)}else
switch(d[0]){case
0:var
e=mY(d[1]);return b(A(a),a5W,e);case
1:var
f=d[1];return b(A(a),a5X,f);case
2:var
g=d[1];return b(A(a),a5Y,g);default:var
h=d[1];return b(A(a),a5Z,h)}}var
o=[0,af,I,function(c){var
a=b5(50);b(sn(a,a50),I,c);return b6(a)}];n4([0,o[1],o[3],o[2]]);function
J(a){var
b=b5(cX);return[0,d[2],0,1,0,a,b]}function
l(a){var
b=BU(a[5]);return dH(a[6],b)}function
ag(a,d){var
b=a[5],c=ha(b[2],b[5]+d|0);return bd(a[6],c)}function
v(a){var
b=b6(a[6]);r2(a[6]);return b}function
q(a){var
e=c(d[6],a[5]);return b(d[9],a[1],e)}function
ah(a){return a[3]}function
ai(a){return a[4]}function
aj(a){return a[2]}function
B(a){return[0,a[1],1,a[3],a[4],a[5],a[6]]}function
w(a){var
b=c(d[21],a[1]);a[5][11]=b;return 0}function
K(c,b){var
a=b[5][11];b[5][11]=[0,a[1],a[2],a[3],a[4]+c|0];return 0}function
L(a){var
b=a[6],e=a[5],f=a[4],g=a[3],h=a[2];return[0,c(d[6],a[5]),h,g,f,e,b]}function
h(c,a){var
d=a[5];return b(c,L(a),d)}function
D(b,a){h(b,a);w(a);return v(a)}function
E(b,a){var
c=a[6],e=a[5],f=a[4],g=a[3],h=a[2];return[0,m(d[11],$u,b,a[1]),h,g,f,e,c]}function
e(c,a){l(a);return b(c,a,a[5])}function
i(c,a){return b(c,a,a[5])}function
x(f,e,d,c,b){var
a=D(f,L(e));return[14,[0,d,c,b,aD(a,0,C(a)-2|0)]]}function
n(g,c,b,f,e){var
d=g[5],a=d[12],h=c?c[1]:a[1],i=a[4],j=a[4]-e|0,k=f?b:a[2]+b|0;d[12]=[0,h,k,j,i];return 0}function
M(a){return-dk(t(a51,a))|0}function
O(a){return-dk(t(a52,a))|0}function
P(a){return e3(Bh(t(a53,a)))}function
Q(a){return-dk(t(a54,a))|0}function
g(b,a){throw[0,d[31],a,[0,o[1],b]]}function
y(b,a){var
c=o[2],e=d[28];return p(dd(a55),e,a,c,b)}function
S(b,a,J){var
o=J;for(;;){var
m=rW(fb,o,a);if(33<m>>>0){c(a[1],a);var
o=m;continue}switch(m){case
0:n(b,0,1,0,0);return 0;case
1:return[17,bj(a,a[5],a[6])];case
2:return[12,bj(a,a[5]+1|0,a[6]-1|0)];case
3:return[13,bj(a,a[5]+1|0,a[6]-1|0)];case
4:return[2,bj(a,a[5],a[6])];case
5:return[3,bj(a,a[5],a[6])];case
6:var
p=bj(a,a[5],a[6]);try{var
K=[5,M(p),p];return K}catch(b){b=s(b);if(b[1]===bz)return g(a56,c(d[6],a));throw b}case
7:var
q=bj(a,a[5],a[6]);try{var
L=[9,j6(q),q];return L}catch(b){b=s(b);if(b[1]===bz)return g(a57,c(d[6],a));throw b}case
8:var
u=bj(a,a[5],a[6]-1|0);try{var
N=[6,O(u),u];return N}catch(b){b=s(b);if(b[1]===bz)return g(a58,c(d[6],a));throw b}case
9:var
w=bj(a,a[5],a[6]-1|0);try{var
R=[7,P(w),w];return R}catch(b){b=s(b);if(b[1]===bz)return g(a59,c(d[6],a));throw b}case
10:var
A=bj(a,a[5],a[6]-1|0);try{var
S=[8,Q(A),A];return S}catch(b){b=s(b);if(b[1]===bz)return g(a5_,c(d[6],a));throw b}case
11:var
T=c(d[6],a);return g([3,BU(a)],T);case
12:h(j,b);var
C=v(b);return[11,Gt(0,C),C];case
13:var
F=bj(a,a[5]+1|0,a[6]-1|0);n(b,0,1,0,1);return[10,n8(F),F];case
14:var
G=bj(a,a[5]+1|0,a[6]-1|0);return[10,n8(G),G];case
15:var
U=m4(a,a[5]+2|0),V=c(d[6],a);return g([1,dG(1,U)],V);case
16:l(b);return[16,D(f,B(b))];case
17:y(5,c(d[6],a));i(f,B(b));return[16,v(b)];case
18:y(6,c(d[6],a));b[5][6]=b[5][6]-1|0;return a5$;case
19:var
X=bj(a,a[5]+2|0,a[6]);if(b[3])return x(k,b,a6b,a6a,2);var
Z=t(a6c,X);return i(function(a,b){return r(Z,a,b)},b);case
20:return b[3]?a6d:i(function(a,b){return r(a6e,a,b)},b);case
21:return b[3]?h(W,b):i(function(a,b){return r(a6f,a,b)},b);case
22:return b[3]?h(Y,b):i(function(a,b){return r(a6g,a,b)},b);case
23:var
_=z(a[10],1)[2],aa=bj(a,z(a[10],0)[1],_),ab=z(a[10],2)[3],H=aqH(a,z(a[10],3)[4],ab),I=dk(aa);n(b,H,I,1,0);return[18,I,H];case
24:return[4,dG(1,m4(a,a[5]+1|0))];case
25:return[4,bj(a,a[5]+1|0,a[6]-1|0)];case
26:var
ac=z(a[10],0)[1];return[4,bj(a,a[5]+1|0,ac)];case
27:var
ad=a[6]-1|0;return[4,bj(a,z(a[10],0)[1],ad)];case
28:var
ae=z(a[10],1)[2];return[4,bj(a,z(a[10],0)[1],ae)];case
29:return[1,bj(a,a[5],a[6])];case
30:return b[4]?h($,E(1,b)):i(function(a,b){return r(a6h,a,b)},b);case
31:return[1,bj(a,a[5],a[6])];case
32:var
e=a[12];a[12]=[0,e[1],e[2],e[3]+1|0,e[4]+1|0];return 1;default:var
af=m4(a,a[5]);return g([0,af],c(d[6],a))}}}function
R(b,a){a[10]=a_(12,-1);return S(b,a,0)}function
T(a,b,v){var
r=v;for(;;){var
m=iw(fb,r,b);if(14<m>>>0){c(b[1],b);var
r=m;continue}switch(m){case
0:l(a);h(f,a);return i(f,a);case
1:return l(a);case
2:l(a);if(a[3])h(k,a);return i(f,a);case
3:return e(f,a);case
4:l(a);try{h(j,a)}catch(b){b=s(b);if(b[1]===d[31]){var
t=b[3];if(t[1]===o[1])var
u=t[2],p=typeof
u==="number"?1===u?(g(4,q(a)),1):0:0;else
var
p=0}else
var
p=0;if(!p)throw b}bd(a[6],34);return i(f,a);case
5:return e(f,a);case
6:return e(f,a);case
7:n(a,0,1,0,1);return e(f,a);case
8:return e(f,a);case
9:return e(f,a);case
10:return e(f,a);case
11:return e(f,a);case
12:return g(0,q(a));case
13:n(a,0,1,0,0);return e(f,a);default:return e(f,a)}}}function
f(b,a){return T(b,a,ep)}function
U(a,b,i){var
h=i;for(;;){var
f=rW(fb,h,b);if(8<f>>>0){c(b[1],b);var
h=f;continue}switch(f){case
0:return w(a);case
1:var
k=b[6];n(a,0,1,0,C(bj(b,z(b[10],0)[1],k)));return e(j,a);case
2:return e(j,a);case
3:return e(j,a);case
4:return e(j,a);case
5:var
l=m4(b,b[5]+1|0);if(a[2])return e(j,a);var
m=c(d[6],b);y([1,dG(1,l)],m);return e(j,a);case
6:n(a,0,1,0,0);return e(j,a);case
7:return g(1,q(a));default:return e(j,a)}}}function
j(b,a){a[10]=a_(2,-1);return U(b,a,jX)}function
V(b,g,a,f){var
d=f;for(;;){var
e=iw(fb,d,a);if(0===e){var
h=bj(a,a[5],a[6]);K(-C(b)|0,g);return[1,t(b,h)]}c(a[1],a);var
d=e;continue}}function
r(c,b,a){return V(c,b,a,j0)}function
X(g,a,f){var
d=f;for(;;){var
b=iw(fb,d,a);if(0===b){var
e=bj(a,a[5],a[6]-1|0);return x(k,g,a6i,e,1+C(e)|0)}if(1===b)return[1,t(a6j,bj(a,a[5],a[6]))];c(a[1],a);var
d=b;continue}}function
W(b,a){return X(b,a,ll)}function
Z(d,a,i){var
e=i;for(;;){var
b=rW(fb,e,a);if(2<b>>>0){c(a[1],a);var
e=b;continue}switch(b){case
0:var
f=bj(a,a[5],a[6]-1|0);return x(k,d,f,a6k,1+C(f)|0);case
1:var
j=z(a[10],0)[1],g=bj(a,a[5],j),l=a[6]-1|0,h=bj(a,z(a[10],0)[1]+1|0,l);return x(k,d,g,h,(2+C(h)|0)+C(g)|0);default:return[1,t(a6l,bj(a,a[5],a[6]))]}}}function
Y(b,a){a[10]=a_(2,-1);return Z(b,a,mp)}function
_(a,b,j){var
f=j;for(;;){var
d=iw(fb,f,b);if(4<d>>>0){c(b[1],b);var
f=d;continue}switch(d){case
0:l(a);h(k,a);return i(k,a);case
1:return l(a);case
2:return g(2,q(a));case
3:n(a,0,1,0,0);return e(k,a);default:return e(k,a)}}}function
k(b,a){return _(b,a,ak_)}function
aa(b,a,i){var
f=i;for(;;){var
d=iw(fb,f,a);if(2<d>>>0){c(a[1],a);var
f=d;continue}switch(d){case
0:w(b);return a6m;case
1:var
g=bj(a,a[5],a[6]-1|0),j=E(1+C(g)|0,b);return h(function(a,b){return u(g,a,b)},j);default:return e(function(a,b){return u(a6n,a,b)},b)}}}function
$(b,a){return aa(b,a,am$)}function
ab(b,a,d,m){var
j=m;for(;;){var
f=iw(fb,j,d);if(4<f>>>0){c(d[1],d);var
j=f;continue}switch(f){case
0:w(a);return[15,b,v(a)];case
1:return g(3,q(a));case
2:n(a,0,1,0,0);return e(function(a,c){return u(b,a,c)},a);case
3:l(a);h(k,a);return i(function(a,c){return u(b,a,c)},a);default:return e(function(a,c){return u(b,a,c)},a)}}}function
u(c,b,a){return ab(c,b,a,P5)}function
ac(a,e,d){var
c=0;if(d<=0)return c;var
b=bA(a);if(b){var
f=b[1];aL(a);dC(e,0,f);return 1}return c}function
ad(a){return m7(function(e){var
b=h(R,a);return[0,[0,b,c(d[6],a[5])]]})}function
a(e,b){var
f=e?e[1]:1,a=J(b),g=a[6],h=a[5],i=a[2];return ad([0,c(d[6],b),i,f,aIM,h,g])}function
F(a,e){var
b=c(d[21],e);a[4]=b[4];a[12]=b;return 0}function
ak(n,m,c){var
d=[0],e=1,f=0,g=0,h=0,i=0,j=0,k=C(c),l=BI(c),b=[0,function(a){a[9]=1;return 0},l,k,j,i,h,g,f,e,d,m3,m3];F(b,m);return a(n,b)}function
ae(o,m,n){var
f=bX(jW),c=[0],d=0,e=0,g=0,h=0,i=0,j=0,k=0,l=bX(fE),b=[0,function(a){var
k=ac(n,f,cK(f)),c=0<k?k:(a[9]=1,0);if(cK(a[2])<(a[3]+c|0)){if(((a[3]-a[5]|0)+c|0)<=cK(a[2]))kb(a[2],a[5],a[2],0,a[3]-a[5]|0);else{var
i=dm(2*cK(a[2])|0,gs);if(i<((a[3]-a[5]|0)+c|0))aU(aqG);var
j=bX(i);kb(a[2],a[5],j,0,a[3]-a[5]|0);a[2]=j}var
d=a[5];a[4]=a[4]+d|0;a[6]=a[6]-d|0;a[5]=0;a[7]=a[7]-d|0;a[3]=a[3]-d|0;var
e=a[10],g=e.length-1-1|0,l=0;if(!(g<0)){var
b=l;for(;;){var
h=z(e,b)[b+1];if(0<=h)z(e,b)[b+1]=h-d|0;var
m=b+1|0;if(g!==b){var
b=m;continue}break}}}kb(f,0,a[2],a[3],c);a[3]=a[3]+c|0;return 0},l,k,j,i,h,g,e,d,c,m3,m3];F(b,m);return a(o,b)}return[0,d,G,o,J,l,ag,v,q,ah,ai,aj,B,w,K,h,D,E,e,i,x,n,M,O,P,Q,g,y,fb,R,S,f,T,j,U,r,V,W,X,Y,Z,k,_,$,aa,u,ab,ac,ad,a,F,ak,ae,function(c,b,a){return ae([0,Gf],b,a)}]},a6G=function(a){var
L=[0,a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[20],a[21]];function
h(a){switch(a){case
0:return a6o;case
1:return a6p;case
2:return a6q;case
3:return a6r;case
4:return a6s;case
5:return a6t;case
6:return a6u;case
7:return a6v;case
8:return a6w;case
9:return a6x;case
10:return a6y;case
11:return a6z;case
12:return a6A;case
13:return a6B;case
14:return a6C;case
15:return a6D;default:return a6E}}var
r=0,t=1,u=2,v=3,w=4,x=5,y=6,z=7,B=8,C=9,D=10,E=11,F=12,G=13,I=14,J=15,K=16,f=[0,L,r,t,u,v,w,x,y,z,B,C,D,E,F,G,I,J,K,h,function(d){var
b=[N,a6F,H(0)];function
a(b,a){return[0,b,a]}function
c(c,a){var
d=a[2];if(c===a[1])return d;throw b}return[0,a,c,function(b,a){return b7(b,h(a[1]))}]}],j=c(f[20],[0]),i=c(f[20],[0]),e=[0,0],k=[0,a6H],l=[0,function(a){return a}];function
n(f,d){var
g=b(j[1],d,0),a=c(l[1],f),h=O(a,a6I)?a:k[1],m=rN([0,h,g],e[1]);return b(i[2],d,m)}var
o=[0,0];function
M(d,a,c){var
f=b(i[1],a,c),g=[0,[0,d,b(j[1],a,0)],f];e[1]=[0,g,e[1]];return 0}var
d=[N,a6J,H(0)];function
g(d,f){var
g=f[3],n=f[1],r=f[4],s=f[2],t=a3(n,a6K)?k[1]:n;function
h(a){return p(A(d),a6L,a,t,s)}if(typeof
g==="number")switch(g){case
0:h(a6M);if(0===e[1])c(A(d),a6N);else{c(A(d),a6P);var
u=e[1];ae(function(b){var
a=b[1],c=a[2],e=a[1],f=j[3];return p(A(d),a6Q,e,f,c)},u);c(A(d),a6R)}break;case
1:h(a6S);break;default:h(a6T)}else{var
v=g[2],w=g[1];h(a6U);var
q=o[1];if(q){var
l=q[1];c(A(d),a6V);try{var
i=By(l);d2(i,v);d2(i,a6X);cc(i);mV(i);var
x=b(a[1][25],l,w),y=a[1][28];m(A(d),a6Y,y,x)}catch(a){b(A(d),a6W,l)}}else
c(A(d),a6Z)}return m(A(d),a6O,Gh,r)}function
q(c){var
a=b5(50);b(sn(a,a60),g,c);return b6(a)}n4([0,d,q,g]);function
P(l,k,g,j,i){try{var
o=b(l,k,i);return o}catch(b){b=s(b);if(b[1]===a[1][31]){var
e=b[3],c=b[2];if(e[1]===d){var
f=e[2],h=f[3],m=f[2],n=f[1];if(typeof
h==="number")if(1===h)throw[0,a[1][31],c,[0,d,[0,n,m,[0,c,g[4]],f[4]]]];throw[0,a[1][31],c,e]}throw[0,a[1][31],c,[0,d,[0,g[1],j,[0,c,g[4]],e]]]}throw b}}return[0,a,f,M,n,k,P,l,function(j,e,b){var
g=c(f[19],b),h=e[1];try{var
t=n(h,b)}catch(b){b=s(b);if(b[1]===a[1][31]){var
k=b[3],r=b[2];if(k[1]===d)throw b;throw[0,a[1][31],r,[0,d,[0,h,g,0,k]]]}throw[0,a[1][31],j,[0,d,[0,h,g,0,b]]]}var
u=m(a[1][11],agf,e[3],j),l=c(a[1][10],u),o=a3(e[2],a61)?0:[0,e[2]];try{var
q=m(t,l,o,e[4]);return q}catch(b){b=s(b);if(b[1]===a[1][31]){var
i=b[3],p=b[2];if(i[1]===d)throw b;throw[0,a[1][31],p,[0,d,[0,e[1],g,1,i]]]}throw[0,a[1][31],l,[0,d,[0,e[1],g,1,b]]]}},o,[0,d,q,g]]},t6=function(a){function
e(a){if(typeof
a==="number")return 0;else{if(0===a[0]){var
b=a[1],c=b[2],d=b[1],f=e(b[3]),g=e(c);return ab(B(function(a){return[0,d,a]},g),f)}return a62}}function
g(a,d,b){c(A(a),a7i);function
e(a){return 0}aZ(function(c,b){p(A(a),a7j,c,i,b);return function(a){return m(A(a),a7k,d,0)}},e,b);return c(A(a),a7l)}function
d(c,a){if(typeof
a==="number")return 0===a?b7(c,a7a):b7(c,a7b);else
switch(a[0]){case
1:return b7(c,a[1][2]);case
9:return b7(c,a[1][2]);case
10:var
d=a[1];return b(A(c),a7d,d);case
11:return g(c,auI,e(a[1]));default:return m(A(c),a7c,f,a)}}function
h(g,a,b){return function(j,i){var
e=j,b=i;for(;;){if(b){var
h=b[2],k=b[1];try{var
m=m2(a,e,32),f=m}catch(b){b=s(b);if(b!==x)throw b;var
f=C(a)}var
l=aD(a,e,f-e|0);p(A(g),a6_,l,d,k);if(0===h)return 0;c(A(g),a6$);var
e=dm(f+1|0,C(a)),b=h;continue}return 0}}(0,b)}function
f(b,a){if(typeof
a!=="number")switch(a[0]){case
0:return h(b,a[1],a[2]);case
2:var
c=a[2],e=a[1][2];return m(A(b),a63,e,c);case
3:var
f=a[1];return m(A(b),a64,d,f);case
4:var
g=a[2],i=a[1];return aq(A(b),a65,d,i,d,g);case
5:var
j=a[1];return m(A(b),a66,d,j);case
6:var
k=a[2],l=a[1];return aq(A(b),a67,d,l,d,k);case
7:var
n=a[1];return m(A(b),a68,d,n);case
8:var
o=a[1];return m(A(b),a69,d,o)}return d(b,a)}function
i(a,b){c(A(a),a7e);function
d(a){return 0}aZ(function(d,b){p(A(a),a7f,d,f,b);return function(a){return c(A(a),a7g)}},d,b);return c(A(a),a7h)}function
j(a,d){function
f(a){return 0}aZ(function(h,d){var
i=e(d[4]),j=e(d[3]),k=ab(B(function(a){return[0,0,a]},j),i);b(A(a),a7m,h);var
f=d[2];if(f){var
l=f[1];b(A(a),a7n,l)}switch(d[1]){case
0:c(A(a),a7o);break;case
1:c(A(a),a7r);break;default:c(A(a),a7s)}c(A(a),a7p);g(a,sh,k);return function(a){return c(A(a),a7q)}},f,d);return 0}return[0,e,f,h,d,i,g,j,function(a,d){var
f=d[2];b(A(a),a7t,f);var
e=d[5];if(0===e[0])j(a,e[1]);else
c(A(a),a7v);return c(A(a),a7u)}]},t7=[0,0],i8=function(d){function
e(a,b){throw[0,bQ,t(a73,t(a,a72))]}function
a(d,b){var
e=bA(b);if(e){var
f=e[1];aL(b);var
g=hn(function(c){return a(d,b)});return m8(function(a){return c(d,f)},g)}return hm}function
h(a){var
b=bA(a);if(b){var
d=b[1],e=d[2],g=d[1],c=function(b,a){if(t7[1]){var
h=hn(function(d){return c(b,a)});return m8(function(a){return[0,g,[0,b,b,1]]},h)}var
d=bA(a);if(d){var
e=d[1],f=e[2],i=e[1];aL(a);var
j=hn(function(b){return c(f,a)});return m8(function(a){return[0,i,[0,b,f,0]]},j)}return hm};return c(e,a)}return hm}function
i(b){return a(function(a){return[0,a[1],a[2][2]]},b)}function
j(b){var
a=bA(b);return a?a[1][2][2]:d[1][2]}function
k(a){t7[1]=1;var
b=bA(a);if(b){var
c=b[1][2],f=c[1];if(0!==c[3])aL(a);var
e=f}else
var
e=d[1][2];t7[1]=0;return e}function
l(c,b){var
a=b[2];return a?a3(c,a[1]):0}var
m=[0,1];function
n(j,i,h,g){var
c=i,b=h,a=g;for(;;){if(typeof
a!=="number"&&0===a[0]){var
d=a[1],e=d[1];if(typeof
e==="number")var
f=0;else
switch(e[0]){case
9:case
10:if(typeof
d[3]==="number"){var
c=[0,b,c],b=e,a=d[2];continue}var
f=1;break;default:var
f=0}}return 0===c?0:[0,[0,aj([0,b,c]),b,a]]}}function
b(a){var
b=1<C(a)?1:0,c=b?36===I(a,0)?1:0:b;return c}function
f(c,a){var
d=1-b(c);if(d)var
e=1-b(a),f=e?a3(c,a):e;else
var
f=d;return f}function
o(h){function
i(l,k){var
b=l,a=k;for(;;){if(typeof
b==="number")var
e=0;else
if(0===b[0]){var
c=b[1];if(typeof
a!=="number"&&1!==a[0]){var
d=a[1],f=g(c[1],d[1]);if(f){var
h=i(c[2],d[2]);if(h){var
b=c[3],a=d[3];continue}var
j=h}else
var
j=f;return j}var
e=1}else
var
e=0;if(!e){var
m=typeof
a==="number"?0:1===a[0]?0:1;if(!m)return 1}return 0}}function
g(r,q){var
c=r,a=q;for(;;){if(typeof
c==="number")if(0===c)if(typeof
a==="number")var
b=0;else{if(1===a[0])return a3(h[2],a[1][2]);var
b=0}else
var
b=0;else
switch(c[0]){case
1:var
j=c[1];if(typeof
a==="number"){if(1!==a)return a3(j[2],h[2])}else
if(1===a[0])return a3(j[2],a[1][2]);var
b=0;break;case
2:if(typeof
a==="number")var
b=0;else{if(2===a[0]){var
k=a3(c[1][2],a[1][2]),s=a[2],t=c[2],u=k?a3(t,s):k;return u}var
b=0}break;case
3:if(typeof
a==="number")var
b=0;else
if(3===a[0])var
e=a[1],d=c[1],b=1;else
var
b=0;break;case
4:if(typeof
a==="number")var
b=0;else
if(4===a[0])var
o=a[2],n=a[1],m=c[2],l=c[1],b=2;else
var
b=0;break;case
5:if(typeof
a==="number")var
b=0;else
if(5===a[0])var
e=a[1],d=c[1],b=1;else
var
b=0;break;case
6:if(typeof
a==="number")var
b=0;else
if(6===a[0])var
o=a[2],n=a[1],m=c[2],l=c[1],b=2;else
var
b=0;break;case
7:if(typeof
a==="number")var
b=0;else
if(7===a[0])var
e=a[1],d=c[1],b=1;else
var
b=0;break;case
8:if(typeof
a==="number")var
b=0;else
if(8===a[0])var
e=a[1],d=c[1],b=1;else
var
b=0;break;case
9:if(typeof
a==="number")var
b=0;else{if(9===a[0])return f(c[1][2],a[1][2]);var
b=0}break;case
11:if(typeof
a==="number")var
b=0;else{if(11===a[0])return i(c[1],a[1]);var
b=0}break;default:var
b=0}switch(b){case
0:return bP(c,a);case
1:var
c=d,a=e;continue;default:var
p=g(l,n);if(p){var
c=m,a=o;continue}return p}}}return g}function
g(o,n){var
c=o,a=n;for(;;){if(typeof
c==="number")var
b=0;else
switch(c[0]){case
1:if(typeof
a==="number")var
b=0;else{if(1===a[0])return c[1]===a[1]?1:0;var
b=0}break;case
2:if(typeof
a==="number")var
b=0;else{if(2===a[0]){var
h=c[1]===a[1]?1:0,p=a[2],q=c[2],r=h?a3(q,p):h;return r}var
b=0}break;case
3:if(typeof
a==="number")var
b=0;else
if(3===a[0])var
e=a[1],d=c[1],b=1;else
var
b=0;break;case
4:if(typeof
a==="number")var
b=0;else
if(4===a[0])var
l=a[2],k=a[1],j=c[2],i=c[1],b=2;else
var
b=0;break;case
5:if(typeof
a==="number")var
b=0;else
if(5===a[0])var
e=a[1],d=c[1],b=1;else
var
b=0;break;case
6:if(typeof
a==="number")var
b=0;else
if(6===a[0])var
l=a[2],k=a[1],j=c[2],i=c[1],b=2;else
var
b=0;break;case
7:if(typeof
a==="number")var
b=0;else
if(7===a[0])var
e=a[1],d=c[1],b=1;else
var
b=0;break;case
8:if(typeof
a==="number")var
b=0;else
if(8===a[0])var
e=a[1],d=c[1],b=1;else
var
b=0;break;case
9:if(typeof
a==="number")var
b=0;else{if(9===a[0])return f(c[1][2],a[1][2]);var
b=0}break;case
11:if(typeof
a==="number")var
b=0;else{if(11===a[0])return 0;var
b=0}break;default:var
b=0}switch(b){case
0:return bP(c,a);case
1:var
c=d,a=e;continue;default:var
m=g(i,k);if(m){var
c=j,a=l;continue}return m}}}return[0,e,a,h,i,j,k,l,m,n,b,f,o,g]},Gw=function(a){var
n=i8(a),l=[0,function(q,d,c){if(0===c[0]){var
i=c[1],e=function(h){var
a=h;for(;;){if(0!==d)if(a===d)return[0,a];if(typeof
a!=="number"&&0===a[0]){var
c=a[1],f=b(c[1]);if(f)return[0,[0,[0,f[1],c[2],0]]];var
g=e(c[2]);if(g)return[0,[0,[0,c[1],g[1],0]]];var
a=c[3];continue}return 0}},b=function(a){if(typeof
a!=="number"&&0!==a[0]){if(a===q)return[0,a];if(typeof
a!=="number")switch(a[0]){case
3:var
c=b(a[1]);return c?[0,[3,c[1]]]:0;case
4:var
d=a[2],f=a[1],g=b(f);if(g)return[0,[4,g[1],d]];var
h=b(d);return h?[0,[4,f,h[1]]]:0;case
5:var
i=b(a[1]);return i?[0,[5,i[1]]]:0;case
6:var
j=a[2],k=a[1],l=b(k);if(l)return[0,[6,l[1],j]];var
m=b(j);return m?[0,[6,k,m[1]]]:0;case
7:var
n=b(a[1]);return n?[0,[7,n[1]]]:0;case
8:var
o=b(a[1]);return o?[0,[8,o[1]]]:0;case
11:var
p=e(a[1]);return p?[0,[11,p[1]]]:0}}return 0},a=i;for(;;){if(a){var
f=a[1],j=a[2],h=e(f[3]),g=h?[0,[0,[0,0,h[1],0]]]:e(f[4]);if(g)return g[1];var
a=j;continue}return d}}return d}],j=t6(a);function
k(b,a){if(typeof
a==="number")return t(a75,t(b[2],a74));else
switch(a[0]){case
1:return t(a78,t(a[1][2],a77));case
2:var
c=a[1],d=t(a7_,t(a[2],a79));return t(a7$,t(c[2],d));case
9:return a[1][2];case
10:return t(a8b,t(a[1],a8a));default:return a76}}function
i(c,f){if(typeof
f!=="number"&&0===f[0]){var
g=f[1],h=g[3],d=g[2],a=g[1];if(typeof
a==="number")var
l=0;else
switch(a[0]){case
9:case
10:var
j=p(n[9],c,0,a,d),l=1;break;default:var
l=0}if(!l)var
j=0;if(j){var
s=j[1][1];return aZ(function(c,a){if(typeof
a==="number")var
b=0;else
switch(a[0]){case
9:var
d=a[1][2],b=1;break;case
10:var
d=a[1],b=1;break;default:var
b=0}if(b){var
e=a3(c,a8f)?a8g:t(c,a8h);return t(e,d)}throw[0,r,a8e]},a8d,s)}var
o=e(c,a);if(typeof
a==="number")var
b=0;else
if(7===a[0])if(typeof
d==="number")var
b=0;else
if(0===d[0])var
k=t(o,t(a8j,i(c,d))),b=1;else
var
b=0;else
var
b=0;if(!b)var
k=o;if(typeof
h==="number")var
m=0;else
if(0===h[0])var
q=t(k,t(a8i,i(c,h))),m=1;else
var
m=0;if(!m)var
q=k;return q}return a8c}function
e(b,c){var
a=c;for(;;){if(typeof
a!=="number")switch(a[0]){case
11:return i(b,a[1]);case
0:case
1:case
2:case
9:case
10:break;default:var
a=a[1];continue}return k(b,a)}}function
g(b,a){return a}function
d(a,o,d,n){var
f=i(a,n);if(typeof
d==="number")var
g=0;else
switch(d[0]){case
3:var
v=e(a,d[1]),h=t(v,t(a8v,t(f,a8u))),g=1;break;case
4:var
w=d[2],x=d[1];if(o)var
y=e(a,w),p=t(y,t(a8x,t(f,a8w)));else
var
z=e(a,x),p=t(z,t(a8z,t(f,a8y)));var
h=p,g=1;break;case
5:var
B=e(a,d[1]),h=t(B,t(a8B,t(f,a8A))),g=1;break;case
6:var
C=d[2],D=d[1];if(o)var
E=e(a,C),q=t(E,t(a8D,t(f,a8C)));else
var
F=e(a,D),q=t(F,t(a8F,t(f,a8E)));var
h=q,g=1;break;case
7:case
8:case
11:var
h=t(f,a8G),g=1;break;default:var
g=0}if(!g)var
h=t(f,t(a8k,k(a,d)));if(a[1][5][1]){var
r=m(l[1],d,n,a[5]);c(A(e_),a8l);c(A(e_),a8m);var
s=a[2];b(A(e_),a8n,s);c(A(e_),a8o);var
u=c(j[1],r);m(j[6],e_,sh,u);c(A(e_),a8p);c(A(e_),a8q);c(A(e_),a8r)}return t(h,t(a8t,t(a[2],a8s)))}function
f(e,c,b,a){return d(e,c,b,[0,[0,a,0,0]])}return[0,n,l,j,k,e,i,g,d,f,function(c,b,a){return f(c,0,b,a)}]},t8=function(a){var
k=i8(a),i=Gw(a);function
o(c,b){var
d=1;if(!(b<1)){var
a=d;for(;;){aL(c);var
e=a+1|0;if(b!==a){var
a=e;continue}break}}return 0}var
j=k[5],F=k[6];function
l(d,g,e){var
h=c(g,e),f=c(F,e),i=c(a[1][20],f),j=i<c(a[1][19],d)?c(a[1][10],d):b(a[1][9],d,f);return[0,h,j]}function
e(d,c){var
b=c,a=B1(c,d);for(;;){if(a){var
e=a[2],f=a[1];if(1===b)return[0,f];var
b=b-1|0,a=e;continue}return 0}}function
G(e){return m7(function(c){var
b=c,a=B1(c+1|0,e);for(;;){if(a){var
d=a[2],f=a[1];if(d){var
b=b-1|0,a=d;continue}return 0===b?[0,f]:0}return 0}})}function
H(e,b){var
d=G(b);try{var
f=c(e,d)}catch(b){b=s(b);if(b[1]!==bQ){var
g=b[1]===a[1][31]?b[3][1]===bQ?1:0:0;if(!g)throw b}throw af}o(b,aq5(d));return f}function
u(f,d){var
e=f[5];if(0===e[0]){var
c=0,a=e[1];for(;;){if(a){var
g=a[2];if(b(k[7],d,a[1]))return c;var
c=c+1|0,a=g;continue}return aU(t(a8H,d))}}throw x}var
v=[0,0],w=[0,0];function
d(b,a){if(typeof
a==="number")return[1,b];else
switch(a[0]){case
2:return[1,a[1]];case
6:var
c=a[2];return[6,d(b,a[1]),c];default:throw af}}function
y(c,a){if(typeof
a!=="number"&&0===a[0]){var
b=a[1],e=b[3],f=b[2];return[0,[0,d(c,b[1]),f,e]]}throw af}function
z(b,a){if(typeof
a==="number")return b;else
switch(a[0]){case
1:return a[1];case
2:return a[1];default:throw af}}function
A(f,l,k,e,j,h,d){var
g=p(z(f,e)[4],0,l,k,d);try{var
m=c(h,d)}catch(a){a=s(a);if(a===af)throw[0,bQ,p(i[8],f,g,e,j)];throw a}function
n(c){return b(a[4][3],m,g)}return c(a[4][1],n)}function
I(d,b){if(bP(c(j,b),d)){var
e=function(a){throw af};return c(a[4][1],e)}throw af}function
C(h,a,g,f,e,j,i,d,c){try{var
b=aq(h,a,g,f,y(a,d),c);return b}catch(b){b=s(b);if(b===af)try{var
k=I(e,c);return k}catch(b){b=s(b);if(b===af)return A(a,e,j,i,d,p(h,a,g,f,d),c);throw b}throw b}}function
D(l,b,k,j,g,f,e,d,h){if(v[1])throw[0,bQ,p(i[8],b,f,e,d)];if(w[1]){var
n=p(i[8],b,f,e,d);dd(a8I);if(O(b[2],a8J)){var
o=b[2];c(dd(a8K),o)}var
q=a[1][28];m(dd(a8L),n,q,g)}return C(l,b,k,j,g,f,e,d,h)}function
q(i,d){function
h(d,f){if(f){var
g=f[1];if(typeof
g!=="number")switch(g[0]){case
9:var
k=f[2],l=g[1][1];if(k){var
q=h(d+1|0,k);return function(h){var
f=e(h,d);if(f){var
g=f[1][1];if(c(l,g)){var
i=c(q,h);return b(a[4][3],i,g)}}throw af}}var
r=function(b){var
f=e(b,d);if(f){var
g=f[1][1];if(c(l,g)){o(b,d);return c(a[4][1],g)}}throw af};return function(d){var
f=c(j,d),e=r(d);try{var
g=m(i,f,e,d)}catch(a){a=s(a);if(a===af)throw[0,bQ,a8P];throw a}return b(a[4][3],g,e)};case
10:var
n=f[2],p=g[1];if(n){var
t=h(d+1|0,n);return function(h){var
f=e(h,d);if(f){var
g=f[1][1];if(b(a[2][4],p,g)){var
i=c(t,h);return b(a[4][3],i,g)}}throw af}}var
u=function(f){var
g=e(f,d);if(g){var
h=g[1][1];if(b(a[2][4],p,h)){o(f,d);return c(a[4][1],h)}}throw af};return function(d){var
f=c(j,d),e=u(d);try{var
g=m(i,f,e,d)}catch(a){a=s(a);if(a===af)throw[0,bQ,a8Q];throw a}return b(a[4][3],g,e)}}}return Y(a8O)}return h(1,d)}function
h(d,g,e,o){if(typeof
o==="number")return function(a){throw af};else{if(0===o[0]){var
m=o[1],i=m[1];if(typeof
i==="number")if(0===i){var
r=m[2];if(typeof
r!=="number"&&0!==r[0]){var
C=m[3],D=r[1];if(typeof
C==="number")return function(c){var
f=b(d[3],e,c);return b(a[4][3],D,f)};var
T=h(d,g,e,C);return function(g){try{var
h=[0,b(d[3],e,g)],f=h}catch(a){a=s(a);if(a!==af)throw a;var
f=0}return f?b(a[4][3],D,f[1]):c(T,g)}}}var
t=m[3],l=m[2];if(typeof
t==="number"){if(typeof
i==="number")var
y=0;else
switch(i[0]){case
9:case
10:var
u=p(k[9],d,0,i,l),y=1;break;default:var
y=0}if(!y)var
u=0;if(u){var
v=u[1],A=v[3],E=v[2],F=v[1],G=h(d,g,e,A);return q(function(a,b,c){return n(G,d,g,e,E,A,a,b,c)},F)}var
H=f(d,g,i),I=h(d,g,e,l),J=function(a,b,c){return n(I,d,g,e,i,l,a,b,c)};return function(d){var
f=c(j,d),e=c(H,d);try{var
g=J(f,e,d)}catch(a){a=s(a);if(a===af)throw[0,bQ,a8M];throw a}return b(a[4][3],g,e)}}if(typeof
i==="number")var
z=0;else
switch(i[0]){case
9:case
10:var
w=p(k[9],d,0,i,l),z=1;break;default:var
z=0}if(!z)var
w=0;if(w){var
x=w[1],B=x[3],K=x[2],L=x[1],M=h(d,g,e,B),N=q(function(a,b,c){return n(M,d,g,e,K,B,a,b,c)},L),O=h(d,g,e,t);return function(b){try{var
a=c(N,b);return a}catch(a){a=s(a);if(a===af)return c(O,b);throw a}}}var
P=f(d,g,i),Q=h(d,g,e,l),R=function(a,b,c){return n(Q,d,g,e,i,l,a,b,c)},S=h(d,g,e,t);return function(d){var
g=c(j,d);try{var
i=[0,c(P,d)],e=i}catch(a){a=s(a);if(a!==af)throw a;var
e=0}if(e){var
f=e[1];try{var
h=R(g,f,d)}catch(a){a=s(a);if(a===af)throw[0,bQ,a8N];throw a}return b(a[4][3],h,f)}return c(S,d)}}var
U=o[1];return function(a){return U}}}function
n(a,g,l,k,f,e,j,d,b){try{var
n=c(a,b);return n}catch(a){a=s(a);if(a===af)try{var
m=D(h,g,l,k,j,d,f,e,b);return m}catch(a){a=s(a);if(a===af)throw[0,bQ,p(i[8],g,d,f,e)];throw a}throw a}}function
f(e,g,d){if(typeof
d==="number")return 0===d?function(a){return b(e[3],0,a)}:function(a){return b(e[3],g,a)};else
switch(d[0]){case
0:var
m=d[2],x=b(d[3],e,m),y=B(function(a){return f(e,g,a)},m);return aZ(function(b,a){return c(b,a)},x,y);case
1:var
z=d[1];return function(a){return b(z[3],0,a)};case
2:var
n=d[1],A=d[2];return function(a){var
c=u(n,A);return b(n[3],c,a)};case
3:var
C=f(e,g,d[1]),D=function(e,d){var
a=e;for(;;){try{var
f=[0,c(C,d)],b=f}catch(a){a=s(a);if(a!==af)throw a;var
b=0}if(b){var
a=[0,b[1],a];continue}return a}};return function(b){var
d=aj(D(0,b));return c(a[4][1],d)};case
4:var
o=d[2],q=d[1],r=f(e,g,q),F=f(e,g,o);return function(f){try{var
m=[0,c(r,f)],g=m}catch(a){a=s(a);if(a!==af)throw a;var
g=0}if(g){var
b=[0,g[1],0];for(;;){try{var
k=[0,c(F,f)],d=k}catch(a){a=s(a);if(a!==af)throw a;var
d=0}if(d){var
h=d[1];try{var
j=c(r,f)}catch(a){a=s(a);if(a===af)throw[0,bQ,p(i[9],e,h,o,q)];throw a}var
b=[0,j,b];continue}var
l=aj(b);return c(a[4][1],l)}}return c(a[4][1],0)};case
5:var
t=f(e,g,d[1]),G=function(e,d){var
a=e;for(;;){try{var
f=[0,c(t,d)],b=f}catch(a){a=s(a);if(a!==af)throw a;var
b=0}if(b){var
a=[0,b[1],a];continue}return a}};return function(b){var
d=aj(G([0,c(t,b),0],b));return c(a[4][1],d)};case
6:var
v=d[2],k=d[1],w=f(e,g,k),I=f(e,g,v),J=function(g,b){var
a=g;for(;;){try{var
m=[0,c(I,b)],d=m}catch(a){a=s(a);if(a!==af)throw a;var
d=0}if(d){var
h=d[1];try{var
l=c(w,b),f=l}catch(a){a=s(a);if(a!==af)throw a;try{var
j=E(e,k,b)}catch(a){a=s(a);if(a===af)throw[0,bQ,p(i[9],e,h,v,k)];throw a}var
f=j}var
a=[0,f,a];continue}return a}};return function(b){var
d=aj(J([0,c(w,b),0],b));return c(a[4][1],d)};case
7:var
K=f(e,g,d[1]);return function(d){try{var
e=[0,c(K,d)],b=e}catch(a){a=s(a);if(a!==af)throw a;var
b=0}return b?c(a[4][1],[0,b[1]]):c(a[4][1],0)};case
8:var
L=f(e,g,d[1]);return function(a){return H(L,a)};case
9:var
M=d[1][1];return function(b){var
d=bA(b);if(d){var
e=d[1][1];if(c(M,e)){aL(b);return c(a[4][1],e)}}throw af};case
10:var
N=d[1];return function(d){var
e=bA(d);if(e){var
f=e[1][1];if(b(a[2][4],N,f)){aL(d);return c(a[4][1],f)}}throw af};default:var
O=h(e,1,0,d[1]);return function(d){var
e=l(c(j,d),O,d);return b(a[4][3],e[1],e[2])}}}function
E(a,e,b){return c(f(a,0,d(a,e)),b)}function
g(f,d,e){if(e){var
k=e[2],m=e[1],i=g(f,d+1|0,k),n=m[4];if(typeof
n==="number")return i;var
q=1===m[1]?d:d+1|0,o=h(f,d+1|0,q,n);return k?function(g,e){if(d<g)return b(i,g,e);var
n=c(j,e);try{var
r=[0,l(n,o,e)],h=r}catch(a){a=s(a);if(a!==af)throw a;var
h=0}if(h){var
k=h[1],m=k[2],q=b(a[4][3],k[1],m);return p(f[4],g,m,q,e)}return b(i,g,e)}:function(h,d){var
e=l(c(j,d),o,d),g=e[2],i=b(a[4][3],e[1],g);return p(f[4],h,g,i,d)}}return function(b,a){throw af}}function
J(a){var
b=a[5];if(0===b[0]){var
d=b[1];return d?g(a,0,d):c(k[1],a[2])}var
e=b[1];return function(a){return e}}function
r(e,b,c){if(c){var
d=c[1],f=r(e,b+1|0,c[2]),g=d[3];if(typeof
g==="number")return f;var
i=1===d[1]?b:b+1|0,k=h(e,b+1|0,i,g);return function(d,h,g,c){if(b<d)return p(f,d,h,g,c);try{var
o=p(f,d,h,g,c);return o}catch(b){b=s(b);if(b===af){var
i=l(h,k,c),j=i[2],n=m(a[4][4],i[1],g,j);return p(e[4],d,j,n,c)}throw b}}}return function(d,c,b,a){throw af}}return[0,l,u,v,w,d,y,z,A,C,D,h,n,q,f,E,g,J,r,function(a){var
b=a[5];if(0===b[0]){var
c=r(a,0,b[1]);return function(e,d,b,a){try{var
f=p(c,e,d,b,a);return f}catch(a){a=s(a);if(a===af)return b;throw a}}}return function(d,c,b,a){throw af}}]},Gx=[N,a8R,H(0)];kj(function(a){if(a[1]===Gx){var
c=a[2],d=c[2],e=c[1];return[0,b(aN(a8S),e,d)]}return 0});var
a9f=function(e){var
g=e[1],a=e[2];function
Y(a){return a}function
Z(a){return a}function
_(a){return a}var
h=[0,Y,Z,_,function(a){return a}];function
k(a){return a[1]}function
$(a){return a[2]}function
l(d,b){var
e=d[2],g=d[1];try{var
h=fQ(e,b),c=h}catch(a){a=s(a);if(a!==x)throw a;var
f=[0,0];es(e,b,f);var
c=f}m(a[6][4],g,b,0===c[1]?1:0);c[1]++;return 0}function
n(i,f){var
c=i[2],k=i[1],j=fQ(c,f);j[1]+=-1;if(0===j[1]){b(a[6][5],k,f);var
e=kl(c,f),g=0,d=z(c[2],e)[e+1];for(;;){if(d){var
h=d[3];if(0===cJ(d[1],f)){c[1]=c[1]-1|0;return g?(g[3]=h,0):z(c[2],e)[e+1]=h}var
g=d,d=h;continue}return 0}}return 0}var
u=[0,g,a,e,h,k,l,n],ac=i8(u),K=t8(u),L=t6(u);function
M(d,c){function
a(e,d){var
a=b5(a2),c=hs(a);b(e,c,d);e9(c,0);return b6(a)}var
e=a(L[8],d);throw[0,Gx,[0,a(L[5],c),e]]}function
N(q){function
c(d,b){if(d){var
r=d[2],s=d[1];if(typeof
b!=="number"&&0===b[0]){var
a=b[1];if(m(ac[12],q,s,a[1])){var
l=c(r,a[2]);if(l){var
g=l[1],n=g[1];if(n){var
o=g[2],p=n[1];return typeof
o==="number"?[0,[0,[0,[0,a[1],p]],a[3]]]:[0,[0,[0,[0,a[1],p]],[0,[0,a[1],o,a[3]]]]]}return[0,[0,0,[0,[0,a[1],g[2],a[3]]]]]}return 0}var
h=c(d,a[3]);if(h){var
i=h[1];return[0,[0,i[1],[0,[0,a[1],a[2],i[2]]]]]}return 0}return 0}if(typeof
b==="number")return 0;else{if(0===b[0]){var
e=b[1],j=c(0,e[3]);if(j){var
k=j[1];return[0,[0,k[1],[0,[0,e[1],e[2],k[2]]]]]}return 0}var
f=b[2];return f?[0,[0,0,[1,f[1],f[2]]]]:a8T}}return c}function
O(c,d){var
a=d;for(;;){if(typeof
a!=="number"&&0===a[0]){var
b=a[1];i(c,b[1]);O(c,b[2]);var
a=b[3];continue}return 0}}function
i(c,d){var
a=d;for(;;){if(typeof
a!=="number")switch(a[0]){case
0:var
e=a[2];return ae(function(a){return i(c,a)},e);case
4:var
f=a[2];i(c,a[1]);var
a=f;continue;case
6:var
g=a[2];i(c,a[1]);var
a=g;continue;case
10:return b(u[7],c,a[1]);case
11:return O(c,a[1]);case
1:case
2:case
9:break;default:var
a=a[1];continue}return 0}}function
y(c,e,d){if(d){var
f=d[2],a=d[1],l=a[3],g=b(N(c),e,l);if(g){var
h=g[1],j=h[2],k=h[1];if(k){var
m=k[1],n=c[1];ae(function(a){return i(n,a)},m)}if(typeof
j==="number")if(0===a[4])return f;return[0,[0,a[1],a[2],j,a[4]],f]}return[0,a,y(c,e,f)]}return M(c,e)}function
P(c,e,d){if(d){var
f=d[2],a=d[1],l=a[4],g=b(N(c),e,l);if(g){var
h=g[1],j=h[2],k=h[1];if(k){var
m=k[1],n=c[1];ae(function(a){return i(n,a)},m)}if(typeof
j==="number")if(0===a[3])return f;return[0,[0,a[1],a[2],a[3],j],f]}return[0,a,P(c,e,f)]}return M(c,e)}var
G=[0,g,a,e,h,k,l,n];function
ad(a,d){var
j=a[5];if(0===j[0]){var
h=j[1];if(d){var
g=d[1];if(typeof
g==="number")if(1===g)var
f=1;else
var
i=y(a,d[2],h),e=1,f=0;else
if(1===g[0]){var
k=d[2];if(g[1]===a)var
i=y(a,k,h),e=1,f=0;else
var
e=0,f=0}else
var
f=1;if(f)var
e=0}else
var
e=0;if(!e)var
i=P(a,d,h);a[5]=[0,i];a[3]=function(f,e){var
d=c(K[17],a);a[3]=d;return b(d,f,e)};a[4]=function(g,f,e,d){var
b=c(K[19],a);a[4]=b;return p(b,g,f,e,d)};return 0}return 0}var
r=i8(G),Q=t8(G);function
R(e){var
a=e;for(;;)if(typeof
a==="number")return 0;else{if(0===a[0]){var
b=a[1],f=b[3],g=b[2],c=E(b[1]),d=c?R(g):c;if(d)return d;var
a=f;continue}return 1}}function
E(b){var
a=b;for(;;){if(typeof
a!=="number")switch(a[0]){case
8:var
a=a[1];continue;case
11:return R(a[1]);case
3:case
4:case
7:return 1;case
0:case
1:case
2:break;default:return 0}return 0}}function
j(b,a){var
c=a?a[1]:2;return[0,c,b,0,0]}function
S(e,a,h,b,d){if(d)var
f=d[1],j=f!==a[1]?e[1][4][1]?(c(dd(a81),h),cc(cL),1):0:0,g=f;else
var
g=a[1];if(b)var
i=b[1],k=e4(b,a[2])?e[1][4][1]?(c(dd(a82),i),cc(cL),1):0:0;return[0,g,a[2],a[3],a[4]]}function
T(c,d){var
a=d;for(;;){if(typeof
a!=="number"&&0===a[0]){var
b=a[1],e=b[3],f=b[2];o(c,b[1]);T(c,e);var
a=f;continue}return 0}}function
o(c,f){var
a=f;for(;;){if(typeof
a!=="number")switch(a[0]){case
0:var
g=a[2];return ae(function(a){return o(c,a)},g);case
1:var
d=a[1];if(d[1]!==c[1]){var
h=d[2],i=c[2];b(dd(a8_),i,h);cc(cL);return aU(a8$)}return 0;case
2:var
e=a[1];if(e[1]!==c[1]){var
j=e[2],k=c[2];b(dd(a9a),k,j);cc(cL);return aU(a9b)}return 0;case
4:var
l=a[1];o(c,a[2]);var
a=l;continue;case
6:var
m=a[1];o(c,a[2]);var
a=m;continue;case
11:return T(c,a[1]);case
9:case
10:break;default:var
a=a[1];continue}return 0}}function
F(g,e,f,a){function
d(b,a){if(b){var
i=b[2],j=b[1],k=h(j,i,a);return k?k[1]:[0,[0,j,d(i,0),a]]}if(typeof
a==="number")return[1,f,0];else{if(0===a[0]){var
e=a[1],l=e[2],m=e[1];return[0,[0,m,l,d(0,e[3])]]}var
n=a[2],o=a[1];if(g[1][4][1]){var
p=g[2];c(dd(a9c),p)}return[1,f,[0,o,n]]}}function
h(a,e,i){if(typeof
i!=="number"&&0===i[0]){var
j=i[1],f=j[3],k=j[2],c=j[1];if(b(r[13],a,c))return[0,[0,[0,c,d(e,k),f]]];if(typeof
c==="number")var
g=0;else
switch(c[0]){case
9:case
10:if(typeof
a==="number")var
m=1;else
switch(a[0]){case
9:case
10:var
l=0,g=1,m=0;break;default:var
m=1}if(m)var
l=1,g=1;break;default:var
g=0}if(!g)var
l=0;if(!l){var
q=E(a)?E(c)?1:0:1;if(q){var
o=h(a,e,f);return o?[0,[0,[0,c,k,o[1]]]]:0}}var
n=h(a,e,f),p=n?n[1]:[0,[0,a,d(e,0),f]];return[0,[0,[0,c,k,p]]]}return 0}return d(e,a)}var
U=[0,g,a,e,h,k,l,n];function
at(a,q){var
s=q[2],t=q[1],n=a[5];if(0===n[0])var
d=n[1];else{var
A=a[2];c(dd(a9d),A);cc(cL);var
d=aU(a9e)}if(0===s)var
u=d;else{if(t){var
f=t[1];if(typeof
f==="number")var
e=0===f?[0,0,j,d]:[0,d,j,0];else
switch(f[0]){case
0:var
h=f[1],i=function(c){if(c){var
f=c[2],d=c[1];if(b(r[7],h,d))return[0,0,j,[0,d,f]];var
e=i(f);return[0,[0,d,e[1]],e[2],e[3]]}var
g=a[2];b(dd(a83),h,g);cc(cL);return aU(a84)},e=i(d);break;case
1:var
k=f[1],l=function(c){if(c){var
f=c[2],d=c[1];if(b(r[7],k,d))return[0,[0,d,0],j,f];var
e=l(f);return[0,[0,d,e[1]],e[2],e[3]]}var
g=a[2];b(dd(a85),k,g);cc(cL);return aU(a86)},e=l(d);break;default:var
g=f[1],m=function(c){if(c){var
f=c[2],d=c[1];if(b(r[7],g,d))return[0,0,function(b,c){return S(a,d,g,b,c)},f];var
e=m(f);return[0,[0,d,e[1]],e[2],e[3]]}var
h=a[2];b(dd(a87),g,h);cc(cL);return aU(a88)},e=m(d)}}else
if(d)var
v=d[2],w=d[1],e=[0,0,function(b,c){return S(a,w,a89,b,c)},v];else
var
e=[0,0,j,0];var
x=e[3],y=e[1],z=[0,0,e[2]],u=ab(y,ab(aj(aZ(function(d,c){var
e=c[3],f=d[1],g=b(d[2],c[1],c[2]);return[0,[0,aZ(function(c,k){var
l=k[2],q=k[1],e=B(function(b){if(typeof
b!=="number"&&1===b[0])if(b[1]===a)return 0;return b},q);ae(function(b){return o(a,b)},e);if(e){var
i=e[1];if(typeof
i==="number")if(0===i)var
g=[0,1,e[2]],f=1;else
var
f=0;else
var
f=0}else
var
f=0;if(!f)var
g=[0,0,e];var
h=g[2],r=g[1],s=a[1];function
j(c){var
a=c;for(;;){if(typeof
a!=="number"&&0===a[0]){var
b=a[1],e=b[3],f=b[2];d(b[1]);j(e);var
a=f;continue}return 0}}function
d(c){var
a=c;for(;;){if(typeof
a!=="number")switch(a[0]){case
0:return ae(d,a[2]);case
4:var
e=a[2];d(a[1]);var
a=e;continue;case
6:var
f=a[2];d(a[1]);var
a=f;continue;case
10:return b(G[6],s,a[1]);case
11:return j(a[1]);case
1:case
2:case
9:break;default:var
a=a[1];continue}return 0}}ae(d,h);if(0===r){var
m=F(a,h,l,c[4]);return[0,c[1],c[2],c[3],m]}var
n=c[4],p=F(a,h,l,c[3]);return[0,c[1],c[2],p,n]},g,e),f],j]},z,s)[1]),x))}a[5]=[0,u];a[3]=function(f,e){var
d=c(Q[17],a);a[3]=d;return b(d,f,e)};a[4]=function(g,f,e,d){var
b=c(Q[19],a);a[4]=b;return p(b,g,f,e,d)};return 0}t8(U);var
ao=Gw(U);function
ap(f,a,h,g,e){function
d(h,g){var
a=h;for(;;){try{var
i=[0,c(e,g)],d=i}catch(a){a=s(a);if(a!==af)throw a;var
d=0}if(d){var
a=b(f,d[1],a);continue}return a}}return function(b){return d(a,b)}}function
ar(f,h,d,a,e){return function(g){var
j=c(e,g);try{var
a=b(f,j,h);for(;;){try{var
i=[0,c(e,g)],d=i}catch(a){a=s(a);if(a!==af)throw a;var
d=0}if(d){var
a=b(f,d[1],a);continue}return a}}catch(a){a=s(a);if(a===af)throw[0,bQ,a8Z];throw a}}}function
as(h,g,d,k,f,j){function
l(a){if(a){var
b=a[2];if(b)if(!b[2])return m(ao[10],d,b[1],a[1])}return a80}return function(d){try{var
o=[0,c(f,d)],e=o}catch(a){a=s(a);if(a!==af)throw a;var
e=0}if(e){var
a=b(h,e[1],g);for(;;){try{var
n=[0,c(j,d)],i=n}catch(a){a=s(a);if(a!==af)throw a;var
i=0}if(i){try{var
m=c(f,d)}catch(a){a=s(a);if(a===af)throw[0,bQ,l(k)];throw a}var
a=b(h,m,a);continue}return a}}return g}}var
au=i8([0,g,a,e,h,k,l,n]),H=cf(0,qt),av=[0,1],aw=c(e[4],0);function
ax(d){var
c=kl(H,d),a=z(H[2],c)[c+1];for(;;){if(a){var
e=a[3],b=0===cJ(a[1],d)?1:0;if(b)return b;var
a=e;continue}return 0}}var
q=[0,c(a[6][1],ax),H,aw,av,aIL],f=[0,g,a,e,h,k,l,n];function
v(f,a){function
e(f,d){var
b=f,a=d;for(;;)if(typeof
a==="number")return aj(b);else{if(0===a[0]){var
c=a[1],g=c[3],h=c[1],b=[0,[0,h,e(0,c[2])],b],a=g;continue}return aj(b)}}function
d(a,b){return 0===b?c(A(a),a7w):ae(function(e){var
b=e[2],f=e[1];m(A(a),a7x,w,f);if(b)if(b[2])m(A(a),a7y,d,b);else
try{var
i=h(0,b);c(g(a),i)}catch(c){c=s(c);if(c!==mS)throw c;m(A(a),a7A,d,b)}return c(A(a),a7z)},b)}function
g(a){var
c=b(A(a),a7B,w);return function(a){return ae(c,a)}}function
h(e,d){var
b=e,a=d;for(;;){if(a){if(a[2])throw mS;var
c=a[1],b=[0,c[1],b],a=c[2];continue}return aj(b)}}return d(f,e(0,a))}function
d(c,a){if(typeof
a==="number")return 0===a?b7(c,a7L):b7(c,a7M);else
switch(a[0]){case
1:return b7(c,a[1][2]);case
9:return b7(c,a[1][2]);case
10:var
d=a[1];return b(A(c),a7O,d);case
11:return v(c,a[1]);default:return m(A(c),a7N,w,a)}}function
w(b,a){if(typeof
a!=="number")switch(a[0]){case
0:var
e=a[1],f=a[2];return function(j,i){var
f=j,a=i;for(;;){if(a){var
h=a[2],k=a[1];try{var
m=m2(e,f,32),g=m}catch(a){a=s(a);if(a!==x)throw a;var
g=C(e)}var
l=aD(e,f,g-f|0);p(A(b),a7J,l,d,k);if(0===h)return 0;c(A(b),a7K);var
f=dm(g+1|0,C(e)),a=h;continue}return 0}}(0,f);case
2:var
g=a[2],h=a[1][2];return m(A(b),a7C,h,g);case
3:var
i=a[1];return m(A(b),a7D,d,i);case
4:var
j=a[2],k=a[1];return aq(A(b),a7E,d,k,d,j);case
5:var
l=a[1];return m(A(b),a7F,d,l);case
6:var
n=a[2],o=a[1];return aq(A(b),a7G,d,o,d,n);case
7:var
q=a[1];return m(A(b),a7H,d,q);case
8:var
r=a[1];return m(A(b),a7I,d,r)}return d(b,a)}function
aa(a,d){var
g=d[2];b(A(a),a7Z,g);var
e=d[5];if(0===e[0]){var
h=e[1],f=function(a){return 0};aZ(function(f,d){b(A(a),a7P,f);var
e=d[2];if(e){var
g=e[1];b(A(a),a7Q,g)}switch(d[1]){case
0:c(A(a),a7R);break;case
1:c(A(a),a7X);break;default:c(A(a),a7Y)}c(A(a),a7S);c(A(a),a7T);v(a,d[3]);c(A(a),a7U);v(a,d[4]);c(A(a),a7V);return function(a){return c(A(a),a7W)}},f,h)}else
c(A(a),a71);return c(A(a),a70)}var
ag=t6(f),D=i8(f);function
ah(a){return a[2]}function
ai(b,a){var
c=ag[8];return m(A(b),a8U,c,a)}function
ak(b,a){return m(A(b),a8V,aa,a)}function
al(e,d){try{var
a=b(e[3],0,d);return a}catch(a){a=s(a);if(a===af){var
g=[0,bQ,t(a8X,e[2])],h=c(D[6],d);return b(f[1][32],h,g)}if(a[1]===f[1][31])throw a;var
i=c(D[6],d);return b(f[1][32],i,a)}}function
am(a,d){function
b(a){var
b=c(d,a);return c(f[4][1],b)}a[3]=function(a){return b};a[4]=function(d,c,b,a){throw af};a[5]=[1,b];return 0}function
an(a){a[3]=function(b,a){throw af};a[4]=function(d,c,b,a){throw af};a[5]=a8Y;return 0}function
ay(a){function
b(d,c,b,a){throw af}return[0,q,a,c(D[1],a),b,a8W]}function
az(g,e){function
a(a){var
b=c(e,a);return c(f[4][1],b)}var
b=[1,a];function
d(d,c,b,a){throw af}return[0,q,g,function(b){return a},d,b]}function
aA(a){return a}function
aB(a){return q[1]}function
I(c,a){return b(q[3],c,a)}function
V(b,a){return I(b,r0(a))}function
W(d){var
e=b(a[6][3],q[1],d);return c(au[3],e)}function
X(d,b){var
a=al(d,b);return c(f[4][2],a)}function
J(b,a){return X(b,W(a))}function
aC(c,b,a){return J(c,I(b,a))}function
aE(c,b,a){return J(c,V(b,a))}return[0,g,h,a,$,[0,ay,az,am,ah,ai,ak,aA,an],aB,at,ad,function(b,a){var
c=0;return[11,aZ(function(c,a){return F(b,a[1],a[2],c)},c,a)]},ap,ar,as,I,V,W,aC,aE,J,X]},Gy=function(e){var
a=Gv(e[2]);function
b(d,b){if(d){var
a=By(d[1]);c(b,a);cc(a);return mV(a)}bTW(e6,1);c(b,e6);return cc(e6)}function
d(d,b,c,a){d2(a,d);var
e=a3(b,a9g)?a9h:b;aps(a,e,0);return aps(a,c,0)}function
f(e,g,f){var
h=e?e[1]:a9i,i=c(a[1],f);return b(g,function(a){return d(aIJ,h,i,a)})}return[0,f,function(e,g,f){var
h=e?e[1]:a9j,i=c(a[2],f);return b(g,function(a){return d(aIK,h,i,a)})}]},kU=[0,0,0,0],t9=function(d){var
g=d[1],l=d[2],h=d[3],x=d[4],S=d[5],T=d[6],U=d[7],V=d[8],W=d[9],X=d[10],Y=d[11],Z=d[14],$=d[15],aa=d[16],ac=d[17],ad=d[18],ae=d[19],ag=d[20],ah=d[21],ai=d[22],ak=d[23],al=d[24],am=d[25],an=d[26],ao=d[27],ap=d[28],ar=d[29],as=d[30],at=d[31],au=d[32],av=d[33],aw=d[34],ax=d[35],ay=d[36],az=d[37],aA=d[38],aB=d[39],aC=d[40],aD=d[41],aE=d[42],aF=d[43],aG=d[44],aH=d[45],aI=d[46],aJ=d[47],aK=d[48],aM=d[49],aN=d[50],aO=d[51],aP=d[52],aQ=d[53],aS=d[54],aT=d[55],aV=d[56],aW=d[57],aX=d[58],aY=d[59],aZ=d[60],a0=d[61],a1=d[62],a3=d[63],a4=d[64],a5=d[65],a7=d[66],a8=d[67],a9=d[68],a_=d[69],a$=d[70],ba=d[71],bb=d[72],bc=d[73],bd=d[74],be=d[75],bf=d[76],bg=d[77],bh=d[78],bi=d[79],bj=d[80],bk=d[81],bl=d[82],bm=d[83],bn=d[84],bo=d[85],bp=d[86],bq=d[87],br=d[88],bu=d[89],bv=d[90],bw=d[91],by=d[92],bB=d[93],bC=d[94],bD=d[95],bF=d[96],bG=d[97],bH=d[98],bI=d[99],bJ=d[ci],bK=d[jB],bM=d[h_],bN=d[l1],bO=d[l9],bP=d[di],bR=d[qP],bS=d[mB],bT=d[gj],bU=d[qx],bV=d[fn],bW=d[gi],bX=d[bL],bY=d[ms],bZ=d[jt],b0=d[e1],b1=d[jv],b2=d[im],b3=d[jV],b4=d[md],b5=d[fr],b6=d[lE],b8=d[fD],b9=d[ck],b_=d[ep],b$=d[cW],ca=d[dW],cb=d[cU],cc=d[a2],cd=d[zx],ce=d[qo],cf=d[zk],cg=d[ra],ch=d[wE],cj=d[yr],cn=d[x$],co=d[x_],cp=d[wo],cq=d[ww],cr=d[wz],cs=d[rr],ct=d[rt],cu=d[yC],cv=d[Ac],cw=d[Aw],cx=d[z6],cy=d[x1],cz=d[An],cA=d[Al],cB=d[yN],cC=d[rl],cD=d[wp],cE=d[A6],cF=d[yZ],cG=d[yQ],cH=d[z1],cI=d[yF],cJ=d[v8],cK=d[zJ],cL=d[jF],cM=d[jX],cN=d[lY],cO=d[o5],cP=d[yV],cQ=d[qs],cR=d[qe],cS=d[l8],cT=d[l0],cV=d[lJ],cX=d[js],cY=d[ml],cZ=d[mG],c0=d[mi],c1=d[lC],c2=d[l2],c3=d[l5],c4=d[mI],c5=d[j0],c6=d[ll],c7=d[rg];function
c8(a){return c(A(a),a9n)}function
y(f,j,e,a){return function(g){if(g){var
h=g[2],i=g[1];if(h){b(f,a,i);c(A(a),e);var
d=h;for(;;){if(d){var
k=d[2],l=d[1];c(A(a),j);b(f,a,l);c(A(a),e);var
d=k;continue}return 0}}b(f,a,i);return c(A(a),e)}return 0}}function
n(e,i,a){return function(f){if(f){var
g=f[2],h=f[1];if(g){b(e,a,h);var
d=g;for(;;){if(d){var
j=d[2],k=d[1];c(A(a),i);b(e,a,k);var
d=j;continue}return 0}}return b(e,a,h)}return 0}}function
z(a){if(typeof
a==="number")return 0;else{if(0===a[0]){var
b=a[1];return[0,b,z(a[2])]}throw[0,r,a9o]}}function
c9(e,d,b,a){var
f=z(a);return c(n(e,d,b),f)}function
P(b){var
a=m5(0);return[0,m7(function(c){try{var
b=[0,BW(a)];return b}catch(a){a=s(a);if(a===BV)return 0;throw a}}),a]}function
w(a){var
f=a[2];function
d(a){for(;;){var
e=bA(a);if(e){var
b=e[1],c=b[1];if(typeof
c!=="number"&&16===c[0]){var
g=b[2],h=c[1];aL(a);m6([0,h,g],f);continue}aL(a);return r1(b,hn(function(b){return d(a)}))}return hm}}return d}function
Q(c){var
b=c[2],a=0;for(;;){if(0===b[1])return a;var
a=[0,BW(b),a];continue}}function
R(a){return a[1]}var
k=[0,P,function(d,a){function
e(d,b){return c(d,c(w(a),b))}return b(h[6][2],d,e)},w,Q,R],B=c(k[1],0),c_=c(x[6],0);b(k[2],c_,B);var
e=hk([0,hh]),c$=fL(e[4],Gz,e[1]);function
C(a){var
c=b(e[3],a,c$);if(c)var
d=c;else{var
f=O(a,a9q);if(f)return e7(I(a,0),a9p);var
d=f}return d}var
da=fL(e[4],a9r,e[1]);function
D(a){return b(e[3],a,da)}var
i=t5(h),o=i[3];n4([0,o[1],o[3],o[2]]);function
db(a){return m(i[51],[0,Gf],g[2],a)}function
F(d){try{var
a=db(d),e=bA(a);if(e){var
j=e[1][1];aL(a);var
f=bA(a);if(f){var
g=f[1][1];if(typeof
g==="number")if(0!==g){aL(a);return j}}throw[0,bQ,a9u]}throw af}catch(a){a=s(a);if(a!==af)if(a[1]!==bQ){if(a[1]===i[3][1]){var
h=c(i[3][3],a[2]);return aU(b(bs(a9t),d,h))}throw a}return aU(c(bs(a9s),d))}}function
G(a){return mY(n8(a))}function
H(d,c){var
a=d,b=c;for(;;){if(4===a[0]){var
e=[0,a[3],b],a=a[2],b=e;continue}return[0,a,b]}}function
J(d,c){var
a=d,b=c;for(;;){if(5===a[0]){var
e=[0,a[3],b],a=a[2],b=e;continue}return[0,a,b]}}function
K(d,c){var
a=d,b=c;for(;;){if(3===a[0]){var
e=[0,a[3],b],a=a[2],b=e;continue}return[0,a,b]}}var
t=l[72];function
j(a){switch(a[0]){case
15:var
b=a[2];if(2===b[0])if(0===b[3][0]){var
d=b[2],g=b[4];if(c(t,d)){var
e=j(g);return[0,[0,[0,a6,d],e[1]],e[2]]}return[0,0,a]}break;case
42:var
h=a[2],f=j(a[3]);return[0,[0,[0,qI,h],f[1]],f[2]]}return[0,0,a]}function
L(a){if(3===a[0]){var
b=a[2],e=a[3];if(c(t,b)){var
d=L(e);return[0,[0,b,d[1]],d[2]]}return[0,0,a]}return[0,0,a]}var
u=[];function
dc(h,f,a){for(;;){var
c=bA(a);if(c){var
d=c[1],e=d[2],i=d[1];if(b(g[26],e,h)){aL(a);b(f,i,e);continue}}return 0}}if(!kU[1])np(a9l,function(ad){var
g=ds(ad,a9v),d=cl(ad,a9k,a9m),ae=d[1],aH=d[2],W=d[3],h=d[4],H=d[5],aI=d[6],B=d[7],X=d[8],ar=d[9],M=d[10],y=d[12],z=d[13],as=d[14],N=d[15],w=d[16],J=d[17],P=d[22],Y=d[24],af=d[25],ag=d[26],Z=d[27],at=d[28],au=d[29],Q=d[30],aJ=d[31],$=d[32],av=d[33],aK=d[34],aa=d[35],aw=d[36],R=d[37],ax=d[38],ay=d[39],o=d[40],F=d[41],C=d[42],az=d[43],n=d[44],ah=d[45],s=d[46],ac=d[47],aA=d[48],u=d[49],aB=d[50],aC=d[51],ai=d[52],ak=d[53],l=d[56],al=d[57],aD=d[58],aL=d[59],am=d[60],aE=d[61],aM=d[62],i=d[63],A=d[64],aN=d[65],aF=d[66],e=d[67],S=d[68],aO=d[69],aP=d[70],x=d[71],G=d[72],T=d[73],K=d[74],v=d[75],aQ=d[76],L=d[77],D=d[78],k=d[79],U=d[80],an=d[81],V=d[82],j=d[83],t=d[84],ao=d[85],ap=d[86],aG=d[87],aS=d[11],aT=d[18],aV=d[19],aW=d[20],aX=d[21],aY=d[23],aZ=d[54],a0=d[55];function
a1(a,d,b){var
e=a[g+1],f=c(a[1][J+1],a);return p(e[1],d,a9w,f,b)}function
a2(a,d,b){var
e=a[g+1];if(6===b[0]){var
h=b[2],k=a[j+1],l=c(a[1][i+1],a);return aq(e[1],d,a9y,l,h,k)}var
f=c(a[1][y+1],a);return p(e[1],d,a9x,f,b)}function
a3(a,d,b){var
f=a[g+1];p(a[1][n+1],a,d,b,f[2][12]);switch(b[0]){case
0:return 0;case
1:var
j=b[2];if(0===b[3][0])var
l=j;else{if(0!==j[0]){var
z=b[3];m(a[1][G+1],a,d,j);c(f[3],d);return m(a[1][G+1],a,d,z)}var
l=b[3]}return m(a[1][G+1],a,d,l);case
2:var
A=b[3],B=b[2],C=a[t+1],D=c(a[1][e+1],a),E=c(a[1][e+1],a);return bE(f[1],d,a9z,E,B,D,A,C);case
3:var
o=b[4],q=b[3],r=b[2];if(O(o,a9A)){var
I=a[t+1],J=c(a[1][h+1],a),K=c(a[1][v+1],a),L=c(a[1][F+1],a);return f$(f[1],d,a9B,L,r,K,q,J,o,I)}var
M=a[t+1],N=c(a[1][v+1],a),P=c(a[1][F+1],a);return bE(f[1],d,a9C,P,r,N,q,M);case
4:var
R=b[2],S=a[t+1],T=c(a[1][i+1],a);return aq(f[1],d,a9D,T,R,S);case
5:var
s=b[6],u=b[5],w=b[4],x=b[3],y=b[2];if(0===s[0]){var
U=a[t+1],V=c(a[1][i+1],a),W=c(a[1][h+1],a),X=c(a[1][Q+1],a),Y=c(a[1][F+1],a);return Kb(f[1],d,a9E,Y,x,X,w,W,y,V,u,U)}var
Z=a[t+1],_=c(a[1][i+1],a),$=c(a[1][e+1],a),aa=c(a[1][h+1],a),ab=c(a[1][Q+1],a),ac=c(a[1][F+1],a);return bTi(f[1],d,a9F,ac,x,ab,w,aa,y,$,s,_,u,Z);case
6:var
ad=b[5],ae=b[4],af=b[3],ag=b[2],ai=a[t+1],aj=c(a[1][i+1],a),ak=c(a[1][h+1],a),al=c(a[1][ah+1],a),am=c(a[1][F+1],a),an=c(a[1][H+1],a);return vH(f[1],d,a9G,an,am,af,al,ae,ak,ag,aj,ad,ai);case
7:var
ao=b[4],ap=b[3],ar=b[2],as=a[t+1],at=c(a[1][e+1],a),au=c(a[1][h+1],a),av=c(a[1][Q+1],a);return f$(f[1],d,a9H,av,ap,au,ar,at,ao,as);case
8:var
aw=b[4],ax=b[3],ay=b[2],az=a[t+1],aA=c(a[1][e+1],a),aB=c(a[1][h+1],a),aC=c(a[1][ah+1],a),aD=c(a[1][H+1],a);return bTj(f[1],d,a9I,aD,aC,ax,aB,ay,aA,aw,az);default:var
aE=b[2],aF=a[t+1],aG=c(a[1][k+1],a);return aq(f[1],d,a9J,aG,aE,aF)}}function
a4(a,d,b){var
f=a[g+1];p(a[1][n+1],a,d,b,f[2][10]);switch(b[0]){case
0:return 0;case
1:var
l=b[3],o=b[2],q=a[t+1],r=c(a[1][e+1],a),s=c(a[1][e+1],a);return bE(f[1],d,a9K,s,o,r,l,q);case
2:var
i=b[2];if(0===b[3][0])var
j=i;else{if(0!==i[0]){var
u=b[3];m(a[1][T+1],a,d,i);c(f[3],d);return m(a[1][T+1],a,d,u)}var
j=b[3]}return m(a[1][T+1],a,d,j);case
3:var
v=b[2],w=a[t+1],y=c(a[1][x+1],a);return aq(f[1],d,a9L,y,v,w);case
4:var
z=b[4],A=b[3],B=b[2],C=a[t+1],D=c(a[1][e+1],a),E=c(a[1][h+1],a),F=c(a[1][Q+1],a);return f$(f[1],d,a9M,F,A,E,B,D,z,C);case
5:var
G=b[5],I=b[4],J=b[3],K=b[2],L=a[t+1],M=c(a[1][e+1],a),N=c(a[1][h+1],a),O=c(a[1][aH+1],a),P=c(a[1][ah+1],a),R=c(a[1][H+1],a);return vH(f[1],d,a9N,R,P,J,O,I,N,K,M,G,L);case
6:var
S=b[4],U=b[3],V=b[2],W=a[t+1],X=c(a[1][e+1],a),Y=c(a[1][h+1],a),Z=c(a[1][Q+1],a);return f$(f[1],d,a9O,Z,U,Y,V,X,S,W);default:var
_=b[2],$=a[t+1],aa=c(a[1][k+1],a);return aq(f[1],d,a9P,aa,_,$)}}function
a5(a,f,d){var
i=a[g+1];p(a[1][n+1],a,f,d,i[2][9]);switch(d[0]){case
1:var
j=d[2];if(typeof
j==="number"){if(0!==j){var
t=d[4],u=d[3];if(0===t[0]){var
C=c(a[1][l+1],a);return p(i[1],f,a9T,C,u)}var
D=c(a[1][l+1],a),F=c(a[1][K+1],a);return E(i[1],f,a9U,F,t,D,u)}var
o=d[3];if(2===o[0]){var
q=d[4],s=o[2];if(0===q[0]){var
z=c(a[1][h+1],a);return p(i[1],f,a9R,z,s)}var
A=c(a[1][h+1],a),B=c(a[1][K+1],a);return E(i[1],f,a9S,B,q,A,s)}}break;case
2:var
G=d[3],H=d[2],I=c(a[1][x+1],a),J=c(a[1][w+1],a);return E(i[1],f,a9V,J,H,I,G);case
3:var
v=d[2];if(0===v[0]){var
L=d[3],M=c(a[1][T+1],a);return p(i[1],f,a9W,M,L)}var
N=d[3],O=c(a[1][T+1],a),P=c(a[1][e+1],a);return E(i[1],f,a9X,P,v,O,N);case
4:var
Q=d[3];m(a[1][x+1],a,f,d[2]);var
R=c(a[1][U+1],a);b(i[1],f,R);return m(a[1][x+1],a,f,Q);case
5:var
S=d[3],V=d[2],W=c(a[1][x+1],a),X=c(a[1][x+1],a);return E(i[1],f,a9Y,X,V,W,S);case
6:var
Y=d[3],Z=d[2],_=c(a[1][x+1],a),$=c(a[1][x+1],a);return E(i[1],f,a9Z,$,Z,_,Y);case
7:var
aa=d[4],ab=d[3],ac=d[2],ad=c(a[1][y+1],a),ae=c(a[1][x+1],a);return bE(i[1],f,a90,ae,aa,ac,ad,ab);case
8:return m(a[1][k+1],a,f,d[2])}throw[0,r,a9Q]}function
a7(a,e,d){var
f=a[g+1];p(a[1][n+1],a,e,d,f[2][11]);switch(d[0]){case
1:var
F=d[3],H=d[2],I=c(a[1][D+1],a),J=c(a[1][v+1],a);return E(f[1],e,a92,J,H,I,F);case
2:var
j=d[2];if(typeof
j==="number"){if(0!==j){var
u=d[4],w=d[3];if(0===u[0]){var
P=c(a[1][l+1],a);return p(f[1],e,a95,P,w)}var
Q=c(a[1][l+1],a),R=c(a[1][K+1],a);return E(f[1],e,a96,R,u,Q,w)}var
q=d[3];if(2===q[0]){var
s=d[4],t=q[2];if(0===s[0]){var
M=c(a[1][h+1],a);return p(f[1],e,a93,M,t)}var
N=c(a[1][h+1],a),O=c(a[1][K+1],a);return E(f[1],e,a94,O,s,N,t)}}break;case
3:var
S=d[3],T=d[2],V=c(a[1][v+1],a),W=c(a[1][z+1],a);return E(f[1],e,a97,W,T,V,S);case
4:var
X=d[4],Y=d[3],_=d[2],$=c(a[1][v+1],a),aa=c(a[1][L+1],a),ab=c(a[1][Z+1],a);return bx(f[1],e,a98,ab,_,aa,Y,$,X);case
5:var
A=d[2];if(0===A[0]){var
ac=d[3],ad=c(a[1][G+1],a);return p(f[1],e,a99,ad,ac)}var
ae=d[3],af=c(a[1][G+1],a),ag=c(a[1][o+1],a);return E(f[1],e,a9_,ag,A,af,ae);case
6:var
ah=d[3],ai=d[2],aj=c(a[1][x+1],a),ak=c(a[1][v+1],a);return E(f[1],e,a9$,ak,ai,aj,ah);case
7:var
al=d[3];m(a[1][v+1],a,e,d[2]);var
am=c(a[1][U+1],a);b(f[1],e,am);return m(a[1][v+1],a,e,al);case
8:var
i=d[3],B=d[2];if(3===i[0]){var
C=i[2],ap=i[3];if(c(f[4],C)){var
aq=c(a[1][aK+1],a),ar=c(a[1][v+1],a);return E(f[1],e,a_b,ar,B,aq,[0,C,ap])}}var
an=c(a[1][v+1],a),ao=c(a[1][v+1],a);return E(f[1],e,a_a,ao,B,an,i);case
9:var
as=d[4],at=d[3],au=d[2],av=c(a[1][y+1],a),aw=c(a[1][v+1],a);return bE(f[1],e,a_c,aw,as,au,av,at);case
10:return m(a[1][k+1],a,e,d[2])}throw[0,r,a91]}function
a8(a,d,b){var
e=a[g+1];p(a[1][n+1],a,d,b,e[2][6]);switch(b[0]){case
0:throw[0,r,a_d];case
1:return m(a[1][l+1],a,d,b[2]);case
2:var
q=b[3],t=b[2],v=c(a[1][u+1],a),w=c(a[1][u+1],a);return E(e[1],d,a_e,w,t,v,q);case
3:var
j=b[2];if(!O(j,a_f))if(0===b[3][0]){var
D=b[4],F=c(a[1][u+1],a);return p(e[1],d,a_h,F,D)}var
x=b[4],z=b[3],A=c(a[1][u+1],a),B=c(a[1][s+1],a),C=c(a[1][h+1],a);return bx(e[1],d,a_g,C,j,B,z,A,x);case
4:var
G=b[2],I=c(a[1][y+1],a);return p(e[1],d,a_i,I,G);case
5:var
J=b[3],K=b[2],L=c(a[1][s+1],a),M=c(a[1][u+1],a);return E(e[1],d,a_j,M,K,L,J);case
6:var
f=b[2];if(38===f[0]){var
o=f[3];if(39===o[0]){var
Q=o[2],R=f[2],S=c(a[1][s+1],a),T=c(a[1][i+1],a),U=c(a[1][H+1],a);return bE(e[1],d,a_l,U,T,R,S,Q)}}var
N=c(a[1][i+1],a),P=c(a[1][H+1],a);return aq(e[1],d,a_k,P,N,f);case
7:var
V=b[4],W=b[3],X=b[2],Y=c(a[1][y+1],a),Z=c(a[1][u+1],a);return bE(e[1],d,a_m,Z,V,X,Y,W);default:return m(a[1][k+1],a,d,b[2])}}function
a9(a,d,b){var
e=a[g+1];p(a[1][n+1],a,d,b,e[2][6]);switch(b[0]){case
0:throw[0,r,a_n];case
5:var
f=b[2];if(4===f[0]){var
h=b[3];if(5===h[0]){var
i=h[2],j=f[2],k=c(a[1][J+1],a),l=c(a[1][y+1],a);return E(e[1],d,a_o,l,j,k,i)}}break}return m(a[1][as+1],a,d,b)}function
a_(a,f,d){var
h=a[g+1];p(a[1][n+1],a,f,d,h[2][13]);switch(d[0]){case
0:return 0;case
1:var
i=d[3],j=d[2],o=c(a[1][e+1],a),q=c(a[1][e+1],a);return E(h[1],f,a_p,q,j,o,i);case
2:var
r=d[3],s=d[2],t=c(a[1][l+1],a),u=c(a[1][l+1],a);return E(h[1],f,a_q,u,s,t,r);case
3:var
v=d[3],w=d[2],x=c(a[1][e+1],a),y=c(a[1][e+1],a);return E(h[1],f,a_r,y,w,x,v);case
4:var
z=d[3],A=d[2],B=c(a[1][l+1],a),C=c(a[1][l+1],a);return E(h[1],f,a_s,C,A,B,z);case
5:var
D=d[3];m(a[1][ae+1],a,f,d[2]);var
F=c(a[1][U+1],a);b(h[1],f,F);return m(a[1][ae+1],a,f,D);default:return m(a[1][k+1],a,f,d[2])}}function
a$(a,d,b){var
e=a[g+1];p(a[1][n+1],a,d,b,e[2][5]);switch(b[0]){case
0:throw[0,r,a_t];case
1:return m(a[1][l+1],a,d,b[2]);case
2:var
i=b[2],j=c(a[1][l+1],a);return p(e[1],d,a_u,j,i);case
3:var
f=b[2];if(!O(f,a_v))if(0===b[3][0]){var
x=b[4],z=c(a[1][s+1],a);return p(e[1],d,a_x,z,x)}var
o=b[4],q=b[3],t=c(a[1][s+1],a),v=c(a[1][s+1],a),w=c(a[1][h+1],a);return bx(e[1],d,a_w,w,f,v,q,t,o);case
4:var
A=b[2],B=c(a[1][h+1],a);return p(e[1],d,a_y,B,A);case
5:var
C=b[2],D=c(a[1][J+1],a);return p(e[1],d,a_z,D,C);case
6:var
F=b[3],G=b[2],H=c(a[1][ae+1],a),I=c(a[1][s+1],a);return E(e[1],d,a_A,I,G,H,F);case
7:var
K=b[2],L=c(a[1][u+1],a);return p(e[1],d,a_B,L,K);case
8:var
M=b[4],N=b[3],P=b[2],Q=c(a[1][y+1],a),R=c(a[1][s+1],a);return bE(e[1],d,a_C,R,M,P,Q,N);default:return m(a[1][k+1],a,d,b[2])}}function
ba(a,f,d){var
o=a[g+1];p(a[1][n+1],a,f,d,o[2][8]);switch(d[0]){case
0:return 0;case
1:var
G=d[2],H=a[j+1],I=c(a[1][aQ+1],a);return aq(o[1],f,a_D,I,G,H);case
2:var
J=d[2],K=a[j+1],M=c(a[1][x+1],a);return aq(o[1],f,a_E,M,J,K);case
3:var
v=d[2];if(0===d[3][0])var
A=v;else{if(0!==v[0]){var
N=d[3];m(a[1][y+1],a,f,v);c(o[3],f);return m(a[1][y+1],a,f,N)}var
A=d[3]}return m(a[1][y+1],a,f,A);case
4:return 0;case
5:var
w=d[3],B=d[2];if(typeof
w==="number"){var
O=a[j+1],P=c(a[1][e+1],a);return aq(o[1],f,a_F,P,B,O)}else{if(0===w[0]){var
Q=w[1],R=a[j+1],S=c(a[1][l+1],a),T=c(a[1][e+1],a);return bE(o[1],f,a_G,T,B,S,Q,R)}throw[0,r,a_H]}case
6:var
U=d[2],V=a[j+1],W=c(a[1][i+1],a);return aq(o[1],f,a_I,W,U,V);case
7:var
X=d[4],Y=d[3],_=d[2],$=a[j+1],aa=c(a[1][au+1],a),ab=b(o[5],aa,a_J),ad=c(a[1][e+1],a),ae=c(a[1][h+1],a);return f$(o[1],f,a_K,ae,_,ad,Y,ab,X,$);case
8:var
af=d[2],ag=a[j+1],ah=c(a[1][as+1],a);return aq(o[1],f,a_L,ah,af,ag);case
9:var
q=d[3],t=d[2];switch(q[0]){case
3:var
z=m(a[1][aA+1],a,[0,[0,q[2],q[3]],0],q[4]),C=z[3],D=z[2],E=z[1];if(C){var
am=C[1],an=a[j+1],ao=c(a[1][u+1],a),ap=c(a[1][s+1],a),ar=c(a[1][al+1],a),at=c(a[1][h+1],a);return Kb(o[1],f,a_N,at,t,ar,E,ap,am,ao,D,an)}var
av=a[j+1],aw=c(a[1][u+1],a),ax=c(a[1][al+1],a),ay=c(a[1][h+1],a);return f$(o[1],f,a_O,ay,t,ax,E,aw,D,av);case
5:var
aB=q[3],aC=q[2],aD=a[j+1],aE=c(a[1][u+1],a),aF=c(a[1][s+1],a),aG=c(a[1][h+1],a);return f$(o[1],f,a_P,aG,t,aF,aB,aE,aC,aD);default:var
ai=a[j+1],aj=c(a[1][u+1],a),ak=c(a[1][h+1],a);return bE(o[1],f,a_M,ak,t,aj,q,ai)}case
10:var
aH=d[2],aJ=a[j+1],aK=c(a[1][ac+1],a);return aq(o[1],f,a_Q,aK,aH,aJ);case
11:var
aL=d[3],aM=d[2],aN=a[j+1],aO=c(a[1][s+1],a),aP=c(a[1][h+1],a);return bE(o[1],f,a_R,aP,aM,aO,aL,aN);case
12:var
aR=d[3],aS=d[2],aT=a[j+1],aU=c(a[1][l+1],a),aV=c(a[1][F+1],a);return bE(o[1],f,a_S,aV,aS,aU,aR,aT);case
13:var
aW=d[3],aX=d[2],aY=a[j+1],aZ=c(a[1][e+1],a),a0=c(a[1][az+1],a);return bE(o[1],f,a_T,a0,aX,aZ,aW,aY);case
14:var
a1=d[3],a2=d[2],a3=a[j+1],a4=c(a[1][L+1],a),a5=c(a[1][Z+1],a),a6=c(a[1][aI+1],a);return bx(o[1],f,a_U,a6,a5,a2,a4,a1,a3);default:var
a7=d[2],a8=a[j+1],a9=c(a[1][k+1],a);return aq(o[1],f,a_V,a9,a7,a8)}}function
bb(a,f,d){var
i=a[g+1];p(a[1][n+1],a,f,d,i[2][7]);switch(d[0]){case
0:return 0;case
1:var
z=d[2],A=a[j+1],B=c(a[1][x+1],a);return aq(i[1],f,a_W,B,z,A);case
2:var
C=d[2],D=a[j+1],G=c(a[1][x+1],a);return aq(i[1],f,a_X,G,C,D);case
3:var
r=d[2];if(0===d[3][0])var
v=r;else{if(0!==r[0]){var
I=d[3];m(a[1][J+1],a,f,r);c(i[3],f);return m(a[1][J+1],a,f,I)}var
v=d[3]}return m(a[1][J+1],a,f,v);case
4:return 0;case
5:var
K=d[2],L=a[j+1],M=c(a[1][e+1],a);return aq(i[1],f,a_Y,M,K,L);case
6:var
N=d[4],O=d[3],P=d[2],Q=a[j+1],R=c(a[1][au+1],a),S=b(i[5],R,a_Z),T=c(a[1][e+1],a),U=c(a[1][h+1],a);return f$(i[1],f,a_0,U,P,T,O,S,N,Q);case
7:var
V=d[2],W=a[j+1],X=c(a[1][s+1],a);return aq(i[1],f,a_1,X,V,W);case
8:var
o=d[3],t=d[2];switch(o[0]){case
2:var
$=o[2],aa=c(a[1][l+1],a),ab=c(a[1][h+1],a);return E(i[1],f,a_3,ab,t,aa,$);case
3:var
u=[0,[0,o[2],o[3]],0],q=o[4];for(;;){if(3===q[0]){var
u=[0,[0,q[2],q[3]],u],q=q[4];continue}var
ad=aj(u),ae=a[j+1],af=c(a[1][s+1],a),ag=c(a[1][al+1],a),ah=c(a[1][h+1],a);return f$(i[1],f,a_4,ah,t,ag,ad,af,q,ae)}default:var
Y=a[j+1],Z=c(a[1][s+1],a),_=c(a[1][h+1],a);return bE(i[1],f,a_2,_,t,Z,o,Y)}case
9:var
ai=d[2],ak=a[j+1],am=c(a[1][ac+1],a);return aq(i[1],f,a_5,am,ai,ak);case
10:var
w=d[3],y=d[2];if(0===w[0]){var
an=a[j+1],ao=c(a[1][h+1],a);return aq(i[1],f,a_6,ao,y,an)}var
ap=a[j+1],ar=c(a[1][s+1],a),as=c(a[1][h+1],a);return bE(i[1],f,a_7,as,y,ar,w,ap);case
11:var
at=d[3],av=d[2],aw=a[j+1],ax=c(a[1][l+1],a),ay=c(a[1][F+1],a);return bE(i[1],f,a_8,ay,av,ax,at,aw);case
12:var
aA=d[3],aB=d[2],aC=a[j+1],aD=c(a[1][e+1],a),aE=c(a[1][az+1],a);return bE(i[1],f,a_9,aE,aB,aD,aA,aC);case
13:var
aF=d[3],aG=d[2],aH=a[j+1],aI=c(a[1][e+1],a),aJ=c(a[1][h+1],a),aK=c(a[1][H+1],a);return bx(i[1],f,a__,aK,aJ,aG,aI,aF,aH);default:var
aL=d[2],aM=a[j+1],aN=c(a[1][k+1],a);return aq(i[1],f,a_$,aN,aL,aM)}}function
bc(a,d,b){var
f=a[g+1];switch(b[0]){case
4:var
h=c(a[1][e+1],a);return p(f[1],d,a$a,h,b);case
27:var
i=b[3],j=b[2],k=b[1],l=function(a){return k};p(a[1][n+1],a,d,b,l);var
o=c(a[1][S+1],a),q=c(a[1][S+1],a);return E(f[1],d,a$b,q,j,o,i);default:return m(a[1][e+1],a,d,b)}}function
bd(a,h,f){var
d=a[g+1];switch(f[0]){case
3:var
j=f[3],k=f[2],l=b(d[7],k,[0,j,0]),i=l[2],q=l[1];if(i)if(!i[2]){var
u=c(a[1][w+1],a),v=c(a[1][w+1],a);return E(d[1],h,a$e,v,j,u,k)}var
r=c(a[1][w+1],a),s=c(a[1][e+1],a),t=b(d[6],s,a$c);return E(d[1],h,a$d,t,i,r,q);case
13:var
x=f[3],n=b(d[7],f[2],0),y=n[2],z=n[1],A=c(a[1][e+1],a),B=c(a[1][e+1],a),C=b(d[6],B,a$f);return E(d[1],h,a$g,C,[0,z,y],A,x);case
14:var
D=f[3],o=b(d[7],f[2],0),F=o[2],G=o[1],H=c(a[1][e+1],a),I=c(a[1][e+1],a),J=b(d[6],I,a$h);return E(d[1],h,a$i,J,[0,G,F],H,D);case
29:var
K=f[2],L=c(a[1][w+1],a);return p(d[1],h,a$j,L,K);default:return m(a[1][w+1],a,h,f)}}function
be(a,f,d){var
i=a[g+1];p(a[1][n+1],a,f,d,i[2][2]);switch(d[0]){case
1:var
t=d[3],u=d[2],v=c(a[1][w+1],a),x=c(a[1][w+1],a);return E(i[1],f,a$k,x,u,v,t);case
4:var
y=d[3],z=d[2],A=c(a[1][e+1],a),B=c(a[1][aF+1],a);return E(i[1],f,a$l,B,z,A,y);case
8:var
C=d[3],D=d[2],F=c(a[1][e+1],a),G=c(a[1][w+1],a);return E(i[1],f,a$m,G,D,F,C);case
9:var
k=d[5],o=d[4],H=d[3],I=d[2],J=c(a[1][h+1],a),K=c(a[1][ar+1],a);E(i[1],f,a$n,K,H,J,I);if(0!==o[0]){var
N=c(a[1][e+1],a);p(i[1],f,a$q,N,o)}if(0===k)return 0;var
L=c(a[1][aP+1],a),M=b(i[6],L,a$o);return p(i[1],f,a$p,M,k);case
10:var
O=d[4],P=d[3],Q=d[2],R=c(a[1][e+1],a),T=c(a[1][l+1],a),U=c(a[1][ar+1],a);return bx(i[1],f,a$r,U,P,T,Q,R,O);case
16:var
V=d[2],W=c(a[1][h+1],a);return p(i[1],f,a$s,W,V);case
17:var
X=d[2],Y=c(a[1][h+1],a);return p(i[1],f,a$t,Y,X);case
22:var
j=d[3],q=d[2];if(30===j[0]){var
$=j[2],aa=c(a[1][e+1],a),ab=c(a[1][e+1],a);return E(i[1],f,a$v,ab,q,aa,$)}var
Z=c(a[1][e+1],a),_=c(a[1][e+1],a);return E(i[1],f,a$u,_,q,Z,j);case
23:var
ac=d[3],ad=d[2],ae=c(a[1][e+1],a),af=c(a[1][e+1],a);return E(i[1],f,a$w,af,ad,ae,ac);case
24:return b(i[8][32],d[1],[0,bz,a$x]);case
26:var
r=d[3],s=d[2];if(0===r[0])return m(a[1][e+1],a,f,s);var
ag=c(a[1][S+1],a),ah=c(a[1][e+1],a);return E(i[1],f,a$y,ah,s,ag,r);case
27:var
ai=d[3],aj=d[2],ak=c(a[1][e+1],a),al=c(a[1][e+1],a);return E(i[1],f,a$z,al,aj,ak,ai);case
28:var
am=d[3],an=d[2],ao=c(a[1][e+1],a),ap=c(a[1][e+1],a);return E(i[1],f,a$A,ap,an,ao,am);case
30:var
aq=d[2],as=c(a[1][e+1],a);return p(i[1],f,a$B,as,aq);case
37:var
at=d[3],au=d[2],av=c(a[1][e+1],a),aw=c(a[1][e+1],a);return E(i[1],f,a$C,aw,au,av,at);case
38:var
ax=d[3],ay=d[2],az=c(a[1][S+1],a),aA=c(a[1][e+1],a);return E(i[1],f,a$D,aA,ay,az,ax);default:return m(a[1][aF+1],a,f,d)}}function
bf(a,f,d){var
i=a[g+1];p(a[1][n+1],a,f,d,i[2][2]);switch(d[0]){case
0:throw[0,r,a$E];case
2:return b(i[1],f,a$G);case
5:var
v=d[2],x=c(a[1][l+1],a);return p(i[1],f,a$H,x,v);case
6:var
z=d[3],A=d[2],B=c(a[1][w+1],a);return aq(i[1],f,a$I,A,B,z);case
7:return m(a[1][l+1],a,f,d[2]);case
11:var
j=d[2];if(0===j[0]){var
o=d[3];if(typeof
o==="number")return 0===o?b(i[1],f,a$J):b(i[1],f,a$K)}else{var
q=d[3];if(typeof
q==="number"){if(0===q){var
C=c(a[1][e+1],a);return p(i[1],f,a$L,C,j)}var
D=c(a[1][e+1],a);return p(i[1],f,a$M,D,j)}}break;case
12:var
F=d[3],G=d[2],H=c(a[1][w+1],a);return aq(i[1],f,a$N,G,H,F);case
15:var
I=d[2],J=c(a[1][h+1],a);return p(i[1],f,a$O,J,I);case
18:return b(i[1],f,a$P);case
19:return b(i[1],f,a$Q);case
20:var
K=d[2],L=c(a[1][h+1],a);return p(i[1],f,a$R,L,K);case
21:var
N=d[2],O=c(a[1][e+1],a);return p(i[1],f,a$S,O,N);case
25:var
P=d[2],Q=c(a[1][M+1],a);return p(i[1],f,a$T,Q,P);case
31:var
R=d[2],S=c(a[1][e+1],a);return p(i[1],f,a$U,S,R);case
32:var
T=d[3],U=d[2],V=c(a[1][w+1],a),W=c(a[1][w+1],a);return E(i[1],f,a$V,W,U,V,T);case
33:var
X=d[2],Y=c(a[1][M+1],a);return p(i[1],f,a$W,Y,X);case
34:var
Z=d[2],_=c(a[1][M+1],a);return p(i[1],f,a$X,_,Z);case
35:var
$=d[2],aa=c(a[1][M+1],a);return p(i[1],f,a$Y,aa,$);case
36:var
ab=d[2],t=b(i[7],d[3],0),ac=[0,t[1],t[2]],ad=c(a[1][w+1],a),ae=b(i[6],ad,a$Z),af=c(a[1][M+1],a);return E(i[1],f,a$0,af,ab,ae,ac);case
39:var
ag=d[2],ah=c(a[1][s+1],a);return p(i[1],f,a$1,ah,ag);case
40:return b(i[1],f,a$2);case
41:var
ai=d[4],aj=d[3],ak=d[2],al=c(a[1][y+1],a),am=c(a[1][e+1],a);return bE(i[1],f,a$3,am,ai,ak,al,aj);case
42:return m(a[1][k+1],a,f,d[2])}var
u=c(a[1][e+1],a);return p(i[1],f,a$F,u,d)}function
bg(a,d,b){var
f=a[g+1];if(24===b[0]){var
h=b[3],i=b[2],j=c(a[1][e+1],a),k=c(a[1][o+1],a);return E(f[1],d,a$4,k,i,j,h)}return m(a[1][o+1],a,d,b)}function
bh(a,f,d){var
j=a[g+1];p(a[1][n+1],a,f,d,j[2][3]);switch(d[0]){case
0:return 0;case
1:return m(a[1][W+1],a,f,d[2]);case
3:return m(a[1][k+1],a,f,d[2]);case
4:return b(j[1],f,a$6);case
6:var
v=d[2],w=c(a[1][o+1],a);return p(j[1],f,a$7,w,v);case
9:var
x=c(j[9],d[2]);return m(j[1],f,a$8,x);case
10:return p(a[1][C+1],a,f,d[2],a$9);case
11:return p(a[1][C+1],a,f,d[2],a$_);case
12:return p(a[1][C+1],a,f,d[2],a$$);case
13:return p(a[1][C+1],a,f,d[2],baa);case
14:return p(a[1][C+1],a,f,d[2],bab);case
15:var
r=d[3],s=d[2];if(0===r[0])return m(j[1],f,bac,s);var
z=c(a[1][o+1],a);return aq(j[1],f,bad,s,z,r);case
16:var
q=d[2];if(0===d[3][0])return m(j[1],f,bae,q);if(O(q,baf)){var
A=d[3],B=c(a[1][$+1],a);return aq(j[1],f,bag,q,B,A)}var
D=d[3],F=c(a[1][$+1],a);return p(j[1],f,bah,F,D);case
17:var
t=d[2];if(O(t,bai)){var
G=d[4],H=d[3],I=c(a[1][i+1],a),J=c(a[1][$+1],a);return bE(j[1],f,baj,t,J,H,I,G)}var
K=d[4],L=d[3],M=c(a[1][i+1],a),N=c(a[1][$+1],a);return E(j[1],f,bak,N,L,M,K);case
20:var
P=d[2],Q=c(a[1][o+1],a);return p(j[1],f,bal,Q,P);case
22:return m(j[1],f,bam,d[2]);case
23:var
S=d[2],T=c(a[1][R+1],a);return p(j[1],f,ban,T,S);case
24:var
U=d[3],V=d[2],X=c(a[1][e+1],a),Y=c(a[1][o+1],a);return E(j[1],f,bao,Y,V,X,U);case
25:var
Z=d[2],_=c(a[1][l+1],a);return p(j[1],f,bap,_,Z);case
26:var
aa=d[2],ab=c(a[1][h+1],a);return p(j[1],f,baq,ab,aa);case
28:var
ac=d[4],ad=d[3],ae=d[2],af=c(a[1][y+1],a),ag=c(a[1][o+1],a);return bE(j[1],f,bar,ag,ac,ae,af,ad);case
29:return m(j[1],f,bas,d[2]);default:var
u=c(a[1][o+1],a);return p(j[1],f,a$5,u,d)}}function
bi(a,e,f){var
d=a[g+1];switch(f[0]){case
5:var
i=f[2];if(5===i[0]){var
n=i[2];if(1===n[0]){var
q=n[2];if(3===q[0])if(!O(q[2],baA))return m(a[1][z+1],a,e,f)}}var
j=f[3],l=b(d[10],i,[0,j,0]),h=l[2],k=l[1];if(c(d[2][74],k)){if(a[ap+1]){var
r=c(a[1][z+1],a),s=b(d[6],r,bat);return p(d[1],e,bau,s,[0,k,h])}if(h)if(23===h[1][0]){if(!h[2]){var
y=c(a[1][o+1],a),A=c(a[1][z+1],a);return E(d[1],e,bay,A,i,y,j)}}else
if(!h[2]){var
w=c(a[1][z+1],a),x=c(a[1][aa+1],a);return E(d[1],e,bax,x,i,w,j)}var
t=c(a[1][z+1],a),u=b(d[6],t,bav),v=c(a[1][aa+1],a);return E(d[1],e,baw,v,k,u,h)}return dd(baz);case
27:var
B=f[2],C=c(a[1][z+1],a);return p(d[1],e,baB,C,B);case
30:var
D=f[2],F=c(a[1][z+1],a);return p(d[1],e,baC,F,D);default:return m(a[1][z+1],a,e,f)}}function
bj(a,f,d){var
e=a[g+1];if(5===d[0]){var
h=d[2];if(5===h[0]){var
i=h[2];if(1===i[0]){var
j=i[2];if(3===j[0])if(!O(j[2],baD)){var
k=b(a[1][aB+1],a,d),l=k[2],n=k[1];if(l){var
q=ab(n,[0,l[1],0]),r=c(a[1][aa+1],a),s=b(e[6],r,baE);return p(e[1],f,baF,s,q)}var
t=c(a[1][o+1],a),u=b(e[6],t,baG);return p(e[1],f,baH,u,n)}}}}return m(a[1][aa+1],a,f,d)}function
bk(a,d,b){var
e=a[g+1];switch(b[0]){case
7:var
f=b[3],h=b[2],i=c(a[1][R+1],a),j=c(a[1][R+1],a);return E(e[1],d,baI,j,h,i,f);case
19:var
k=b[3],l=b[2],n=c(a[1][aw+1],a),o=c(a[1][R+1],a);return E(e[1],d,baJ,o,l,n,k);default:return m(a[1][aw+1],a,d,b)}}function
bl(a,c,b){return m(a[1][R+1],a,c,b)}function
bm(a,d,b){var
e=a[g+1];if(18===b[0]){var
f=b[3],h=b[2],i=c(a[1][ax+1],a),j=c(a[1][ay+1],a);return E(e[1],d,baK,j,h,i,f)}return m(a[1][ax+1],a,d,b)}function
bn(a,d,b){var
e=a[g+1];p(a[1][n+1],a,d,b,e[2][3]);switch(b[0]){case
2:var
f=b[3],h=b[2],i=c(a[1][o+1],a),j=c(a[1][o+1],a);return E(e[1],d,baL,j,h,i,f);case
8:var
k=b[3],l=b[2],q=c(a[1][o+1],a),r=c(a[1][o+1],a);return E(e[1],d,baM,r,l,q,k);case
21:var
s=b[3],t=b[2],u=c(a[1][o+1],a),v=c(a[1][W+1],a);return E(e[1],d,baN,v,t,u,s);default:return m(a[1][ay+1],a,d,b)}}function
bo(c,b,a){return typeof
a==="number"?0===a?b7(b,baO):b7(b,baP):m(c[1][k+1],c,b,a[1])}function
bp(a,d,b){var
j=a[g+1];p(a[1][n+1],a,d,b,j[2][4]);switch(b[0]){case
0:return 0;case
1:return m(a[1][W+1],a,d,b[2]);case
3:return m(a[1][k+1],a,d,b[2]);case
4:var
r=b[2];if(4===r[0]){var
t=r[2];if(1===t[0]){var
v=t[2];if(3===v[0])if(!O(v[2],baR))return p(a[1][aE+1],a,1,d,b)}}break;case
6:var
M=b[2],w=c(a[1][B+1],a),Q=c(f(w,_,xK),w);return p(j[1],d,baS,Q,M);case
7:var
R=b[3],S=b[2],T=c(a[1][i+1],a),x=c(a[1][B+1],a),U=c(f(x,_,z7),x);return E(j[1],d,baT,U,S,T,R);case
11:var
V=c(j[9],b[2]);return m(j[1],d,baU,V);case
12:var
z=b[3],D=b[2];if(0===z[0]){var
X=b[4],Y=c(a[1][e+1],a),Z=c(a[1][i+1],a);return E(j[1],d,baV,Z,D,Y,X)}var
$=b[4],aa=c(a[1][e+1],a),ab=c(a[1][e+1],a),ac=c(a[1][i+1],a);return bx(j[1],d,baW,ac,D,ab,z,aa,$);case
13:return p(a[1][C+1],a,d,b[2],baX);case
14:var
ad=b[6],ae=b[5],ah=b[4],ai=b[3],aj=b[2],ak=c(a[1][P+1],a),al=c(a[1][i+1],a),am=c(a[1][aN+1],a),an=c(a[1][i+1],a),ao=c(a[1][o+1],a);return vH(j[1],d,baY,ao,aj,an,ai,am,ae,al,ah,ak,ad);case
17:return p(a[1][C+1],a,d,b[2],baZ);case
18:return p(a[1][C+1],a,d,b[2],ba0);case
19:return p(a[1][C+1],a,d,b[2],ba1);case
20:return p(a[1][C+1],a,d,b[2],ba2);case
21:var
F=b[3],G=b[2];if(0===F[0])return m(j[1],d,ba3,G);var
ap=c(a[1][A+1],a);return aq(j[1],d,ba4,G,ap,F);case
28:var
H=b[3],I=b[2];if(0===H[0])return m(j[1],d,ba5,I);var
ar=c(a[1][A+1],a);return aq(j[1],d,ba6,I,ar,H);case
29:var
as=b[2],at=c(a[1][ag+1],a);return p(j[1],d,ba7,at,as);case
30:var
J=b[3],K=b[2];if(0===J[0]){var
au=c(a[1][ag+1],a);return p(j[1],d,ba8,au,K)}var
av=c(a[1][ag+1],a),aw=c(a[1][i+1],a);return E(j[1],d,ba9,aw,J,av,K);case
31:var
ax=b[2],ay=c(a[1][P+1],a);return p(j[1],d,ba_,ay,ax);case
34:return m(j[1],d,ba$,b[2]);case
36:var
az=b[2],aA=c(a[1][i+1],a);return p(j[1],d,bba,aA,az);case
37:var
aB=b[3],aC=b[2],aD=c(a[1][N+1],a),aF=c(a[1][N+1],a);return E(j[1],d,bbb,aF,aC,aD,aB);case
38:var
aG=b[3],aH=b[2],aI=c(a[1][e+1],a),aJ=c(a[1][i+1],a);return E(j[1],d,bbc,aJ,aH,aI,aG);case
39:var
aK=b[2],aL=c(a[1][h+1],a);return p(j[1],d,bbd,aL,aK);case
40:var
aM=b[3],aO=b[2],aP=c(a[1][P+1],a),aQ=c(a[1][i+1],a);return E(j[1],d,bbe,aQ,aO,aP,aM);case
43:var
l=b[2];if(5===l[0]){var
aS=l[3],aT=l[2],aU=c(a[1][s+1],a),aV=c(a[1][u+1],a);return E(j[1],d,bbg,aV,aT,aU,aS)}var
aR=c(a[1][u+1],a);return p(j[1],d,bbf,aR,l);case
44:var
aW=b[4],aX=b[3],aY=b[2],aZ=c(a[1][y+1],a),a0=c(a[1][i+1],a);return bE(j[1],d,bbh,a0,aW,aY,aZ,aX)}var
q=c(a[1][af+1],a),L=c(f(q,_,yh),q);return p(j[1],d,baQ,L,b)}function
bq(a,d,b){var
e=a[g+1];p(a[1][n+1],a,d,b,e[2][4]);switch(b[0]){case
2:var
f=b[3],h=b[2];if(1===f[0]){var
j=f[2];if(2===j[0])if(!O(j[2],bbj)){var
o=c(a[1][N+1],a);return p(e[1],d,bbk,o,h)}}var
k=c(a[1][A+1],a),l=c(a[1][A+1],a);return E(e[1],d,bbi,l,h,k,f);case
5:var
q=b[3],r=b[2],s=c(a[1][i+1],a),t=c(a[1][A+1],a);return E(e[1],d,bbl,t,r,s,q);case
32:var
u=b[3],v=b[2],w=c(a[1][A+1],a);return aq(e[1],d,bbm,w,v,u);case
33:var
x=b[3],y=b[2],z=c(a[1][i+1],a),B=c(a[1][A+1],a);return E(e[1],d,bbn,B,y,z,x);default:return m(a[1][N+1],a,d,b)}}function
br(a,d,b){var
e=a[g+1];p(a[1][n+1],a,d,b,e[2][4]);if(26===b[0]){var
f=b[2],h=c(a[1][l+1],a);return p(e[1],d,bbo,h,f)}return m(a[1][A+1],a,d,b)}function
bu(a,k,d){var
j=a[g+1];p(a[1][n+1],a,k,d,j[2][4]);switch(d[0]){case
4:var
q=d[2];switch(q[0]){case
1:var
K=q[2];if(2===K[0]){var
M=K[2];if(!O(M,bbv)){var
ay=d[3],az=c(a[1][A+1],a);return p(j[1],k,bby,az,ay)}if(!O(M,bbw)){var
aw=d[3],ax=c(a[1][A+1],a);return p(j[1],k,bbx,ax,aw)}}break;case
4:var
P=q[2];if(1===P[0]){var
y=P[2];switch(y[0]){case
2:var
Q=y[2],aA=d[3],aB=q[3];if(c(j[11],Q)){var
aC=c(a[1][D+1],a),aD=c(a[1][D+1],a);return bE(j[1],k,bbz,aD,aB,Q,aC,aA)}break;case
3:if(!O(y[2],bbA))return p(a[1][aE+1],a,0,k,d);break}}break}var
w=d[3],I=b(j[12],q,[0,w,0]),r=I[2],x=I[1];if(!a[ap+1])if(c(j[2][75],x)){if(r)if(36===r[1][0]){if(!r[2]){var
as=c(a[1][i+1],a),au=c(a[1][D+1],a);return E(j[1],k,bbu,au,q,as,w)}}else
if(!r[2]){var
aq=c(a[1][D+1],a),ar=c(a[1][D+1],a);return E(j[1],k,bbt,ar,q,aq,w)}var
J=c(a[1][X+1],a),al=c(f(J,240329958,w_),J),am=b(j[6],al,bbr),ao=c(a[1][D+1],a);return E(j[1],k,bbs,ao,x,am,r)}var
ai=c(a[1][D+1],a),aj=b(j[6],ai,bbp);return p(j[1],k,bbq,aj,[0,x,r]);case
8:return b(j[1],k,bbB);case
9:var
aF=d[2],aG=c(a[1][A+1],a);return p(j[1],k,bbC,aG,aF);case
10:var
t=d[2];if(2===t[0]){var
R=t[3];if(1===R[0]){var
S=R[2];if(2===S[0]){var
aK=t[2];if(!O(S[2],bbE)){var
aL=d[3],aM=c(a[1][i+1],a),aN=c(a[1][A+1],a);return E(j[1],k,bbF,aN,aK,aM,aL)}}}}var
aH=d[3],aI=c(a[1][i+1],a),aJ=c(a[1][A+1],a);return E(j[1],k,bbD,aJ,t,aI,aH);case
16:var
bd=d[4],be=d[3],bf=d[2],ad=c(a[1][B+1],a),bg=c(f(ad,_,AD),ad),ae=c(a[1][B+1],a),bh=c(f(ae,_,wU),ae),bi=c(a[1][i+1],a);return bx(j[1],k,bbP,bi,bf,bh,be,bg,bd);case
22:var
bj=d[2],bk=c(a[1][N+1],a);return p(j[1],k,bbQ,bk,bj);case
27:var
v=d[2];switch(v[0]){case
0:var
bm=d[3],bn=c(a[1][G+1],a);return p(j[1],k,bbS,bn,bm);case
24:var
br=d[3],bs=v[3],bt=v[2],bu=c(a[1][G+1],a),bv=c(a[1][e+1],a),bw=c(a[1][o+1],a);return bx(j[1],k,bbU,bw,bt,bv,bs,bu,br);default:var
bo=d[3],bp=c(a[1][G+1],a),bq=c(a[1][o+1],a);return E(j[1],k,bbT,bq,v,bp,bo)}case
41:var
by=d[4],bz=d[3],bA=d[2],ah=c(a[1][Y+1],a),bB=c(f(ah,_,At),ah),bC=c(a[1][l+1],a),bD=c(a[1][F+1],a);return bx(j[1],k,bbV,bD,bz,bC,bA,bB,by);case
42:var
bF=[0,[0,qI,d[2]],d[3]],bG=c(a[1][av+1],a);return p(j[1],k,bbW,bG,bF);case
23:case
24:if(a[V+1]){var
ag=c(a[1][af+1],a),bl=c(f(ag,_,zo),ag);return p(j[1],k,bbR,bl,d)}var
C=0;break;case
15:case
25:case
35:if(a[an+1])var
H=1;else
if(a[V+1])var
H=1;else
var
C=0,H=0;if(H){var
T=c(a[1][af+1],a),aO=c(f(T,_,AE),T);return p(j[1],k,bbG,aO,d)}break;default:var
C=1}if(!C)switch(d[0]){case
15:var
s=d[2],aP=d[1];switch(s[0]){case
0:var
aQ=c(a[1][at+1],a);return p(j[1],k,bbH,aQ,aP);case
2:if(0===s[3][0]){var
U=s[2],aS=s[4];if(c(j[4],U)){var
aT=c(a[1][av+1],a);return p(j[1],k,bbJ,aT,[0,[0,a6,U],aS])}}break}var
aR=c(a[1][ak+1],a);return p(j[1],k,bbI,aR,s);case
23:var
z=d[4],W=d[3],$=d[2];if(23===z[0]){var
ab=c(a[1][Y+1],a),aX=c(f(ab,_,xT),ab),aY=c(a[1][L+1],a),aZ=c(a[1][Z+1],a);return bx(j[1],k,bbL,aZ,$,aY,W,aX,z)}var
aa=c(a[1][Y+1],a),aU=c(f(aa,_,xr),aa),aV=c(a[1][L+1],a),aW=c(a[1][Z+1],a);return bx(j[1],k,bbK,aW,$,aV,W,aU,z);case
24:var
a0=d[4],a1=d[3],a2=d[2],ac=c(a[1][Y+1],a),a3=c(f(ac,_,vO),ac),a4=c(a[1][u+1],a),a5=c(a[1][h+1],a);return bx(j[1],k,bbM,a5,a2,a4,a1,a3,a0);case
25:var
a7=d[3],a8=d[2],a9=c(a[1][ak+1],a),a_=c(a[1][i+1],a);return E(j[1],k,bbN,a_,a8,a9,a7);case
35:var
a$=d[3],ba=d[2],bb=c(a[1][ak+1],a),bc=c(a[1][i+1],a);return E(j[1],k,bbO,bc,ba,bb,a$)}return m(a[1][D+1],a,k,d)}function
bv(b){var
a=ex(b);a[aG+1]=1;return c(f(a,bt,q3),a)}function
bw(a,d,b){var
e=a[g+1];p(a[1][n+1],a,d,b,e[2][18]);switch(b[0]){case
0:var
f=b[3],i=b[2],j=c(a[1][l+1],a),o=c(a[1][l+1],a);return E(e[1],d,bbX,o,i,j,f);case
1:var
q=b[3],r=b[2],s=c(a[1][l+1],a),t=c(a[1][l+1],a);return E(e[1],d,bbY,t,r,s,q);case
4:return m(a[1][k+1],a,d,b[2]);default:return m(a[1][h+1],a,d,b[2])}}function
by(a,e,d,b){var
f=c(b,d);return m(a[1][aJ+1],a,f,e)}function
bA(e,f,b){var
d=e[g+1],h=c(d[8][14],b),j=c(d[8][15],b),k=c(d[8][17],b),l=[17,b,a(q+(c(d[8][19],b)-k|0))],n=[4,b,[1,b,[2,b,bb0]],[4,b,[4,b,[4,b,[1,b,[3,b,bbZ]],[34,b,c(d[2][71],h)]],[17,b,a(q+j)]],l]];return m(e[1][i+1],e,f,n)}function
bB(a,d,b){var
e=a[g+1];if(6===b[0]){var
f=b[3],h=b[2],i=c(a[1][x+1],a),j=c(a[1][v+1],a);return E(e[1],d,bb1,j,h,i,f)}return m(a[1][v+1],a,d,b)}function
bC(a,e,d){var
f=a[g+1];switch(d[0]){case
0:return 0;case
1:var
i=d[3];m(a[1][ac+1],a,e,d[2]);var
j=c(a[1][U+1],a);b(f[1],e,j);return m(a[1][ac+1],a,e,i);case
2:var
l=d[4],n=d[3],o=d[2],p=c(a[1][u+1],a),q=c(a[1][s+1],a),r=c(a[1][h+1],a);return bx(f[1],e,bb2,r,o,q,n,p,l);case
3:var
t=d[3],v=d[2],w=c(a[1][s+1],a),x=c(a[1][h+1],a);return E(f[1],e,bb3,x,v,w,t);default:return m(a[1][k+1],a,e,d[2])}}function
bD(a,d,c){var
e=a[g+1];return O(c,bb4)?m(a[1][h+1],a,d,c):b(e[1],d,bb5)}function
bF(a,d,b){var
e=b[2],f=b[1],h=a[g+1];if(0===e[0])return m(a[1][aD+1],a,d,f);var
i=c(a[1][s+1],a),j=c(a[1][aD+1],a);return E(h[1],d,bb6,j,f,i,e)}function
bG(a,b){var
d=a[g+1],e=c(a[1][aL+1],a);return m(d[6],e,bb7,b)}function
bH(c,b,a){switch(a[0]){case
3:return m(c[1][aA+1],c,[0,[0,a[2],a[3]],b],a[4]);case
5:var
d=a[2],e=[0,a[3]];return[0,aj(b),d,e];default:return[0,aj(b),a,0]}}function
bI(e,c,a,b){var
d=e[g+1];return 45===I(a,0)?p(d[1],c,bb8,a,b):p(d[1],c,bb9,a,b)}function
bJ(c,a){return b(c[g+1][1],a,bb_)}function
bK(c,a){return b(c[g+1][1],a,bb$)}function
bL(a,f,b){var
h=a[g+1];if(22===b[0]){var
d=b[3];if(4===d[0]){var
i=d[3],j=d[2],k=b[2],l=c(a[1][e+1],a),n=c(a[1][S+1],a),o=c(a[1][e+1],a);return bx(h[1],f,bca,o,k,n,j,l,i)}}return m(a[1][e+1],a,f,b)}function
bM(a,h,f){var
d=a[g+1],e=b(d[2][55],f,0);if(e){var
i=c(a[1][aO+1],a),j=b(d[6],i,bcb);return p(d[1],h,bcc,j,e)}return 0}function
bN(a,d,b){var
f=a[g+1],h=b[2],i=b[1],j=c(a[1][e+1],a),k=c(a[1][e+1],a);return E(f[1],d,bcd,k,i,j,h)}function
bO(a,h,e){var
d=a[g+1],i=e[1],f=c(d[13],e[2]),j=f[2],k=f[1],l=c(a[1][v+1],a),m=c(a[1][z+1],a),n=b(d[6],m,bce);return E(d[1],h,bcf,n,[0,i,k],l,j)}function
bP(a,h,e){var
d=a[g+1],j=e[1],f=c(d[14],e[2]),k=f[2],l=f[1],m=c(a[1][i+1],a),n=c(a[1][am+1],a),o=b(d[6],n,bcg);return E(d[1],h,bch,o,[0,j,l],m,k)}function
bQ(a,n,d,l){var
e=a[g+1],h=b(a[1][aC+1],a,l),i=h[2],j=h[1];if(i){var
o=ab(j,[0,i[1],0]),k=c(a[1][B+1],a),p=c(f(k,924321259,qT),k),q=b(e[6],p,bci),r=n?b(e[1],d,bcj):b(e[1],d,bck);return b(r,q,o)}return m(a[1][aM+1],a,d,j)}function
bR(a,h,d){var
e=a[g+1];if(d){if(d[2]){var
i=c(a[1][B+1],a),k=c(f(i,_,wk),i),l=b(e[6],k,bcl);return p(e[1],h,bcm,l,d)}var
m=d[1],j=c(a[1][B+1],a),n=c(f(j,_,xB),j);return p(e[1],h,bcn,n,m)}return b(e[1],h,bco)}function
bS(d,a){switch(a[0]){case
1:var
e=a[2];if(3===e[0])if(!O(e[2],bcp))return bcq;break;case
4:var
c=a[2];if(4===c[0]){var
f=c[2];if(1===f[0]){var
g=f[2];if(3===g[0])if(!O(g[2],bcr)){var
i=c[3],h=b(d[1][aC+1],d,a[3]);return[0,[0,i,h[1]],h[2]]}}}break}return[0,0,[0,a]]}function
bT(d,a){switch(a[0]){case
1:var
e=a[2];if(3===e[0])if(!O(e[2],bcs))return bct;break;case
5:var
c=a[2];if(5===c[0]){var
f=c[2];if(1===f[0]){var
g=f[2];if(3===g[0])if(!O(g[2],bcu)){var
i=c[3],h=b(d[1][aB+1],d,a[3]);return[0,[0,i,h[1]],h[2]]}}}break}return[0,0,[0,a]]}function
bU(a,d,b){var
e=a[g+1];p(a[1][n+1],a,d,b,e[2][15]);switch(b[0]){case
0:return 0;case
1:var
l=b[3],o=b[2],h=c(a[1][B+1],a);m(f(h,ad$,xt),h,d,o);var
j=c(a[1][B+1],a);return m(f(j,ad$,Ag),j,d,l);case
2:var
q=b[3],r=b[2],s=c(a[1][i+1],a),t=c(a[1][W+1],a);return E(e[1],d,bcv,t,r,s,q);default:return m(a[1][k+1],a,d,b[2])}}function
bV(a,d,h){var
f=a[g+1];p(a[1][n+1],a,d,h,f[2][14]);switch(h[0]){case
0:return 0;case
1:var
s=h[3];m(a[1][L+1],a,d,h[2]);var
t=c(a[1][U+1],a);b(f[1],d,t);return m(a[1][L+1],a,d,s);case
2:var
o=h[3],j=h[2],q=24===j[0]?[0,0,o]:c(f[14],o),l=q[2],r=q[1];if(1===j[0])if(2===j[2][0]){if(38===l[0]){var
B=l[3],C=l[2],D=c(a[1][i+1],a),F=c(a[1][e+1],a),G=c(a[1][am+1],a),H=b(f[6],G,bcA);return bx(f[1],d,bcB,H,[0,[0,a6,j],r],F,B,D,C)}var
w=c(a[1][i+1],a),x=c(a[1][am+1],a),y=m(f[15],x,bcy,bcx),A=c(a[1][z+1],a);return bx(f[1],d,bcz,A,j,y,r,w,l)}var
u=c(a[1][i+1],a),v=c(a[1][z+1],a);return E(f[1],d,bcw,v,j,u,o);default:return m(a[1][k+1],a,d,h[2])}}function
bW(b,c,a){var
d=b[g+1];return qI<=a[1]?m(d[1],c,bcC,a[2]):m(b[1][z+1],b,c,a[2])}function
bX(a,d,b){var
e=a[g+1];switch(b[0]){case
0:return 0;case
1:var
p=b[3],q=b[2],r=c(a[1][ai+1],a),s=c(a[1][ai+1],a);return E(e[1],d,bcD,s,q,r,p);case
2:var
h=b[3],i=b[2];if(0===h[0]){var
t=b[4],j=c(a[1][X+1],a),u=c(f(j,_,xW),j),v=c(a[1][o+1],a);return E(e[1],d,bcE,v,i,u,t)}var
w=b[4],l=c(a[1][X+1],a),x=c(f(l,_,zP),l),n=c(a[1][X+1],a),y=c(f(n,_,zK),n),z=c(a[1][o+1],a);return bx(e[1],d,bcF,z,i,y,h,x,w);default:return m(a[1][k+1],a,d,b[2])}}function
bY(a,d,b){var
e=a[g+1];if(0===b[0]){var
f=b[1],h=c(a[1][at+1],a);return p(e[1],d,bcG,h,f)}return m(a[1][ai+1],a,d,b)}function
bZ(a,d,b){var
h=a[g+1];switch(b[0]){case
7:var
j=b[3],k=b[2],l=c(a[1][P+1],a),e=c(a[1][B+1],a),n=c(f(e,5741471,xf),e);return E(h[1],d,bcH,n,k,l,j);case
31:return m(a[1][P+1],a,d,b[2]);default:return m(a[1][i+1],a,d,b)}}function
b0(c,b,a){return m(c[g+1][1],b,bcI,a)}function
b1(c,d,a){var
e=c[g+1];return typeof
a==="number"?0===a?b(e[1],d,bcJ):0:m(c[1][k+1],c,d,a[1])}function
b2(c,d,a){var
e=c[g+1];return typeof
a==="number"?0===a?b(e[1],d,bcK):0:m(c[1][k+1],c,d,a[1])}function
b3(c,d,a){var
e=c[g+1];return typeof
a==="number"?1===a?b(e[1],d,bcL):0:m(c[1][k+1],c,d,a[1])}function
b4(c,d,a){var
e=c[g+1];return typeof
a==="number"?0===a?b(e[1],d,bcM):0:m(c[1][k+1],c,d,a[1])}function
b5(c,d,a){var
e=c[g+1];return typeof
a==="number"?0===a?b(e[1],d,bcN):0:m(c[1][k+1],c,d,a[1])}function
b6(c,d,a){var
e=c[g+1];return typeof
a==="number"?0===a?b(e[1],d,bcO):0:m(c[1][k+1],c,d,a[1])}function
b8(a,d,b){var
f=a[g+1];if(24===b[0]){var
h=b[3],i=b[2],j=c(a[1][K+1],a),k=c(a[1][K+1],a);return E(f[1],d,bcP,k,i,j,h)}return m(a[1][e+1],a,d,b)}function
b9(a,h,d){var
f=a[g+1];if(d){if(d[2]){var
i=c(a[1][e+1],a),j=b(f[6],i,bcQ);return p(f[1],h,bcR,j,d)}var
k=d[1],l=c(a[1][e+1],a);return p(f[1],h,bcS,l,k)}return 0}function
b_(h,d,f){var
a=h[g+1];if(O(f,bcT)){if(O(f,bcU)){if(O(f,bcV)){if(O(f,bcW)){if(O(f,bcX)){if(0!==h[aG+1]){if(!O(f,bc2))return b(a[1],d,bc7);if(!O(f,bc3))return b(a[1],d,bc6);if(!O(f,bc4))return b(a[1],d,bc5)}var
e=c(a[19],f);if(typeof
e!=="number")switch(e[0]){case
1:return m(a[1],d,bcZ,e[1]);case
2:case
3:case
4:var
i=e[1];if(c(a[18],i))return m(a[1],d,bc0,i);var
l=typeof
e==="number"?0:3===e[0]?1:0;if(!l){var
j=e[1];if(e7(j,a[17]))return m(a[1],d,bc1,j)}break}if(typeof
e!=="number")switch(e[0]){case
2:case
3:case
4:return b7(d,e[1])}var
k=c(a[16][2],e);return aU(c(bs(bcY),k))}return b(a[1],d,bc8)}return b(a[1],d,bc9)}return b(a[1],d,bc_)}return b(a[1],d,bc$)}return b(a[1],d,bda)}function
b$(e,d,b){var
a=e[g+1],f=e[ao+1];if(o$===f){var
h=c(a[20][5],a[21]),i=function(c,d){return m(a[1],b,bdb,c)};return m(a[22],d,i,h)}if(Qy===f){p(a[1],b,bdc,a[8][29],d);var
j=c(a[20][5],a[21]),k=function(c){return p(a[1],b,bdd,c,a[8][29])};return m(a[22],d,k,j)}return 0}function
ca(c,b){var
a=ex(c);a[ap+1]=b;return a}function
cb(b){var
a=ex(b);a[ao+1]=Qy;return a}function
cc(c,b){var
a=ex(c),d=b?o$:xx;a[ao+1]=d;return a}function
cd(c,b){var
a=ex(c);a[j+1]=b;return a}function
ce(a){return a[j+1]}function
cf(a){return bde}function
cg(a){return bdf}function
ch(a){return bdg}function
ci(b){var
a=ex(b);a[an+1]=0;a[V+1]=0;return a}function
cj(b){var
a=ex(b);a[V+1]=0;return a}function
ck(b){var
a=ex(b);a[V+1]=1;return a}cm(ad,[0,X,function(b){var
a=ex(b);a[an+1]=1;return a},B,ck,Y,cj,af,ci,U,ch,H,cg,aI,cf,aY,ce,aT,cd,aX,cc,aV,cb,aW,ca,aJ,b$,h,b_,ar,b9,K,b8,F,b6,ah,b5,Z,b4,az,b3,aH,b2,Q,b1,k,b0,P,bZ,ak,bY,ai,bX,am,bW,L,bV,ag,bU,aB,bT,aC,bS,aM,bR,aE,bQ,av,bP,aK,bO,aP,bN,M,bM,aO,bL,aS,bK,au,bJ,C,bI,aA,bH,al,bG,aL,bF,aD,bD,ac,bC,aQ,bB,at,bA,n,by,l,bw,W,bv,i,bu,D,br,A,bq,N,bp,aN,bo,o,bn,ay,bm,ax,bl,R,bk,aw,bj,aa,bi,z,bh,$,bg,w,bf,e,be,aF,bd,S,bc,J,bb,y,ba,s,a$,ae,a_,u,a9,as,a8,v,a7,x,a5,T,a4,G,a3,a0,a2,aZ,a1]);return function(b){return function(c,a){var
d=a?a[1]:0;return function(a){var
e=a?a[1]:1;return function(h){var
a=aR(c,ad);a[an+1]=0;a[V+1]=0;a[j+1]=bdh;a[t+1]=bdi;var
f=e?o$:xx;a[ao+1]=f;a[ap+1]=d;a[aG+1]=0;a[g+1]=b;return a}}}}},kU);var
M=[0,A,l,c8,t,c9,n,K,g,G,J,C,H,L,j,y,h,Gz,D,F,k,B,dc],de=kU[1],df=kU[2];is(u,[0,c(kU[1],M),df,de,M]);function
N(d,g,f){function
e(d,a){try{b(g,a,f)}catch(a){a=s(a);c(d,0);throw a}return c(d,0)}if(d){var
a=rI(apG,jP,d[1]),h=si(a);return e(function(b){return mV(a)},h)}return e(function(a){return 0},iA)}function
v(b,a){var
d=c(a,p(u[1],0,0,0,0));return function(a){return N(b,d,a)}}function
dg(d,b,a){return c(v(b,function(a){return c(f(a,VG,450),a)}),a)}return[0,g,l,h,x,S,T,U,V,W,X,Y,dg,function(d,b,a){return c(v(b,function(a){return c(f(a,$8,ahd),a)}),a)},Z,$,aa,ac,ad,ae,ag,ah,ai,ak,al,am,an,ao,ap,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aM,aN,aO,aP,aQ,aS,aT,aV,aW,aX,aY,aZ,a0,a1,a3,a4,a5,a7,a8,a9,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bu,bv,bw,by,bB,bC,bD,bF,bG,bH,bI,bJ,bK,bM,bN,bO,bP,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b0,b1,b2,b3,b4,b5,b6,b8,b9,b_,b$,ca,cb,cc,cd,ce,cf,cg,ch,cj,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,cA,cB,cC,cD,cE,cF,cG,cH,cI,cJ,cK,cL,cM,cN,cO,cP,cQ,cR,cS,cT,cV,cX,cY,cZ,c0,c1,c2,c3,c4,c5,c6,c7,y,n,F,C,D,G,H,J,K,j,u,N,v]},bdo=[0,0,0,0],beK=function(a){var
j=a[1],k=a[2],n=a[3],o=a[4],q=a[5],r=a[6],s=a[7],t=a[8],u=a[9],v=a[10],w=a[11],x=a[14],y=a[15],z=a[16],B=a[17],C=a[18],D=a[19],F=a[20],G=a[21],H=a[22],I=a[23],J=a[24],K=a[25],L=a[26],M=a[27],N=a[28],P=a[29],Q=a[30],R=a[31],S=a[32],T=a[33],U=a[34],V=a[35],W=a[36],X=a[37],Y=a[38],Z=a[39],$=a[40],aa=a[41],ab=a[42],ac=a[43],ad=a[44],ae=a[45],af=a[46],ag=a[47],ah=a[48],ai=a[49],aj=a[50],ak=a[51],al=a[52],am=a[53],an=a[54],ao=a[55],ap=a[56],ar=a[57],as=a[58],at=a[59],au=a[60],av=a[61],aw=a[62],ax=a[63],ay=a[64],az=a[65],aA=a[66],aB=a[67],aC=a[68],aD=a[69],aE=a[70],aF=a[71],aG=a[72],aH=a[73],aI=a[74],aJ=a[75],aK=a[76],aL=a[77],aM=a[78],aN=a[79],aO=a[80],aP=a[81],aQ=a[82],aS=a[83],aT=a[84],aV=a[85],aW=a[86],aX=a[87],aY=a[88],aZ=a[89],a0=a[90],a1=a[91],a3=a[92],a4=a[93],a5=a[94],a7=a[95],a8=a[96],a9=a[97],a_=a[98],a$=a[99],ba=a[ci],bb=a[jB],bc=a[h_],bd=a[l1],be=a[l9],bf=a[di],bg=a[qP],bh=a[mB],bi=a[gj],bj=a[qx],bk=a[fn],bl=a[gi],bm=a[bL],bn=a[ms],bo=a[jt],bp=a[e1],bq=a[jv],br=a[im],bt=a[jV],bu=a[md],bv=a[fr],bw=a[lE],by=a[fD],bz=a[ck],bA=a[ep],bB=a[cW],bC=a[dW],bD=a[cU],bE=a[a2],bF=a[zx],bG=a[qo],bH=a[zk],bI=a[ra],bJ=a[wE],bK=a[yr],bM=a[x$],bN=a[x_],bO=a[wo],bP=a[ww],bQ=a[wz],bR=a[rr],bS=a[rt],bT=a[yC],bU=a[Ac],bV=a[Aw],bW=a[z6],bX=a[x1],bY=a[An],bZ=a[Al],b0=a[yN],b1=a[rl],b2=a[wp],b3=a[A6],b4=a[yZ],b5=a[yQ],b6=a[z1],b8=a[yF],b9=a[v8],b_=a[zJ],b$=a[jF],ca=a[jX],cb=a[lY],cc=a[o5],cd=a[yV],ce=a[qs],cf=a[qe],cg=a[l8],ch=a[l0],cj=a[lJ],cn=a[js],co=a[ml],cp=a[mG],cq=a[mi],cr=a[lC],cs=a[l2],ct=a[l5],cu=a[mI],cv=a[j0],cw=a[ll],cx=a[rg],l=t9(a),e=[];function
cy(a){var
b=1-e7(a,bdq);if(b){var
d=c(l[p8],a);if(!d)return e7(a,bdp);var
e=d}else
var
e=b;return e}var
d=hy(bdo,[0,l[jy][2]]);if(!d[1])np(bdm,function(n){var
d=ds(n,bdr),a=cl(n,bdj,bdl),j=a[1],x=a[4],t=a[6],y=a[7],z=a[9],A=a[10],i=a[12],B=a[13],C=a[17],D=a[18],r=a[20],h=a[21],v=a[22],F=a[25],G=a[26],o=a[28],k=a[31],q=a[32],H=a[33],e=a[35],w=a[36],I=a[38],u=a[39],J=a[41],K=a[42],s=a[46],M=a[2],N=a[3],P=a[5],Q=a[8],R=a[11],S=a[14],T=a[15],U=a[16],V=a[19],W=a[23],X=a[24],Y=a[27],Z=a[29],$=a[30],aa=a[34],ab=a[37],ac=a[40],ad=a[43],ae=a[44],af=a[45],g=hw(n,bdk,0,bdn,l[jy],0),L=g[2],ag=g[1],ah=g[5],ai=g[11],aj=g[15],ak=g[18],al=g[19],am=g[21],an=g[22],ao=g[36],ap=g[49],ar=g[69],as=g[71],at=g[73];function
au(a,f,e){var
g=a[d+1];p(a[1][h+1],a,f,e,g[1][2][11]);if(2===e[0]){var
i=e[2];if(typeof
i==="number"){if(0!==i){var
n=e[4],q=e[3];if(0===n[0]){var
v=c(a[1][o+1],a);return p(g[2],f,bdu,v,q)}var
w=c(a[1][u+1],a),x=c(a[1][o+1],a);return E(g[2],f,bdv,x,q,w,n)}var
k=e[3];if(2===k[0]){var
l=e[4],m=k[2];if(0===l[0]){var
r=c(a[1][j+1],a);return p(g[2],f,bds,r,m)}var
s=c(a[1][u+1],a),t=c(a[1][j+1],a);return E(g[2],f,bdt,t,m,s,l)}}}return b(c(ai,a),f,e)}function
av(a,f,e){var
g=a[d+1];p(a[1][h+1],a,f,e,g[1][2][9]);switch(e[0]){case
1:var
k=e[2];if(typeof
k==="number"){if(0!==k){var
q=e[4],r=e[3];if(0===q[0]){var
w=c(a[1][o+1],a);return p(g[2],f,bdy,w,r)}var
x=c(a[1][u+1],a),y=c(a[1][o+1],a);return E(g[2],f,bdz,y,r,x,q)}var
l=e[3];if(2===l[0]){var
m=e[4],n=l[2];if(0===m[0]){var
s=c(a[1][j+1],a);return p(g[2],f,bdw,s,n)}var
t=c(a[1][u+1],a),v=c(a[1][j+1],a);return E(g[2],f,bdx,v,n,t,m)}}break;case
2:var
z=e[3],A=e[2],B=c(a[1][I+1],a),C=c(a[1][i+1],a);return E(g[2],f,bdA,C,A,B,z)}return b(c(aj,a),f,e)}function
aw(a,e,b){var
f=a[d+1],g=c(a[1][z+1],a);return p(f[2],e,bdB,g,b)}function
ax(a,f,e){var
g=a[d+1];p(a[1][h+1],a,f,e,g[1][2][6]);if(2===e[0]){var
i=c(a[1][v+1],a);return p(g[2],f,bdC,i,e)}return b(c(as,a),f,e)}function
ay(a,f,e){var
g=a[d+1];p(a[1][h+1],a,f,e,g[1][2][6]);if(2===e[0]){var
i=e[3],j=e[2],k=c(a[1][A+1],a),l=c(a[1][v+1],a);return E(g[2],f,bdD,l,j,k,i)}return b(c(ao,a),f,e)}function
az(a,f,e){var
g=a[d+1];if(6===e[0]){var
h=e[2],i=a[L+1],j=c(a[1][k+1],a);return aq(g[2],f,bdE,j,h,i)}return b(c(at,a),f,e)}function
aA(a,f,b){var
g=a[d+1];if(27===b[0]){var
i=b[3],j=b[2],k=b[1],l=function(a){return k};p(a[1][h+1],a,f,b,l);var
n=c(a[1][w+1],a),o=c(a[1][w+1],a);return E(g[2],f,bdF,o,j,n,i)}return m(a[1][e+1],a,f,b)}function
aB(a,h,g){var
f=a[d+1];switch(g[0]){case
3:var
k=g[3],l=g[2],m=b(f[1][oZ],l,[0,k,0]),j=m[2],o=m[1];if(j)if(!j[2]){var
s=c(a[1][i+1],a),t=c(a[1][i+1],a);return E(f[2],h,bdI,t,l,s,k)}var
q=c(a[1][i+1],a),r=b(f[1][fB],q,bdG);return p(f[2],h,bdH,r,[0,o,j]);case
13:var
u=g[3],n=b(f[1][oZ],g[2],0),v=n[2],w=n[1],x=c(a[1][e+1],a),y=c(a[1][e+1],a),z=b(f[1][fB],y,bdJ);return E(f[2],h,bdK,z,[0,w,v],x,u);default:return b(c(al,a),h,g)}}function
aC(a,g,f){var
j=a[d+1];p(a[1][h+1],a,g,f,j[1][2][2]);switch(f[0]){case
6:var
k=f[3],l=f[2],m=c(a[1][i+1],a);return aq(j[2],g,bdL,l,m,k);case
8:var
n=f[3],o=f[2],q=c(a[1][i+1],a),r=c(a[1][i+1],a);return E(j[2],g,bdM,r,o,q,n);case
33:var
s=f[2],t=c(a[1][e+1],a);return p(j[2],g,bdN,t,s);case
34:var
u=f[2],v=c(a[1][e+1],a);return p(j[2],g,bdO,v,u);case
35:var
w=f[2],x=c(a[1][e+1],a);return p(j[2],g,bdP,x,w);case
36:var
y=f[3],z=f[2],A=c(a[1][e+1],a),B=c(a[1][e+1],a);return E(j[2],g,bdQ,B,z,A,y);default:return b(c(ar,a),g,f)}}function
aD(a,g,f){var
k=a[d+1];p(a[1][h+1],a,g,f,k[1][2][2]);switch(f[0]){case
8:var
o=f[3],q=f[2],r=c(a[1][e+1],a),s=c(a[1][i+1],a);return E(k[2],g,bdR,s,q,r,o);case
9:var
l=f[5],m=f[4],t=f[3],u=f[2],v=c(a[1][y+1],a),w=c(a[1][j+1],a);E(k[2],g,bdS,w,u,v,t);if(0!==m[0]){var
A=c(a[1][e+1],a);p(k[2],g,bdV,A,m)}if(0===l)return 0;var
x=c(a[1][ab+1],a),z=b(k[1][fB],x,bdT);return p(k[2],g,bdU,z,l);case
22:var
n=f[3];if(30===n[0]){var
B=n[2],C=f[2],D=c(a[1][e+1],a),F=c(a[1][e+1],a);return E(k[2],g,bdW,F,C,D,B)}break}return b(c(ak,a),g,f)}function
aE(a,f,e){var
g=a[d+1];p(a[1][h+1],a,f,e,g[1][2][4]);if(2===e[0]){var
i=e[3];if(1===i[0]){var
j=i[2];if(2===j[0]){var
k=e[2];if(!O(j[2],bdX)){var
l=c(a[1][R+1],a);return p(g[2],f,bdY,l,k)}}}}return b(c(am,a),f,e)}function
aF(a,f,e){var
g=a[d+1];p(a[1][h+1],a,f,e,g[1][2][4]);switch(e[0]){case
8:return b(g[2],f,bdZ);case
10:var
l=e[3],m=e[2],n=c(a[1][k+1],a),o=c(a[1][H+1],a);return E(g[2],f,bd0,o,m,n,l);case
15:var
i=e[2];if(2===i[0])if(0===i[3][0]){var
j=i[2],r=i[4];if(c(g[1][2][72],j)){var
s=c(a[1][D+1],a);return p(g[2],f,bd2,s,[0,[0,a6,j],r])}}var
q=c(a[1][G+1],a);return p(g[2],f,bd1,q,i);case
42:var
t=[0,[0,qI,e[2]],e[3]],u=c(a[1][D+1],a);return p(g[2],f,bd3,u,t);default:return b(c(an,a),f,e)}}function
aG(a,q,e,j){var
f=a[d+1],g=b(a[1][X+1],a,j),h=g[2],i=g[1];if(h){var
l=h[1],n=c(a[1][k+1],a),o=c(a[1][k+1],a),p=b(f[1][fB],o,bd4);return E(f[2],e,bd5,p,i,n,l)}return m(a[1][$+1],a,e,i)}function
aH(a,g,e){var
f=a[d+1];if(5===e[0]){var
h=e[2];if(5===h[0]){var
i=h[2];if(1===i[0]){var
j=i[2];if(3===j[0])if(!O(j[2],bd6)){var
k=b(a[1][W+1],a,e),l=k[2],m=k[1];if(l){var
n=l[1],o=c(a[1][r+1],a),q=c(a[1][r+1],a),s=b(f[1][fB],q,bd7);return E(f[2],g,bd8,s,m,o,n)}var
t=c(a[1][r+1],a),u=b(f[1][fB],t,bd9);return p(f[2],g,bd_,u,m)}}}}return b(c(ap,a),g,e)}function
aI(a,e,b){var
f=a[d+1];p(a[1][h+1],a,e,b,f[1][2][18]);switch(b[0]){case
0:var
g=b[3],i=b[2],k=c(a[1][q+1],a),l=c(a[1][q+1],a);return E(f[2],e,bd$,l,i,k,g);case
1:var
n=c(a[1][o+1],a);return p(f[2],e,bea,n,b);case
4:return m(a[1][K+1],a,e,b[2]);default:return m(a[1][j+1],a,e,b[2])}}function
aJ(a,e,b){var
f=a[d+1];p(a[1][h+1],a,e,b,f[1][2][18]);if(1===b[0]){var
g=b[3],i=b[2],j=c(a[1][q+1],a),k=c(a[1][q+1],a);return E(f[2],e,beb,k,i,j,g)}return m(a[1][q+1],a,e,b)}function
aK(a,g,f){var
h=a[d+1];if(0===f[0])return b(h[2],g,bec);var
i=c(a[1][e+1],a);return p(h[2],g,bed,i,f)}function
aL(a,g,e){var
h=a[d+1];switch(e[0]){case
0:return 0;case
1:var
p=e[3],q=e[2],i=c(a[1][x+1],a),u=c(f(i,acY,yS),i),v=c(a[1][F+1],a);return E(h[2],g,bee,v,q,u,p);case
2:var
j=e[3],k=e[2];if(0===j[0]){var
w=e[4];if(!a[s+1])b(h[2],g,beg);var
l=c(a[1][t+1],a),y=c(f(l,_,yX),l),z=c(a[1][r+1],a);return E(h[2],g,bef,z,k,y,w)}var
A=e[4];if(!a[s+1])b(h[2],g,bei);var
n=c(a[1][t+1],a),B=c(f(n,_,Ay),n),o=c(a[1][t+1],a),C=c(f(o,_,zS),o),D=c(a[1][r+1],a);return bx(h[2],g,beh,D,k,C,j,B,A);default:return m(a[1][K+1],a,g,e[2])}}function
aM(a,g,e){var
h=a[d+1];if(0===e[0])return b(h[2],g,bej);var
i=c(a[1][B+1],a),j=c(f(i,acY,vS),i);return p(h[2],g,bek,j,e)}function
aN(a,h,f){var
g=a[d+1];if(f){if(f[2]){var
i=c(a[1][e+1],a),j=b(g[1][fB],i,bel);return p(g[2],h,bem,j,f)}var
k=f[1],l=c(a[1][e+1],a);return p(g[2],h,ben,l,k)}return 0}function
aO(i,e,g){var
a=i[d+1];if(O(g,beo)){if(O(g,bep)){if(O(g,beq)){if(O(g,ber)){if(O(g,bes)){var
f=c(a[1][mp],g);if(typeof
f!=="number")switch(f[0]){case
1:return m(a[2],e,beu,f[1]);case
2:case
3:case
4:var
h=f[1];if(c(a[3],h))return m(a[2],e,bev,h);break}if(typeof
f!=="number")switch(f[0]){case
2:case
3:case
4:return b7(e,f[1])}var
j=c(a[1][3][2],f);return aU(c(bs(bet),j))}return b(a[2],e,bew)}return b(a[2],e,bex)}return b(a[2],e,bey)}return b(a[2],e,bez)}return b(a[2],e,beA)}function
aP(a,e,b){var
f=a[d+1];function
h(i,d,b){function
g(a,b){return h(i,a,b)}var
j=0;function
l(a,b){return h(j,a,b)}switch(b[0]){case
7:var
e=b[3];p(f[2],d,beB,l,b[2]);if(0!==i)if(23===e[0]){var
n=e[4],o=e[3],q=e[2],r=c(a[1][J+1],a),s=c(a[1][C+1],a);return bx(f[2],d,beC,s,q,r,o,g,n)}return g(d,e);case
23:var
t=b[4],u=b[3],v=b[2];if(i){var
w=c(a[1][J+1],a),x=c(a[1][C+1],a);return bx(f[2],d,beD,x,v,w,u,g,t)}var
y=c(a[1][k+1],a);return p(f[2],d,beE,y,b);case
31:return g(d,b[2]);default:return m(a[1][k+1],a,d,b)}}return h(1,e,b)}function
aQ(b){var
a=ex(b);a[s+1]=1;return a}function
aS(b){var
a=ex(b);a[s+1]=0;return a}function
aT(a){return a}function
aV(a){return a}function
aW(a){return a}function
aX(a){return a}function
aY(a){return beF}function
aZ(a){return beG}cm(n,[0,ad,function(a){return beH},M,aZ,N,aY,t,aX,P,aW,T,aV,U,aT,x,aS,B,aQ,S,aP,j,aO,y,aN,G,aM,F,aL,Q,aK,o,aJ,q,aI,V,aH,Z,aG,k,aF,H,aE,e,aD,i,aC,aa,aB,w,aA,z,az,v,ay,A,ax,Y,aw,I,av,ac,au]);return function(b){var
g=b[1];return function(c,a){var
e=a?a[1]:1;return function(a){var
f=a?a[1]:1;return function(i){var
a=aR(c,n);aq(ag,b[2],a,[0,e],[0,f],0);a[L+1]=beI;a[ah+1]=beJ;var
h=f?o$:xx;a[ae+1]=h;a[af+1]=e;a[s+1]=1;a[d+1]=g;return hx(c,a,n)}}}}},d);var
h=[0,[0,l,A,cy],l[jy][4]],cz=d[1],cA=d[2];is(e,[0,c(d[1],h),cA,cz,h]);var
i=l[mg];function
g(d,a){return b(i,d,c(a,p(e[1],0,0,0,0)))}function
cB(d,b,a){return c(g(b,function(a){return c(f(a,VG,yM),a)}),a)}return[0,j,k,n,o,q,r,s,t,u,v,w,cB,function(d,b,a){return c(g(b,function(a){return c(f(a,$8,AO),a)}),a)},x,y,z,B,C,D,F,G,H,I,J,K,L,M,N,P,Q,R,S,T,U,V,W,X,Y,Z,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aS,aT,aV,aW,aX,aY,aZ,a0,a1,a3,a4,a5,a7,a8,a9,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bt,bu,bv,bw,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b0,b1,b2,b3,b4,b5,b6,b8,b9,b_,b$,ca,cb,cc,cd,ce,cf,cg,ch,cj,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,e,i,g]},hP=aMA(Go),GA=a2M(Go),n9=t5(GA),t_=n9[3],u=a9f([0,n9[1],n9[2],[0,t_[1],t_[3],t_[2]],n9[53]]),fc=a6G(hP),hQ=function(cB){var
a=fc[1],d=hP[1],cA=[0,[0,a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[20],a[21]],fc[2],fc[3],fc[4],fc[5],fc[6],fc[7],fc[8],fc[9],fc[10]];function
e(b,a){var
c=d[28];return m(dd(aJC),c,b,a)}var
f=[0,e];function
p(c,a){return b(f[1],c,a)}var
q=c(u[5][1],aJD),s=c(u[5][1],aJE),t=c(u[5][1],aJF),v=c(u[5][1],aJG),w=c(u[5][1],aJH),x=c(u[5][1],aJI),y=c(u[5][1],aJJ),z=c(u[5][1],aJK),A=c(u[5][1],aJL),B=c(u[5][1],aJM),C=c(u[5][1],aJN),D=c(u[5][1],aJO),E=c(u[5][1],aJP),F=c(u[5][1],aJQ),G=c(u[5][1],aJR),H=c(u[5][1],aJS),I=c(u[5][1],aJT),J=c(u[5][1],aJU),K=c(u[5][1],aJV),L=c(u[5][1],aJW),M=c(u[5][1],aJX),N=c(u[5][1],aJY),O=c(u[5][1],aJZ),P=c(u[5][1],aJ0),Q=c(u[5][1],aJ1),R=c(u[5][1],aJ2),S=c(u[5][1],aJ3),T=c(u[5][1],aJ4),U=c(u[5][1],aJ5),V=c(u[5][1],aJ6),W=c(u[5][1],aJ7),X=c(u[5][1],aJ8),Y=c(u[5][1],aJ9),Z=c(u[5][1],aJ_),_=c(u[5][1],aJ$),$=c(u[5][1],aKa),aa=c(u[5][1],aKb),ac=c(u[5][1],aKc),ad=c(u[5][1],aKd),ae=c(u[5][1],aKe),af=c(u[5][1],aKf),ag=c(u[5][1],aKg),ah=c(u[5][1],aKh),ai=c(u[5][1],aKi),ak=c(u[5][1],aKj),al=c(u[5][1],aKk),am=c(u[5][1],aKl),an=c(u[5][1],aKm),ao=c(u[5][1],aKn),ap=c(u[5][1],aKo);c(u[5][1],aKp);var
aq=c(u[5][1],aKq),g=c(u[5][1],aKr),ar=c(u[5][1],aKs),as=c(u[5][1],aKt),at=c(u[5][1],aKu),au=c(u[5][1],aKv),av=c(u[5][1],aKw),aw=c(u[5][1],aKx),h=c(u[5][1],aKy),i=c(u[5][1],aKz),ax=c(u[5][1],aKA),ay=c(u[5][1],aKB),az=c(u[5][1],aKC),aA=c(u[5][1],aKD),aB=c(u[5][1],aKE),aC=c(u[5][1],aKF),aD=c(u[5][1],aKG),aE=c(u[5][1],aKH),aF=c(u[5][1],aKI),aG=c(u[5][1],aKJ),aH=c(u[5][1],aKK),aI=c(u[5][1],aKL),aJ=c(u[5][1],aKM),aK=c(u[5][1],aKN),aL=c(u[5][1],aKO),aM=c(u[5][1],aKP),aN=c(u[5][1],aKQ),aO=c(u[5][1],aKR),aP=c(u[5][1],aKS),aQ=c(u[5][1],aKT),aR=c(u[5][1],aKU),aS=c(u[5][1],aKV),aT=c(u[5][1],aKW),aV=c(u[5][1],aKX),aW=c(u[5][1],aKY),aX=c(u[5][1],aKZ),aY=c(u[5][1],aK0),aZ=c(u[5][1],aK1),a0=c(u[5][1],aK2),a1=c(u[5][1],aK3);c(u[5][1],aK4);c(u[5][1],aK5);var
a2=c(u[5][1],aK6),a3=c(u[5][1],aK7),a4=c(u[5][1],aK8),a5=c(u[5][1],aK9),a6=c(u[5][1],aK_),a7=c(u[5][1],aK$),a8=c(u[5][1],aLa),a9=c(u[5][1],aLb),a_=c(u[5][1],aLc),a$=c(u[5][1],aLd),ba=c(u[5][1],aLe),bb=c(u[5][1],aLf),bc=c(u[5][1],aLg),bd=c(u[5][1],aLh);c(u[5][1],aLi);c(u[5][1],aLj);var
be=c(u[5][1],aLk),bf=c(u[5][1],aLl),bg=c(u[5][1],aLm),bh=c(u[5][1],aLn),bi=c(u[5][1],aLo),j=c(u[5][1],aLp),bj=c(u[5][1],aLq),bk=c(u[5][1],aLr),bl=c(u[5][1],aLs),bm=c(u[5][1],aLt),bn=c(u[5][1],aLu),bo=c(u[5][1],aLv),bp=c(u[5][1],aLw),bq=c(u[5][1],aLx),br=c(u[5][1],aLy),bs=c(u[5][1],aLz),bt=c(u[5][1],aLA),bu=c(u[5][1],aLB),bv=c(u[5][1],aLC),bw=c(u[5][1],aLD),bx=c(u[5][1],aLE),by=c(u[5][1],aLF),bz=c(u[5][1],aLG),bA=c(u[5][1],aLH),k=c(u[5][1],aLI),bB=c(u[5][1],aLJ),bC=c(u[5][1],aLK),bD=c(u[5][1],aLL),bE=c(u[5][1],aLM),bF=c(u[5][1],aLN),bG=c(u[5][1],aLO),bH=c(u[5][1],aLP),bI=c(u[5][1],aLQ),bJ=c(u[5][1],aLR),bK=c(u[5][1],aLS),bL=c(u[5][1],aLT),bM=c(u[5][1],aLU),bN=c(u[5][1],aLV),bO=c(u[5][1],aLW),bP=c(u[5][1],aLX),bQ=c(u[5][1],aLY),bR=c(u[5][1],aLZ),bS=c(u[5][1],aL0),bT=c(u[5][1],aL1),bU=c(u[5][1],aL2),bV=c(u[5][1],aL3),bW=c(u[5][1],aL4),bX=c(u[5][1],aL5),bY=c(u[5][1],aL6),bZ=c(u[5][1],aL7),b0=c(u[5][1],aL8),b1=c(u[5][1],aL9),b2=c(u[5][1],aL_),b3=c(u[5][1],aL$),b4=c(u[5][1],aMa),b5=c(u[5][1],aMb),b6=c(u[5][1],aMc),b7=c(u[5][1],aMd),b8=c(u[5][1],aMe),b9=c(u[5][1],aMf),b_=c(u[5][1],aMg),b$=c(u[5][1],aMh),ca=0,cb=0;function
cc(a,b){if(typeof
a==="number")if(0!==a)return 0;throw[0,r,aMi]}var
cd=c(u[2][1],cc),ce=0,cf=[0,0,[0,[0,0,0,[0,[0,[0,[9,[0,function(a){if(typeof
a==="number")if(0!==a)return 1;return 0},aMj]],ce],cd],cb]],ca]];b(u[7],k,cf);var
l=c(u[5][1],aMk),n=c(u[5][1],aMl),cg=0,ch=0;function
ci(a,b,c){if(typeof
a==="number")if(0!==a)return b;throw[0,r,aMm]}var
cj=c(u[2][1],ci),ck=0,cl=[0,[9,[0,function(a){if(typeof
a==="number")if(0!==a)return 1;return 0},aMn]],ck],cm=[0,0,[0,[0,0,0,[0,[0,[0,[1,c(u[5][7],g)],cl],cj],ch]],cg]];b(u[7],l,cm);var
cn=0,co=0;function
cp(a,b,c){if(typeof
a==="number")if(0!==a)return b;throw[0,r,aMo]}var
cq=c(u[2][1],cp),cr=0,cs=[0,[9,[0,function(a){if(typeof
a==="number")if(0!==a)return 1;return 0},aMp]],cr],ct=[0,0,[0,[0,0,0,[0,[0,[0,[1,c(u[5][7],j)],cs],cq],co]],cn]];b(u[7],n,ct);function
cu(b,a){return m(u[17],l,b,a)}function
cv(b,a){return m(u[17],n,b,a)}function
o(l,k,a,j){function
d(m){var
e=b(k,m,j),f=e[2],g=e[1];if(f){var
n=f[1],a=aj(g);if(a){var
h=a[2],i=c(l,a[1]),o=i?[0,i[1],h]:h,p=d(n);return ab(aj(o),p)}throw[0,r,aMq]}return g}return d(a)}function
cw(a,d,b){var
e=a?a[1]:function(a){return 0},f=o(e,c(u[16],h),d,b);return c(hP[41],f)}function
cx(a,d,b){var
e=a?a[1]:function(a){return 0},f=o(e,c(u[16],i),d,b);return c(hP[42],f)}function
cy(c,b,a){return aU(aMr)}function
cz(c,b,a){return aU(aMs)}return[0,d,hP,u[3],u,cA,[0,cu,cv],e,f,p,cw,cx,cy,cz,i,h,k,bK,q,s,t,v,w,x,y,z,A,B,C,D,E,F,G,H,b3,I,b1,b2,J,K,L,bZ,M,N,O,P,Q,R,S,T,bV,U,V,bU,W,X,Y,Z,_,$,bY,aa,ac,ad,ae,af,ag,ah,ai,ak,al,bR,am,an,ao,ap,aq,g,ar,bP,as,at,au,av,aw,b5,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,b4,aP,aQ,bW,aR,aS,aT,aV,aW,bX,aX,aY,aZ,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,bg,bh,a_,a$,ba,bb,bc,bd,be,bf,bi,j,bj,bk,bQ,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bT,bx,by,bz,bS,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bL,bM,bN,bO,b0,b6,b7,b8,b9,b_,b$]}([0]);aMt(hP);t9(hQ);beK(hQ);Gy(hQ);var
beM=[0,function(c,b,a){return aU(beL)}],beO=[0,function(c,b,a){return aU(beN)}];beM[1]=hQ[11];beO[1]=hQ[10];var
GC=d1,beR=GC.Array,GD=[N,beS,H(0)];CW(beT,[0,GD,{}]);(function(a){throw a});var
beQ=false;kj(function(a){return a[1]===GD?[0,dD(a[2].toString())]:0});kj(function(a){return a
instanceof
beR?0:[0,dD(a.toString())]});var
t$=function(b,a){return bTX(b,rw(function(b){return c(a,dD(b))}))};if(!a3(GB,beU))t(beP,t(bBY,GB));var
ua=function(a){return[0,a,t3,C(a),1]},kV=function(c){function
d(h,g,f){var
d=h,a=g,b=f;for(;;){if(0===d)return b;if(C(c)<=a)throw gI;var
e=aQ(c,a);if(a2<=e)if(!(jT<=e)){var
d=d-1|0,a=a+1|0,b=b<<6|cU&e;continue}throw gI}}var
a=0;for(;;){if(C(c)<=a)return[0,c,t3,C(c),1];var
b=aQ(c,a);if(a2<=b){if(amU<=b){if(h2<b){if(mF<b){if(QP<b)throw gI;var
f=d(3,a+1|0,b+Sv|0);if(v5<=f)if(!(L_<f)){var
a=a+4|0;continue}throw gI}var
e=d(2,a+1|0,b+LN|0);if(qQ<=e){if(aou<=e)if(!(v9<e))throw gI;var
a=a+3|0;continue}throw gI}if(a2<=d(1,a+1|0,b+_H|0)){var
a=a+2|0;continue}throw gI}throw gI}var
a=a+1|0;continue}},d_=function(a){var
b=a[2];return aD(a[1],b,a[3]-b|0)},GE=function(e,b){var
c=b[2],d=b[3]-1|0,f=b[1];if(!(d<c)){var
a=c;for(;;){kB(e,I(f,a));var
g=a+1|0;if(d!==a){var
a=g;continue}break}}return 0},n_=function(b,a){var
c=d_(a);return he(d_(b),c)},GF=function(c,a){var
b=c[1],d=n0(b,a);return[0,nZ(b,a),d]},GG=function(b,a){return a===b[3]?1:0},GH=function(b){var
d=b[3],f=b[1];if(0<b[2])var
c=0;else
if(d<=0)var
c=0;else
var
a=I(f,0),g=a2<=a?jD<=a?mx<=a?4:3:2:1,e=(g|0)<=d?1:0,c=1;if(!c)var
e=0;return 1-e},GI=function(a){if(GH(a))throw[0,ct,beV];return GF(a,0)[1]},l=function(b,d){var
a=b[2];for(;;){var
c=b[1];if(ir(a,b[3]))return 0;if(bP(nZ(c,a),d))return 1;var
a=n0(c,a);continue}},f2=function(a){var
b=b5(W(a)*5|0);ae(function(a){return t2(b,a)},a);return ua(b6(b))},GJ=function(b){var
f=b5(b[3]-b[2]|0),h=b[1],c=[0,b[2]],n=b[3];for(;;){if(Bm(c[1],n)){var
d=nZ(h,c[1]);if(32<=d){var
a=t3;for(;;){var
l=a<0?1:0,m=l||(2<=a?1:0);if(m)var
i=0;else{if(!bP(nZ(GK,a),d)){var
a=n0(GK,a);continue}var
i=1}var
j=i?0:(t2(f,d),1);break}}else
var
j=0;if(!j){var
g=b5(1),e=0;for(;;){t2(g,d);var
k=e+1|0;if(0!==e){var
e=k;continue}dH(f,gr(b6(g)));break}}c[1]=n0(h,c[1]);continue}return b6(f)}},GL=function(b){var
a=nC[2];for(;;)if(typeof
a==="number")return nC[1];else{if(0===a[0]){var
c=a[3],d=a[2];return b<a[1]?nC[1]:d<b?nC[1]:c}var
e=a[5],f=a[4],g=a[2],h=a[1];if(b<a[3]){var
a=h;continue}if(f<b){var
a=g;continue}return e}},beY=function(a){try{var
b=aDV(kQ(a));return b}catch(a){return 0}},beZ=function(a){try{var
b=EZ(kQ(a));return b}catch(a){return 0}},bU=km([0,bP,kk]),n$=km([0,function(b,a){return b===a?1:0},kk]),ah=function(a){return Fc(function(a){d2(e6,a);return cc(e6)},a)};H(0);H(0);H(0);var
oa=function(a){function
b(a){return 0===a?0:[0,a-1|0,b(a-1|0)]}return b(a)},i9=function(a){return aj(oa(a))},ob=function(c,a){return b(c,a[1],a[2])},gK=function(a){return a};H(0);var
GN=[N,be2,H(0)],be3=function(h,g){var
d=0,b=0,a=g;for(;;){if(a){var
f=a[2],e=a[1];if(c(h,e))return[0,[0,aj(b),e,f],d];var
d=d+1|0,b=[0,e,b],a=f;continue}throw GN}},GO=function(g,f,b,a){if(a){var
d=a[2],e=a[1];return d?aZ(g,c(b,e),d):c(b,e)}return f},be4=function(f,e){var
b=0,a=e;for(;;){if(a){var
g=a[2],d=c(f,a[1]);if(d){var
b=[0,d[1],b],a=g;continue}return 0}return[0,aj(b)]}},GP=function(b,a){var
d=a[1],e=c(b,a[2]);return[0,c(b,d),e]},GQ=function(d,c,b,g,f,e,a){var
h=a[2],i=a[1],j=d?d[1]:be8,k=c?c[1]:be7,l=b?b[1]:be6;return bE(ag(e,be5),j,g,i,l,f,h,k)},ub=function(a){var
b=a[3],c=a[2],d=a[1];return m(aN(be9),d,c,b)},cv=function(c){if(c){var
d=c[1],b=d[2],a=d[1];if(a3(a[1],b[1])){if(a[2]===b[2]){var
e=b[3],f=a[3],g=a[2],h=a[1];return p(aN(be_),h,g,f,e)}var
i=b[3],j=b[2],k=a[3],l=a[2],m=a[1];return aq(aN(be$),m,l,k,j,i)}throw[0,r,bfa]}return bfb},bfc=function(b,a){if(O(b[1],a[1]))throw[0,r,bfd];return fI(b[4],a[4])},oc=function(a){if(a){var
b=a[1][2];return[0,[0,b,b]]}return 0},od=function(b,a){try{var
c=0<bfc(b,a)?0:[0,[0,b,a]];return c}catch(a){return 0}},GR=function(b,a){if(b){var
c=b[1][1];return a?od(c,a[1][2]):b}return a?a:0},uc=function(b,c){var
d=b?b[1]:bfe,a=[0,kV(c)];return[0,a,d,0,[0,0],[0,1],function(b){if(GG(a[1],b))throw fW;return GF(a[1],b)}]},R=function(a){return a[2][4]},bff=function(a){var
b=GG(a[1][1],a[3]),c=b?a[5][1]:b;return c},k=function(a){try{var
f=c(a[6],a[3]),d=f[2],e=f[1],g=10===e?1:0,h=g||(13===e?1:0),b=a[2],i=h?[0,b[1],b[2]+1|0,1,b[4]+1|0]:[0,b[1],b[2],b[3]+1|0,b[4]+1|0];if(a[4][1]<d)a[4][1]=d;var
j=[0,[0,e,[0,a[1],i,d,a[4],a[5],a[6]]]];return j}catch(a){a=s(a);if(a===fW)return 0;throw a}},i_=function(a){return[0,a[1],a[2],a[4][1],a[4],a[5],a[6]]},gL=FU([0,function(b,a){return b===a?1:0},kk]),aH=function(d,a){var
e=d[1],g=d[2],f=b(gL[12],e,a);return f?[0,[0,f[1]]]:[0,[1,[J,function(d){var
b=c(gL[1],g);m(gL[6],e,a,b);return b}]]]},aI=function(d,c){function
e(a){function
d(a){return[0,a]}return Fe(b(gL[12],a,c),d)}var
a=d[1],f=0===a[0]?[0,a[1]]:0;return Fe(f,e)},aJ=function(f,c,e){var
d=f[1];if(0===d[0]){var
g=d[1];b(gL[8],g,c);return m(gL[6],g,c,e)}var
a=d[1],h=bi(a),i=bu===h?a[1]:J===h?cd(a):a;f[1]=[0,i];return m(gL[6],i,c,e)},av=function(a){return[0,c(gL[1],ci),g1]},ap=FU([0,function(b,a){var
c=b[1]===a[1]?1:0,d=a[2],e=b[2],f=c?e===d?1:0:c;return f},kk]),bfg=function(a){return c(ap[1],g1)},GS=function(j){var
d=km(j);function
e(a){return[0,c(d[1],a),[0,0]]}function
a(e,a){var
f=e[2],g=e[1];try{var
k=b(d[7],g,a);return k}catch(b){var
h=f[1],i=[0,a,h,c(j[2],a)];f[1]=h+1|0;m(d[5],g,a,i);return i}}return[0,e,a,function(c,b){return a(c,b)[2]}]},of=[0,function(e,d){var
a=d[2],b=e[2],g=c(f(a,jr,xY),a);return n_(c(f(b,jr,wd),b),g)}],G1=tK(of);nW(of);var
G2=[0,G1[1]],og=a4(kW),be=cl(og,kX,kY),G3=be[16],G4=be[17],G5=be[18],G6=be[19],G7=be[20],G8=be[21],G9=be[22],G_=be[23],G$=be[24],Ha=be[25],Hb=be[26],Hc=be[27],Hd=be[28],He=be[29],Hf=be[30],bfs=be[1],bft=be[2],bfu=be[3],bfv=be[4],bfw=be[5],bfx=be[6],bfy=be[7],bfz=be[8],bfA=be[9],bfB=be[10],bfC=be[11],bfD=be[12],bfE=be[13],bfF=be[14],bfG=be[15],bfH=function(a){return a[Hf+1]},bfI=function(a){return a[He+1]},bfJ=function(a){return a[Hd+1]},bfK=function(a){return a[Hc+1]},bfL=function(a){return a[Hb+1]},bfM=function(a){return a[Ha+1]},bfN=function(a){return a[G$+1]},bfO=function(a){return a[G_+1]},bfP=function(a){return a[G9+1]},bfQ=function(a){return a[G8+1]},bfR=function(a){return a[G7+1]},bfS=function(a){return a[G6+1]},bfT=function(a){return a[G5+1]},bfU=function(a){return a[G4+1]};cm(og,[0,bfv,function(a){return a[G3+1]},bfz,bfU,bfs,bfT,bfC,bfS,bfB,bfR,bfx,bfQ,bfD,bfP,bfE,bfO,bfw,bfN,bfA,bfM,bfy,bfL,bfu,bfK,bft,bfJ,bfF,bfI,bfG,bfH]);var
bfV=function(c){var
a=aR(0,og);a[G3+1]=function(a,c,b){return a};a[G4+1]=function(d,c,a){return b(c,d,a)};a[G5+1]=function(a){return a};a[G6+1]=function(a){return a};a[G7+1]=function(c,b,d,a){return aZ(b,c,a)};a[G8+1]=function(c,b,d,a){return aZ(b,c,a)};a[G9+1]=function(c,b,a,e,d){return aZ(b,c,a)};a[G_+1]=function(e,a,d,c){return b(a,b(a,e,d),c)};a[G$+1]=function(d,c,a){return b(c,d,a)};a[Ha+1]=function(d,c,a){return b(c,d,a)};a[Hb+1]=function(d,c,a){return b(c,d,a)};a[Hc+1]=function(a,b){return a};a[Hd+1]=function(d,c,a,e){return b(c,d,a)};a[He+1]=function(a,b){return a};a[Hf+1]=function(a){return a};return a};a5(og);bfV(0);var
ud=[0,0,0,0],ue=[0,0,0,0],uf=[0,0,0,0],ug=[0,0,0,0],uh=[0,0,0,0],ui=[0,0,0,0],uj=[0,0,0,0],uk=[0,0,0,0],ul=[0,0,0,0],um=[0,0,0,0],un=[0,0,0,0],uo=[0,0,0,0],up=[0,0,0,0],uq=[0,0,0,0],ur=[0,0,0,0],oh=a4(kW),bf=cl(oh,kX,kY),Hg=bf[16],Hh=bf[17],Hi=bf[18],Hj=bf[19],Hk=bf[20],Hl=bf[21],Hm=bf[22],Hn=bf[23],Ho=bf[24],Hp=bf[25],Hq=bf[26],Hr=bf[27],Hs=bf[28],Ht=bf[29],Hu=bf[30],bfW=bf[1],bfX=bf[2],bfY=bf[3],bfZ=bf[4],bf0=bf[5],bf1=bf[6],bf2=bf[7],bf3=bf[8],bf4=bf[9],bf5=bf[10],bf6=bf[11],bf7=bf[12],bf8=bf[13],bf9=bf[14],bf_=bf[15],bf$=function(a){return a[Hu+1]},bga=function(a){return a[Ht+1]},bgb=function(a){return a[Hs+1]},bgc=function(a){return a[Hr+1]},bgd=function(a){return a[Hq+1]},bge=function(a){return a[Hp+1]},bgf=function(a){return a[Ho+1]},bgg=function(a){return a[Hn+1]},bgh=function(a){return a[Hm+1]},bgi=function(a){return a[Hl+1]},bgj=function(a){return a[Hk+1]},bgk=function(a){return a[Hj+1]},bgl=function(a){return a[Hi+1]},bgm=function(a){return a[Hh+1]};cm(oh,[0,bfZ,function(a){return a[Hg+1]},bf3,bgm,bfW,bgl,bf6,bgk,bf5,bgj,bf1,bgi,bf7,bgh,bf8,bgg,bf0,bgf,bf4,bge,bf2,bgd,bfY,bgc,bfX,bgb,bf9,bga,bf_,bf$]);var
bgn=function(i){var
a=aR(0,oh);a[Hg+1]=function(g,f){if(!ur[1]){var
a=a4(G0),b=cl(a,G0,bfh),d=b[3],e=b[4],h=b[1],i=b[2],j=function(a){return a[e+1]};cm(a,[0,h,function(a){return a[d+1]},i,j]);var
k=function(c){var
b=aR(0,a);b[d+1]=c[3];b[e+1]=c[2];return b};a5(a);ur[1]=k}return[0,pr,c(ur[1],[0,0,g,f])]};a[Hh+1]=function(f,e){if(!uq[1]){var
a=a4(gM),b=cl(a,gM,oe),d=b[2],g=b[1];dr(a,g,function(a){return a[d+1]});var
h=function(b){var
e=aR(0,a);e[d+1]=c(b[2],b[3]);return e};a5(a);uq[1]=h}return[0,Am,c(uq[1],[0,0,f,e])]};if(!up[1]){var
e=a4(0),h=function(a){return aR(0,e)};a5(e);up[1]=h}a[Hi+1]=[0,pe,c(up[1],0)];if(!uo[1]){var
d=a4(0),g=function(a){return aR(0,d)};a5(d);uo[1]=g}a[Hj+1]=[0,qX,c(uo[1],0)];a[Hk+1]=function(h,g,f){if(!un[1]){var
a=a4(GY),b=cl(a,GV,GU),d=b[3],e=b[4],i=b[1],j=b[2],k=function(a){return a[e+1]};cm(a,[0,i,function(a){return a[d+1]},j,k]);var
l=function(b){var
c=aR(0,a);c[d+1]=L(b[2],b[4]);c[e+1]=b[3];return c};a5(a);un[1]=l}return[0,qL,c(un[1],[0,0,h,g,f])]};a[Hl+1]=function(h,g,f){if(!um[1]){var
a=a4(GY),b=cl(a,GV,GU),d=b[3],e=b[4],i=b[1],j=b[2],k=function(a){return a[e+1]};cm(a,[0,i,function(a){return a[d+1]},j,k]);var
l=function(b){var
c=aR(0,a);c[d+1]=L(b[2],b[4]);c[e+1]=b[3];return c};a5(a);um[1]=l}return[0,p5,c(um[1],[0,0,h,g,f])]};a[Hm+1]=function(j,i,h,g){if(!ul[1]){var
b=a4(bfq),a=cl(b,bfp,bfi),d=a[4],e=a[5],f=a[6],k=a[1],l=a[2],m=a[3],n=function(a){return a[f+1]},o=function(a){return a[e+1]};cm(b,[0,m,function(a){return a[d+1]},l,o,k,n]);var
p=function(a){var
c=aR(0,b);c[d+1]=a[5];c[e+1]=a[4];c[f+1]=L(a[2],a[3]);return c};a5(b);ul[1]=p}return[0,p$,c(ul[1],[0,0,j,i,h,g])]};a[Hn+1]=function(h,g,d){if(!uk[1]){var
a=a4(bfk),b=cl(a,bfl,bfr),e=b[3],f=b[4],i=b[1],j=b[2],k=function(a){return a[f+1]};cm(a,[0,i,function(a){return a[e+1]},j,k]);var
l=function(b){var
d=aR(0,a);d[e+1]=c(b[2],b[4]);d[f+1]=c(b[2],b[3]);return d};a5(a);uk[1]=l}return[0,q4,c(uk[1],[0,0,h,g,d])]};a[Ho+1]=function(f,e){if(!uj[1]){var
a=a4(gM),b=cl(a,gM,oe),d=b[2],g=b[1];dr(a,g,function(a){return a[d+1]});var
h=function(b){var
e=aR(0,a);e[d+1]=c(b[2],b[3]);return e};a5(a);uj[1]=h}return[0,qO,c(uj[1],[0,0,f,e])]};a[Hp+1]=function(f,e){if(!ui[1]){var
a=a4(gM),b=cl(a,gM,oe),d=b[2],g=b[1];dr(a,g,function(a){return a[d+1]});var
h=function(b){var
e=aR(0,a);e[d+1]=c(b[2],b[3]);return e};a5(a);ui[1]=h}return[0,pH,c(ui[1],[0,0,f,e])]};a[Hq+1]=function(f,e){if(!uh[1]){var
a=a4(gM),b=cl(a,gM,oe),d=b[2],g=b[1];dr(a,g,function(a){return a[d+1]});var
h=function(b){var
e=aR(0,a);e[d+1]=c(b[2],b[3]);return e};a5(a);uh[1]=h}return[0,rp,c(uh[1],[0,0,f,e])]};a[Hr+1]=function(e){if(!ug[1]){var
a=a4(GX),b=cl(a,GX,bfm),d=b[2],f=b[1];dr(a,f,function(a){return a[d+1]});var
g=function(c){var
b=aR(0,a);b[d+1]=c[2];return b};a5(a);ug[1]=g}return[0,z4,c(ug[1],[0,0,e])]};a[Hs+1]=function(h,g,d){if(!uf[1]){var
a=a4(GW),b=cl(a,GW,bfj),e=b[3],f=b[4],i=b[1],j=b[2],k=function(a){return a[f+1]};cm(a,[0,i,function(a){return a[e+1]},j,k]);var
l=function(b){var
d=aR(0,a);d[e+1]=b[4];d[f+1]=c(b[2],b[3]);return d};a5(a);uf[1]=l}return[0,pd,c(uf[1],[0,0,h,g,d])]};a[Ht+1]=function(e){if(!ue[1]){var
a=a4(GT),b=cl(a,GT,bfn),d=b[2],f=b[1];dr(a,f,function(a){return a[d+1]});var
g=function(c){var
b=aR(0,a);b[d+1]=c[2];return b};a5(a);ue[1]=g}return[0,pC,c(ue[1],[0,0,e])]};if(!ud[1]){var
b=a4(0),f=function(a){return aR(0,b)};a5(b);ud[1]=f}a[Hu+1]=[0,pn,c(ud[1],0)];return a};a5(oh);bgn(0);var
oi=a4(kW),bg=cl(oi,kX,kY),Hv=bg[16],Hw=bg[17],Hx=bg[18],Hy=bg[19],Hz=bg[20],HA=bg[21],HB=bg[22],HC=bg[23],HD=bg[24],HE=bg[25],HF=bg[26],HG=bg[27],HH=bg[28],HI=bg[29],HJ=bg[30],bgo=bg[1],bgp=bg[2],bgq=bg[3],bgr=bg[4],bgs=bg[5],bgt=bg[6],bgu=bg[7],bgv=bg[8],bgw=bg[9],bgx=bg[10],bgy=bg[11],bgz=bg[12],bgA=bg[13],bgB=bg[14],bgC=bg[15],bgD=function(a){return a[HJ+1]},bgE=function(a){return a[HI+1]},bgF=function(a){return a[HH+1]},bgG=function(a){return a[HG+1]},bgH=function(a){return a[HF+1]},bgI=function(a){return a[HE+1]},bgJ=function(a){return a[HD+1]},bgK=function(a){return a[HC+1]},bgL=function(a){return a[HB+1]},bgM=function(a){return a[HA+1]},bgN=function(a){return a[Hz+1]},bgO=function(a){return a[Hy+1]},bgP=function(a){return a[Hx+1]},bgQ=function(a){return a[Hw+1]};cm(oi,[0,bgr,function(a){return a[Hv+1]},bgv,bgQ,bgo,bgP,bgy,bgO,bgx,bgN,bgt,bgM,bgz,bgL,bgA,bgK,bgs,bgJ,bgw,bgI,bgu,bgH,bgq,bgG,bgp,bgF,bgB,bgE,bgC,bgD]);var
bgR=function(b){var
a=aR(0,oi);a[Hv+1]=function(b,a){return 0};a[Hw+1]=function(b,a){return c(b,a)};a[Hx+1]=function(a){return 0};a[Hy+1]=function(a){return 0};a[Hz+1]=function(b,c,a){return ae(b,a)};a[HA+1]=function(b,c,a){return ae(b,a)};a[HB+1]=function(b,a,d,c){return ae(b,a)};a[HC+1]=function(a,d,b){c(a,d);return c(a,b)};a[HD+1]=function(b,a){return c(b,a)};a[HE+1]=function(b,a){return c(b,a)};a[HF+1]=function(b,a){return c(b,a)};a[HG+1]=function(a){return 0};a[HH+1]=function(b,a,d){return c(b,a)};a[HI+1]=function(a){return 0};a[HJ+1]=function(a){return 0};return a};a5(oi);bgR(0);var
us=[0,0,0,0],ut=[0,0,0,0],HK=a4(0),bgS=function(a){return aR(0,HK)};a5(HK);bgS(0);var
HL=a4(0),bgT=function(a){return aR(0,HL)};a5(HL);bgT(0);var
HM=a4(0),bgU=function(a){return aR(0,HM)};a5(HM);bgU(0);var
HN=function(a){var
b=G2[1];G2[1]=aZ(function(i,e){var
j=e[2],k=e[1];if(!ut[1]){var
a=a4(GZ),b=cl(a,GZ,bfo),d=b[2],g=b[1];dr(a,g,function(a){return a[d+1]});var
h=function(c){var
b=aR(0,a);b[d+1]=kV(c[2]);return b};a5(a);ut[1]=h}var
f=[0,16379,c(ut[1],[0,0,k])];return m(G1[4],f,j,i)},b,a);return 0},uu=function(e,d){var
a=d[2],g=c(f(a,jr,599),a);return b(ag(e,bgV),GE,g)},HO=function(h,g){Gv(hP);t5(GA);var
e=t9(hQ);Gy(hQ);var
a=p(e[jy][1],0,0,0,0);b(c(f(a,_,598),a),CF,g);var
d=sk(CE,CF);return c(ag(h,bgW),d)},bgX=function(b,a){return 0},HP=function(d,c,a){if(iW(a))return 0;function
e(a,b){return eC(bg0,bgZ,bgY,d,a,b)}return b(ag(c,bg1),e,a)},HQ=function(d,c){var
a=ua(GJ(c));return b(ag(d,bg2),GE,a)},uv=[0,0,0,0],bhi=function(d,a){function
r(d){var
a=d;for(;;){if(typeof
a!=="number")if(Am===a[1]){var
b=a[2],a=c(f(b,bL,603),b);continue}return a}}function
g(M,L){var
i=M,h=L;for(;;){var
e=r(i),a=r(h);if(typeof
e!=="number"){var
d=e[1];if(-60523211<=d){if(p5<=d){if(pe<=d){if(qL===d){if(typeof
a!=="number")if(qL===a[1]){var
j=a[2],k=e[2],N=c(f(j,j2,604),j),O=c(f(k,j2,605),k),s=0===b(of[1],O,N)?1:0;if(s){var
P=c(f(j,jK,606),j);return kG(g,c(f(k,jK,607),k),P)}return s}}else
if(!(959246197<=d))if(typeof
a!=="number")if(pe===a[1])return 1}else
if(pd===d){if(typeof
a!=="number")if(pd===a[1]){var
l=a[2],m=e[2],Q=c(f(l,bL,608),l),t=g(c(f(m,bL,609),m),Q);if(t)var
R=c(f(l,wr,610),l),u=bP(c(f(m,wr,611),m),R);else
var
u=t;return u}}else
if(!(808768218<=d))if(typeof
a!=="number")if(p5===a[1]){var
n=a[2],o=e[2],S=c(f(n,j2,612),n),T=c(f(o,j2,613),o),v=0===b(of[1],T,S)?1:0;if(v){var
U=c(f(n,jK,614),n);return kG(g,c(f(o,jK,615),o),U)}return v}}else
if(rp===d){if(typeof
a!=="number")if(rp===a[1]){var
w=a[2],x=e[2],V=c(f(w,bL,616),w),i=c(f(x,bL,617),x),h=V;continue}}else
if(qX===d){if(typeof
a!=="number")if(qX===a[1])return 1}else
if(pC===d)if(typeof
a!=="number")if(pC===a[1]){var
y=a[2],z=e[2],W=c(f(y,AU,618),y);return 0===n_(c(f(z,AU,619),z),W)?1:0}}else
if(qO<=d){if(-498494525<=d){if(q4===d){if(typeof
a!=="number")if(q4===a[1]){var
p=a[2],q=e[2],X=c(f(p,xZ,620),p),A=g(c(f(q,xZ,621),q),X);if(A){var
Y=c(f(p,xP,622),p),i=c(f(q,xP,623),q),h=Y;continue}return A}}else
if(p$<=d)if(typeof
a!=="number")if(p$===a[1]){var
B=a[2],C=e[2],Z=c(f(B,bL,624),B);return kG(g,c(f(C,bL,625),C),Z)}}else
if(-535869546<=d){if(pn<=d)if(typeof
a!=="number")if(pn===a[1])return 1}else
if(typeof
a!=="number")if(qO===a[1]){var
D=a[2],E=e[2],_=c(f(D,bL,626),D),i=c(f(E,bL,627),E),h=_;continue}}else
if(z4===d){if(typeof
a!=="number")if(z4===a[1]){var
F=a[2],G=e[2],$=c(f(F,e1,628),F);return 0===n_(c(f(G,e1,629),G),$)?1:0}}else
if(pr===d){if(typeof
a!=="number")if(pr===a[1]){var
H=a[2],I=e[2],aa=c(f(H,di,630),H);return c(f(I,di,631),I)===aa?1:0}}else
if(pH===d)if(typeof
a!=="number")if(pH===a[1]){var
J=a[2],K=e[2],ab=c(f(J,bL,632),J),i=c(f(K,bL,633),K),h=ab;continue}}return 0}}return g(d,a)},bhj=[0,bhi,function(a3){var
Q=tw(0),aw=HR?HR[1]:1;if(!uv[1]){var
i=a4(kW),e=cl(i,kX,kY),A=e[16],B=e[17],C=e[18],D=e[19],F=e[20],G=e[21],H=e[22],I=e[23],J=e[24],K=e[25],L=e[26],M=e[27],N=e[28],O=e[29],P=e[30],ay=e[1],az=e[2],aA=e[3],aB=e[4],aC=e[5],aD=e[6],aE=e[7],aF=e[8],aG=e[9],aH=e[10],aI=e[11],aJ=e[12],aK=e[13],aL=e[14],aM=e[15],aN=function(a){return a[P+1]},aO=function(a){return a[O+1]},aP=function(a){return a[N+1]},aQ=function(a){return a[M+1]},aS=function(a){return a[L+1]},aT=function(a){return a[K+1]},aU=function(a){return a[J+1]},aV=function(a){return a[I+1]},aW=function(a){return a[H+1]},aX=function(a){return a[G+1]},aY=function(a){return a[F+1]},aZ=function(a){return a[D+1]},a0=function(a){return a[C+1]},a1=function(a){return a[B+1]};cm(i,[0,aB,function(a){return a[A+1]},aF,a1,ay,a0,aI,aZ,aH,aY,aD,aX,aJ,aW,aK,aV,aC,aU,aG,aT,aE,aS,aA,aQ,az,aP,aL,aO,aM,aN]);var
a2=function(a){var
c=aR(0,i);c[A+1]=function(d,c){return b(ag(a[3],bg3),uu,c)};c[B+1]=function(d,c){function
e(a){return d}return b(ag(a[3],bg4),e,c)};c[C+1]=function(b){return ag(a[3],bg5)};c[D+1]=function(a){return 0};c[F+1]=function(d,c,b){function
e(a){return d}function
f(a,b){return HP(e,a,b)}return p(ag(a[3],bg6),uu,c,f,b)};c[G+1]=function(d,c,b){function
e(a){return d}function
f(a,b){return HP(e,a,b)}return p(ag(a[3],bg7),uu,c,f,b)};c[H+1]=function(c,f,e,d){ag(a[3],bg8);FB(function(e,d){if(d){var
f=d[1];if(a[2]){var
g=function(a){return c};return m(ag(a[3],bg9),f,g,e)}}function
h(a){return c}return b(ag(a[3],bg_),h,e)},f,e);var
g=a[2]?HO:bgX;return b(ag(a[3],bg$),g,d)};c[I+1]=function(b,d,c){function
e(a){return b}function
f(a){return b}return p(ag(a[3],bha),f,d,e,c)};c[J+1]=function(d,c){function
e(a){return d}return b(ag(a[3],bhb),e,c)};c[K+1]=function(d,c){function
e(a){return d}return b(ag(a[3],bhc),e,c)};c[L+1]=function(d,c){function
e(a){return d}return b(ag(a[3],bhd),e,c)};c[M+1]=function(c){return b(ag(a[3],bhe),HQ,c)};c[N+1]=function(d,c,b){function
e(a){return d}return p(ag(a[3],bhf),e,c,HO,b)};c[O+1]=function(c){return b(ag(a[3],bhg),HQ,c)};c[P+1]=function(b){return ag(a[3],bhh)};return c};a5(i);uv[1]=a2}var
ax=c(uv[1],[0,0,aw,Q]);if(!us[1]){var
g=a4(kW),d=cl(g,kX,kY),j=d[16],k=d[17],l=d[18],n=d[19],o=d[20],q=d[21],r=d[22],s=d[23],t=d[24],u=d[25],v=d[26],w=d[27],x=d[28],y=d[29],z=d[30],S=d[1],T=d[2],U=d[3],V=d[4],W=d[5],X=d[6],Y=d[7],Z=d[8],_=d[9],$=d[10],aa=d[11],ab=d[12],ac=d[13],ad=d[14],ae=d[15],af=function(a){return a[z+1]},ah=function(a){return a[y+1]},ai=function(a){return a[x+1]},aj=function(a){return a[w+1]},ak=function(a){return a[v+1]},al=function(a){return a[u+1]},am=function(a){return a[t+1]},an=function(a){return a[s+1]},ao=function(a){return a[r+1]},ap=function(a){return a[q+1]},ar=function(a){return a[o+1]},as=function(a){return a[n+1]},at=function(a){return a[l+1]},au=function(a){return a[k+1]};cm(g,[0,V,function(a){return a[j+1]},Z,au,S,at,aa,as,$,ar,X,ap,ab,ao,ac,an,W,am,_,al,Y,ak,U,aj,T,ai,ad,ah,ae,af]);var
av=function(d){var
a=aR(0,g);a[j+1]=function(b){var
a=d[2];return c(f(a,ada,568),a)};a[k+1]=function(h,e){var
g=c(e,0),a=d[2];return b(f(a,al4,Ma),a,g)};var
e=d[2];a[l+1]=c(f(e,aaC,_q),e);var
h=d[2];a[n+1]=c(f(h,Sb,UN),h);a[o+1]=function(h,e){var
g=c(e,0),a=d[2];return b(f(a,adX,py),a,g)};a[q+1]=function(h,e){var
g=c(e,0),a=d[2];return b(f(a,Qo,ama),a,g)};a[r+1]=function(h,e){var
g=c(e,0),a=d[2];return b(f(a,Ta,ac9),a,g)};a[s+1]=function(h,e){var
g=c(e,0),a=d[2];return b(f(a,Qu,OU),a,g)};a[t+1]=function(h,e){var
g=c(e,0),a=d[2];return b(f(a,$z,amC),a,g)};a[u+1]=function(h,e){var
g=c(e,0),a=d[2];return b(f(a,Mr,yt),a,g)};a[v+1]=function(h,e){var
g=c(e,0),a=d[2];return b(f(a,MF,yY),a,g)};a[w+1]=function(b){var
a=d[2];return c(f(a,ae5,ZF),a)};a[x+1]=function(h,e){var
g=c(e,0),a=d[2];return b(f(a,amH,VI),a,g)};a[y+1]=function(b){var
a=d[2];return c(f(a,$4,581),a)};var
i=d[2];a[z+1]=c(f(i,_V,aeC),i);return a};a5(g);us[1]=av}var
a=c(us[1],[0,0,ax]),R=0;function
h(d,g){var
e=g[1];if(rp<=e){if(Am<=e){if(pe<=e){if(qL<=e){var
j=g[2],w=c(f(j,jK,pQ),j);return aq(f(a,adX,vT),a,d,h,c(f(j,j2,qE),j),w)}return b(f(a,aaC,wD),a,d)}if(pd<=e){var
k=g[2],x=c(f(k,wr,AT),k);return aq(f(a,amH,pT),a,d,h,c(f(k,bL,pY),k),x)}var
q=g[2];return p(f(a,al4,z9),a,d,h,c(f(q,bL,zA),q))}if(pC<=e){if(p5<=e){var
l=g[2],y=c(f(l,jK,zg),l);return aq(f(a,Qo,wF),a,d,h,c(f(l,j2,yD),l),y)}var
r=g[2];return m(f(a,$4,qm),a,d,c(f(r,AU,zD),r))}if(qX<=e)return b(f(a,Sb,xs),a,d);var
s=g[2];return p(f(a,MF,zd),a,d,h,c(f(s,bL,y5),s))}if(qO<=e){if(q4<=e){if(p$<=e){var
i=g[2],z=c(f(i,373701558,x9),i),A=c(f(i,377786312,xw),i);return E(f(a,Ta,xd),a,d,h,c(f(i,bL,xl),i),A,z)}var
n=g[2],B=c(f(n,xP,zl),n);return aq(f(a,Qu,q1),a,d,h,c(f(n,xZ,x3),n),B)}if(pn<=e)return b(f(a,_V,A7),a,d);var
t=g[2];return p(f(a,$z,zO),a,d,h,c(f(t,bL,zn),t))}if(pr===e){var
o=g[2],C=c(f(o,-922783157,xy),o);return p(f(a,ada,xu),a,d,c(f(o,di,zU),o),C)}if(pH<=e){var
u=g[2];return p(f(a,Mr,xe),a,d,h,c(f(u,bL,ym),u))}var
v=g[2];return m(f(a,ae5,wX),a,d,c(f(v,e1,zX),v))}h(R,a3);return mK(10,ci,0,iO(Q))}],bhk=function(e,d){var
a=d[2],b=e[2],g=c(f(a,jr,634),a);return 0===n_(c(f(b,jr,635),b),g)?1:0};GS([0,bhk,function(b){var
a=b[2];return mK(10,ci,0,c(f(a,jr,636),a))}]);GS(bhj);var
HS=[N,bhl,H(0)],kZ=function(h,d){var
b=EN(aFO,aFN,Bz(aFM,aFL,d)),f=aDo(b);kA(b);var
e=m(h,0,1,uc([0,[0,d,1,1,0]],f));if(e){var
c=e[1],a=c[2],g=c[1];if(k(a))throw[0,HS,a,ub(a[2])];return g}return aU(bhm)},bhn=function(b,a){return m(b,0,1,a)};HN(bho);var
uw=c(n$[1],50),HT=[0,0],HU=[0,0],HV=[0,0],oj=function(a){if(jS<=a[1])return a[2];throw a[2]},ux=function(a){var
d=1;try{var
c=bi(a),e=bu===c?a[1]:J===c?cd(a):a,f=[0,jS,e],b=f}catch(a){a=s(a);var
b=[0,wc,a]}return[0,1-d,b]},HW=function(a){var
b=ux([J,function(c){bTs(0);var
b=bi(a);return bu===b?a[1]:J===b?cd(a):a}]),c=b[2];HV[1]=HV[1]+b[1];return c},HX=function(c,d){if(HU[1])try{var
a=d+b(n$[7],uw,c),e=m(n$[9],uw,c,a);return e}catch(a){a=s(a);if(a===x)return m(n$[5],uw,c,d);throw a}return 0},cw=function(c,b){var
a=ux(b),d=a[2];HX(c,a[1]);return oj(d)},k0=function(a){HT[1]=[0,a,HT[1]];return 0},ok=function(a){function
b(b){return[0,b,a[1]]}function
d(d){var
e=d[1],g=e[1];if(0===e[2]){var
f=c(a[2],0);d[1]=b(f);return f}return g}var
e=[0,b(c(a[2],0))];return[0,b,d,function(a){return e}]},HY=function(u){function
a(b,a){return[0,b,a[2]]}function
d(f,e,a){var
d=c(f,a);return b(e,d[1],[0,a[1],d[2]])}function
j(a,c){var
b=bi(a),d=c[2],e=bu===b?a[1]:J===b?cd(a):a;return[0,e,d]}var
e=[N,bhp,H(0)];function
f(b,a){throw[0,e,b,a]}function
g(f,d,a){try{var
g=c(f,a);return g}catch(a){a=s(a);if(a[1]===e)return b(d,a[2],a[3]);throw a}}function
k(a,d,b){var
e=a?a[1]:function(a){return 1};function
h(a){return c(e,a)?b:function(b){return f(a,b)}}return function(a){return g(d,h,a)}}function
l(a){return[0,a,a[2]]}function
m(a){return[0,a[1],a[2]]}function
n(a){return[0,a[2],a[2]]}function
o(a,b){return[0,0,a]}function
p(d,b,a){return c(b,[0,d,a[2]])}function
q(a,e,d,b){var
f=a?a[1]:function(a){return 1};try{var
g=c(e,b);return g}catch(a){a=s(a);if(c(f,a))return c(d,b);throw a}}function
h(b){var
c=0;function
e(b){return a(c,b)}return aZ(function(c,b){function
e(c){function
e(b){var
d=ab(c,[0,b,0]);return function(b){return a(d,b)}}return function(a){return d(b,e,a)}}return function(a){return d(c,e,a)}},e,b)}function
r(b,a){return h(B(b,a))}function
i(f,e,c){function
g(b){return a(e,b)}return aZ(function(c,a){function
e(c){return b(f,c,a)}return function(a){return d(c,e,a)}},g,c)}function
t(f,e,c){function
g(b){var
c=b[1],d=[0,c,aj(b[2])];return function(b){return a(d,b)}}var
h=[0,e,0],j=i(function(c,e){var
g=c[2],h=c[1];function
i(b){var
c=[0,b[1],[0,b[2],g]];return function(b){return a(c,b)}}var
j=b(f,h,e);return function(a){return d(j,i,a)}},h,c);return function(a){return d(j,g,a)}}return[0,a,d,j,e,f,g,k,l,m,n,o,p,q,h,r,i,t,function(b,a,d){return cw(b,[J,function(f){var
b=bi(a),e=bu===b?a[1]:J===b?cd(a):a;return c(e,d)}])}]},HZ=[0,nK],F=tK(HZ),bC=nW(HZ),H0=[0,hh],bw=tK(H0),du=nW(H0),bD=[0,0],H1=[0,0],ol=[0,0],H2=function(a){return[0,bw[1],0,0,F[1],bw[1],0,0,870530776,0,1]},uy=function(a){return[0,bw[1],F[1],0,F[1],bw[1],F[1],0,F[1],bw[1],0,F[1],0,0,bw[1],F[1],0,0,F[1],F[1],F[1],F[1],0,du[1],du[1],du[1],bw[1],0,0,bhq]},om=ok([0,0,function(a){return a}]),cx=ok([0,1,function(a){return 0}])[3],b0=ok([0,2,function(a){return 0}])[3],on=[0,[0,bhr,0,0,c(b0,0)]];c(b0,0);var
oo=[0,F[1]],bhs=function(g,c){var
a=c[2][1];if(typeof
a!=="number")if(ax===a[1]){var
d=a[2],e=d[2];if(e){var
f=e[1];if(ad===f[1]){var
h=f[2],i=d[1];try{var
j=b(b(F[6],h,oo[1])[1],g,c);return j}catch(a){a=s(a);if(a===x)return aU(t(bhv,t(i,bhu)));throw a}}}}return aU(bht)},H3=function(i,h,c,g){var
a=c[2][1];if(typeof
a!=="number")if(ax===a[1]){var
d=a[2],e=d[2];if(e){var
f=e[1];if(ad===f[1]){var
j=f[2],k=d[1];try{var
l=p(b(F[6],j,oo[1])[2],i,h,c,g);return l}catch(a){a=s(a);if(a===x)return aU(t(bhy,t(k,bhx)));throw a}}}}return aU(bhw)},b_=function(e,d){function
m(a,d){if(bD[1]){if(d){var
b=d[1];if(G<=b[1]){var
e=b[2];return c(ag(a,bhz),e)}var
f=b[2];return c(ag(a,bhA),f)}return ag(a,bhB)}return ag(a,bhC)}function
a(f,d,n){function
g(a){return f<a?bhI:bhJ}var
c=n[1];if(typeof
c==="number")return ag(d,bhK);var
h=c[1];if(ax===h){var
e=c[2],i=e[3],o=e[2],p=e[1],q=0===W(i)?1:2,j=g(q),r=j[2],s=j[1],t=1,u=function(b,c){return a(t,b,c)},v=function(a,c){if(0===W(c))return ag(a,bhD);function
d(a,b){return eC(bhG,bhF,bhE,u,a,b)}return b(ag(a,bhH),d,c)};return bE(ag(d,bhL),s,p,m,o,v,i,r)}if(bN<=h){var
k=c[2],w=k[2],x=k[1],l=g(3),y=l[2],z=l[1],A=3,B=function(b,c){return a(A,b,c)},C=2,D=function(b,c){return a(C,b,c)};return E(ag(d,bhM),z,D,x,B,w,y)}var
F=c[2][2];function
G(b,c){return a(f,b,c)}return b(ag(d,bhN),G,F)}return a(3,e,d)},H5=function(a){return t(H4,a)},H6=function(b){try{var
a=tD(b,op)[2];return a}catch(a){a=s(a);if(a===x)return H5(b);throw a}},oq=function(b){try{var
a=tD(b,op)[1];return a}catch(a){a=s(a);if(a===x)return b;throw a}},bhO=function(a){try{tD(a,op);var
b=1;return b}catch(a){a=s(a);if(a===x)return 0;throw a}},i$=function(a){return typeof
a==="number"?bhP:dB<=a[1]?a[2][1]:oq(a[2])},H7=function(g,f){var
b=g,a=f;for(;;){var
d=b?b[1]:0,c=a[1];if(typeof
c!=="number")if(by===c[1]){var
e=c[2],b=[0,[0,e[2],d]],a=e[1];continue}return[0,a,d]}},H8=function(a){return typeof
a==="number"?bhQ:dB<=a[1]?a[2][1]:oq(a[2])},bhR=[0,0],hR=function(d,g,e){var
h=d?d[1]:0,v=h||bD[1];function
F(b,a){var
e=a[2],d=H8(a[1]);return v?m(ag(b,bhS),d,b_,e):c(ag(b,bhT),d)}function
f(n,e,d){if(0<n)var
r=bhV,o=bhU;else
var
r=bih,o=big;function
g(d,h){var
e=h[1],g=e[1];if(by<=g){if(K<=g){if(mE<=g){var
w=e[2],H=w[2],I=w[1],J=0,L=function(a,b){return f(J,a,b)};return p(ag(d,bhW),L,I,b_,H)}var
x=e[2],y=x[2],z=H8(x[1]);if(v){if(y)var
i=y[1],A=i[1],M=ad===A?t(bhX,a(q+i[2])):G<=A?t(bhZ,a(q+i[2])):t(bh0,a(q+i[2])),B=M;else
var
B=bh1;return b(ag(d,bhY),z,B)}return c(ag(d,bh2),z)}if(bq<=g){var
k=0,j=h;for(;;){var
u=k?k[1]:0,l=j[1];if(typeof
l!=="number")if(bq===l[1]){var
m=l[2],k=[0,[0,[0,m[1],m[2]],u]],j=m[3];continue}var
E=aj(u),N=0,O=function(a,b){return f(N,a,b)},P=function(a,b){return eC(bh5,bh4,bh3,F,a,b)};return bE(ag(d,bh7),r,bh6,P,E,O,j,o)}}var
C=e[2],s=C[1][1];if(typeof
s!=="number")if(bV===s[1]){var
U=C[2];if(s[2]===bhR){var
V=function(a,b){return f(n,a,b)};return p(ag(d,bic),bia,V,U,bib)}}var
D=H7(0,h),Q=[0,D[1],D[2]],R=n+1|0,S=function(a,b){return f(R,a,b)},T=function(a,b){return eC(bh_,bh9,bh8,S,a,b)};return p(ag(d,bh$),r,T,Q,o)}if(bV<=g){var
W=bhs(e[2],h);return c(ag(d,bid),W)}var
X=e[2];return c(ag(d,bie),X)}if(H1[1]){var
h=d[2];return p(ag(e,bif),g,d,b_,h)}return g(e,d)}return f(0,g,e)},aB=[0,uy(0)],c5=[0,H2(0)];H(0);var
uz=function(a,d,b){var
e=a?a[1]:function(a){return 1};try{var
f=c(d,0);return f}catch(a){a=s(a);if(c(e,a))return c(b,0);throw a}},H9=function(b,a){return cw(b,a)},f3=function(b,a){var
d=c5[1];c5[1]=b;var
e=c(a,0);c5[1]=d;return e},hS=function(a){function
c(a){var
b=a[1],d=b[1];if(bq<=d){if(K<=d){var
f=b[2];return[0,[0,K,[0,f[1],[0,f[2]]]],a[2],a[3],a[4]]}var
e=b[2],h=e[2],i=e[1],j=a[4],k=a[3],l=a[2];return[0,[0,bq,[0,i,h,c(e[3])]],l,k,j]}if(by<=d){var
g=b[2],m=g[1],n=a[4],o=a[3],p=a[2],q=c(g[2]);return[0,[0,by,[0,c(m),q]],p,o,n]}return[0,[0,bV,b[2]],a[2],a[3],a[4]]}return c(a)},or=[N,bii,H(0)],os=[N,bij,H(0)],ja=[N,bik,H(0)],jb=[N,bil,H(0)],H_=[N,bim,H(0)],H$=[N,bin,H(0)],Ia=[N,bio,H(0)],Ib=[N,bip,H(0)],Ic=[N,biq,H(0)],bis=[N,bir,H(0)],d$=function(g,f,j){var
h=g?g[1]:0,e=f?f[1]:biu,a=aB[1],d=a[12],i=[0,[0,ax,[0,e,[0,[0,G,d]],0]],0,j,c(b0,0)];if(a3(e,bit))var
k=a[29],l=a[28],n=a[27],o=a[26],p=a[25],q=a[24],r=a[23],s=a[22],t=m(F[4],d,h,a[21]),b=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12]+1|0,a[13],a[14],a[15],a[16],a[17],a[18],a[19],a[20],t,s,r,q,p,o,n,l,k];else
var
H=a[29],I=a[28],J=a[27],K=a[26],L=a[25],M=a[24],N=a[23],O=a[22],P=m(F[4],d,h,a[21]),Q=a[20],R=a[19],S=a[18],T=a[17],U=a[16]+1|0,V=m(F[4],d,e,a[15]),W=m(bw[4],e,d,a[14]),b=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12]+1|0,[0,e,a[13]],W,V,U,T,S,R,Q,P,O,N,M,L,K,J,I,H];var
u=b[29],v=b[28],w=b[27],x=b[26],y=b[25],z=b[24],A=b[23],B=b[22],C=b[21],D=m(F[4],d,1,b[20]),E=m(F[4],d,i,b[19]);aB[1]=[0,b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],E,D,C,B,A,z,y,x,w,v,u];return i},ot=function(a){return[0,a[1],a[2],a[3],a[4],bw[1],F[1],0,F[1],a[9],a[10],a[11],0,0,bw[1],F[1],0,0,F[1],F[1],F[1],F[1],a[22],a[23],a[24],a[25],a[26],a[27],a[28],a[29]]},uA=function(a){return b(F[6],a,aB[1][21])},biv=function(c){var
a=aB[1];try{var
r=b(F[6],c,a[18]);return r}catch(b){b=s(b);if(b===x){var
d=a[17],e=a[29],f=a[28],g=a[27],h=a[26],i=a[25],j=a[24],k=a[23],l=a[22],n=a[21],o=a[20],p=a[19],q=m(F[4],c,d,a[18]);aB[1]=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17]+1|0,q,p,o,n,l,k,j,i,h,g,f,e];return d}throw b}},k1=function(c,b){var
a=aB[1],d=a[29],e=a[28],f=a[27],g=a[26],h=a[25],i=a[24],j=a[23],k=a[22],l=a[21],n=a[20],o=m(F[4],c,b,a[19]);aB[1]=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],o,n,l,k,j,i,h,g,f,e,d];return 0},Id=function(a){return b(F[6],a,aB[1][19])},Ie=function(a){return b(F[6],a,aB[1][20])},biw=function(d){function
f(b){var
c=E0(gq(65+(b%26|0)|0)),d=0<(b/26|0)?a(q+(b/26|0)):bix;return t(c,d)}var
c=aB[1];try{var
A=b(F[6],d,c[15]);return A}catch(a){a=s(a);if(a===x){var
e=f(c[16]),g=c[29],h=c[28],i=c[27],j=c[26],k=c[25],l=c[24],n=c[23],o=c[22],p=c[21],r=c[20],u=c[19],v=c[18],w=c[17],y=c[16]+1|0,z=m(F[4],d,e,c[15]);aB[1]=[0,c[1],c[2],c[3],c[4],c[5],c[6],c[7],c[8],c[9],c[10],c[11],c[12],c[13],c[14],z,y,w,v,u,r,p,o,n,l,k,j,i,h,g];return e}throw a}},biy=function(d,c){var
a=d$(biz,[0,d],c)[1];if(typeof
a!=="number")if(ax===a[1]){var
b=a[2][2];if(b)return b[1]}throw[0,r,biA]},If=function(c){var
a=kV(c),b=1-GH(a);return b?beZ(GI(a)):b},biB=function(a,d,g){var
e=aB[1];try{var
f=[0,G,b(bw[6],a,e[14])],c=f}catch(b){b=s(b);if(b!==x)throw b;if(!If(a))throw jb;var
c=biy(a,d)}return[0,a,c,0]},Ig=function(d,i){var
a=aB[1],c=a[10],e=a[22];if(e)var
j=e[1],f=t(j,t(biC,d)),h=f,g=b(du[6],f,a[24]);else
var
h=d,g=a[24];var
k=a[29],l=a[28],n=a[27],o=a[26],p=a[25],q=a[23],r=a[22],s=a[21],u=a[20],v=a[19],w=a[18],x=a[17],y=a[16],z=a[15],A=a[14],B=a[13],C=a[12],D=m(F[4],c,i,a[11]),E=a[10]+1|0,G=m(bw[4],h,c,a[9]);aB[1]=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],G,E,D,C,B,A,z,y,x,w,v,u,s,r,q,g,p,o,n,l,k];return c},Ih=function(g,f,a){var
c=aB[1];if(iQ(a,biD)){var
d=C(a),h=0,i=1,j=d<=1?aDY:aD(a,i,d-1|0);return[0,j,h]}if(0===c[22])return[0,a,0];var
k=[0,c[22],c[27]],l=hO(function(b){if(b){var
c=b[1];return[0,t(c,t(biE,a))]}return 0},k),m=b(bw[14],a,f)?[0,a,0]:0,e=ab(kH(function(a){return b(du[4],a,g)},l),m);return 0===W(e)?[0,a,0]:e},biF=function(c,f){var
a=aB[1],e=j$(Ih(a[24],a[9],c));try{var
d=b(bw[6],e,a[9])}catch(a){a=s(a);if(a===x)throw jb;throw a}return[0,c,[0,ad,d],b(F[6],d,a[11])]},Ii=function(b,a){if(b!==a)throw[0,H_,b,a];return 0},uB=function(b,d){var
a=c5[1],c=a[2],e=a[10],f=a[9],g=a[8],h=a[7],i=a[6],j=a[5],k=m(F[4],c,d,a[4]),l=[0,b,a[3]],n=a[2]+1|0,o=a[1];function
q(a){return[0,c,a]}return[0,p(bw[10],0,b,q,o),n,l,k,j,i,h,g,f,e]},biG=function(c){var
a=c5[1];try{var
d=b(bw[6],c,a[1]),e=L(function(b){return(a[2]-1|0)-b|0},d);return e}catch(a){a=s(a);if(a===x)throw x;throw a}},Ij=function(c){var
a=aB[1],d=Ih(a[23],a[1],c);try{var
e=fZ(L(function(c){return b(bw[6],c,a[1])},d));return e}catch(a){a=s(a);if(a===x)throw x;throw a}},Ik=function(a){return b(F[6],a,aB[1][2])},biI=function(a){var
c=a[2],d=aB[1];if(G<=a[1]){if(c<d[12])return 0;throw jb}try{var
e=b(F[6],c,d[11]);return e}catch(a){a=s(a);if(a===x)throw jb;throw a}},Il=function(a){return c5[1][10]},uC=function(h,e,c){var
f=e?e[1]:0,g=aB[1];try{var
M=b(bw[6],c,g[5]);return M}catch(b){b=s(b);if(b===x){if(!f)if(!If(c))if(!a3(c,biK))if(!iQ(c,biL))throw x;var
d=g[7],i=f?on[1]:d$(0,0,h),a=aB[1],j=a[29],k=a[28],l=a[27],n=a[26],o=a[25],p=a[24],q=a[23],r=a[22],t=a[21],u=a[20],v=a[19],w=a[18],y=a[17],z=a[16],A=a[15],B=a[14],C=a[13],D=a[12],E=a[11],G=a[10],H=a[9],I=m(F[4],d,i,a[8]),J=a[7]+1|0,K=m(F[4],d,c,a[6]),L=a3(c,biJ)?a[5]:m(bw[4],c,d,a[5]);aB[1]=[0,a[1],a[2],a[3],a[4],L,K,J,I,H,G,E,D,C,B,A,z,y,w,v,u,t,r,q,p,o,n,l,k,j];return d}throw b}},Im=function(a,k){function
b(a){var
e=c(b0,0),d=a[1];if(typeof
d!=="number"){var
h=d[1];if(ax===h){var
f=d[2],g=f[2],l=f[1];if(g){var
i=g[1];if(G===i[1]){var
m=a[3],n=a[2];return[0,hN(k,i[2])[1],n,m,e]}}var
o=a[3],p=a[2];return[0,[0,ax,[0,l,g,L(b,f[3])]],p,o,e]}if(bN===h){var
j=d[2],q=j[1],s=a[3],t=a[2],u=b(j[2]);return[0,[0,bN,[0,b(q),u]],t,s,e]}}throw[0,r,biM]}return b(a)},ou=function(f,o){var
c=f[2],g=f[1],h=aB[1],i=c5[1];if(ad===g){var
j=b(F[6],c,h[4]),p=oc(o),a=j[1];if(typeof
a==="number")var
d=0;else
if(lN===a[1])var
e=a[2],m=e[2],n=e[1],k=Im(m,L(function(a){return d$(biO,biN,p)},n)),d=1;else
var
d=0;if(!d)var
k=j;var
l=k}else
var
l=G<=g?b(F[6],c,h[8]):b(F[6],(i[2]-c|0)-1|0,i[4]);return l},uD=function(d){var
a=c5[1][8];if(typeof
a!=="number")if(69===a[1])return a[2];var
b=c(cx,0);return[0,[0,bV,biR],on[1],0,b]},In=function(b){var
a=c5[1][8];if(typeof
a!=="number")if(84===a[1])return a[2];return[0,biS,0,0,c(b0,0)]},biT=function(a){return c5[1][8]},uE=function(b){var
a=c5[1];return[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],b,a[9],a[10]]},ea=function(k){var
a=k;for(;;){var
c=a[1];if(typeof
c!=="number")if(ax===c[1]){var
e=c[2][2];if(e){var
f=e[1];if(G===f[1]){var
g=f[2],h=b(F[6],g,aB[1][19]),d=h[1];if(typeof
d!=="number")if(ax===d[1]){var
i=d[2][2];if(i){var
j=i[1];if(G===j[1])if(j[2]===g)return a}}var
a=h;continue}}}return a}},Io=function(a,g){var
b=a?a[1]:function(a){return a};function
e(d,a){var
b=a[1];if(typeof
b!=="number")if(bN===b[1]){var
e=b[2],f=e[1],g=c(d,e[2]),h=c(d,f),i=c(b0,0);return[0,[0,bN,[0,h,g]],a[2],a[3],i]}throw[0,r,biV]}var
i=[0,e];function
f(e,a){var
b=a[1];if(typeof
b!=="number")if(ax===b[1]){var
d=b[2],f=d[2],g=d[1],h=L(e,d[3]),i=c(b0,0);return[0,[0,ax,[0,g,f,h]],a[2],a[3],i]}throw[0,r,biW]}var
j=[0,f],p=[0,b]?b:function(a){return a},q=j?f:function(b,a){return a},s=i?e:function(b,a){return a};function
h(o,t){var
a=t;for(;;){var
e=a[1];if(typeof
e==="number")return a;var
i=e[1];if(ax===i){var
j=e[2][2];if(j){var
k=j[1];if(G===k[1]){var
f=k[2],b=Id(f),g=b[1];if(typeof
g!=="number")if(ax===g[1]){var
l=g[2][2];if(l){var
m=l[1];if(G===m[1]){var
n=m[2];if(f===n)return c(p,a);k1(f,Id(n));var
a=b;continue}}}return o<50?h(o+1|0,b):ai(h,[0,b])}}return q(d,a)}if(bN<=i)return s(d,a);throw[0,r,biU]}}function
d(a){return dE(h(0,a))}return d(g)},hT=function(b,a,d,c){var
h=b?b[1]:0,i=a?a[1]:0;return H9(biY,[J,function(a){return Io([0,function(a){var
b=a[1];if(typeof
b!=="number")if(ax===b[1]){var
c=b[2],e=c[2];if(e){var
f=e[1];if(G===f[1]){var
g=f[2],j=c[3],k=c[1];if(!h)if(!uA(g))throw[0,H$,d];if(i){var
l=a[4],m=a[3],n=a[2];return[0,[0,ax,[0,k,[0,[0,G,biv(g)]],j]],n,m,l]}return a}}}throw[0,r,biX]}],d)}])},cN=function(a){return Io([0,function(a){var
b=a[1];if(typeof
b!=="number")if(ax===b[1]){var
c=b[2],d=c[2];if(d){var
e=d[1];if(G===e[1]){var
f=e[2],g=c[3],h=biw(f);return[0,[0,ax,[0,h,[0,[0,G,f]],g]],a[2],a[3],a[4]]}}}throw[0,r,biZ]}],a)},Ip=function(l,c){var
n=l[1],o=c[1];if(typeof
n!=="number")if(ax===n[1]){var
p=n[2][2];if(p){var
q=p[1];if(G===q[1]){var
b=q[2];if(typeof
o!=="number")if(ax===o[1]){var
s=o[2][2];if(s){var
t=s[1];if(G===t[1]){var
d=t[2];if(b===d)return 0;var
E=uA(b),H=uA(d);if(E)return k1(d,l);if(H)return k1(b,c);var
e=Ie(b),f=Ie(d);if(e<f)var
j=b,i=d,h=c,g=f;else
if(f<e)var
j=d,i=b,h=l,g=e;else
var
j=b,i=d,h=c,g=e+1|0;k1(j,h);var
a=aB[1],u=a[29],v=a[28],w=a[27],x=a[26],y=a[25],z=a[24],A=a[23],B=a[22],C=a[21],D=m(F[4],i,g,a[20]);aB[1]=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19],D,C,B,A,z,y,x,w,v,u];return 0}}}var
k=function(i){var
a=i[1];if(typeof
a!=="number"){var
d=a[1];if(ax===d){var
e=a[2],f=e[2];if(f){var
g=f[1];if(G===g[1])if(g[2]===b)throw[0,os,b,c]}return ae(k,L(ea,e[3]))}if(bN===d){var
h=a[2];return ae(k,L(ea,[0,h[1],[0,h[2],0]]))}}throw[0,r,bi0]};k(c);return k1(b,c)}}}throw[0,r,bi1]},fd=function(a,i,h){var
d=a?a[1]:1;function
e(z,y){var
k=z,j=y;for(;;){var
f=ea(k),g=ea(j),b=f[1],a=g[1];if(typeof
b!=="number"){var
q=b[1];if(ax===q){var
r=b[2],s=r[2];if(s){var
t=s[1],C=t[1];if(typeof
a!=="number")if(ax===a[1]){var
u=a[2],v=u[2];if(v){var
D=u[3],E=r[3];if(bP(t,v[1]))return FB(e,E,D)}}if(G===C)if(d)return Ip(f,g)}}else
if(bN===q)if(typeof
a!=="number")if(bN===a[1]){var
w=a[2],x=b[2],F=w[2],H=x[2];e(x[1],w[1]);var
k=H,j=F;continue}}if(typeof
a==="number")var
c=0;else
if(ax===a[1]){var
p=a[2][2];if(p)if(G===p[1][1]){if(d)return Ip(g,f);var
c=0}else
var
c=0;else
var
c=1}else
var
c=0;if(!c)if(typeof
b!=="number")if(ax===b[1]){var
l=b[2][2];if(l){var
m=l[1];if(G===m[1])if(typeof
a!=="number")if(ax===a[1]){var
n=a[2][2];if(n){var
o=n[1];if(G===o[1]){var
A=o[2],B=m[2];if(!d)if(B===A)return 0}}}}}throw[0,or,i,h]}}return e(i,h)},uF=function(b,a,d){var
h=b?b[1]:0,i=a?a[1]:0;function
c(a){var
j=uE([0,69,hS(a)]),m=a[2],n=[0,i],o=[0,h],d=f3(j,function(a){return hT(o,n,m,a)}),e=a[4],f=a[3],b=a[1];if(typeof
b!=="number"){var
k=b[1];if(by===k){var
l=b[2],p=l[2],q=c(l[1]);return[0,[0,by,[0,q,c(p)]],d,f,e]}if(bq===k){var
g=b[2],r=g[3],s=g[2],t=g[1],u=[0,i],v=[0,h],w=f3(j,function(a){return hT(v,u,s,a)});return[0,[0,bq,[0,t,w,c(r)]],d,f,e]}}return[0,b,d,f,e]}return c(d)},uG=function(d,b,a){var
e=a[2];if(b){if(b[2]){if(!Il(0))throw[0,ja,a];var
g=gF(b,L(function(b){var
c=aB[1],f=ou([0,d,b],a[3]),g=[0,function(a){if(a[1]!==or)if(a[1]!==os)return 0;return 1}];function
h(a){return 0}var
i=uz(g,function(a){fd(0,f,e);return 1},h);aB[1]=c;return i},b)),h=kH(function(a){return a[2]},g),c=L(function(a){return a[1]},h)}else
var
c=[0,b[1],0];if(c){var
f=[0,d,c[1]];fd(0,ou(f,a[3]),e);return f}throw[0,ja,a]}throw[0,ja,a]},Iq=function(a){if(typeof
a!=="number")if(a9===a[1])return[0,a9,oq(a[2])];return a},Ir=function(a){var
c=c5[1][9];if(typeof
a!=="number")if(a9===a[1]){var
b=a[2],e=c?bhO(b)?0:1:0;if(!e){var
d=oq(b);return[0,dB,[0,d,uC(0,bi2,H6(b))]]}}return Iq(a)},jc=function(d){var
b=0,a=d;for(;;){var
c=ea(a)[1];if(typeof
c!=="number")if(bN===c[1]){var
b=[0,a,b],a=c[2][2];continue}return[0,aj(b),a]}},Is=function(e){var
a=0,c=e;for(;;){var
b=ea(c)[1];if(typeof
b!=="number")if(bN===b[1]){var
d=b[2],a=[0,d[1],a],c=d[2];continue}return aj(a)}},It=function(b){var
a=b[1];if(typeof
a==="number"){if(pE===a)return 0}else
if(bN===a[1]){var
c=a[2];if(pE===c[1][1])return 1+It(c[2])|0}throw[0,Ia,b]},k2=function(a){function
b(a){var
c=uE([0,84,a]);return f3(c,function(y){var
c=a[1];if(typeof
c==="number")throw[0,Ib,a];var
g=c[1];if(ax===g){var
d=c[2],h=d[2],e=d[1];if(h){var
i=d[3],j=h[1],m=biI(j);Ii(m,W(i));var
n=L(b,i);return[0,[0,ax,[0,e,[0,j],n]],a[2],a[3],a[4]]}var
k=d[3],o=[0,function(a){return a===jb?1:0}],p=a[3],q=function(a){return biB(e,p,a)},f=uz(o,function(a){return biF(e,a)},q),r=f[3],s=f[2],t=f[1];Ii(r,W(k));var
u=L(b,k);return[0,[0,ax,[0,t,[0,s],u]],a[2],a[3],a[4]]}if(bN<=g){var
l=c[2],v=l[2],w=b(l[1]),x=b(v);return[0,[0,bN,[0,w,x]],a[2],a[3],a[4]]}throw[0,Ic,a]})}return b(a)},dP=[0,pE,0,0,c(b0,0)],ov=function(b,a,d){var
e=b?b[1]:0,f=a?a[1]:0;return[0,[0,ax,[0,d,0,f]],0,e,c(b0,0)]},ow=function(a,d,b){var
e=a?a[1]:0;return[0,[0,bN,[0,d,b]],0,e,c(b0,0)]},bi5=function(a,d,b){var
e=a?a[1]:0,f=c(b0,0),g=0;return[0,[0,lN,[0,L(function(a){return[0,a,0]},d),b]],g,e,f]},aE=function(a,b){var
c=a?a[1]:0;return ov([0,c],bi6,b)},D=function(a,c,b){var
d=a?a[1]:0;return ow([0,d],c,b)},k3=function(a){var
b=k2(a[2]);return[0,a[1],b,a[3],a[4]]},jd=function(b){var
a=k3(b),c=uE([0,69,a]),d=a[2];return f3(c,function(U){var
c=a[1],e=c[1];if(by<=e){if(K<=e){if(mE<=e){var
l=c[2],z=l[2],m=k3(l[1]),n=k2(z);fd(0,n,m[2]);fd(0,n,d);var
A=jd(m);return[0,A[1],a[2],a[3],a[4]]}var
o=c[2],f=o[1],p=o[2];if(p){var
q=p[1];fd(0,ou(q,a[3]),d);return[0,[0,K,[0,f,q]],a[2],a[3],a[4]]}if(typeof
f==="number")throw[0,r,bi7];var
g=i$(f),B=function(b){return uG(a$,biG(g),a)},C=function(b){return uG(ad,Ij(g),a)},E=function(c){var
b=[0,G,uC(a[3],0,g)];fd(0,ou(b,a[3]),d);return b},h=function(b,a,c){return uz([0,function(a){if(a!==x)if(a[1]!==ja)return 0;return 1}],b,a)},F=0,H=function(b){throw[0,ja,a]},I=function(a){return h(E,H,a)},s=h(B,function(a){return h(C,I,a)},F),J=a$===s[1]?Ir(f):Iq(f);return[0,[0,K,[0,J,s]],a[2],a[3],a[4]]}if(bq<=e){var
i=c[2],t=i[1],L=i[2],u=k3(i[3]),j=k2(L);fd(0,D(0,j,u[2]),d);var
M=uB(i$(t),j),N=Ir(t),O=f3(M,function(a){return jd(u)});return[0,[0,bq,[0,N,j,O]],a[2],a[3],a[4]]}var
v=c[2],P=v[2],w=k3(v[1]),k=k3(P),y=d$(0,0,a[3]),Q=D(0,k[2],y);fd(0,w[2],Q);fd(0,y,d);if(Il(0)){var
R=function(b){try{jd(k);var
a=0;return a}catch(a){return 0}},b=c5[1];f3([0,b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],0],R)}var
S=jd(w),T=jd(k);return[0,[0,by,[0,S,T]],a[2],a[3],a[4]]}if(bV<=e)return[0,[0,bV,c[2]],a[2],a[3],a[4]];throw bis})},fe=[N,bi8,H(0)],uH=function(a){try{var
ab=c(a,0);return ab}catch(a){a=s(a);if(a[1]===or){var
o=a[3],q=a[2],t=uD(0),u=cN(q),v=cN(o),w=cv(t[3]),x=aq(bT(bi9),w,b_,u,b_,v);c(ah(bi_),x);throw fe}if(a[1]===os){var
y=a[3],z=a[2],A=uD(0),B=cN([0,[0,ax,[0,bi$,[0,[0,G,z]],0]],0,0,c(b0,0)]),C=cN(y),D=cv(A[3]),E=aq(bT(bja),D,b_,B,b_,C);c(ah(bjb),E);throw fe}if(a[1]===ja){var
d=a[2],F=cN(d[2]),H=function(a,b){return hR(bjc,a,b)},I=cv(d[3]),J=aq(bT(bjd),I,H,d,b_,F);c(ah(bje),J);throw fe}if(a===jb){var
h=cN(In(0)),K=cv(h[3]),L=m(bT(bjf),K,b_,h);c(ah(bjg),L);throw fe}if(a[1]===H_){var
M=a[3],N=a[2],i=cN(In(0)),e=i[1];if(typeof
e!=="number")if(ax===e[1]){var
O=e[2][1],P=cv(i[3]),Q=p(bT(bji),P,O,M,N);c(ah(bjj),Q);throw fe}throw[0,r,bjh]}if(a[1]===H$){var
R=a[2],S=uD(0),T=cN(R),U=cv(S[3]),V=m(bT(bjk),U,b_,T);c(ah(bjl),V);throw fe}if(a[1]===Ia){var
j=cN(a[2]),W=cv(j[3]),X=m(bT(bjm),W,b_,j);c(ah(bjn),X);throw fe}if(a[1]===Ib){var
Y=cv(a[2][3]),Z=c(bT(bjo),Y);c(ah(bjp),Z);throw fe}if(a[1]===Ic){var
_=cv(a[2][3]),$=c(bT(bjq),_);c(ah(bjr),$);throw fe}var
b=biT(0);if(typeof
b==="number")var
f=0;else{var
l=b[1];if(69===l)var
n=cv(b[2][3]),g=1;else
if(84===l)var
n=cv(b[2][3]),g=1;else
var
f=0,g=0;if(g)var
k=n,f=1}if(!f)var
k=bjs;var
aa=c(bT(bjt),k);c(ah(bju),aa);throw a}},k4=function(a){return uH(function(b){return uF(0,0,H9(bjv,[J,function(b){return jd(a)}]))})},hU=function(i,e,a){return uH(function(ak){if(pE===jc(e)[2][1])return Ig(i,It(e));var
g=e[1];if(typeof
g==="number")var
j=0;else
if(lN===g[1])var
v=g[2],ah=v[2],ai=v[1],s=kH(function(a){return 1-a[2]},ai),r=ah,j=1;else
var
j=0;if(!j)var
s=0,r=e;var
ag=L(function(a){return a[1]},s),h=k2(r),ac=FE(ag),ad=c(du[44],ac),o=aB[1];if(0===o[12])var
u=h;else
var
q=aj(o[13]),ae=gF(q,L(function(a){return 1-b(du[4],a,ad)},q)),af=c(b0,0),u=[0,[0,lN,[0,ae,h]],0,h[3],af];var
a=aB[1],d=a[3],k=a[22];if(k)var
w=k[1],l=t(w,t(biH,i)),f=l,n=b(du[6],l,a[23]);else
var
f=i,n=a[23];var
x=a[29],y=a[28],z=a[27],A=a[26],B=a[25],C=a[24],D=a[22],E=a[21],G=a[20],H=a[19],I=a[18],J=a[17],K=a[16],M=a[15],N=a[14],O=a[13],P=a[12],Q=a[11],R=a[10],S=a[9],T=a[8],U=a[7],V=a[6],W=a[5],X=m(F[4],d,u,a[4]),Y=a[3]+1|0,Z=m(F[4],d,f,a[2]),_=a[1],$=[0,d,0];function
aa(a){return ab($,a)}aB[1]=[0,p(bw[10],0,f,aa,_),Z,Y,X,W,V,U,T,S,R,Q,P,O,N,M,K,J,I,H,G,E,D,n,C,B,A,z,y,x];return d})},Iu=function(d,b,f,i){var
a=d?d[1]:0,e=d$(0,0,a),g=d$(0,0,a),h=f3(uB(b,e),f);return[0,[0,bq,[0,[0,a9,b],e,h]],g,a,c(cx,0)]},ox=function(a,e,d,i){var
b=a?a[1]:0,f=c(e,0),g=c(d,0),h=d$(0,0,b);return[0,[0,by,[0,f,g]],h,b,c(cx,0)]},Iv=function(b,a,e,h){var
d=b?b[1]:0,f=a?a[1]:dV,g=d$(0,0,d);return[0,[0,K,[0,f,[0,e]]],g,d,c(cx,0)]},ff=function(a,d,f){var
b=a?a[1]:0,e=d$(0,0,b);return[0,[0,K,[0,[0,a9,d],0]],e,b,c(cx,0)]},bjw=function(a,b,g){var
d=a?a[1]:0,e=H5(b),f=c(cx,0);return[0,[0,K,[0,[0,a9,e],0]],on[1],d,f]},Iw=function(d,e,j){var
a=d?d[1]:0,f=i9(c5[1][2]),g=L(function(b){var
c=[0,a$,b],d=0,e=[0,a];return function(a){return Iv(e,d,c,a)}},f),h=[0,a];function
i(a){return ff(h,e,a)}var
b=c(f0(function(c,b){var
d=[0,a];return function(a){return ox(d,b,c,a)}},g,i),0);return[0,b[1],b[2],a,b[4]]},Ix=function(b,d,a,g){var
e=b?b[1]:0,f=c(d,0);return[0,[0,mE,[0,f,a]],a,e,c(cx,0)]},k5=[0,uy(0)],bI=[0,k5[1]],oy=function(b,a){aB[1]=a;c5[1]=H2(0);var
d=c(b,0);return[0,d,aB[1]]},je=function(b){var
a=oy(b,bI[1]),c=a[1];bI[1]=ot(a[2]);return c},hV=function(b){var
a=oy(b,k5[1]),c=a[1];k5[1]=ot(a[2]);return c},Iy=function(a){bI[1]=k5[1];return 0},Iz=function(a){try{var
b=[0,jS,c(a,0)];return b}catch(a){a=s(a);return[0,wc,a]}},uI=function(a){if(jS<=a[1])return a[2];throw a[2]},IA=function(c,f){var
a=aB[1],b=a[22];if(b)var
e=b[1],d=t(e,t(bjx,c));else
var
d=c;aB[1]=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19],a[20],a[21],[0,d],a[23],a[24],a[25],a[26],[0,b,a[27]],a[28],a[29]];return 0},IB=function(a){return je(function(b){return IA(a,b)})},IC=[N,bjy,H(0)],ID=function(c){var
a=aB[1],b=a[27];if(b){aB[1]=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19],a[20],a[21],b[1],a[23],a[24],a[25],a[26],b[2],a[28],a[29]];return 0}throw IC},IE=function(a){return je(ID)},bjz=function(b){var
a=bI[1];bI[1]=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19],a[20],a[21],b[22],a[23],a[24],a[25],a[26],b[27],a[28],b[29]];return 0},IF=function(d){var
a=c(aIf,c(kP,d));if(a){var
b=a[1];if(!O(b,bjA))return bjD;if(!O(b,bjB))return bjC}return 0},IG=function(e,l,d){var
g=bI[1],i=g[22];if(i)var
j=i[1],m=e?[0,t(j,t(bjE,e[1]))]:[0,j],f=m;else
var
f=e?[0,e[1]]:0;if(e)try{var
u=b(bw[6],d,g[26]),v=iS(f),w=b(du[4],v,u),a=w}catch(b){var
a=0}else{try{var
B=b(du[4],d,g[25]),h=B}catch(a){a=s(a);if(a!==x)throw a;var
h=0}if(h)var
a=h;else
try{var
y=b(bw[6],d,g[26]),z=iS(f),A=b(du[4],z,y),a=A}catch(b){var
a=0}}if(a)return 0;var
n=c(Ga,c(aIg,c(kP,d))),o=b(l,aEe(zz,IF(d)),d);function
k(r){var
a=bI[1];if(f){var
e=a[29],g=a[28],h=a[27],i=a[26],j=c(du[6],f[1]),k=p(bw[10],du[1],d,j,i);bI[1]=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19],a[20],a[21],a[22],a[23],a[24],a[25],k,h,g,e];return 0}var
l=a[29],m=a[28],n=a[27],o=a[26],q=b(du[6],d,a[25]);bI[1]=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19],a[20],a[21],a[22],a[23],a[24],q,o,n,m,l];return 0}var
q=bI[1],r=Iz(function(f){function
b(a){return ae(function(a){return c(a,0)},o)}var
a=bI[1];bI[1]=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19],a[20],a[21],a[22],a[23],a[24],a[25],a[26],a[27],a[28],n];if(e){IB(e[1]);var
d=Iz(b);IE(0);uI(d);return k(0)}b(0);return k(0)});bjz(q);return uI(r)},IH=[N,bjF,H(0)],II=function(b,a){try{var
c=apW(mO,a);return c}catch(c){throw[0,IH,b,a]}},uJ=function(a){var
d=bI[1];if(c(aIi,c(kP,a)))return II(a,[0,a,0]);var
e=L(kP,[0,d[29],d[28]]);return II(a,L(function(d){return c(Ga,b(aIh,d,c(kP,a)))},e))},oz=function(c,b,a){var
d=IF(a)?a:t(a,bjG);return IG(c,b,uJ(d))},uK=function(a){return je(function(b){k4(c(a,0));return 0})},df=HY([0]),IJ=function(i,a){function
c(d,a){var
e=a[1],f=e[1];if(bq<=f){if(K<=f)return a$===e[2][2][1]?b(i,a,d):a;var
g=e[2],j=g[2],k=g[1],l=a[4],m=a[3],n=a[2];return[0,[0,bq,[0,k,j,c(d+1|0,g[3])]],n,m,l]}if(by<=f){var
h=e[2],o=h[1],p=a[4],q=a[3],r=a[2],s=c(d,h[2]);return[0,[0,by,[0,c(d,o),s]],r,q,p]}return a}return c(0,a)},oA=function(f,a){return IJ(function(a,g){var
b=a[1];if(typeof
b!=="number")if(K===b[1]){var
c=b[2],d=c[2];if(a$===d[1]){var
e=d[2],h=c[1];return g<=e?[0,[0,K,[0,h,[0,a$,e+f|0]]],a[2],a[3],a[4]]:a}}throw[0,r,bjK]},a)},k6=function(a){var
d=a[1];if(typeof
d!=="number"){var
f=d[1];if(by===f){var
g=d[2],h=g[2],i=g[1],j=function(k){function
d(i){var
j=k[1];if(typeof
j!=="number")if(bq===j[1]){var
l=j[2],o=l[3],p=l[1],q=function(l){var
k=oA(1,i),b=oA(-1,IJ(function(c,b){var
a=c[1];if(typeof
a!=="number")if(K===a[1])return a[2][2][2]===b?oA(b,k):c;throw[0,r,bjL]},o)),e=b;for(;;){var
f=e[1];if(by===f[1]){var
g=f[2][1],h=g[1];if(typeof
h==="number")var
a=0;else{var
j=h[1];if(bq===j)var
d=0,a=1;else
if(K===j)var
d=1,a=1;else
var
a=0}if(!a){var
e=g;continue}}else
var
d=1;return d?c(df[1],b):k6(b)}},f=i[1];if(typeof
f==="number")var
d=0;else
if(K===f[1]){var
g=f[2],h=g[1];if(a$===g[2][1])var
e=1;else
if(typeof
h==="number")var
d=0,e=0;else
if(dB===h[1])if(ad===g[2][1])var
e=1;else
var
d=0,e=0;else
var
d=0,e=0;if(e)var
n=function(a){return c(df[11],[0,[0,h,p],a])},m=b(df[2],df[10],n),d=1}else
var
d=0;if(!d)var
m=c(df[1],0);return b(df[2],m,q)}return c(df[1],[0,[0,by,[0,k,i]],a[2],a[3],a[4]])}var
e=k6(h);return b(df[2],e,d)},k=k6(i);return b(df[2],k,j)}if(bq===f){var
e=d[2],l=e[3],m=e[2],n=e[1],o=function(b){return c(df[1],[0,[0,bq,[0,n,m,b]],a[2],a[3],a[4]])},p=k6(l);return b(df[2],p,o)}}return c(df[1],a)},uL=function(i){var
j=k4(i);function
h(a){var
b=cw(bjQ,[J,function(g){function
b(n,m,l){var
a=n,e=m,d=l;for(;;){var
f=a[1],i=f[1];if(by===i){var
j=f[2],p=j[1],q=b(j[2],gK,0),s=d+1|0,t=function(d,a,e){return function(b){return c(d,[0,[0,by,[0,b,e]],a[2],a[3],a[4]])}}(e,a,q),a=p,e=t,d=s;continue}if(bq===i){var
g=f[2],u=g[3],v=g[2],w=g[1];if(0===d){var
x=a[4],y=a[3],z=a[2];return[0,[0,bq,[0,w,v,b(u,gK,0)]],z,y,x]}throw[0,r,bjP]}var
A=c(e,a),k=FA(d,jc(a[2])[1]),o=oA(W(k),A),h=function(d,a){if(iW(d))return a;if(d){var
f=d[2],g=ea(d[1]),e=g[1];if(typeof
e!=="number")if(bN===e[1]){var
i=e[2],j=i[1],k=i[2],n=c(cx,0),o=oc(a[3]),p=b([0,[0,K,[0,dV,[0,a$,W(f)]]],j,o,n],gK,0),m=c(cx,0),q=h(f,[0,[0,by,[0,a,p]],k,a[3],m]),l=c(cx,0);return[0,[0,bq,[0,dV,j,q]],g,a[3],l]}throw[0,r,bjN]}throw[0,r,bjO]};return h(k,o)}}var
d=0,f=a;for(;;){var
e=f[1];if(typeof
e!=="number")if(bq===e[1]){var
d=d+1|0,f=e[2][3];continue}return d===W(jc(a[2])[1])?a:b(a,gK,0)}}]);return c(df[1],b)}var
f=[J,function(a){return k6(j)}],g=b(df[18],bjM,f),e=c(b(df[2],g,h),bjJ),k=e[2],l=e[1];function
d(e,b){var
c=b[1];if(typeof
c!=="number"){var
f=c[1];if(by===f){var
j=c[2],o=j[2],p=d(e,j[1]),r=d(e,o);return[0,[0,by,[0,p,r]],b[2],b[3],b[4]]}if(bq===f){var
g=c[2],k=g[1],s=g[3],u=g[2];if(dV===k)var
i=t(bi3,a(q+aB[1][7])),h=[0,dB,[0,i,uC(0,bi4,H6(i))]];else
var
h=k;var
v=d([0,h,e],s);return[0,[0,bq,[0,h,u,v]],b[2],b[3],b[4]]}if(K===f){var
l=c[2];if(dV===l[1]){var
m=l[2];if(a$===m[1]){var
n=m[2],w=b[4],x=b[3],y=b[2];return[0,[0,K,[0,hN(e,n),[0,a$,n]]],y,x,w]}}}}return b}return[0,d(0,l),k]},jf=function(a){var
b=[0,[0,ad,hV(function(b){return hU(a,dP,b)})]];return[0,b,[0,[0,ax,[0,a,b,0]],0,0,c(b0,0)]]},uM=function(a,d){var
e=hV(function(b){return hU(a,dP,b)}),b=[0,[0,ad,e]];oo[1]=m(F[4],e,[0,d[1],d[2]],oo[1]);function
h(d,f,h){var
e=d?d[1]:0,g=[0,[0,ax,[0,a,b,0]],0,e,c(b0,0)];return[0,[0,bV,f],g,e,c(cx,0)]}function
f(d,f){var
e=d?d[1]:0,g=[0,[0,ax,[0,a,b,0]],0,e,c(b0,0)];return[0,[0,bV,f],g,e,c(om[3],0)]}function
g(a,e){var
b=a?a[1]:0,d=f([0,b],e),g=c(om[3],0);return[0,[0,al,[0,d,0,0]],d[2],b,g]}function
i(a,e){var
b=a?a[1]:0,d=g([0,b],e),f=c(om[3],0);return[0,[0,aP,[0,0,d]],d[2],b,f]}return[0,b,[0,[0,ax,[0,a,b,0]],0,0,c(b0,0)],h,f,g,i]},bjT=function(a){var
d=D(0,dP,dP),b=[0,[0,ad,hV(function(b){return hU(a,d,b)})]];return[0,b,function(d){return[0,[0,ax,[0,a,b,[0,d,0]]],0,0,c(b0,0)]}]},bjU=function(a){var
d=D(0,dP,D(0,dP,dP)),b=[0,[0,ad,hV(function(b){return hU(a,d,b)})]];return[0,b,function(d,f,e){var
g=d?d[1]:0;return[0,[0,ax,[0,a,b,[0,f,[0,e,0]]]],0,g,c(b0,0)]}]},c6=function(b,a){return hV(function(c){return hU(b,a,c)})},uN=function(a){return hV(function(b){return IA(a,b)})},uO=function(a){return hV(ID)},bjV=function(c,d){var
b=kV(c),a=b5(b[3]-b[2]|0);dH(a,beW);dH(a,GJ(b));dH(a,beX);return d_(ua(b6(a)))},oB=uM(bjW,[0,bjV,function(b,a,d,c){return bP(b,a)}]),k7=oB[3],b1=oB[2],bjX=oB[6],bjY=oB[5];on[1]=b1;var
bjZ=function(b,c){return a(q+b)},uP=uM(bj0,[0,bjZ,function(b,a,d,c){return b===a?1:0}]),uQ=uP[6],IK=uP[3],eE=uP[2],bj1=function(a,b){return cv(a)},IL=uM(bj2,[0,bj1,function(b,a,d,c){return b===a?1:0}]),IM=IL[2],bj3=IL[6],cy=bjT(bj4)[2],uR=c6(bj6,c(cy,aE(0,bj5))),uS=aE(0,bj7),bj8=c(cy,uS),uT=c6(bj9,D(0,uS,D(0,c(cy,uS),bj8))),IN=jf(bj_)[2];c6(bj$,IN);var
k8=jf(bka)[2],bkc=c6(bkb,k8),bke=c6(bkd,k8),IO=bjU(bkf)[2],IP=aE(0,bkg),IQ=aE(0,bkh);c6(bki,D(0,IP,D(0,IQ,m(IO,0,IP,IQ))));var
eb=jf(bkj)[2],IR=c6(bkl,D(0,aE(0,bkk),eb)),IS=jf(bkm),X=IS[2],bkn=IS[1],fg=jf(bko)[2],IT=c6(bkp,D(0,X,D(0,X,fg))),IU=c6(bkq,D(0,X,D(0,X,D(0,X,fg)))),bkr=function(a){var
b=a[5][1];return ae(function(a){return c(a,0)},b)},bks=function(a){var
b=aj(a[6][1]);return ae(function(a){return c(a,0)},b)},IV=function(d){var
b=0,a=d;for(;;){var
c=a[2];if(c){var
b=[0,a,b],a=c[1];continue}return[0,a,b]}},gN=[0,0],IW=[0,0],uU=[0,0],oC=[0,0],bkt=function(g){var
a=HY([0]),e=a[1],d=a[2],h=a[10],i=a[11],j=a[3],k=a[4],l=a[5],n=a[6],o=a[7],p=a[8],q=a[9],s=a[12],t=a[13],u=a[14],v=a[15],w=a[16],y=a[17],z=a[18];function
f(j,m){return b(d,h,function(k){var
a=c(g[1],k);if(a[4][1]){a[4][1]=0;a[3][1]=a[3][1]+1|0;var
h=[0,a[3][1],[0,a],a[3],[0,0],[0,0],[0,0]],f=h,l=c(i,b(g[2],k,h))}else
var
f=a,l=c(e,0);c(j,0);f[5][1]=[0,m,f[5][1]];f[6][1]=[0,j,f[6][1]];return b(d,l,function(a){return c(e,0)})})}var
A=b(d,h,function(a){c(g[1],a)[4][1]=1;return c(e,a)});function
B(a){return b(d,h,function(b){var
d=c(g[1],b),e=c(g[1],a);if(d[1]!==e[1])cw(bku,[J,function(h){var
c=IV(d),b=c,a=IV(e);for(;;){if(b)if(a){var
f=a[2],g=b[2];if(b[1][1]===a[1][1]){var
b=g,a=f;continue}}ae(bkr,aj(b));return ae(bks,a)}}]);return c(i,a)})}var
C=[0,ER,ty,tx,aDy,EQ,aDB,aDz,aDA,aDC,aDE,aDF,aDG,aDD,aDH,aDI,aDJ,function(a,g){function
h(d){var
b=a[1];function
c(c){a[1]=b;return 0}return f(function(b){a[1]=g;return 0},c)}return b(d,c(e,42),h)}];function
D(a,b,c){if(a[2]===b)return kO(a,c);if(b<a[2])return 0;throw[0,r,bkv]}function
E(b,c,a){if(a[2]===b)return kO(a,c);if(b<a[2])return i3(a,b,c);throw[0,r,bkw]}function
F(g,h,a){function
i(n){function
j(a){return c(e,0)}if(a[2]===g){kO(a,h);var
k=function(a){return 0},i=f(function(b){return i3(a,g,h)},k)}else{if(!(g<a[2]))throw[0,r,bkx];var
l=nY(a,g),m=function(b){return i3(a,g,l)},i=f(function(b){return i3(a,g,h)},m)}return b(d,i,j)}return b(d,c(e,42),i)}function
G(g,i,a){function
h(m){function
j(a){return c(e,0)}var
h=nY(a,g),k=c(i,h);function
l(b){return i3(a,g,h)}return b(d,f(function(b){return i3(a,g,k)},l),j)}return b(d,c(e,42),h)}var
H=[0,F8,aGD,nX,aGG,aGL,aGw,nY,aGO,aGT,kO,aHc,aGW,aG5,aGZ,aG4,F9,aGB,aHd,aHe,F$,aHf,aHg,aHw,aHh,aHi,aHn,aHo,aHs,aHt,aHu,aHv,aHr,aHp,F_,aHq,aGJ,aGK,gH,aGx,aGy,gH,aGC,aHx,aHy,aHz,aGt,F7,D,E,F,G,function(b,a){try{var
c=nY(a,b);return c}catch(a){throw x}}],I=bU[1],K=bU[2],L=bU[3],M=bU[4],N=bU[5],O=bU[6],P=bU[8],Q=bU[9],R=bU[10],S=bU[11],T=bU[12],U=bU[13],V=bU[14],W=bU[15];function
X(g,i,a){function
h(q){function
k(a){return c(e,0)}try{var
p=[0,b(bU[7],a,g)],h=p}catch(a){var
h=0}if(h)var
l=h[1],n=function(b){return m(bU[9],a,g,l)},j=f(function(b){return m(bU[9],a,g,i)},n);else
var
o=function(c){return b(bU[6],a,g)},j=f(function(b){return m(bU[5],a,g,i)},o);return b(d,j,k)}return b(d,c(e,42),h)}function
Y(i,g,j,a){function
h(p){function
k(a){return c(e,0)}try{var
o=b(bU[7],a,g),h=o}catch(b){m(bU[5],a,g,i);var
h=i}var
l=c(j,h);function
n(b){return m(bU[9],a,g,h)}return b(d,f(function(b){return m(bU[9],a,g,l)},n),k)}return b(d,c(e,42),h)}return[0,e,d,j,k,l,n,o,p,q,h,s,t,u,v,w,y,z,f,A,B,C,H,[0,I,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,function(c,a){return b(bU[7],a,c)}]]},ec=function(a){return a[3][2][1]},f4=[0,0],bky=function(a){return a[9]},gO=bkt([0,bky,function(a,b){return[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],b,a[10],a[11],a[12],a[13]]}]),oD=gO[1],oE=gO[2],IX=gO[10],IY=gO[20],bkz=gO[8],bkA=gO[9],bkB=gO[11],bkC=gO[19],T=function(a){return[0,function(d,c){return b(d,a,c)}]},o=function(b,a){return[0,function(d){function
e(b){return c(c(a,b)[1],d)}return c(b[1],e)}]},aG=[0,function(c,a){var
b=bi(a);return bu===b?a[1]:J===b?cd(a):a}],IZ=function(d,a){return[0,function(c,e){var
f=[J,function(g){var
d=bi(a),f=bu===d?a[1]:J===d?cd(a):a;return b(f[1],c,e)}];return b(d[1],c,f)}]},jg=function(b,a){return IZ(b,a)},hW=function(a){return[0,function(d,c){return b(oE,a,function(a){return b(d,a,c)})}]},bkD=function(a){if(a){var
b=a[1],c=b[2];return jg(T(b[1]),c)}return aG},I0=function(a){function
d(d,a){return c(oD,[0,[0,d,[J,function(c){return o([0,function(e,d){var
c=bi(a);function
f(a){return b(e,a,d)}var
g=bu===c?a[1]:J===c?cd(a):a;return b(oE,g,f)}],bkD)}]]])}var
e=[J,function(a){return c(oD,0)}];return hW(b(a[1],d,e))},f5=function(b,d,a){function
e(e){if(e){var
f=e[1],b=f[2],h=f[1],i=[J,function(e){var
a=bi(b),c=bu===a?b[1]:J===a?cd(b):b;return o(c,d)}];return jg(c(d,h),i)}var
g=bi(a);return bu===g?a[1]:J===g?cd(a):a}return o(I0(b),e)},cO=function(c,b){var
d=L(c,b),a=T(0);return aZ(function(b,a){return o(b,function(b){return o(a,function(a){return T(ab(b,[0,a,0]))})})},a,d)},I1=function(d,c,a){var
e=T(c);return aZ(function(c,a){return o(c,function(c){return b(d,c,a)})},e,a)},cp=function(e){return hW(b(oE,IX,function(a){var
f=a[8],d=oy(function(a){return uH(e)},f),g=d[2],h=d[1];function
i(a){return c(oD,h)}return b(oE,c(IY,[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],g,a[9],a[10],a[11],a[12],a[13]]),i)}))},cP=hW(IX),jh=hW(bkC),c7=function(a){return hW(c(IY,a))},f6=hW(bkA),bkH=hW(bkz),oF=function(c,a){return[0,function(e,d){return b(bkB,c,b(a[1],e,d))}]},fh=function(a){return a?T(0):aG},I2=function(a){return[0,F[1],0]},uV=function(a){return[0,0,F[1],F[1],F[1],F[1],F[1],F[1],a,[0,0,0,[0,0],[0,0],[0,0],[0,0]],f4,0,bC[1],bC[1]]},uW=function(a){f4[1]=0;var
b=a[13],c=bC[1],d=a[10],e=a[9],f=ot(a[8]);return[0,0,F[1],F[1],F[1],F[1],F[1],a[7],f,e,d,0,c,b]},I3=[0,uV(bI[1])],oG=[0,uV(bI[1])],aF=[0,uV(uy(0))],uX=[0,I2(0)],bm=function(a,d){var
e=a?a[1]:0;return o(bkH,function(a){aF[1]=a[2];uX[1]=a[1];var
b=c(d,0);if(e){var
f=function(a){return T(b)};return o(c7(aF[1]),f)}return T(b)})},eF=function(c){var
b=oy(c,aF[1][8]),a=aF[1],d=b[1];aF[1]=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],b[2],a[9],a[10],a[11],a[12],a[13]];return d},uY=function(f,a){if(uU[1]){var
b=f4[1];f4[1]=b+1|0;var
d=oj(HW(f));k0([0,1,d,bkI,b]);var
c=ux(a)[2],g=jS<=c[1]?bkJ:bkK;k0([0,1,d,g,b]);f4[1]=b;return oj(c)}var
e=bi(a);return bu===e?a[1]:J===e?cd(a):a},hX=function(c,b,a){return cw(c,[J,function(c){return uY(b,a)}])},an=ok([0,3,function(a){return[0,[0,374637448]]}])[3],uZ=function(f){var
a=f,c=0,b=0;for(;;){var
d=a[1];if(typeof
d!=="number")if(by===d[1]){var
e=d[2],g=[0,[0,0,a[2],a[3],a[4]],b],a=e[1],c=[0,e[2],c],b=g;continue}return[0,a,c,b]}},I4=function(c,e){var
f=c?c[1]:0;function
p(c,b){if(typeof
b==="number")return t(bkL,a(q+W(c)));if(dB<=b[1]){var
d=b[2][1];return t(d,t(bkM,a(q+W(c))))}return b[2]}var
h=[0,bw[1]];function
r(c,d){if(iQ(c,bkN))return c;var
e=h[1],i=b(bw[43][1],c,e);if(i){var
j=b(F[43][1],d,i[1]);if(j)var
g=e,f=j[1];else
var
k=t(c,t(bkO,a(q+d))),l=b(F[4],d,k),g=m(bw[9],c,l,e),f=k}else
var
n=b(F[34],d,c),g=m(bw[4],c,n,e),f=c;h[1]=g;return f}function
d(b,a){var
c=a[1];if(typeof
c!=="number"){var
e=c[1];if(by===e){var
i=c[2],q=i[1],s=a[4],t=a[3],u=a[2],v=d(b,i[2]);return[0,[0,by,[0,d(b,q),v]],u,t,s]}if(bq===e){var
f=c[2],w=f[3],x=f[2],j=p(b,f[1]),y=a[4],z=a[3],A=a[2];return[0,[0,bq,[0,[0,a9,j],x,d([0,j,b],w)]],A,z,y]}if(K===e){var
g=c[2],h=g[1],k=g[2];if(a$===k[1]){var
l=k[2],B=a[4],C=a[3],D=a[2],E=[0,a$,l];try{var
F=hN(b,l),m=F}catch(a){var
m=bkP}return[0,[0,K,[0,[0,a9,m],E]],D,C,B]}if(typeof
h!=="number")if(a9===h[1]){var
n=g[2];if(G===n[1]){var
o=n[2],H=r(h[2],o);return[0,[0,K,[0,[0,a9,H],[0,G,o]]],a[2],a[3],a[4]]}}}}return a}return L(function(a){return d(f,a)},e)},I5=function(b,c){var
d=b?b[1]:0,a=I4([0,d],[0,c,0]);if(a)if(!a[2])return a[1];throw[0,r,bkQ]},u0=function(e,d,a){var
b=a[1][2],c=b[1],f=b[2],g=d+W(c)|0,h=a[4],i=a[3],j=a[2];return[0,[0,aP,[0,c,I6(e,g,f)]],j,i,h]},I6=function(d,c,a){var
e=a[1];if(G<=e[1]){var
b=e[2],g=b[3][2],h=b[4],i=b[2],j=b[1],r=g[4],s=g[3],t=g[1],u=0,v=[0,ca,[0,L(function(a){return u0(d,c,a)},t),u,s,r]];return[0,[0,G,[0,j,i,v,h]],a[2],a[3],a[4]]}var
f=e[2],k=f[3],l=f[2],m=f[1],n=a[4],o=a[3],p=a[2],q=L(function(a){return u0(d,c,a)},l);return[0,[0,al,[0,I7(d,c,m),q,k]],p,o,n]},I7=function(g,f,a){var
b=a[1];if(typeof
b!=="number")if(K===b[1]){var
c=b[2],d=c[2];if(a$===d[1]){var
e=d[2],h=c[1];if(f<=e)return[0,[0,K,[0,h,[0,a$,e+g|0]]],a[2],a[3],a[4]]}}return a},oH=function(b,a){var
c=b?b[1]:0;return 0===a?gK:function(b){return I7(a,c,b)}},I8=function(b,a){var
c=b?b[1]:0;return 0===a?gK:function(b){return I6(a,c,b)}},oI=function(b,a){var
c=b?b[1]:0;return 0===a?gK:function(b){return u0(a,c,b)}},gP=function(a){return[0,[0,aP,[0,0,[0,[0,al,[0,a,0,0]],a[2],a[3],a[4]]]],a[2],a[3],a[4]]},fi=function(a){return[0,[0,aP,[0,0,a]],a[2],a[3],a[4]]},u1=function(h){var
b=h[1][2],d=b[2][1],i=b[1];if(G<=d[1])return 0;var
e=d[2],f=e[2],j=e[1],a=W(i);function
k(f,e){var
g=e[1][2];if(!g[1]){var
b=g[2][1];if(typeof
b!=="number")if(al===b[1]){var
c=b[2],d=c[1][1];if(typeof
d!=="number")if(K===d[1]){var
j=d[2][2];if(a$===j[1])if(!c[2])if(!c[3])if(f===j[2])return 1}}}var
h=u1(e);if(h){var
a=h[1][1];if(typeof
a!=="number")if(K===a[1]){var
i=a[2][2];if(a$===i[1])if(f===i[2])return 1}}return 0}var
g=W(f)===a?1:0,l=g?kG(k,oa(a),f):g;return l?[0,c(oH(0,-a|0),j)]:0},k9=function(j){function
k(d,a,c){var
e=b(F[43][1],d,a);return e?bP(c,e[1])?[0,a]:0:[0,m(F[4],d,c,a)]}var
x=F[1],y=F[1],d=j,a=W(j)-1|0,g=y,f=x;for(;;){if(d){var
l=d[2],n=u1(d[1]);if(n){var
e=n[1],h=e[1];if(typeof
h!=="number")if(K===h[1]){var
o=h[2],i=o[2],p=i[1],q=o[1];if(a$===p){var
t=i[2],u=c(an,0),r=k(t,f,[0,[0,K,[0,q,[0,a$,a]]],e[2],e[3],u]);if(r){var
d=l,a=a-1|0,f=r[1];continue}return 0}if(cr===p){var
v=i[2],w=c(an,0),s=k(v,g,[0,[0,K,[0,q,[0,a$,a]]],e[2],e[3],w]);if(s){var
d=l,a=a-1|0,g=s[1];continue}return 0}}}return 0}return[0,[0,g,f]]}},I9=function(a){var
d=a[1];if(G<=d[1]){var
b=d[2],c=b[3][2],e=c[1],f=b[4],g=c[4],h=c[3],i=b[2],j=b[1],k=k9(e);return[0,[0,G,[0,j,i,[0,ca,[0,e,k,h,g]],f]],a[2],a[3],a[4]]}return a},I_=[N,bkT,H(0)],u2=function(d,b){var
a=b[1][2],e=a[1],f=Ja(d,a[2]);return f0(function(a,d){var
b=a[1],e=b[2],f=b[1],g=c(cx,0);return[0,[0,bq,[0,f,e,d]],a[2],a[3],g]},e,f)},I$=function(k,j,i){var
d=k,b=j,a=i;for(;;){if(b){if(a){var
e=a[1],f=a[2],g=b[2],h=b[1],l=c(cx,0),d=[0,[0,by,[0,d,h]],e[2],e[3],l],b=g,a=f;continue}}else
if(!a)return d;return Y(aFA)}},Ja=function(b,f){var
d=f[1];if(G<=d[1]){var
a=d[2],g=a[3][2],h=a[4],i=a[2],j=a[1],o=g[3],p=g[1],q=L(function(a){return u2(b,a)},p),k=c(cx,0);return I$([0,[0,K,[0,[0,a9,j],[0,G,i]]],h,f[3],k],q,o)}var
e=d[2],l=e[3],m=e[2],n=Jb(b,e[1]);return I$(n,L(function(a){return u2(b,a)},m),l)},Jb=function(f,a){var
d=a[1];if(K<=d[1]){var
g=d[2],b=g[2],h=b[1],e=g[1];if(cr===h){var
i=b[2];if(0<=f){var
j=c(cx,0);return[0,[0,K,[0,e,[0,ad,i+f|0]]],a[2],a[3],j]}throw I_}if(ad<=h){var
k=b[2],l=c(cx,0);return[0,[0,K,[0,e,[0,ad,k]]],a[2],a[3],l]}var
m=b[2],n=c(cx,0);return[0,[0,K,[0,e,[0,a$,m]]],a[2],a[3],n]}var
o=d[2],p=c(cx,0);return[0,[0,bV,o],a[2],a[3],p]},bkU=function(b,a){return cw(u3,[J,function(c){return Jb(b,a)}])},u4=function(b,a){return cw(u3,[J,function(c){return u2(b,a)}])},bkV=function(b,a){return cw(u3,[J,function(c){return Ja(b,a)}])},Jc=function(d,f){var
a=W(d),b=nO(a,aj(f));if(W(b)<a)var
g=oa(a-W(b)|0),e=ab(b,L(function(a){return dV},g));else
var
e=b;var
h=gF(e,d);return L(gP,FD(function(d,b){var
e=b[2],f=b[1];return[0,[0,K,[0,f,[0,a$,(a-d|0)-1|0]]],e,0,c(an,0)]},h))},u5=function(b,a,e){if(0===b)return[0,0,a];var
f=[0,a,[0,a,0]],d=f0(function(b,a){var
d=a[1],f=a[2],g=c(b0,0),e=[0,[0,bN,[0,b,d]],0,GR(b[3],d[3]),g];return[0,e,[0,e,f]]},b,f),g=d[1],h=BC(d[2]);return[0,L(function(a){return[0,0,a,e,c(b0,0)]},h),g]},u6=function(a){function
d(d,c){return hR(bkW,d,hS(b(a[1],bI[1][3],c)))}function
e(d,c){return hR(bkX,d,hS(I5(0,b(a[1],bI[1][3],c))))}return[0,d,e,function(b){var
d=L(hS,I4(0,L(c(a[1],bI[1][3]),b)));return L(function(b){var
a=tw(0);hR(bkY,a,b);return iO(a)},d)}]},aK=u6([0,bkV]),eG=u6([0,u4]),Jd=u6([0,bkU]),u7=function(b,a){if(typeof
a!=="number")if(a9===a[1]){var
d=a[2];return c(ag(b,bk0),d)}return ag(b,bkZ)},Je=function(g,a,t){var
h=t;a:for(;;){if(1<g)return ag(a,bk1);var
d=h[1];if(G<=d[1]){var
i=d[2],j=i[2],u=i[3][2][1],v=aF[1];for(;;){var
k=b(F[43][1],j,v[3]);if(k){var
l=k[1][1],e=l[1];if(typeof
e!=="number")if(G===e[1]){var
j=e[2][2];continue}var
h=l;continue a}var
w=W(u);return c(ag(a,bk2),w)}}var
f=d[2],m=f[1],n=m[1];if(K<=n[1]){var
o=n[2],q=o[2],r=o[1];if(cr===q[1])if(!f[2]){var
A=q[2];return c(ag(a,bk8),A)}var
s=f[2];if(s){var
x=g+1|0,y=function(a,b){return u8(x,a,b)},z=function(a,b){return eC(bk5,bk4,bk3,y,a,b)};return p(ag(a,bk6),u7,r,z,s)}return b(ag(a,bk7),u7,r)}var
B=m[2];return b(ag(a,bk9),b_,B)}},u8=function(c,b,a){return Je(c,b,a[1][2][2])},gQ=function(b,a){return Je(0,b,a)},u9=function(b,a){return u8(0,b,a)},Jf=function(a){function
b(a){var
c=a[1];if(G<=c[1]){var
b=c[2];return[0,[0,G,[0,b[1],b[2],b[3],b[4]]],a[2],a[3],a[4]]}var
d=c[2],f=d[3],g=d[1],h=a[4],i=a[3],j=a[2];return[0,[0,al,[0,g,L(e,d[2]),f]],j,i,h]}function
e(a){var
c=a[1][2],d=c[1],e=a[4],f=a[3],g=a[2];return[0,[0,aP,[0,d,b(c[2])]],g,f,e]}return b(a)},k_=function(d,c){var
e=d?d[1]:acP,a=aF[1],b=a[1],f=uX[1],g=c?c[1]:W(f[2]),h=a[13],i=a[12],j=a[11],k=a[10],l=a[9],n=a[8],o=a[7],p=m(F[4],b,e,a[6]),q=a[5],r=m(F[4],b,0,a[4]),s=a[3],t=m(F[4],b,g,a[2]);aF[1]=[0,a[1]+1|0,t,s,r,q,p,o,n,l,k,j,i,h];return b},u_=function(a,b){var
c=a?a[1]:acP;return bm(bk_,function(a){return k_([0,c],b)})},ji=function(a){return b(F[43][1],a,aF[1][3])},gR=function(d,b,c){var
e=b?b[1]:0,a=aF[1],f=a[13],g=a[12],h=a[11],i=a[10],j=a[9],k=a[8],l=a[7],n=a[6],o=a[5],p=a[4],q=m(F[4],d,[0,c,e],a[3]);aF[1]=[0,a[1],a[2],q,p,o,n,l,k,j,i,h,g,f];return 0},f7=function(c,d){var
a=aF[1],e=a[13],f=b(bC[6],c,a[12]),g=a[11],h=a[10],i=a[9],j=a[8],k=a[7],l=a[6],n=a[5],o=a[4];function
p(a){return[0,d,a]}var
q=m(F[9],c,p,o);aF[1]=[0,a[1],a[2],a[3],q,n,l,k,j,i,h,g,f,e];return 0},u$=function(b,a){return bm(bla,function(c){return f7(b,a)})},f8=function(c){var
q=b(F[6],c,aF[1][4]),a=aF[1],d=a[13],e=b(bC[7],c,a[12]),f=a[11],g=a[10],h=a[9],i=a[8],j=a[7],k=a[6],l=a[5],n=a[4];function
o(a){return 0}var
p=m(F[9],c,o,n);aF[1]=[0,a[1],a[2],a[3],p,l,k,j,i,h,g,f,e,d];return aj(q)},Jg=function(c,d){var
a=aF[1],e=a[13],f=iW(d)?b(bC[7],c,a[12]):b(bC[6],c,a[12]),g=a[11],h=a[10],i=a[9],j=a[8],k=a[7],l=a[6],n=a[5],o=a[4];function
p(a){return d}var
q=m(F[9],c,p,o);aF[1]=[0,a[1],a[2],a[3],q,n,l,k,j,i,h,g,f,e];return 0},f9=function(a){return b(F[6],a,aF[1][2])},Jh=function(a){return bm(0,function(b){return f9(a)})},k$=function(a){return b(F[6],a,aF[1][6])},la=function(h){var
a=h;for(;;){if(typeof
a!=="number")if(dB===a[1]){var
d=a[2],e=d[2],i=d[1],f=ji(e);if(f){var
b=f[1][1][1];if(G<=b[1]){var
g=b[2][2];if(e===g)return a;var
a=[0,dB,[0,i,g]];continue}var
c=b[2][1][1];if(typeof
c!=="number")if(bV===c[1])return[0,a9,c[2]];throw[0,r,bld]}return a}return a}},ble=function(a){return bm(0,function(b){return la(a)})},lb=function(k,j){var
d=la(k),a=la(j);if(ol[1]){var
u=i$(a),v=i$(d),w=i$(j),x=i$(k);p(ah(blf),x,w,v,u)}if(typeof
d==="number")return a;if(dB<=d[1])if(typeof
a==="number")var
e=0;else{var
l=a[1],m=d[2],f=m[2];if(a9===l)var
n=f,g=a[2],e=1;else{if(dB===l){var
o=a[2][2],y=m[1];if(f===o)return d;var
i=[0,ca,[0,0,[0,[0,F[1],F[1]]],0,0]],h=i[2][3],t=0,s=h?h[1][2]:b1;gR(f,0,[0,[0,G,[0,y,o,i,s]],b1,t,c(an,0)]);return a}var
e=0}}else
if(typeof
a==="number")var
e=0;else{var
q=a[1],r=d[2];if(a9===q){var
z=a[2];if(bD[1])b(ah(blg),r,z);return d}if(dB===q)var
n=a[2][2],g=r,e=1;else
var
e=0}return e?(gR(n,0,b(bjY,0,g)),[0,a9,g]):d},blh=function(c,a){var
f=bm(bli,function(b){return lb(c,a)});return[0,function(d,c){var
a=[0,1];function
e(e,c){HX(blj,1-a[1]);a[1]=1;return b(d,e,c)}return b(f[1],e,c)}]},oJ=function(f,i){function
k(d){var
e=d[1][2];if(!e[1]){var
b=e[2][1];if(typeof
b!=="number")if(al===b[1]){var
i=b[2],c=i[1][1];if(typeof
c!=="number")if(K===c[1]){var
j=c[2],k=j[2][1],m=j[1],n=a$===k?0:cr===k?0:1;if(!n)if(!i[2])return m}}}var
f=u1(d);if(f){var
a=f[1][1];if(typeof
a!=="number")if(K===a[1]){var
g=a[2],h=g[2][1],l=g[1],o=a$===h?0:cr===h?0:1;if(!o)return l}}return dV}var
l=aF[1],e=W(i);try{var
B=b(F[6],f,l[5]),d=B}catch(a){var
d=tM(e,dV)}if(W(d)<e)var
h=ab(d,tM(e-W(d)|0,dV)),g=0;else
if(e<W(d))var
A=FA(e,d),h=nO(e,d),g=A;else
var
h=d,g=0;var
m=L(k,i);if(ol[1])c(ah(blk),f);var
n=iX(lb,h,m);if(ol[1])c(ah(bll),f);var
a=aF[1],j=ab(n,g),o=a[13],q=a[12],r=a[11],s=a[10],t=a[9],u=a[8],v=a[7],w=a[6],x=a[5];function
y(a){return j}var
z=p(F[10],j,f,y,x);aF[1]=[0,a[1],a[2],a[3],a[4],z,w,v,u,t,s,r,q,o];return 0},va=function(c){var
a=c[1];if(G<=a[1]){var
b=a[2];return oJ(b[2],b[3][2][1])}return ae(blm,a[2][2])},blm=function(a){return va(a[1][2][2])},oK=function(n,b){var
E=n?n[1]:0,o=b[1][2],a=o[2],p=o[1],g=W(p),d=0,m=b[2];for(;;){var
f=ea(m)[1];if(typeof
f!=="number")if(bN===f[1]){var
d=d+1|0,m=f[2][2];continue}if(g<=d){if(E)if(g===d)return b;var
h=a[1];if(G<=h[1]){var
e=h[2],k=e[3][2],K=e[4],M=e[2],N=e[1],O=a[3],ac=k[4],ad=k[3],ae=k[1],A=jc(a[2]),B=A[2],C=A[1],af=W(C),l=Ji(C,B,O),D=l[1],ag=l[3],ah=l[2],ai=ab(L(oI(0,af),ae),ah),aj=ab(ac,L(function(a){return a[1][1]},D)),ak=[0,ca,[0,ai,0,ab(ad,ag),aj]],P=c(an,0),u=[0,[0,G,[0,N,M,ak,K]],B,a[3],P];va(u);var
Q=c(an,0),q=[0,[0,aP,[0,D,u]],a[2],a[3],Q]}else
var
i=h[2],v=i[1],R=i[3],S=i[2],w=jc(a[2]),x=w[2],y=w[1],z=W(y),j=Ji(y,x,v[3]),T=j[3],U=j[2],V=j[1],X=c(oH(0,z),v),Y=ab(L(oI(0,z),S),U),Z=c(an,0),_=a[3],$=[0,[0,al,[0,X,Y,ab(R,T)]],x,_,Z],aa=c(an,0),q=[0,[0,aP,[0,V,$]],a[2],a[3],aa];var
s=q[1][2],t=s[1],F=s[2];if(d===(g+W(t)|0)){var
H=b[4],I=b[3],J=b[2];return[0,[0,aP,[0,ab(p,t),F]],J,I,H]}throw[0,r,bln]}throw[0,r,blo]}},Ji=function(e,d,i){var
b=L(function(b){var
c=ea(b)[1];if(typeof
c!=="number")if(bN===c[1]){var
d=c[2][1],e=t(blq,a(q+aF[1][1])),f=[0,dB,[0,e,k_(0,0)]];return[0,[0,f,d],b,b[3],b[4]]}throw[0,r,blp]},e),f=d[3],g=u5(L(function(a){return a[1][2]},b),d,f)[1],h=W(e);return[0,b,FD(function(d,b){var
a=b[1],e=a[2],f=a[1];return gP([0,[0,K,[0,f,[0,a$,(h-d|0)-1|0]]],e,0,c(an,0)])},b),g]},jj=function(a){return eF(function(b){return oK(blr,a)})},bn=function(a){return bm(blu,function(b){return eF(function(b){return oK(blt,a)})})},Jj=[N,blx,H(0)],oL=function(a,e,d,b){var
s=b[1];if(G<=s[1]){var
i=s[2],w=i[3][2],N=i[4],O=i[2],P=i[1],aw=w[4],ax=w[3],ay=w[1],az=[0,ca,[0,L(function(b){return jk(a,e,d,b)},ay),0,ax,aw]];return[0,[0,G,[0,P,O,az,N]],b[2],b[3],b[4]]}var
f=s[2],g=f[1],x=g[1];if(K<=x[1]){var
y=x[2],z=y[2],Q=y[1];if(a$===z[1]){var
A=f[3],h=f[2],j=z[2];if(a<=j)if((j-a|0)<W(d)){var
k=hN(d,j-a|0),B=bi(k),R=bu===B?k[1]:J===B?cd(k):k;if(e<=a){var
C=c(oI(0,a-e|0),R)[1][2],D=C[2],l=C[1],S=W(h);if(W(l)<=S){var
m=W(l),E=tO(m,h),T=E[2],U=E[1],n=L(function(b){return jk(a,e,d,b)},T),o=tO(m,A)[2],V=oL(a+m|0,a,L(function(b){return[J,function(c){return jk(a,e,d,b)}]},U),D),p=c(I8([0,a],-m|0),V);if(0===W(n))return p;var
t=p[1];if(G<=t[1]){var
q=t[2],u=q[3][2],ad=q[4],ae=u[4],af=u[3],ag=q[2],ah=q[1],ai=ab(u[1],n),aj=ab(af,o),ak=ab(ae,L(function(a){return dV},n)),am=tN(o)[2],ao=c(an,0);return[0,[0,G,[0,ah,ag,[0,ca,[0,ai,0,aj,ak]],ad]],am,p[3],ao]}var
v=t[2],ap=v[3],aq=v[2],ar=v[1],as=tN(o)[2],at=c(an,0),au=p[3],av=ab(ap,o);return[0,[0,al,[0,ar,ab(aq,n),av]],as,au,at]}var
F=W(l),H=tO(W(h),l)[2],X=j$(H)[2],Y=oL(a+F|0,a,L(function(b){return[J,function(c){return jk(a,e,d,b)}]},h),D),Z=c(I8([0,a],-F|0),Y),_=c(an,0);throw[0,Jj,[0,[0,aP,[0,H,Z]],X,b[3],_]]}throw[0,r,bly]}var
$=[0,[0,K,[0,Q,[0,a$,j]]],g[2],g[3],g[4]],aa=L(function(b){return jk(a,e,d,b)},h);return[0,[0,al,[0,$,aa,A]],b[2],b[3],b[4]]}var
M=f[3],I=f[2]}else
var
M=f[3],I=f[2];var
ac=L(function(b){return jk(a,e,d,b)},I);return[0,[0,al,[0,g,ac,M]],b[2],b[3],b[4]]},jk=function(h,g,f,a){var
b=a[1][2],d=b[1],i=b[2];try{var
o=oL(h+W(d)|0,g,f,i),p=[0,[0,aP,[0,d,o]],a[2],a[3],a[4]];return p}catch(b){b=s(b);if(b[1]===Jj){var
e=b[2][1][2],j=e[2],k=e[1],l=c(an,0),m=a[3],n=a[2];return[0,[0,aP,[0,ab(d,k),j]],n,m,l]}throw b}},lc=function(b,a){return oL(0,0,L(function(a){return a},b),a)},dQ=[N,blz,H(0)],oM=function(e,b,a){var
l=e?e[1]:1,c=b[1],d=a[1];if(typeof
c!=="number")if(ax===c[1]){var
f=c[2],g=f[2];if(g){var
h=g[1];if(ad===h[1])if(!f[3])if(typeof
d!=="number")if(ax===d[1]){var
i=d[2],j=i[2];if(j){var
k=j[1];if(ad===k[1])if(!i[3])return h[2]===k[2]?1:0}}}}try{if(bD[1]){var
m=cN(b),n=cN(a);p(ah(blA),b_,m,b_,n)}(function(c,b,a){return hX(blC,blB,[J,function(d){return fd([0,c],b,a)}])}(l,b,a));var
o=1;return o}catch(a){a=s(a);if(a[1]!==or)if(a[1]!==os)throw a;return 0}},Jk=function(D,C,f,B){var
l=D,k=C,a=B;for(;;){var
b=l?l[1]:0,g=k?k[1]:0,m=a[1];if(G<=m[1]){var
h=m[2],i=h[3],j=h[2],E=h[4],F=h[1],p=ji(j);if(p){var
q=p[1],s=q[2],t=q[1],ag=[0,g]?g:0,ah=i[2][1],ai=0,ak=0,am=L(function(b,c){return function(a){return ld(c,b,f,a)}}(ai,ak),ah);if(ag)oJ(j,am);var
e=i[2][1];if(s<W(e)){var
o=eF(function(a){return function(b){return oK(bls,fi(a))}}(t))[1][2],y=o[2],z=o[1],A=W(e);if((W(z)+s|0)!==A)throw[0,r,blG];var
u=lc(aj(e),y)}else
var
u=lc(aj(e),t);var
l=[0,b],k=0,a=u;continue}if(i[2][1]){var
H=[0,g],$=[0,b]?b:0,aa=H?g:0,n=i[2],ab=n[4],ac=n[3],ad=L(jj,n[1]),ae=0,af=[0,$],x=L(function(a){return ld(af,ae,f,a)},ad);if(aa)oJ(j,x);return[0,[0,G,[0,F,j,[0,ca,[0,x,0,ac,ab]],E]],a[2],a[3],a[4]]}return a}var
c=m[2],d=c[1],v=d[1];if(K<=v[1]){var
w=v[2],I=c[3],J=c[2],M=w[2],N=w[1];if(b){var
O=la(N),P=[0,[0,K,[0,O,M]],d[2],d[3],d[4]],Q=L(jj,J),R=0,S=[0,b],T=L(function(a){return ld(S,R,f,a)},Q);return[0,[0,al,[0,P,T,I]],a[2],a[3],a[4]]}}else{var
U=c[3],V=c[2];if(b){var
X=L(jj,V),Y=0,Z=[0,b],_=L(function(a){return ld(Z,Y,f,a)},X);return[0,[0,al,[0,d,_,U]],a[2],a[3],a[4]]}}return a}},ld=function(c,b,f,a){var
g=c?c[1]:0,h=b?b[1]:0,d=a[1][2],i=d[2],j=d[1],e=FC(L(function(a){var
b=a[1],d=b[2],c=la(b[1]);return[0,c,[0,[0,c,d],a[2],a[3],a[4]]]},j)),k=e[2],l=Jk([0,g],[0,h],ab(aj(e[1]),f),i);return[0,[0,aP,[0,k,l]],a[2],a[3],a[4]]},hY=function(c,e,a){var
d=c?c[1]:0,f=d?blH:blK,g=[J,function(b){return Jk([0,d],blI,e,a)}];return hX(f,[J,function(c){return b(bT(blJ),gQ,a)}],g)},vb=function(c,e,a){var
d=c?c[1]:0,f=d?blL:blO,g=[J,function(b){return ld([0,d],blM,e,a)}];return hX(f,[J,function(c){return b(bT(blN),u9,a)}],g)},gS=function(a,c,b){var
d=a?a[1]:0;return bm(blP,function(a){return hY([0,d],c,b)})},aw=function(a,c,b){var
d=a?a[1]:0;return bm(blQ,function(a){return vb([0,d],c,b)})},Jl=[N,blY,H(0)],blZ=function(j,a,b){function
c(e,d,k){var
f=k[1];if(G<=f[1])throw Jl;var
g=f[2],l=g[2],m=g[1],n=W(e)-d|0,h=m[1];if(K<=h[1])var
b=h[2][2],i=b[1],a=cr===i?b[2]<j?1:0:ad<=i?1:b[2]<n?1:0;else
var
a=1;return a?mW(function(g){var
a=g[1][2],b=a[2],f=a[1];return c(aZ(function(b,a){return[0,a[1][1],b]},e,f),d,b)},l):a}return c(a,W(a),b)};H(0);var
Jm=function(c,q,a){var
e=c?c[1]:0,d=[J,function(c){var
k=[0,e]?e:0;function
d(a,l){var
e=l[1];if(G<=e[1]){var
g=e[2],c=g[2],m=g[3];if(q!==c)if(!b(bC[4],c,a)){var
n=b(bC[6],c,a),h=ji(c),i=h?d(n,h[1][1]):1;if(i){if(k){var
o=m[2][1];return mW(function(b){return f(a,b)},o)}var
j=1}else
var
j=i;return j}return 0}var
p=e[2][2];return mW(function(b){return f(a,b)},p)}function
f(b,a){return d(b,a[1][2][2])}return d(bC[1],a)}];return hX(bl1,[J,function(c){return b(bT(bl0),gQ,a)}],d)},bl2=0,Jn=function(b,a){var
d=b?b[1]:0,e=a[3][2][2],f=a[2];if(!d)if(0!==e)return 1;var
c=k$(f);if(cr!==c)if(ad!==c)return 0;return 1},Jo=function(b){var
a=b[1];if(typeof
a!=="number")if(G===a[1])return Jn(bl3,a[2]);return 0},Jp=function(a){return Jn(bl4,a)},Jq=function(h,k,g,d){var
f=h[3],e=h[2],s=b(F[6],e,aF[1][2]);if(Jm(bl5,e,d)){var
i=aF[1],o=[J,function(n){var
e=f[2],g=e[2];if(g){var
h=g[1],i=h[2],l=h[1],N=e[1],j=function(f,e,A,z,y){var
k=A,j=z,d=y;for(;;){var
B=k?k[1]:0,l=j?j[1]:0,u=W(f)-e|0,n=d[1];if(G<=n[1]){var
h=n[2],v=h[3][2],i=v[1],g=h[2],C=h[4],D=v[3],H=h[1],I=ji(g),J=f9(g);oJ(g,i);if(I){var
k=0,j=[0,l],d=hY(0,f,d);continue}var
M=function($){var
h=k_(0,[0,s]),j=d[2],O=L(oI(0,u),N),l=k9(i);if(l)var
P=l[1][2],Q=oa(u),n=hO(function(f){var
c=b(F[43][1],f,P);if(c){var
a=c[1][1];if(typeof
a!=="number")if(K===a[1]){var
d=a[2][2];if(a$===d[1]){var
e=d[2];return[0,hN(i,(W(i)-e|0)-1|0)]}}throw[0,r,blR]}return 0},Q);else
var
n=0;var
o=ab(O,n),p=L(function(a){return a[2]},o),v=u5(p,j,d[3]),w=v[2],x=v[1],R=c(an,0),S=d[3],k=[0,[0,G,[0,t(blS,a(q+h)),h,[0,ca,[0,o,0,x,f]],w]],j,S,R],T=[0,ca,[0,Jc(p,f),0,x,f]],U=c(an,0),V=d[3],X=[0,[0,G,[0,t(blT,a(q+h)),h,T,w]],j,V,U];f7(g,[0,eN,[0,f,d,k]]);f7(h,[0,eN,[0,f,d,k]]);var
Y=k$(g),e=aF[1],y=e[13],z=e[12],A=e[11],B=e[10],C=e[9],D=e[8],H=e[7],I=e[6];function
J(a){return Y}var
M=m(F[9],h,J,I);aF[1]=[0,e[1],e[2],e[3],e[4],e[5],M,H,D,C,B,A,z,y];if(bD[1]){var
Z=aK[1],_=aK[1];E(ah(blU),g,h,_,d,Z,k)}return[0,X]},w=be4(function(a){return p(blV,f,e,a)},i),O=s<J?1:0;if(w)if(0===O){var
P=[0,ca,[0,w[1],0,D,f]],Q=c(an,0);return[0,[0,[0,G,[0,H,g,P,C]],d[2],d[3],Q]]}if(!B)if(!l)return M(0);return 0}var
o=n[2],R=o[3],S=o[2],T=x(f,e,o[1]),U=[0,l],V=L(function(a){return p(U,f,e,a)},S);try{var
X=iS(T),Y=L(iS,V),Z=c(an,0),_=[0,[0,[0,al,[0,X,Y,R]],d[2],d[3],Z]];return _}catch(a){return 0}}},x=function(n,m,a){var
d=W(n)-m|0,g=a[1];if(K<=g[1]){var
e=g[2][2],h=e[1];if(cr===h){var
j=e[2];if(j<s)return[0,a];var
k=b(F[43][1],j,l);if(k){var
o=k[1];return[0,c(oH(0,d),o)]}return 0}if(ad<=h)return[0,a];var
f=e[2];if(f<d)return[0,a];if(b(F[14],f-d|0,i)){var
p=b(F[6],f-d|0,i);return[0,c(oH(0,d),p)]}return 0}return[0,a]},p=function(b,h,g,f){var
i=b?b[1]:0,a=jj(f),c=a[1][2],d=c[1],k=c[2],e=j(aZ(function(b,a){return[0,a[1][1],b]},h,d),g,0,[0,i],k);return e?[0,[0,[0,aP,[0,d,e[1]]],a[2],a[3],a[4]]]:0};return j(k,W(k),blW,0,d)}throw[0,r,blX]}],j=uY([J,function(a){return bT(bl6)}],o),u=aF[1];if(j){var
l=j[1],v=W(f[2][1]);if(bD[1]){var
w=aK[1],x=aK[1],y=aK[1],z=aK[1];bx(ah(bl7),z,g,y,d,x,g,w,l)}gR(e,[0,v],l);var
A=f8(e),B=i9(u[1]-i[1]|0),C=L(function(b){var
a=b+i[1]|0;return[0,a,f8(a)]},B),n=L(function(y){var
z=y[2],A=y[1],o=fY(0),p=fY(0),m=o,l=p,d=z;for(;;){if(d){var
n=d[2],c=d[1];if(typeof
c==="number")var
a=0;else{var
q=c[1];if(pU===q){var
r=c[2],f=r[2][1];if(typeof
f==="number")var
a=0,b=0;else
if(aP===f[1]){var
s=f[2];if(s[1])var
a=0,b=0;else{var
g=s[2][1];if(typeof
g==="number")var
a=0,b=0;else
if(G===g[1]){var
h=r[3][1];if(typeof
h==="number")var
a=0,b=0;else
if(aP===h[1]){var
t=h[2];if(t[1])var
a=0,b=0;else{var
i=t[2][1];if(typeof
i==="number")var
a=0,b=0;else
if(G===i[1])var
v=i[2],u=g[2],b=1;else
var
a=0,b=0}}else
var
a=0,b=0}else
var
a=0,b=0}}else
var
a=0,b=0}else
if(eN===q){var
x=c[2],j=x[2][1];if(typeof
j==="number")var
a=0,b=0;else
if(G===j[1]){var
k=x[3][1];if(typeof
k==="number")var
a=0,b=0;else
if(G===k[1])var
v=k[2],u=j[2],b=1;else
var
a=0,b=0}else
var
a=0,b=0}else
var
a=0,b=0;if(b){var
w=Fd(k9(ec(u)));if(w)var
e=w,a=1;else
var
e=Fd(k9(ec(v))),a=1}}if(!a)var
e=0;if(e){var
m=dt(m,c),d=n;continue}var
l=dt(l,c),d=n;continue}return[0,A,[0,o[2],p[2]]]}},C),D=fZ(L(function(a){return a[2][1]},n));ae(function(a){return Jg(a[1],a[2][2])},n);return ab(A,D)}var
H=f[2][1],I=eG[1],M=0,N=0,O=0,P=function(a,b){return eC(O,N,M,I,a,b)},Q=aK[1];throw[0,dQ,p(bT(bl8),Q,d,P,H)]}throw[0,dQ,bl9]},Jr=function(c,b,a){var
d=c[2],e=c[3];if(bD[1]){var
f=aK[1],g=aK[1],h=aK[1],i=aK[1];bx(ah(bl_),i,b,h,a,g,b,f,a)}gR(d,[0,W(e[2][1])],a);return f8(d)},bl$=function(b,d,c,a){var
e=b[2],h=b[3],f=f9(e),i=W(uX[1][2]),g=a[1],j=i===f?1:0;if(!h[2][1]){if(0!==j)if(iW(d)){if(Jm(bmb,e,a))return Jr(b,c,a);throw[0,dQ,bmc]}if(typeof
g!=="number")if(al===g[1])try{if(blZ(f,d,a)){var
k=Jr(b,c,a);return k}throw[0,dQ,bma]}catch(e){e=s(e);if(e===Jl)return Jq(b,d,c,a);throw e}}return Jq(b,d,c,a)},le=function(i,d,e){var
f=[J,function(bo){function
k(a){if(bD[1]){var
b=aK[1],c=aK[1];aq(ah(bmd),c,d,b,e,a)}throw[0,dQ,a]}function
_(a){var
d=a[3][2][1],e=a[2];try{var
f=b(F[6],e,aF[1][5]),c=f}catch(a){a=s(a);if(a!==x)throw a;var
c=i}return Jc(L(function(a){return a[2]},d),c)}function
aa(e,d,c,a){var
f=[J,function(b){return bl$(e,d,c,a)}];return hX(bmg,[J,function(c){return b(bT(bmf),gQ,a)}],f)}var
aC=Jo(d),z=Jo(e);if(0===aC)if(0===z)var
g=1;else{var
D=d[1];if(typeof
D==="number")var
g=0;else
if(G===D[1]){var
E=D[2];if(E[3][2][2]){var
ai=e[1];if(typeof
ai==="number")var
v=1;else
if(G===ai[1])var
ap=d,ao=E,am=e,g=2,v=0;else
var
v=1}else
var
v=1;if(v){var
H=e[1];if(typeof
H==="number")var
g=0;else
if(G===H[1])var
ak=E,aj=H[2],g=3;else
var
g=0}}else
var
g=0}else{var
I=d[1];if(typeof
I!=="number")if(G===I[1]){var
Y=e[1];if(typeof
Y!=="number")if(G===Y[1])if(I[2][2]===Y[2][2])return bl2}if(0===z){var
M=d[1];if(typeof
M==="number")var
h=1;else
if(G===M[1]){var
Q=e[1];if(typeof
Q==="number")var
h=1;else
if(G===Q[1]){var
R=Q[2],a6=M[2];if(R[3][2][2])var
ap=e,ao=R,am=d,g=2,h=0;else
var
ak=R,aj=a6,g=3,h=0}else
var
h=1}else
var
h=1}else{var
S=d[1];if(typeof
S==="number")var
h=1;else
if(G===S[1]){var
T=e[1];if(typeof
T==="number")var
h=1;else{if(G===T[1]){var
l=T[2],m=S[2],a7=W(ec(l));if(W(ec(m))!==a7)k(bmp);var
a8=k$(m[2]),a9=f9(m[2]),a_=k$(l[2]),a$=f9(l[2]);if(a8!==a_)k(bmq);if(a9<a$)var
o=l,V=m,U=e,n=d;else
var
o=m,V=l,U=d,n=e;var
ba=_(V),X=n[1];if(typeof
X!=="number")if(G===X[1]){var
u=X[2],az=u[3][2],bb=u[4],bc=u[2],bd=u[1],be=[0,ca,[0,ba,0,az[3],az[4]]],bf=c(an,0),aA=[0,[0,G,[0,bd,bc,be,bb]],n[2],n[3],bf],bg=[0,W(ec(o))];gR(o[2],bg,aA);if(bD[1]){var
bh=aK[1],bi=aK[1],bj=aK[1],bk=aK[1];bx(ah(bms),bk,U,bj,n,bi,U,bh,aA)}var
bl=ec(V),bm=ec(o),bn=iX(function(b,a){return[0,pU,[0,i,b,a]]},bm,bl);return ab(bn,f8(o[2]))}throw[0,r,bmr]}var
h=1}}else
var
h=1}if(h){var
N=d[1];if(typeof
N==="number")var
g=0;else{if(G===N[1]){var
O=N[2],ar=O[3][2],as=ar[1],p=O[2],aX=ar[3],at=_(O),P=e[1];if(typeof
P!=="number")if(al===P[1]){var
au=P[2],av=au[2],aw=au[1],ax=k$(p),aY=f9(p),j=aw[1];if(cr===ax)if(typeof
j==="number")var
w=0;else
if(K===j[1])var
$=j[2][2],w=cr===$[1]?$[2]<aY?1:0:0;else
var
w=0;else
var
w=ad===ax?typeof
j==="number"?0:K===j[1]?ad===j[2][2][1]?1:0:0:0;if(!w)k(bme);var
aZ=W(av);if(W(at)!==aZ)k(bmn);var
a0=c(an,0),ay=[0,[0,al,[0,aw,at,aX]],e[2],e[3],a0];gR(p,[0,W(as)],ay);if(bD[1]){var
a1=aK[1],a2=aK[1],a3=aK[1],a4=aK[1];bx(ah(bmo),a4,d,a3,e,a2,d,a1,ay)}var
a5=iX(function(b,a){return[0,pU,[0,i,b,a]]},as,av);return ab(a5,f8(p))}throw[0,r,bmm]}var
g=0}}}switch(g){case
0:if(0!==z)return aU(bml);break;case
1:break;case
2:return aa(ao,i,ap,am);default:f7(aj[2],[0,eN,[0,i,d,e]]);f7(ak[2],[0,eN,[0,i,d,e]]);return 0}var
A=d[1];if(typeof
A!=="number")if(G===A[1]){var
f=A[2],aD=f[2];if(f[3][2][2]){var
B=e[1];if(typeof
B!=="number")if(G===B[1]){var
C=B[2];if(C[3][2][2])if(aD===C[2]){var
aE=ec(C),aG=ec(f),Z=function(d){var
c=d[1][2];if(c[1])return 0;var
a=c[2][1];if(typeof
a!=="number")if(al===a[1]){var
b=a[2];if(!b[2])if(!b[3])return[0,b[1]]}return 0},aB=gF(aG,aE),y=hO(function(c){var
d=c[1],i=c[2],e=Z(d),f=Z(i);if(e){var
a=e[1][1];if(typeof
a!=="number")if(K===a[1])if(f){var
b=f[1][1];if(typeof
b!=="number")if(K===b[1]){var
g=b[2][2],h=a[2][2],j=g[2],k=h[2];if(h[1]===g[1])if(k===j)return[0,d]}}}return 0},aB),aH=W(ec(f));if(W(y)===aH)return 0;var
ac=k_(0,[0,f9(f[2])]),ae=d[2],aI=L(function(a){return a[2]},y),af=u5(aI,ae,d[3]),aJ=af[2],aL=[0,ca,[0,y,0,af[1],i]],aM=c(an,0),aN=d[3],ag=[0,[0,G,[0,t(bmi,a(q+ac)),ac,aL,aJ]],ae,aN,aM];if(bD[1]){var
aO=aK[1],aP=aK[1],aQ=aK[1],aR=aK[1];bx(ah(bmj),aR,d,aQ,e,aP,d,aO,ag)}var
aS=[0,W(ec(f))];gR(f[2],aS,ag);return f8(f[2])}}return aa(f,i,d,e)}f7(f[2],[0,eN,[0,i,d,e]]);if(bD[1]){var
aT=aK[1],aV=aK[1],aW=f[2];aq(ah(bmk),aW,aV,d,aT,e)}return 0}return k(bmh)}];return uY([J,function(a){return p(bT(bmt),gQ,d,gQ,e)}],f)},bmu=function(c,e,a,d){var
J=c?c[1]:0,L=a?a[1]:0,j=aF[1];function
s(c){var
e=c[1];if(typeof
e!=="number")if(G===e[1]){var
f=e[2][2];for(;;){var
g=b(F[43][1],f,j[3]);if(g){var
a=g[1][1],d=a[1];if(G<=d[1]){var
f=d[2][2];continue}var
h=d[2][1][1];if(!(K<=h[1]))return a;var
i=h[2][2][1];if(cr===i)return a;if(ad===i)return a}return c}}return c}function
t(w,v,u){var
f=J?s(v):v,g=L?s(u):u,e=f[1],b=g[1];if(typeof
e==="number")var
a=0;else
if(al===e[1]){var
n=e[2][1][1];if(K<=n[1]){var
o=n[2][2],A=o[1];if(cr===A)if(typeof
b==="number")var
a=0,c=0;else
if(al===b[1]){var
p=b[2][1][1];if(typeof
p==="number")var
a=0,c=0;else
if(K===p[1]){var
B=p[2][2],C=B[1],N=o[2];if(cr===C)var
E=B[2],D=N,c=1;else
if(ad===C)var
c=2;else
var
a=0,c=0}else
var
a=0,c=0}else
var
a=0,c=0;else
if(ad===A)if(typeof
b==="number")var
a=0,c=0;else
if(al===b[1]){var
q=b[2][1][1];if(typeof
q==="number")var
a=0,c=0;else
if(K===q[1]){var
F=q[2][2],G=F[1];if(cr===G)var
c=2;else
if(ad===G)var
E=F[2],D=o[2],c=1;else
var
a=0,c=0}else
var
a=0,c=0}else
var
a=0,c=0;else
var
a=0,c=0;switch(c){case
0:break;case
1:if(D!==E)return 0;var
a=0;break;default:return 0}}else
if(typeof
b==="number")var
a=1;else
if(al===b[1]){var
r=b[2][1][1];if(typeof
r==="number")var
a=1;else{if(bV===r[1]){var
H=r[2],I=n[2],O=f[2],P=0,Q=0,R=eF(function(a){return hT(Q,P,O,a)}),S=g[2],T=0,U=0,V=eF(function(a){return hT(U,T,S,a)});return H3(I,H,[0,[0,bV,I],R,f[3],f[4]],[0,[0,bV,H],V,g[3],g[4]])}var
a=1}}else
var
a=1}else
var
a=0;if(!a)if(typeof
e!=="number")if(al===e[1]){var
h=e[2],i=h[1][1];if(typeof
i!=="number")if(K===i[1]){var
x=i[2][2][1];if(cr===x)if(typeof
b==="number")var
d=1;else
if(al===b[1]){var
y=b[2],j=y[1][1];if(typeof
j==="number")var
d=1;else
if(K===j[1])if(cr===j[2][2][1])var
l=y[2],k=h[2],d=0;else
var
d=1;else
var
d=1}else
var
d=1;else
if(ad===x)if(typeof
b==="number")var
d=1;else
if(al===b[1]){var
z=b[2],m=z[1][1];if(typeof
m==="number")var
d=1;else
if(K===m[1])if(ad===m[2][2][1])var
l=z[2],k=h[2],d=0;else
var
d=1;else
var
d=1}else
var
d=1;else
var
d=1;if(!d)if(w<3){var
M=W(l);if(W(k)===M)return kG(function(f,e){var
a=f[1],b=e[1];if(typeof
a!=="number")if(aP===a[1]){var
c=a[2];if(!c[1])if(typeof
b!=="number")if(aP===b[1]){var
d=b[2];if(!d[1])return t(w+1|0,c[2],d[2])}}return 1},k,l)}}}return 1}if(t(0,e,d))return 0;throw[0,dQ,bmv]},Js=function(b){var
a=b[1];if(a$!==a)if(cr!==a)return 0;return 1},bmw=function(b,a){return lb(b[1][1],a[1][1])},bmx=function(c,i,h){if(bD[1]){var
o=aK[1],q=aK[1];p(ah(bmz),q,i,o,h)}var
a=I9(i),b=I9(h),g=a[1],d=b[1];if(G<=g[1]){var
e=g[2];if(typeof
d!=="number")if(G===d[1]){var
f=d[2],r=Jp(e),j=Jp(f);if(0===r){if(0!==j)return le(c,b,a)}else
if(0!==j){var
t=f9(e[2]);if(f9(f[2])<t)var
l=a,k=b;else
var
l=b,k=a;try{var
y=le(c,l,k);return y}catch(d){d=s(d);if(d[1]===dQ){f7(e[2],[0,eN,[0,c,a,b]]);f7(f[2],[0,eN,[0,c,a,b]]);if(bD[1]){var
u=aK[1],v=aK[1],w=f[2],x=e[2];E(ah(bmA),x,w,v,a,u,b)}return 0}throw d}}return le(c,a,b)}return le(c,a,b)}if(typeof
d!=="number")if(al===d[1]){var
m=d[2],n=g[2],z=m[2],A=n[2];bmy(n[1],m[1]);return fZ(iX(function(a,b){return Jt(c,a,b)},A,z))}return le(c,b,a)},bmy=function(c,b){var
d=c[1],a=b[1];if(K<=d[1]){if(typeof
a!=="number")if(K===a[1]){var
e=a[2],f=e[2],g=d[2],h=g[2],k=e[1],l=g[1];if(e4(h,f)){if(bD[1]){var
m=Jd[1],n=Jd[1];p(ah(bmC),n,c,m,b)}throw[0,dQ,bmD]}if(Js(h))if(Js(f)){lb(l,k);return 0}return 0}}else
if(typeof
a!=="number")if(bV===a[1]){var
i=a[2],j=d[2],o=c[2],q=0,r=0,s=eF(function(a){return hT(r,q,o,a)}),t=b[2],u=0,v=0,w=eF(function(a){return hT(v,u,t,a)});if(H3(j,i,[0,[0,bV,j],s,c[3],c[4]],[0,[0,bV,i],w,b[3],b[4]]))return 0;throw[0,dQ,bmE]}throw[0,dQ,bmB]},Jt=function(c,b,a){if(bD[1]){var
k=eG[1],l=eG[1];p(ah(bmF),l,b,k,a)}var
j=1;if(bD[1]){var
h=eG[1],i=eG[1];p(ah(blD),i,b,h,a)}eF(function(g){var
c=oM([0,j],b[2],a[2]);if(bD[1])if(c)var
d=0;else{var
e=cN(b[2]),f=cN(a[2]);p(ah(blF),b_,e,b_,f);var
d=1}else
var
d=0;if(c)return 0;throw[0,dQ,blE]});var
d=vb(0,c,jj(b)),e=vb(0,c,jj(a));if(bD[1]){var
m=eG[1],n=eG[1];p(ah(bmG),n,d,m,e)}var
f=e[1][2],g=d[1][2],o=f[2],q=g[2];return bmx(ab(aj(iX(bmw,g[1],f[1])),c),q,o)},Ju=function(a,c,b){var
d=a?a[1]:0;return Jt(d,c,b)},Jv=function(a,c,b){var
d=a?a[1]:0,e=fi(b);return ae(Jx,Ju([0,d],fi(c),e))},Jw=function(a,c,b){var
d=a?a[1]:0;return ae(Jx,Ju([0,d],c,b))},Jx=function(b){var
c=b[1];if(vM<=c){if(eN<=c){var
d=b[2];return Jv([0,d[1]],d[2],d[3])}var
h=b[2],i=h[1],o=h[2],p=f8(i);return Jg(i,kH(function(a){if(typeof
a!=="number")if(lx===a[1]){var
b=a[2][2];if(b)if(o===b[1])return 0}return 1},p))}if(lx<=c){var
e=b[2],j=e[1],q=e[4],r=e[3],k=ji(j);if(k){var
l=hY(0,0,k[1][1])[1];if(typeof
l==="number")var
g=0;else
if(G===l[1])var
m=0,g=1;else
var
g=0;if(!g)var
m=1;var
n=m}else
var
n=1;if(n){var
a=aF[1];aF[1]=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],[0,[0,r,q],aF[1][11]],a[12],a[13]];return 0}return f7(j,b)}var
f=b[2];return Jw([0,f[1]],f[2],f[3])},bmH=function(c,b,a){var
d=c?c[1]:0,e=[J,function(c){return Jv([0,d],b,a)}];return hX(Jy,[J,function(c){return p(bT(bmI),gQ,b,gQ,a)}],e)},bmJ=function(c,b,a){var
d=c?c[1]:0,e=[J,function(c){return Jw([0,d],b,a)}];return hX(Jy,[J,function(c){return p(bT(bmK),u9,b,u9,a)}],e)},b2=function(a,c,b){var
d=a?a[1]:0;function
e(a){return a?T(a[1]):aG}return o(bm(bmL,function(e){try{var
a=[0,bmJ([0,d],c,b)];return a}catch(a){a=s(a);if(a[1]===dQ)return 0;throw a}}),e)},vc=[N,bmN,H(0)],oN=[N,bmO,H(0)],Jz=[N,bmP,H(0)],JA=[N,bmQ,H(0)],oO=[0,F[1]],fj=function(c){var
a=c[1];if(typeof
a!=="number")if(al===a[1]){var
b=a[2][1][1];if(typeof
b!=="number")if(K===b[1]){var
d=b[2][2];if(ad===d[1])return d[2]}}throw[0,vc,c]},JB=function(g){var
b=g[1];if(typeof
b!=="number")if(al===b[1]){var
h=b[2],c=h[1][1];if(typeof
c!=="number")if(K===c[1]){var
i=c[2][2];if(ad===i[1]){var
d=h[2];if(d){var
j=d[1][1][2];if(!j[1]){var
e=d[2];if(e){var
k=e[1][1][2];if(!k[1]){var
f=e[2],l=k[2],a=j[2],m=i[2];if(f){var
n=f[1][1][2];if(!n[1])if(!f[2]){var
o=n[2];if(m===IU)return[0,fj(a),a,[0,l],o]}}else
if(m===IT)return[0,fj(a),a,0,l]}}}}}}}throw[0,oN,g]},JC=function(a){var
d=a[1];if(typeof
d!=="number")if(al===d[1]){var
c=d[2],e=c[1],f=e[1];if(typeof
f!=="number")if(K===f[1]){var
m=f[2][2];if(ad===m[1]){var
g=c[2];if(g){var
b=g[1],n=b[1][2];if(!n[1]){var
h=g[2];if(h){var
i=h[1],o=i[1][2];if(!o[1]){var
j=h[2],p=o[2],q=n[2],r=m[2];if(j){var
s=j[1],t=s[1][2];if(!t[1])if(!j[2]){var
u=c[3],v=t[2];if(r===IU){var
k=hY(0,0,q),w=fj(k);return[0,w,k,[0,p],v,[0,[0,al,[0,e,[0,[0,[0,aP,[0,0,k]],b[2],b[3],b[4]],[0,i,[0,s,0]]],u]],a[2],a[3],a[4]]]}}}else{var
x=c[3];if(r===IT){var
l=hY(0,0,q),y=fj(l);return[0,y,l,0,p,[0,[0,al,[0,e,[0,[0,[0,aP,[0,0,l]],b[2],b[3],b[4]],[0,i,0]],x]],a[2],a[3],a[4]]]}}}}}}}}}throw[0,oN,a]},JD=function(a){return b(bC[4],a,aF[1][13])},oP=function(e,d){var
a=aF[1],f=0===b(bC[4],d,a[13])?0===e?function(a){return a}:c(bC[6],d):0===e?c(bC[7],d):function(a){return a},g=c(f,a[13]);aF[1]=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],g];return 0},JE=function(a){var
e=a[2],f=uF(0,bmU,a[1]);function
h(l,a){var
i=uZ(a),e=i[3],b=i[1],p=i[2],f=L(function(a){var
j=a[1];if(typeof
j!=="number")if(bq===j[1]){var
e=0,d=0,b=a;for(;;){var
f=b[1];if(typeof
f!=="number")if(bq===f[1]){var
g=f[2],i=g[1],e=[0,i,e],d=[0,[0,[0,i,g[2]],b[2],b[3],b[4]],d],b=g[3];continue}var
k=aj(d),o=c(an,0),p=a[3],q=a[2];return[0,[0,aP,[0,k,h(e,b)]],q,p,o]}}var
m=h(l,a),n=c(an,0);return[0,[0,aP,[0,0,m]],a[2],a[3],n]},p),g=b[1];if(typeof
g!=="number"){var
m=g[1];if(bV===m){var
q=g[2],r=c(an,0),s=a[3],t=a[2],u=c(an,0);return[0,[0,al,[0,[0,[0,bV,q],b[2],b[3],u],f,e]],t,s,r]}if(K===m){var
j=g[2],d=j[1],k=j[2],n=k[1];if(a$===n){var
v=k[2],w=c(an,0),x=a[3],y=a[2],z=c(an,0);return[0,[0,al,[0,[0,[0,K,[0,d,[0,a$,v]]],b[2],b[3],z],f,e]],y,x,w]}if(ad===n){var
A=k[2],B=c(an,0),C=a[3],D=a[2],E=c(an,0);return[0,[0,al,[0,[0,[0,K,[0,d,[0,ad,A]]],b[2],b[3],E],f,e]],D,C,B]}if(typeof
d!=="number")if(a9===d[1]){var
o=j[2];if(G===o[1]){var
F=o[2],H=d[2],I=c(an,0);return[0,[0,G,[0,H,F,[0,ca,[0,f,0,e,l]],b[2]]],a[2],a[3],I]}}}}return aU(bkR)}var
d=cw(bkS,[J,function(a){return h(0,f)}]),b=aB[1];return[0,d,b[7],b[17],e,0]},JF=function(c,a){var
d=Ik(a);if(b(F[14],a,oO[1]))throw[0,JA,c,d];return 0},JG=function(c,a){if(typeof
a!=="number")if(dB===a[1]){var
b=a[2];return[0,dB,[0,b[1],b[2]+c|0]]}return a},JH=function(k,d){function
b(a){var
c=a[1];if(typeof
c!=="number"){var
f=c[1];if(ax===f){var
d=c[2],e=d[2],g=d[1];if(e){var
h=e[1];if(G===h[1]){var
i=d[3],l=h[2];if(0===i)return[0,[0,ax,[0,g,[0,[0,G,l+k|0]],i]],a[2],a[3],a[4]];throw[0,r,bmW]}}var
m=a[4],n=a[3],o=a[2];return[0,[0,ax,[0,g,e,L(b,d[3])]],o,n,m]}if(bN===f){var
j=c[2],p=j[1],q=a[4],s=a[3],t=a[2],u=b(j[2]);return[0,[0,bN,[0,b(p),u]],t,s,q]}}throw[0,r,bmV]}var
a=b(d),e=c(b0,0);return[0,a[1],a[2],a[3],e]},oQ=function(a){return eF(function(s){if(!(0<a[2]))if(!(0<a[3]))return[0,a[1],a[4]];var
d=aF[1],l=i9(a[2]);ae(function(a){k_(0,0);return 0},l);var
m=i9(a[3]);ae(function(b){d$(0,0,a[1][3]);return 0},m);var
p=d[1],n=a[1],o=d[8][12];function
f(f){var
l=c(an,0),m=f[3],n=b(f[2]),g=f[1];if(G<=g[1]){var
a=g[2],d=a[3][2],o=d[2],q=a[4],r=d[4],s=d[1],t=a[2],u=a[1],v=L(k,d[3]),w=c(F[16],i),x=o?[0,GP(w,o[1])]:0,y=L(j,s),z=L(e,r);return[0,[0,G,[0,u,t+p|0,[0,ca,[0,y,x,v,z]],b(q)]],n,m,l]}var
h=g[2],A=h[3],B=h[2],C=i(h[1]),D=L(j,B);return[0,[0,al,[0,C,D,L(k,A)]],n,m,l]}function
i(d){var
h=c(an,0),i=d[3],j=b(d[2]),a=[0,d[1],j,i,h],f=a[1];if(typeof
f!=="number")if(K===f[1]){var
g=f[2],k=g[2],l=a[4],m=a[3],n=a[2];return[0,[0,K,[0,e(g[1]),k]],n,m,l]}return a}function
j(a){var
g=c(an,0),h=a[3],i=b(a[2]),d=a[1][2],j=d[2],k=d[1],l=L(function(a){var
c=a[1],d=c[2],f=c[1],g=a[4],h=a[3],i=b(a[2]),j=b(d);return[0,[0,e(f),j],i,h,g]},k);return[0,[0,aP,[0,l,f(j)]],i,h,g]}function
e(a){return JG(p,a)}function
b(a){return JH(o,a)}function
k(a){var
c=a[4],d=a[3],e=b(a[2]);return[0,a[1],e,d,c]}var
g=f(n);va(g);var
q=a[4],r=d[1];function
h(a){return JG(r,a)}return[0,g,L(function(a){return GP(h,a)},q)]})},JI=function(a){return o(cP,function(e){return o(f6,function(f){try{var
h=b(F[6],a,e[7]),c=h}catch(a){a=s(a);if(a!==x)throw a;var
c=0}try{var
g=b(F[6],a,f[1]),d=g}catch(a){a=s(a);if(a!==x)throw a;var
d=0}return T(ab(d,c))})})},b$=function(d){function
a(a){fj(a);var
d=a[1];if(typeof
d!=="number")if(al===d[1]){var
h=d[2],i=h[1],e=i[1],t=h[2];if(typeof
e!=="number")if(K===e[1]){var
j=e[2][2];if(ad===j[1]){var
k=b(F[43][1],j[2],oO[1]);if(k){var
u=b(k[1],i[2],t);return o(jh,function(a){return f5(u,T,[J,function(c){function
b(a){return aG}return o(c7(a),b)}])})}var
p=function(c,a){if(!gN[1])if(!JD(c))return[0,a,0,bm5];var
d=hY(bm2,0,Jf(a)),e=hY(bm3,0,a),f=aK[1];return[0,e,1,b(bT(bm4),f,d)]},n=fj(a),q=function(e){function
d(q){return o(jh,function(j){function
r(b){function
a(a){function
b(a){return T(0)}return o(cO(function(a){var
b=a[2],c=a[1];if(gN[1])ah(bnc);return oF(b,b$(c))},a),b)}return o(bm(blc,function(c){var
b=aj(aF[1][11]),a=aF[1];aF[1]=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],0,a[12],a[13]];return b}),a)}var
e=L(function(d){return[J,function(h){var
e=[0,0],f=[0,bm9];function
g(a){var
d=a[2],h=a[4],i=a[3],g=a[1];function
j(j){function
a(l){var
j=f[1];c(ah(bm_),j);var
a=b$(iS(i)),k=iS(h);if(e[1]){var
d=function(a){var
c=Jf(k);function
d(c){if(a){var
d=a[1],e=aK[1];b(ah(bm6),e,c);return T(d)}var
f=aK[1];b(ah(bm7),f,c);return aG}return o(gS(bm8,0,c),d)},g=[J,function(a){return T(0)}];return o(f5(a,function(a){return T([0,a])},g),d)}return a}var
g=d?b$(d[1]):T(0);return o(g,a)}return o(fh(g),j)}return o(bm(bnb,function(r){try{aF[1]=j;try{var
q=JB(d[1])[2];bmu(bna,a,[0,d[5]],q)}catch(a){a=s(a);if(a[1]!==oN)if(a[1]!==vc)throw a}var
g=oQ(d),i=g[2],b=JC(g[1]),h=b[2],k=b[4],l=b[3],c=p(b[1],h),m=c[2],n=c[1];f[1]=c[3];e[1]=m;bmH(0,a,h);L(function(a){return ob(lb,a)},i);var
o=[0,1,l,[0,k],[0,n]];return o}catch(a){a=s(a);if(a[1]===dQ)return bm$;throw a}}),g)}]},q);if(bD[1]){var
n=0,h=[0,[J,function(d){function
c(d){function
c(a){var
c=aK[1];b(ah(bm0),c,a);return aG}return o(gS(bm1,0,a),c)}return o(c7(j),c)}],n];if(e){var
l=e[2],g=iV(e[1]),f=g,d=l;for(;;){if(d){var
m=d[2],f=dt(f,d[1]),d=m;continue}f[2]=h;var
i=g;break}}else
var
i=h;var
k=i}else
var
k=e;return o(aZ(IZ,aG,k),r)})}return o(JI(n),d)};if(bD[1]){if(bD[1]){var
l=aK[1];b(ah(bmX),l,a)}var
m=function(a){var
c=aK[1];b(ah(bmY),c,a);return T(0)},f=o(gS(bmZ,0,a),m)}else
var
f=T(0);var
g=o(f,q),v=[J,function(c){return b(bT(bnf),gQ,a)}];return o(cP,function(e){aF[1]=e;if(uU[1]){var
d=[0,1],a=f4[1];f4[1]=a+1|0;return[0,function(i,h){var
e=oj(HW(v));k0([0,1,e,bkG,a]);var
f=[J,function(b){k0([0,1,e,bkE,a]);f4[1]=a;return aG}];return b(f5(g,function(b){var
f=d[1];k0([0,1,e,c(bT(bkF),f),a]);d[1]=d[1]+1|0;f4[1]=a;return T(b)},f)[1],i,h)}]}return g})}}throw[0,r,bne]}throw[0,r,bnd]}return o(gS(0,0,d),a)},JJ=function(h){function
a(a){var
b=a[2],c=a[1];return o(cP,function(a){function
d(a){return T(0)}var
e=a[13],f=a[12],g=a[11],h=a[10],i=a[9],j=a[8],k=a[7];function
l(a){return ab(a,[0,b,0])}var
m=p(F[10],0,c,l,k);return o(c7([0,a[1],a[2],a[3],a[4],a[5],a[6],m,j,i,h,g,f,e]),d)})}return o(cp(function(B){var
p=uL([0,[0,mE,[0,h,fg]],fg,h[3],h[4]]),z=p[1],g=JE(p),q=JB(g[1]),s=q[1],A=q[2];JF(g[1],s);var
k=aB[1],l=uZ(z)[2];if(l){var
m=uZ(l[1])[1],e=m[1];if(typeof
e!=="number")if(K===e[1]){var
n=e[2][2];if(ad===n[1]){var
o=m[2],a=b(F[6],n[2],aB[1][4]),d=a[1];if(typeof
d==="number")var
i=0;else
if(lN===d[1])var
j=d[2],t=j[2],u=j[1],f=Im(t,L(function(b){var
d=b[1];if(b[2]){var
e=Ig(d,0),f=c(b0,0);return[0,[0,ax,[0,d,[0,[0,ad,e]],0]],0,oc(a[3]),f]}return d$(biQ,biP,oc(a[3]))},u)),i=1;else
var
i=0;if(!i)var
f=a;var
v=aB[1],w=oM(0,o,f);aB[1]=v;if(w){aB[1]=k;return[0,s,g]}var
x=cN(f),y=cN(o);aB[1]=k;throw[0,Jz,A,x,y]}}throw[0,r,bmS]}throw[0,r,bmT]}),a)},aC=function(d,c,b){var
a=c6(d,c);oO[1]=m(F[4],a,b,oO[1]);return a};aC(bnh,X,function(b,a){if(a)throw[0,r,bng];return T(0)});aC(bnj,X,function(b,a){if(a)throw[0,r,bni];return aG});var
bnk=function(h,a){if(a){var
c=a[1][1][2];if(!c[1]){var
b=a[2];if(b){var
d=b[1][1][2];if(!d[1])if(!b[2]){var
e=d[2],f=c[2],g=function(b){function
a(a){return T(0)}return o(b$(e),a)};return o(b$(f),g)}}}}throw[0,r,bnl]};aC(bnm,D(0,X,D(0,X,X)),bnk);var
bnn=function(g,a){if(a){var
c=a[1][1][2];if(!c[1]){var
b=a[2];if(b){var
d=b[1][1][2];if(!d[1])if(!b[2]){var
e=d[2],f=c[2];return o(jh,function(a){var
b=[J,function(c){function
b(a){return b$(e)}return o(c7(a),b)}];return jg(b$(f),b)})}}}}throw[0,r,bno]};aC(bnp,D(0,X,D(0,X,X)),bnn);var
bnq=function(d,a){if(a)if(!a[2]){var
b=a[1],c=function(a){function
b(e){var
b=e[1][2],a=b[1];if(a)if(!a[2]){var
c=a[1][1],d=c[2],f=b[2],g=c[1];return o(f6,function(a){function
b(c){function
b(d){var
B=W(a[2]);function
j(e,a){var
c=a[1][2],d=c[1],f=c[2],g=W(d),h=a[4],i=a[3],j=a[2];return[0,[0,aP,[0,d,b(e+g|0,f)]],j,i,h]}function
b(e,a){var
f=a[1];if(G<=f[1]){var
d=f[2],i=d[3][2],n=d[4],o=d[2],p=d[1],x=i[4],y=i[3],z=i[1],A=[0,ca,[0,L(function(a){return j(e,a)},z),0,y,x]];return[0,[0,G,[0,p,o,A,n]],a[2],a[3],a[4]]}var
g=f[2],b=g[1],q=g[3],r=g[2],s=a[4],t=a[3],u=a[2],v=L(function(a){return j(e,a)},r),h=b[1];if(typeof
h==="number")var
c=0;else
if(K===h[1]){var
l=h[2],m=l[2];if(a$===m[1]){var
w=l[1];if(m[2]===e)var
k=[0,[0,K,[0,w,[0,cr,B]]],b[2],b[3],b[4]],c=1;else
var
c=0}else
var
c=0}else
var
c=0;if(!c)var
k=b;return[0,[0,al,[0,k,v,q]],u,t,s]}return oF(c,b$(b(0,f)))}return o(cp(function(a){return k2(d)}),b)}return o(o(f6,function(a){var
b=ab(a[2],[0,[0,g,d],0]);return T([0,a[1],b])}),b)})}throw[0,r,bns]}return o(aw(0,0,a),b)};return o(bn(b),c)}throw[0,r,bnr]};aC(bnu,D(0,D(0,aE(0,bnt),X),X),bnq);var
bnv=function(f,b){if(b)if(!b[2]){var
d=b[1],e=function(b){function
d(b){var
f=b[1][2],d=f[1];if(d)if(!d[2]){var
e=d[1][1][2],g=f[2],h=function(d){return o(cP,function(l){var
f=c(an,0),h=b[3],i=[0,ca,[0,0,[0,[0,F[1],F[1]]],0,0]],j=[0,[0,G,[0,t(bny,a(q+d)),d,i,e]],e,h,f],k=c(an,0);return b$(lc([0,[0,[0,aP,[0,0,j]],e,b[3],k],0],g))})};return o(u_(0,0),h)}throw[0,r,bnx]}return o(aw(0,0,b),d)};return o(bn(d),e)}throw[0,r,bnw]};aC(bnA,D(0,D(0,aE(0,bnz),X),X),bnv);var
bnB=function(f,b){if(b)if(!b[2]){var
d=b[1],e=function(b){function
d(b){var
f=b[1][2],d=f[1];if(d)if(!d[2]){var
e=d[1][1][2],g=f[2],h=function(d){return o(cP,function(l){var
f=c(an,0),h=b[3],i=[0,ca,[0,0,[0,[0,F[1],F[1]]],0,0]],j=[0,[0,G,[0,t(bnE,a(q+d)),d,i,e]],e,h,f],k=c(an,0);return b$(lc([0,[0,[0,aP,[0,0,j]],e,b[3],k],0],g))})};return o(u_(bnF,0),h)}throw[0,r,bnD]}return o(aw(0,0,b),d)};return o(bn(d),e)}throw[0,r,bnC]};aC(bnH,D(0,D(0,aE(0,bnG),X),X),bnB);var
bnI=function(f,b){if(b)if(!b[2]){var
d=b[1],e=function(b){function
d(b){var
f=b[1][2],d=f[1];if(d)if(!d[2]){var
e=d[1][1][2],g=f[2],h=function(d){return o(cP,function(l){var
f=c(an,0),h=b[3],i=[0,ca,[0,0,[0,[0,F[1],F[1]]],0,0]],j=[0,[0,G,[0,t(bnL,a(q+d)),d,i,e]],e,h,f],k=c(an,0);return b$(lc([0,[0,[0,aP,[0,0,j]],e,b[3],k],0],g))})};return o(u_(bnM,0),h)}throw[0,r,bnK]}return o(aw(0,0,b),d)};return o(bn(d),e)}throw[0,r,bnJ]};aC(bnO,D(0,D(0,aE(0,bnN),X),X),bnI);var
bnP=function(g,a){if(a){var
b=a[2];if(b){var
c=b[1][1][2];if(!c[1])if(!b[2]){var
e=c[2],d=a[1],f=function(b){var
a=b[1][2];if(a[1])throw[0,r,bnR];var
c=a[2];function
d(a){var
b=a[5],c=a[1];function
d(f){function
a(a){return oF(a,b$(e))}var
d=[0,b,0,0,0,1];return o(o(f6,function(a){var
b=a[2],e=a[1];function
f(a){return[0,d,a]}return T([0,p(F[10],0,c,f,e),b])}),a)}return o(cp(function(a){return JF(b,c)}),d)}return o(bm(bnS,function(a){return JC(c)}),d)};return o(aw(0,0,d),f)}}}throw[0,r,bnQ]};aC(bnT,D(0,fg,D(0,X,X)),bnP);var
bnU=function(j,a){if(a){var
d=a[1][1][2];if(!d[1]){var
b=a[2];if(b){var
e=b[1][1][2];if(!e[1]){var
c=b[2];if(c){var
f=c[1][1][2];if(!f[1])if(!c[2]){var
g=f[2],h=e[2],i=d[2];return o(jh,function(a){var
b=[J,function(c){function
b(a){return b$(g)}return o(c7(a),b)}];function
c(a){return b$(h)}return f5(b$(i),c,b)})}}}}}}throw[0,r,bnV]};aC(bnW,D(0,X,D(0,X,D(0,X,X))),bnU);var
bnX=function(e,a){if(a){var
b=a[1][1][2];if(!b[1])if(!a[2]){var
d=b$(b[2]),c=function(a){return a?T(a[1][1]):aG};return o(I0(d),c)}}throw[0,r,bnY]};aC(bnZ,D(0,X,X),bnX);var
bn0=function(g,a){if(a){var
b=a[2];if(b){var
c=b[1][1][2];if(!c[1])if(!b[2]){var
d=c[2],e=a[1],f=function(c){var
a=c[1][2][2][1];if(typeof
a!=="number")if(G===a[1]){var
b=a[2][2];return o(f6,function(a){return u$(b,[0,lx,[0,b,0,d,a]])})}return b$(d)};return o(aw(0,0,e),f)}}}throw[0,r,bn1]},bn2=D(0,X,X);aC(bn4,D(0,aE(0,bn3),bn2),bn0);var
bn5=function(i,a){if(a){var
b=a[2];if(b){var
c=b[2];if(c){var
d=c[1][1][2];if(!d[1])if(!c[2]){var
e=d[2],f=b[1],g=a[1],h=function(f){function
a(g){var
a=g[1][2][2][1],h=f[1];if(typeof
a!=="number")if(G===a[1]){var
b=a[2][2],c=h[2][2][1];if(typeof
c!=="number")if(G===c[1]){var
d=c[2][2];return o(f6,function(a){function
c(a){return u$(b,[0,vM,[0,d,b]])}return o(u$(d,[0,lx,[0,d,[0,b],e,a]]),c)})}return b$(e)}return T(0)}return o(aw(0,0,g),a)};return o(aw(0,0,f),h)}}}}throw[0,r,bn6]},bn7=D(0,X,X);aC(bn9,D(0,IN,D(0,aE(0,bn8),bn7)),bn5);var
vd=function(e,d){var
a=e?e[1]:0;function
f(d){function
e(f){return o(cP,function(g){function
e(d){var
e=d[1],h=d[2],i=L(function(a){var
b=a[2],c=a[1];return[0,c,b,JH(g[8][12],a[3])]},f);function
j(h){if(a){var
d=aK[2];b(ah(boh),d,e)}function
f(d){return o(cP,function(e){function
d(d){function
h(f){var
i=iW(d)?boi:bov;if(a){var
g=FC(d),j=g[1],k=gF(j,c(eG[3],g[2])),l=c(eG[3],f);if(iW(f))var
e=0;else
if(IW[1])var
o=function(a,b){return eC(bot,bos,bor,bl,a,b)},h=b(bT(bou),o,l),e=1;else
var
e=0;if(!e)var
h=boj;var
m=function(a,b){return GQ(bom,bol,bok,bl,bl,a,b)},n=function(a,b){return eC(bop,boo,bon,m,a,b)};p(ah(boq),i,n,k,h)}return T(d)}if(a)var
f=function(c){var
f=c[1];if(vM<=f){if(eN<=f){var
g=c[2],d=g[3],a=g[2],i=a[4],j=a[3],k=a[2],l=a[4],m=a[3],n=a[2],p=[0,[0,0,a[2],a[3],a[4]],[0,[0,0,d[2],d[3],d[4]],0]],q=[0,fi(d),0],r=[0,fi(a),q];return T([0,[0,[0,aP,[0,0,[0,[0,al,[0,[0,boc,a[2],a[3],a[4]],r,p]],n,m,l]]],k,j,i]])}return T(0)}if(lx<=f){var
s=c[2][3],t=function(a){function
b(a){return T([0,a])}return o(aw(0,0,a),b)};return o(bm(blw,function(a){return eF(function(a){return oK(blv,fi(s))})}),t)}var
h=c[2],e=h[3],b=h[2];return T([0,[0,[0,aP,[0,0,[0,[0,al,[0,[0,bod,b[2],b[3],b[4]],[0,b,[0,e,0]],[0,[0,0,b[2],b[3],b[4]],[0,[0,0,e[2],e[3],e[4]],0]]]],b[2],b[3],b[4]]]],b[2],b[3],b[4]]])},g=function(a){function
b(a){function
b(a){return T(hO(gK,a))}return o(cO(f,fZ(a)),b)}return o(bm(boe,function(b){return L(f8,c(bC[32],a))}),b)},e=o(bm(bof,function(a){return aF[1][12]}),g);else
var
e=T(0);return o(e,h)}return o(cO(function(a){var
d=a[3],g=a[2],e=a[1];function
h(a){return T([0,g,a])}function
f(a){if(a){var
f=a[1][1],h=function(g){function
a(a){function
f(e){function
b(a){return T(a)}return o(bm(0,function(b){return eF(function(t){var
g=ea(d)[1];if(typeof
g!=="number")if(bN===g[1]){var
h=jc(d),i=h[1],l=h[2],b=W(i),f=W(e),m=f<b?ab(e,tM(b-f|0,dV)):b<f?nO(b,e):e,n=gF(m,i),j=L(function(c){var
d=c[2],e=c[1],b=ea(d)[1];if(typeof
b!=="number")if(bN===b[1])return[0,[0,e,b[2][1]],d,a[3],a[4]];throw[0,r,bmM]},n),o=c(an,0),p=[0,a[1],l,a[3],o],q=j$(j)[2],s=c(an,0);return[0,[0,aP,[0,j,p]],q,a[3],s]}var
k=c(an,0);return[0,[0,aP,[0,0,a]],a[2],a[3],k]})}),b)}return o(o(cP,function(c){try{var
f=b(F[6],e,c[5]),a=f}catch(b){var
a=0}function
d(a){return T(a)}return o(cO(ble,a),d)}),f)}return o(gS(bn_,0,f),a)};return o(gS(bn$,0,f),h)}var
i=[0,[0,G,[0,g,e,boa,d]],d,0,c(an,0)];return aw(bob,0,[0,[0,aP,[0,0,i]],d,0,c(an,0)])}return o(o(bm(0,function(a){return ji(e)}),f),h)},i),d)})}var
g=[J,function(b){if(a)ah(bow);return aG}];return o(jg(b$(e),g),f)}return o(cO(function(a){return ob(blh,a)},h),j)}return o(bm(box,function(a){return oQ(d)}),e)})}return o(cp(function(f){var
a=aB[1],c=i9(a[7]),d=L(function(c){var
d=b(F[6],c,a[8]);return[0,c,b(F[6],c,a[6]),d]},c),e=hO(function(a){var
b=a[2],e=a[1],f=hT(0,boy,a[3],0),c=iQ(b,H4),d=c||iQ(b,bog);return 1-d?[0,[0,e,b,f]]:0},d);aB[1]=ot(aB[1]);return e}),e)}return o(cp(function(e){var
b=[0,[0,mE,[0,d,X]],X,d[3],d[4]];function
c(a){return uL(b)}var
a=c5[1];return JE(f3([0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],1,a[10]],c))}),f)},jl=[N,boz,H(0)],boA=function(a){try{var
f=bi(a),r=bu===f?a[1]:J===f?cd(a):a;return r}catch(a){a=s(a);if(a[1]===vc){var
c=a[2],g=aK[2],h=cv(c[3]);m(ah(boB),h,g,c);throw jl}if(a[1]===oN){var
d=a[2],i=aK[2],j=cv(d[3]);m(ah(boC),j,i,d);throw jl}if(a[1]===Jz){var
e=a[2],k=a[4],l=a[3],n=aK[2],o=cv(e[3]);bE(ah(boD),o,n,e,b_,l,b_,k);throw jl}if(a[1]===JA){var
p=a[3],q=cv(a[2][3]);b(ah(boE),q,p);throw jl}throw a}},oR=function(d,g){var
h=d?d[1]:[J,function(a){throw jl}],a=oG[1],i=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],bI[1],a[9],a[10],a[11],a[12],a[13]],j=[0,I2(0),i],e=boA([J,function(d){function
a(a,b){return c(oD,a)}return c(b(g[1],a,h),j)}]),k=e[1],f=uW(e[2]);oG[1]=f;bI[1]=f[8];return k},JK=[N,boG,H(0)],ve=function(b){var
a=bI[1][22];if(a)throw[0,JK,a[1]];Iy(0);oG[1]=I3[1];return 0},oS=function(b,a,d){function
j(c){var
a=c[1];if(typeof
a!=="number")if(aP===a[1]){var
b=a[2][2][1];if(typeof
b!=="number")if(G===b[1])return 1}return 0}return aC(b,a,function(f,a){function
b(a){var
e=W(a);try{var
i=be3(j,a),b=i[1],n=b[3],p=b[2],q=b[1],r=hN(d,i[2]),t=ab(q,n),h=r,g=t,f=p}catch(b){b=s(b);if(b!==GN)throw b;var
k=tN(a),l=nO(e-1|0,a),h=hN(d,e-1|0),g=l,f=k}function
m(a){return b2(0,f,a)}return o(c(h,g),m)}var
e=0;return o(cO(function(a){return aw(boH,e,a)},a),b)})},vf=function(a){return[0,0,a,0,c(om[3],0)]},eH=function(c){var
a=c[1][2][2][1];if(typeof
a!=="number")if(al===a[1]){var
b=a[2][1][1];if(typeof
b!=="number")if(bV===b[1])return T(b[2])}return aG},f_=function(a,c){var
d=a?a[1]:0;return b(bjX,[0,d],c)},hZ=function(c){var
a=c[1][2][2][1];if(typeof
a!=="number")if(al===a[1]){var
b=a[2][1][1];if(typeof
b!=="number")if(bV===b[1])return T(b[2])}return aG},JL=function(a,c){var
d=a?a[1]:0;return b(uQ,[0,d],c)},vg=function(a){function
e(a,f){function
b(k){var
g=k[1][2];if(!g[1]){var
a=g[2][1];if(typeof
a!=="number")if(al===a[1]){var
h=a[2],b=h[1][1];if(typeof
b!=="number")if(K===b[1]){var
i=b[2][2];if(ad===i[1]){var
c=h[2],j=i[2];if(c){var
d=c[2];if(d)if(!d[2]){var
l=d[1],m=c[1];if(j===uT)return e(l,[0,m,f])}}else
if(j===uR)return T(aj(f))}}}}return aG}return o(aw(0,0,a),b)}return e(a,0)},jm=function(d,a,e){var
b=d?d[1]:0,f=c(an,0),g=gP([0,[0,K,[0,boI,[0,ad,uR]]],c(cy,a),b,f]),h=c(an,0),i=c(cy,a),j=[0,[0,K,[0,boJ,[0,ad,uT]]],D(0,a,D(0,c(cy,a),i)),b,h];return f0(function(e,d){var
f=c(an,0),g=c(cy,a),h=[0,vf(c(cy,a)),0],i=c(cy,a),k=[0,[0,al,[0,j,[0,e,[0,d,0]],[0,vf(D(0,c(cy,a),i)),h]]],g,b,f],l=c(an,0);return[0,[0,aP,[0,0,k]],c(cy,a),b,l]},e,g)},JM=function(i,h){var
d=i[1][2];if(!d[1]){var
a=d[2][1];if(typeof
a!=="number")if(al===a[1]){var
e=a[2],b=e[1][1];if(typeof
b!=="number")if(K===b[1]){var
f=b[2][2];if(ad===f[1]){var
c=e[2];if(c)if(!c[2]){var
g=c[1];if(f[2]===IR){var
j=function(a){function
b(a){return T(g)}return o(fh(a),b)};return o(bm(boM,function(a){return oM(0,h,g[2])}),j)}}}}}}return aG},vh=function(d,b){var
a=d?d[1]:0,e=b[2],f=c(an,0),g=[0,[0,K,[0,boN,[0,ad,IR]]],D(0,e,eb),a,f],h=c(an,0),i=[0,[0,al,[0,g,[0,b,0],[0,vf(eb),0]]],eb,a,h];return[0,[0,aP,[0,0,i]],eb,a,c(an,0)]},vi=function(e,a){if(a){var
c=a[2];if(c)if(!c[2]){var
d=a[1],f=c[1],g=function(a){function
c(c){var
f=b(e,a,c);return T(JL([0,d[3]],f))}return o(hZ(f),c)};return o(hZ(d),g)}}throw[0,bG,boO]},boP=0,boQ=function(b,a){return b+a|0},boR=[0,function(a){return vi(boQ,a)},boP],boS=function(b,a){return a-b|0},boT=[0,function(a){return vi(boS,a)},boR],boU=function(b,a){return a-b|0},boV=[0,function(a){return vi(boU,a)},boT];oS(boW,D(0,eE,D(0,eE,D(0,eE,X))),boV);var
vj=function(e,a){if(a){var
c=a[2];if(c)if(!c[2]){var
d=a[1],f=c[1],g=function(c){function
a(f){try{var
g=[0,b(e,c,f)],a=g}catch(b){var
a=0}return a?T(JL([0,d[3]],a[1])):aG}return o(hZ(f),a)};return o(hZ(d),g)}}throw[0,bG,boX]},boY=0,boZ=function(b,a){return go(b,a)},bo0=[0,function(a){return vj(boZ,a)},boY],bo1=function(b,a){return ru(a,b)},bo2=[0,function(a){return vj(bo1,a)},bo0],bo3=function(b,a){return ru(a,b)},bo4=[0,function(a){return vj(bo3,a)},bo2];oS(bo5,D(0,eE,D(0,eE,D(0,eE,X))),bo4);var
JN=function(c){var
a=c[1];if(typeof
a!=="number")if(aP===a[1]){var
b=a[2][2][1];if(typeof
b!=="number")if(G===b[1])return 1}return 0},bo6=function(i,a){if(a){var
b=a[2];if(b){var
d=b[2];if(d)if(!d[2]){var
e=a[1],g=d[1],f=b[1],h=function(a){function
b(b){if(!JN(a))if(!JN(b)){var
d=function(h){function
a(i){var
b=e[3],j=h<i?1:0,a=[0,b]?b:0,d=gP([0,[0,K,[0,boK,[0,ad,bkc]]],k8,a,c(an,0)]),f=gP([0,[0,K,[0,boL,[0,ad,bke]]],k8,a,c(an,0)]),k=j?d:f;return b2(0,g,k)}return o(hZ(b),a)};return o(hZ(a),d)}return aG}return o(aw(0,0,f),b)};return o(aw(0,0,e),h)}}}throw[0,bG,bo7]};aC(bo8,D(0,eE,D(0,eE,D(0,k8,X))),bo6);uN(bo9);var
vk=function(e,a){if(a){var
c=a[2];if(c)if(!c[2]){var
d=a[1],f=c[1],g=function(c){function
a(f){var
a=b(e,c,f);return a?T(f_([0,d[3]],a[1])):aG}return o(eH(f),a)};return o(eH(d),g)}}throw[0,bG,bo_]},bo$=0,bpa=function(b,a){return[0,t(b,a)]},bpb=[0,function(a){return vk(bpa,a)},bo$],bpc=function(b,a){return iQ(a,b)?[0,aD(a,C(b),C(a)-C(b)|0)]:0},bpd=[0,function(a){return vk(bpc,a)},bpb],bpe=function(c,b){var
e=C(c),f=C(b)-e|0;if(0<=f){var
a=0;for(;;){if(a===e)var
d=1;else{var
g=I(c,a);if(I(b,f+a|0)===g){var
a=a+1|0;continue}var
d=0}break}}else
var
d=0;return d?[0,aD(b,0,C(b)-C(c)|0)]:0},bpf=[0,function(a){return vk(bpe,a)},bpd];oS(bpg,D(0,b1,D(0,b1,D(0,b1,X))),bpf);var
bph=0,bpj=[0,function(a){if(a)if(!a[2]){var
c=a[1],b=function(i){var
f=c[3],j=f?[0,f[1][1]]:0,b=0,a=uc(j,i);for(;;){var
d=k(a);if(d){var
e=d[1],g=e[2],l=d_(f2([0,e[1],0])),b=[0,f_([0,od(a[2],a[2])],l),b],a=g;continue}var
h=aj(b);return T(jm([0,c[3]],b1,h))}};return o(eH(c),b)}throw[0,bG,bpi]},bph],bpm=[0,function(a){if(a)if(!a[2]){var
b=a[1],c=function(a){function
c(a){var
c=er(bpl,a);return T(f_([0,b[3]],c))}return o(cO(eH,a),c)};return o(vg(b),c)}throw[0,bG,bpk]},bpj];oS(bpn,D(0,b1,D(0,c(cy,b1),X)),bpm);var
bpo=function(f,a){if(a){var
b=a[2];if(b)if(!b[2]){var
c=b[1],d=a[1],e=function(a){function
b(d){var
b=BJ(BG,d);return b2(0,c,f_([0,a[3]],b))}return o(eH(a),b)};return o(aw(0,0,d),e)}}throw[0,bG,bpp]};aC(bpq,D(0,b1,D(0,b1,X)),bpo);var
bpr=function(f,a){if(a){var
b=a[2];if(b)if(!b[2]){var
c=b[1],d=a[1],e=function(a){function
b(d){var
b=m1(BG,d);return b2(0,c,f_([0,a[3]],b))}return o(eH(a),b)};return o(aw(0,0,d),e)}}throw[0,bG,bps]};aC(bpt,D(0,b1,D(0,b1,X)),bpr);var
bpu=function(f,a){if(a){var
b=a[2];if(b)if(!b[2]){var
c=b[1],d=a[1],e=function(a){function
b(d){var
b=m1(BF,d);return b2(0,c,f_([0,a[3]],b))}return o(eH(a),b)};return o(aw(0,0,d),e)}}throw[0,bG,bpv]};aC(bpw,D(0,b1,D(0,b1,X)),bpu);uO(0);var
JO=function(a,g){function
b(e,a){if(a)if(!a[2]){var
b=a[1],d=function(e){var
b=e[1];if(typeof
b==="number")var
a=0;else
if(aP===b[1]){var
d=b[2][2][1];if(typeof
d==="number")var
a=0;else
if(G===d[1])var
f=1,a=1;else
var
a=0}else
var
a=0;if(!a)var
f=0;if(f)return aG;function
h(a){return fh(c(g,GI(kV(a))))}return o(eH(e),h)};return o(aw(bpy,0,b),d)}throw[0,bG,bpx]}return aC(a,D(0,b1,X),b)};JO(bpz,function(a){try{kQ(a);var
b=1;return b}catch(a){return 0}});JO(bpA,function(b){var
a=GL(b),c=RF<=a?ej<=a?R8<=a?0:1:h===a?1:0:d<=a?1:0;return c?1:0});var
bpB=function(e,a){if(a)if(!a[2]){var
c=a[1],d=function(a){function
c(a){var
c=eG[2];b(ah(bpD),c,a);return T(0)}return o(aw(bpE,0,a),c)};return o(bn(c),d)}throw[0,bG,bpC]};aC(bpG,D(0,aE(0,bpF),X),bpB);var
bpH=function(g,a){if(a){var
c=a[2];if(c)if(!c[2]){var
d=c[1],e=a[1],f=function(a){function
c(c){var
e=eG[2],f=b(bT(bpJ),e,c);return b2(0,d,f_([0,a[3]],f))}return o(aw(bpK,0,a),c)};return o(bn(e),f)}}throw[0,bG,bpI]},bpL=D(0,b1,X);aC(bpN,D(0,aE(0,bpM),bpL),bpH);var
bpO=function(e,a){if(a)if(!a[2]){var
b=a[1],d=function(a){function
b(a){function
b(a){c(ah(bpQ),a);return T(0)}return o(eH(a),b)}return o(aw(bpR,0,a),b)};return o(bn(b),d)}throw[0,bG,bpP]};aC(bpS,D(0,b1,X),bpO);var
bpT=function(g,a){if(a){var
c=a[2];if(c)if(!c[2]){var
d=c[1],e=a[1],f=function(a){function
c(a){function
c(c){function
d(c){function
d(a){return T(0)}return o(bm(bpW,function(e){function
d(a,b){return u8(-c|0,a,b)}return b(ah(bpV),d,a)}),d)}return o(hZ(c),d)}return o(aw(bpX,0,e),c)}return o(aw(bpY,0,a),c)};return o(bn(d),f)}}throw[0,bG,bpU]};aC(bp0,D(0,eE,D(0,aE(0,bpZ),X)),bpT);aC(bp3,X,function(c,a){if(a)throw[0,bG,bp1];return o(f6,function(a){var
c=a[2],d=0,e=0,f=0;function
g(a,b){return GQ(f,e,d,u7,b_,a,b)}var
h=0,i=0,j=0;function
k(a,b){return eC(j,i,h,g,a,b)}b(ah(bp2),k,c);return T(0)})});var
bp4=function(d,a){if(a)if(!a[2]){var
c=a[1],b=function(i){var
a=gN[1];gN[1]=1;var
b=c[1][2];if(b[1])throw[0,r,bp6];var
d=b[2];function
e(a){return T(0)}var
f=[J,function(c){function
b(b){gN[1]=a;return aG}return o(T(0),b)}];function
g(b){gN[1]=a;return T(0)}try{var
h=b$(d)}catch(b){b=s(b);gN[1]=a;throw b}return o(f5(h,g,f),e)};return o(T(0),b)}throw[0,bG,bp5]};aC(bp7,D(0,X,X),bp4);var
bp8=function(f,a){if(a){var
b=a[2];if(b)if(!b[2]){var
c=b[1],d=a[1],e=function(f){function
a(g){var
c=g[1][2];if(c[1])throw[0,r,bp_];var
h=c[2];function
i(a){function
b(b){function
c(i){var
d=[J,function(d){function
c(a){return aG}return o(bm(bp$,function(c){return oP(b,a)}),c)}];function
e(c){function
d(a){return T(uI(c))}return o(bm(bqa,function(c){return oP(b,a)}),d)}try{var
f=function(a){return T([0,jS,a])},g=o(b$(h),f),c=g}catch(a){a=s(a);var
c=T([0,wc,a])}return f5(c,e,d)}return o(bm(bqb,function(b){return oP(1,a)}),c)}return o(bm(0,function(b){return JD(a)}),b)}var
d=f[1][2][2],b=d[2][1];if(typeof
b==="number")var
a=0;else
if(ax===b[1])if(bP(b[2][2],bkn))var
e=T(fj(d)),a=1;else
var
a=0;else
var
a=0;if(!a)var
e=aG;return o(e,i)}return o(bn(c),a)};return o(bn(d),e)}}throw[0,bG,bp9]},bqc=D(0,X,X);aC(bqe,D(0,aE(0,bqd),bqc),bp8);var
bqf=function(g,a){if(a){var
c=a[2];if(c)if(!c[2]){var
d=c[1],e=a[1],f=function(a){function
c(a){var
c=a[1][2],e=c[1]?a[3]:c[2][3];return b2(0,d,b(bj3,[0,0],e))}return o(aw(0,0,a),c)};return o(bn(e),f)}}throw[0,bG,bqg]},bqh=D(0,IM,X);aC(bqj,D(0,aE(0,bqi),bqh),bqf);var
bqk=function(h,a){if(a){var
b=a[2];if(b){var
c=b[2];if(c)if(!c[2]){var
f=c[1],e=b[1],d=a[1],g=function(a){function
b(d){function
a(g){function
h(b){var
c=d[1][2],a=c[2];return b2(0,f,[0,[0,aP,[0,c[1],[0,a[1],a[2],b,a[4]]]],d[2],b,d[4]])}var
b=g[1][2][2][1];if(typeof
b==="number")var
a=0;else
if(al===b[1]){var
c=b[2][1][1];if(typeof
c==="number")var
a=0;else
if(bV===c[1])var
e=T(c[2]),a=1;else
var
a=0}else
var
a=0;if(!a)var
e=aG;return o(e,h)}return o(aw(0,0,e),a)}return o(aw(0,0,a),b)};return o(bn(d),g)}}}throw[0,bG,bql]},bqn=D(0,IM,D(0,aE(0,bqm),X));aC(bqp,D(0,aE(0,bqo),bqn),bqk);uN(bqq);var
bqr=function(f,a){if(a){var
b=a[2];if(b)if(!b[2]){var
c=b[1],d=a[1],e=function(a){function
b(b){var
a=u4(-1,c);function
d(d){if(d){var
e=d[1];if(ad===e[1])return b2(0,c,gP([0,[0,K,[0,[0,a9,b],[0,ad,e[2]]]],a[2],a[3],a[4]]))}return aG}return o(cp(function(e){try{var
c=hS(a),d=[0,uG(ad,Ij(b),c)];return d}catch(a){return 0}}),d)}return o(eH(a),b)};return o(aw(0,0,d),e)}}throw[0,r,bqs]};aC(bqu,D(0,b1,D(0,aE(0,bqt),X)),bqr);var
bqv=function(e,a){if(a){var
b=a[2];if(b)if(!b[2]){var
f=b[1],c=a[1],d=function(a){function
b(d){var
a=d[1][2][2][1];if(typeof
a!=="number")if(al===a[1]){var
b=a[2][1][1];if(typeof
b!=="number")if(K===b[1]){var
e=b[2],c=e[1];if(typeof
c!=="number")if(a9===c[1])if(ad===e[2][1])return b2(0,f,f_([0,d[3]],c[2]))}}return aG}return o(aw(0,0,a),b)};return o(bn(c),d)}}throw[0,r,bqw]},bqx=D(0,b1,X);aC(bqz,D(0,aE(0,bqy),bqx),bqv);var
bqA=function(i,a){if(a){var
b=a[2];if(b){var
d=b[2];if(d)if(!d[2]){var
f=d[1],e=b[1],g=a[1],h=function(a){function
b(a){var
b=a[1][2];if(b[1])return aG;var
d=b[2][1];if(G<=d[1]){var
h=function(b){function
d(b){function
d(b){if(b){var
g=b[2],k=b[1],l=function(b){var
d=b[1],f=b[3],h=b[2];function
i(b){function
i(k){function
i(b){var
g=c(an,0);return b2(0,a,fi([0,[0,al,[0,d,b,h]],f,e[3],g]))}var
j=gF(g,b);return o(cO(function(a){return ob(JM,a)},j),i)}var
j=W(b),k=W(g)!==j?aG:T(0);return o(k,i)}return o(cp(function(a){return Is(d[2])}),i)},h=k[1][2][2],d=h[1];if(typeof
d==="number")var
f=0;else
if(al===d[1])var
j=d[2],i=T([0,j[1],j[3],h[2]]),f=1;else
var
f=0;if(!f)var
i=aG;return o(i,l)}throw[0,bG,bqC]}var
f=0,g=0;return o(cO(function(a){return aw(g,f,a)},b),d)}return o(cO(bn,[0,e,b]),d)};return o(vg(f),h)}var
g=d[2],i=g[2],j=g[1];function
k(b){function
c(c){var
b=L(function(a){return vh([0,a[3]],a)},i);return b2(0,f,jm([0,a[3]],eb,b))}return o(b2(0,e,b),c)}return o(bn(gP(j)),k)}return o(aw(0,0,a),b)};return o(bn(g),h)}}}throw[0,r,bqB]},bqD=D(0,c(cy,eb),X),bqF=D(0,aE(0,bqE),bqD);aC(bqH,D(0,aE(0,bqG),bqF),bqA);var
JP=function(g,f){var
a=k4(Iv(0,[0,[0,a9,g]],[0,ad,f],0)),b=a[1];if(typeof
b!=="number")if(K===b[1]){var
d=b[2],c=d[1];if(typeof
c!=="number")if(a9===c[1]){var
e=d[2];if(ad===e[1])return gP([0,[0,K,[0,[0,a9,c[2]],[0,ad,e[2]]]],a[2],a[3],a[4]])}}throw[0,r,bqI]},bqJ=function(e,a){if(a){var
b=a[2];if(b)if(!b[2]){var
h=b[1],c=a[1],d=function(a){function
b(i){function
j(a){var
b=a[2],c=a[1];function
d(a){return b2(0,h,a)}return o(cp(function(a){return JP(c,b)}),d)}var
b=i[1][2][2][1];if(typeof
b==="number")var
a=0;else
if(al===b[1]){var
c=b[2][1][1];if(typeof
c==="number")var
a=0;else
if(K===c[1]){var
f=c[2],d=f[1];if(typeof
d==="number")var
a=0;else
if(a9===d[1]){var
g=f[2];if(ad===g[1])var
e=T([0,d[2],g[2]]),a=1;else
var
a=0}else
var
a=0}else
var
a=0}else
var
a=0;if(!a)var
e=aG;return o(e,j)}return o(aw(0,0,a),b)};return o(bn(c),d)}}return aG},bqL=D(0,aE(0,bqK),X);aC(bqN,D(0,aE(0,bqM),bqL),bqJ);var
bqO=function(d,a){if(a)if(!a[2]){var
b=a[1],c=function(a){return b2(0,b,a)};return o(cp(function(c){var
a=i9(aB[1][3]),b=iX(JP,L(Ik,a),a);return jm(0,eb,L(function(a){return vh(0,a)},b))}),c)}throw[0,r,bqP]};aC(bqQ,D(0,c(cy,eb),X),bqO);var
bqR=function(g,a){if(a){var
c=a[2];if(c)if(!c[2]){var
d=c[1],e=a[1],f=function(a){function
c(a){var
e=fj(a[1][2][2]);return o(f6,function(f){try{var
h=b(F[6],e,f[1]),c=h}catch(a){a=s(a);if(a!==x)throw a;var
c=0}function
g(b){return b2(0,d,jm([0,a[3]],fg,b))}return o(bm(bqT,function(d){function
a(a){return a[1]}function
b(b){return nI(fi,a,b)}return L(function(a){return nI(b,oQ,a)},c)}),g)})}return o(aw(0,0,a),c)};return o(bn(e),f)}}throw[0,r,bqS]},bqU=D(0,c(cy,fg),X);aC(bqW,D(0,aE(0,bqV),bqU),bqR);var
bqX=function(g,a){if(a){var
b=a[2];if(b){var
c=b[1][1][2];if(!c[1])if(!b[2]){var
d=c[2],e=a[1],f=function(a){var
e=fj(a[1][2][2]);function
b(a){return oF(a,b$(d))}return o(o(f6,function(a){var
b=a[2],c=a[1];function
d(a){return 0}return T([0,p(F[10],0,e,d,c),b])}),b)};return o(aw(0,0,e),f)}}}throw[0,r,bqY]},bqZ=D(0,X,X);aC(bq1,D(0,aE(0,bq0),bqZ),bqX);var
bq2=function(f,a){if(a){var
b=a[2];if(b)if(!b[2]){var
c=b[1],d=a[1],e=function(a){function
b(a){var
b=fj(a[1][2][2]);function
d(b){function
d(b){return b2(0,c,jm([0,a[3]],fg,b))}return o(bm(bq4,function(d){function
a(a){return a[1]}function
c(b){return nI(fi,a,b)}return L(function(a){return nI(c,oQ,a)},b)}),d)}return o(JI(b),d)}return o(aw(0,0,a),b)};return o(bn(d),e)}}throw[0,r,bq3]},bq5=D(0,c(cy,fg),X);aC(bq7,D(0,aE(0,bq6),bq5),bq2);var
bq8=function(c,a){if(a)if(!a[2]){var
b=a[1];return o(cP,function(a){function
c(b){function
c(e){function
b(f){var
b=e[1][2];if(b[1])var
a=0;else{var
d=b[2][1];if(typeof
d==="number")var
a=0;else
if(G===d[1])var
c=1,a=1;else
var
a=0}if(!a)var
c=0;return fh(c)}return o(c7(a),b)}return o(aw(0,0,b),c)}return o(bn(b),c)})}throw[0,r,bq9]};aC(bq$,D(0,aE(0,bq_),X),bq8);var
bra=function(c,a){if(a)if(!a[2]){var
b=a[1];return o(cP,function(a){function
c(b){function
c(g){function
b(h){var
d=g[1][2];if(d[1])var
a=0;else{var
b=d[2][1];if(typeof
b==="number")var
a=0;else
if(al===b[1]){var
c=b[2],f=c[1][1];if(typeof
f==="number")var
a=0;else
if(bV===f[1])if(c[2])var
a=0;else
if(c[3])var
a=0;else
var
e=1,a=1;else
var
a=0}else
var
a=0}if(!a)var
e=0;return fh(e)}return o(c7(a),b)}return o(aw(0,0,b),c)}return o(bn(b),c)})}throw[0,r,brb]};aC(brd,D(0,aE(0,brc),X),bra);var
bre=function(c,a){if(a)if(!a[2]){var
b=a[1];return o(cP,function(a){function
c(b){function
c(f){function
b(g){var
c=f[1][2];if(c[1])var
a=0;else{var
b=c[2][1];if(typeof
b==="number")var
a=0;else
if(al===b[1]){var
e=b[2][1][1];if(typeof
e==="number")var
a=0;else
if(K===e[1])var
d=1,a=1;else
var
a=0}else
var
a=0}if(!a)var
d=0;return fh(d)}return o(c7(a),b)}return o(aw(0,0,b),c)}return o(bn(b),c)})}throw[0,r,brf]};aC(brh,D(0,aE(0,brg),X),bre);var
bri=function(c,a){if(a)if(!a[2]){var
b=a[1];return o(cP,function(a){function
c(b){function
c(f){function
b(g){var
d=f[1][2];if(d[1])var
a=0;else{var
b=d[2][1];if(typeof
b==="number")var
a=0;else
if(al===b[1]){var
c=b[2][1][1];if(typeof
c==="number")var
a=0;else
if(K===c[1])if(ad===c[2][2][1])var
e=1,a=1;else
var
a=0;else
var
a=0}else
var
a=0}if(!a)var
e=0;return fh(e)}return o(c7(a),b)}return o(aw(0,0,b),c)}return o(bn(b),c)})}throw[0,r,brj]};aC(brl,D(0,aE(0,brk),X),bri);var
brm=function(c,a){if(a)if(!a[2]){var
b=a[1];return o(cP,function(a){function
c(b){function
c(f){function
b(g){var
d=f[1][2];if(d[1])var
a=0;else{var
b=d[2][1];if(typeof
b==="number")var
a=0;else
if(al===b[1]){var
c=b[2][1][1];if(typeof
c==="number")var
a=0;else
if(K===c[1])if(cr===c[2][2][1])var
e=1,a=1;else
var
a=0;else
var
a=0}else
var
a=0}if(!a)var
e=0;return fh(e)}return o(c7(a),b)}return o(aw(0,0,b),c)}return o(bn(b),c)})}throw[0,r,brn]};aC(brp,D(0,aE(0,bro),X),brm);var
brq=function(c,a){if(a)if(!a[2]){var
b=a[1];return o(cP,function(a){function
c(b){function
c(b){function
c(c){var
a=b[1][2][1]?1:0;return fh(a)}return o(c7(a),c)}return o(aw(0,0,b),c)}return o(bn(b),c)})}throw[0,r,brr]};aC(brt,D(0,aE(0,brs),X),brq);var
bru=function(i,a){if(a){var
c=a[2];if(c){var
d=c[2];if(d)if(!d[2]){var
f=d[1],g=c[1],e=a[1],h=function(a){function
c(c){var
d=c[1][2];if(!d[1]){var
a=d[2][1];if(typeof
a!=="number")if(G===a[1]){var
e=a[2],h=e[3][2][1],i=e[2],j=function(b){var
a=L(function(a){return vh([0,a[3]],a)},h);return b2(0,f,jm([0,c[3]],eb,a))};return o(b2(0,g,b(uQ,0,i)),j)}}return aG}return o(aw(0,0,a),c)};return o(bn(e),h)}}}throw[0,r,brv]},brw=D(0,eE,D(0,c(cy,eb),X));aC(bry,D(0,aE(0,brx),brw),bru);var
brz=function(f,a){if(a){var
b=a[2];if(b){var
c=b[2];if(c)if(!c[2]){var
g=c[1],h=b[1],d=a[1],e=function(a){function
b(i){var
d=i[1][2];if(!d[1]){var
a=d[2],c=a[1];if(typeof
c!=="number")if(G===c[1]){var
b=c[2],e=b[4],f=b[3][2],j=f[4],k=f[3],l=b[2],m=b[1],n=function(b){function
c(b){function
c(b){function
c(c){function
d(h){function
d(b){return b2(0,fi([0,[0,G,[0,m,l,[0,ca,[0,b,0,k,j]],e]],a[2],a[3],a[4]]),g)}var
f=gF(b,c);return o(cO(function(a){return ob(JM,a)},f),d)}var
f=W(c),h=W(b)!==f?aG:T(0);return o(h,d)}return o(cp(function(a){return Is(e)}),c)}var
d=0,f=0;return o(cO(function(a){return aw(f,d,a)},b),c)}return o(cO(bn,b),c)};return o(vg(h),n)}}return aG}return o(aw(0,0,a),b)};return o(bn(d),e)}}}throw[0,r,brA]},brC=D(0,aE(0,brB),X),brD=D(0,c(cy,eb),brC);aC(brF,D(0,aE(0,brE),brD),brz);var
brG=function(g,a){if(a){var
c=a[2];if(c)if(!c[2]){var
d=c[1],e=a[1],f=function(a){function
c(e){var
c=e[1][2];if(!c[1]){var
a=c[2][1];if(typeof
a!=="number")if(G===a[1]){var
f=a[2],g=function(a){return b2(0,d,b(uQ,0,a))};return o(Jh(f[2]),g)}}return aG}return o(aw(0,0,a),c)};return o(bn(e),f)}}throw[0,r,brH]},brI=D(0,eE,X);aC(brK,D(0,aE(0,brJ),brI),brG);var
JQ=function(a){function
b(e){var
b=e[1];if(typeof
b==="number")var
a=0;else
if(ax===b[1]){var
d=b[2][2];if(d)if(ad===d[1][1])var
c=1,a=1;else
var
a=0;else
var
a=0}else
var
a=0;if(!a)var
c=0;return c?T(0):(ah(brL),aG)}return o(cp(function(b){return ea(a[2])}),b)},brM=function(h,a){if(a){var
b=a[2];if(b)if(!b[2]){var
c=b[1],d=a[1],e=function(b,f){var
a=f[1];if(G<=a[1]){var
d=a[2],e=[J,function(a){return I1(g,b,ec(d))}],h=function(c){function
a(m){var
c=[0,m,f],j=[0,c];if(b){var
e=b[1];if(j){var
g=c[1],h=e[1],k=c[2],l=e[2];if(Bm(h,g))var
d=[0,[0,h,l]],a=1;else
var
d=[0,[0,g,k]],a=1}else
var
i=e,a=0}else
if(j)var
i=c,a=0;else
var
d=0,a=1;if(!a)var
d=[0,i];return T(d)}return o(Jh(d[2]),a)},i=function(a){return fh(a)};return f5(o(cp(function(a){return oM(brO,f[2],c[2])}),i),h,e)}return I1(g,b,a[2][2])},g=function(b,a){return e(b,a[1][2][2])},f=function(b){function
a(b){function
d(a){function
b(b){var
f=c[1];if(b){var
d=f[2];if(!d[1]){var
a=d[2][1];if(typeof
a!=="number")if(G===a[1]){var
g=b[1][2],h=a[2][2],e=0;return bm(bk$,function(a){return gR(h,[0,e],g)})}}}return aG}return o(e(0,a),b)}var
a=b[1][2],f=a[1]?aG:T(a[2]);return o(f,d)}return o(aw(brP,0,d),a)};return o(cO(JQ,[0,d,[0,c,0]]),f)}}throw[0,r,brN]},brR=D(0,aE(0,brQ),X);aC(brT,D(0,aE(0,brS),brR),brM);var
brU=function(n,a){if(a){var
d=a[2];if(d){var
e=d[2];if(e)if(!e[2]){var
g=d[1],f=a[1],k=e[1],h=function(d){var
a=d[1];if(typeof
a!=="number")if(aP===a[1]){var
c=a[2];if(!c[1]){var
b=c[2][1];if(typeof
b!=="number")if(G===b[1])return[0,b[2][2]]}}return 0},l=function(b){var
a=b[1];if(typeof
a!=="number")if(G===a[1])return[0,a[2][2]];return 0},i=function(f,e,a){var
d=a[1];if(typeof
d!=="number"){var
k=d[1];if(al===k){var
g=d[2],m=g[3],n=g[2],o=g[1],p=a[4],q=a[3],s=a[2];return[0,[0,al,[0,o,L(function(a){return j(f,e,a)},n),m]],s,q,p]}if(G===k){var
c=d[2],h=c[3],t=c[2],u=c[1];if(b(bC[4],c[2],e))return[0,[0,al,[0,[0,[0,K,[0,dV,[0,a$,f]]],a[2],a[3],a[4]],0,0]],a[2],a[3],a[4]];if(typeof
h!=="number")if(ca===h[1]){var
i=h[2],v=c[4],w=i[4],x=i[3],y=i[1],l=L(function(a){return j(f,e,a)},y),z=k9(l);return[0,[0,G,[0,u,t,[0,ca,[0,l,z,x,w]],v]],a[2],a[3],a[4]]}}}throw[0,r,brW]},j=function(e,d,a){var
b=a[1][2],c=b[1],f=b[2],g=a[4],h=a[3],j=a[2];return[0,[0,aP,[0,c,i(e+W(c)|0,d,f)]],j,h,g]},m=function(d){function
a(j){function
a(a){function
e(d){function
m(e){function
d(b){var
g=i(0,e,b),d=D(0,a[2],f[2]),h=c(an,0),j=b[3],l=c(an,0);return b2(0,k,[0,[0,aP,[0,[0,[0,[0,dV,a[2]],d,b[3],l],0],g]],d,j,h])}var
b=j[1][2],g=b[1]?aG:T(b[2]);return o(g,d)}function
g(e,n,m){var
d=n,f=m;for(;;){if(d){var
i=d[2],a=d[1];if(b(bC[4],a,e)){var
d=i,f=b(bC[7],a,f);continue}var
j=b(bC[6],a,e),k=b(bC[7],a,f),p=function(a){function
d(d){var
e=fZ(d),a=kH(function(a){var
c=b(bC[4],a,j),d=c||b(bC[4],a,k);return 1-d},e),f=FE(a),h=c(bC[44],f),l=b(bC[9],h,k);return g(j,ab(a,i),l)}return o(cO(function(a){if(typeof
a!=="number"){var
d=a[1];if(pU===d){var
b=a[2],e=b[1],g=b[3],i=b[2];return o(jh,function(a){function
b(b){function
c(c){function
d(a){return T(hO(h,[0,b,[0,c,0]]))}return o(c7(a),d)}return o(aw(0,e,g),c)}return o(aw(0,e,i),b)})}if(eN===d){var
c=a[2],f=c[1],j=c[3],k=c[2];return o(jh,function(a){function
b(b){function
c(c){function
d(a){return T(hO(l,[0,b,[0,c,0]]))}return o(c7(a),d)}return o(gS(0,f,j),c)}return o(gS(0,f,k),b)})}}return T(0)},a),d)};return o(bm(blb,function(b){return f8(a)}),p)}return T(e)}}var
e=c(bC[3],d);return o(g(bC[1],[0,d,0],e),m)}var
d=h(a),g=d?T(d[1]):aG;return o(g,e)}return o(aw(brX,0,g),a)}return o(aw(brY,0,f),a)};return o(cO(JQ,[0,f,[0,g,0]]),m)}}}throw[0,bG,brV]},br0=aE(0,brZ),br2=D(0,D(0,aE(0,br1),br0),X),br4=D(0,aE(0,br3),br2);aC(br6,D(0,aE(0,br5),br4),brU);uO(0);var
fk=jf(br7)[2],br9=c6(br8,D(0,fg,fk)),bsa=c6(br$,D(0,b1,D(0,aE(0,br_),fk))),bsc=c6(bsb,D(0,c(cy,fk),fk)),bse=c6(bsd,D(0,D(0,fk,X),fk)),bsg=c6(bsf,fk),bsi=c6(bsh,D(0,X,fk)),bsj=function(b){function
g(h){var
b=h[4],d=h[3],e=c(h[2]),f=h[1],j=f[1];if(bq<=j){if(K<=j){var
k=f[2],i=k[1];if(typeof
i!=="number")if(a9===i[1]){var
n=k[2];if(G===n[1]){var
o=i[2],s=n[2],u=a3(o,bsl)?bsm:o;return[0,[0,K,[0,[0,a9,t(u,t(bsn,a(q+s)))],0]],e,d,b]}}var
m=k[2];if(G===m[1])throw[0,r,bsk];return[0,[0,K,[0,i,[0,m]]],e,d,b]}var
l=f[2],v=l[2],w=l[1],x=g(l[3]);return[0,[0,bq,[0,w,c(v),x]],e,d,b]}if(by<=j){var
p=f[2],y=p[1],z=g(p[2]);return[0,[0,by,[0,g(y),z]],e,d,b]}return[0,[0,bV,f[2]],e,d,b]}function
c(b){var
d=b[1];if(typeof
d==="number")return b;var
h=d[1];if(ax===h){var
e=d[2],f=e[2],g=e[1];if(f){var
i=f[1];if(G===i[1]){var
k=e[3],l=i[2],m=a3(g,bso)?bsp:g,n=b[4],o=b[3],p=b[2];return[0,[0,ax,[0,t(m,t(bsq,a(q+l))),0,k]],p,o,n]}}var
s=b[4],u=b[3],v=b[2];return[0,[0,ax,[0,g,f,L(c,e[3])]],v,u,s]}if(bN<=h){var
j=d[2],w=j[1],x=b[4],y=b[3],z=b[2],A=c(j[2]);return[0,[0,bN,[0,c(w),A]],z,y,x]}throw[0,r,bsr]}return g(b)},JR=function(b,a){function
d(a){function
b(a){function
c(a){return o(cP,function(b){function
c(b){return a?T(a[1]):aG}return o(c7(uW(b)),c)})}if(a)var
d=a[1],b=cp(function(e){var
a=rN(bss,d);try{var
b=uF(bsv,bsu,u4(-1,a)),c=bsj(function(a){return I5(0,a)}(b))}catch(a){a=s(a);if(a===I_)throw[0,r,bst];throw a}return[0,c]});else
var
b=T(0);return o(b,c)}var
d=[J,function(d){var
b=cv(a[3]);c(ah(bsw),b);return T(0)}];function
e(a){return T([0,a])}return o(f5(vd(bsx,a),e,d),b)}var
e=D(0,b,X);function
f(b){return a}var
g=[0,a[3]];function
h(a){return Ix(g,f,e,a)}var
i=0;function
j(a){return ff(i,bsy,a)}var
k=[0,a[3]];return o(cp(function(a){return ox(k,h,j,a)}),d)},vl=[0,0],vm=function(Q){var
C=H7(0,Q),i=C[2],n=C[1][1];if(typeof
n==="number")var
c=0;else
if(K===n[1]){var
E=n[2][2];if(E){var
F=E[1];if(ad===F[1]){var
f=F[2];if(i){var
g=i[1],p=g[1];if(i[2])if(typeof
p==="number")var
c=0,d=0,e=0;else
if(bV===p[1]){var
G=i[2];if(G[2])var
c=0,d=0,e=0;else{var
H=G[1],I=p[2];if(f===bsa){if(vl[1]){var
R=H[2];m(ah(bsA),I,b_,R)}var
q=cp(function(a){hU(I,H[2],0);return 0}),e=1}else
var
c=0,d=0,e=0}}else
var
c=0,d=0,e=0;else
if(f===br9){if(vl[1]){var
S=function(a,b){return hR(bsB,a,b)};b(ah(bsC),S,g)}var
q=JJ(g),e=1}else{if(f===bsc){var
u=g,j=0,U=function(a){return T(0)};for(;;){var
h=u[1];if(typeof
h==="number")var
a=1;else{var
v=h[1];if(by===v){var
w=h[2],k=w[1][1];if(typeof
k==="number")var
a=1;else
if(by===k[1]){var
x=k[2],l=x[1][1];if(typeof
l==="number")var
a=1;else
if(K===l[1]){var
y=l[2][2];if(y){var
z=y[1];if(ad===z[1]){var
O=w[2],P=x[2];if(z[2]===uT){var
u=O,j=[0,P,j];continue}var
a=1}else
var
a=1}else
var
a=1}else
var
a=1}else
var
a=1}else
if(K===v){var
A=h[2][2];if(A){var
B=A[1];if(ad===B[1])if(B[2]===uR)var
M=o(cO(vm,aj(j)),U),s=1,a=0;else
var
a=1;else
var
a=1}else
var
a=1}else
var
a=1}if(a)throw[0,r,bsz];break}}else{if(f===bse)var
V=function(a){return vm(a)},N=o(JR(fk,g),V),t=1;else
if(f===bsi)var
W=[J,function(a){return T(0)}],X=function(a){return T(0)},N=jg(o(vd(bsD,g),X),W),t=1;else
var
c=0,d=0,e=0,s=0,t=0;if(t)var
M=N,s=1}if(s)var
q=M,e=1}if(e)var
L=q,d=1}else
if(f===bsg)var
L=T(0),d=1;else
var
c=0,d=0;if(d)var
D=L,c=1}else
var
c=0}else
var
c=0}else
var
c=0;if(!c)var
D=aG;return o(D,function(a){return o(cP,function(a){return c7(uW(a))})})},JS=nW([0,hh]),gT=function(b,a){return GR(b[2],a[2])},dR=function(d,b,a){var
c=gT(b,a);return[0,m(d,[0,c],b[1],a[1]),c]},cq=function(c,a){var
d=a[2];return[0,b(c,[0,a[2]],a[1]),d]},aS=function(b,a){var
c=a?a[1][2]:0,d=cq(ff,[0,b,c]);return aZ(function(b,a){return dR(ox,b,a)},d,a)},oT=function(d,a){var
f=a[2],b=a[1],g=d?d[1]:0,j=[0,g];return function(h){var
a=j?g:0;if(f){var
e=f[1],i=[0,a];return function(j){var
d=i?a:0,f=d$(0,0,d),g=f3(uB(b,e),h);return[0,[0,bq,[0,[0,a9,b],e,g]],f,d,c(cx,0)]}}var
d=[0,a];return function(a){return Iu(d,b,h,a)}}},gU=[0,function(d,c,b,a){return 0}],JT=[0,0],bsG=c(JS[45],bsF),bsI=[N,bsH,H(0)],M=[0,av(0)],ar=bfg(0),ed=function(g,h,f,e){if(f){M[1]=av(0);c(ap[4],ar)}var
a=e;for(;;){var
d=b(g,0,a);if(d){var
a=d[1][2];continue}return[0,[0,0,a]]}},JU=function(p,j,i){if(j){M[1]=av(0);c(ap[4],ar)}var
m=0,n=0,d=ed(function(j,b){var
c=k(b);if(c){var
d=c[1],e=d[1],i=d[2];if(l(bsJ,e))var
f=[0,[0,e,i]],a=1;else
var
a=0}else
var
a=0;if(!a)var
f=0;var
g=f?0:[0,[0,0,b]];if(g){var
h=k(g[1][2]);return h?[0,[0,0,h[1][2]]]:0}return 0},n,m,i);if(d){var
e=k(d[1][2]);if(e){var
f=e[1],g=f[1],o=f[2];if(l(bsK,g))var
a=[0,[0,g,o]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;var
h=a?[0,[0,bsL,a[1][2]]]:0;return h?[0,[0,0,h[1][2]]]:0}return 0},vn=function(a,k,g,f){if(g){M[1]=av(0);c(ap[4],ar)}var
d=b(a,0,f);if(d){var
h=d[1][2],i=0,j=0,e=ed(function(d,c){return b(a,0,c)},j,i,h);return e?[0,[0,0,e[1][2]]]:0}return 0},dS=function(j,k,i,h){if(i){M[1]=av(0);c(ap[4],ar)}var
d=0,a=h;for(;;){var
g=b(j,0,a);if(g){var
e=g[1],d=[0,e[1],d],a=e[2];continue}var
f=aj(d);return[0,[0,f,a]]?[0,[0,f,a]]:0}},fl=function(a,n,i,h){if(i){M[1]=av(0);c(ap[4],ar)}var
d=b(a,0,h);if(d){var
e=d[1],j=e[2],k=e[1],l=0,m=0,f=dS(function(d,c){return b(a,0,c)},m,l,j);if(f){var
g=f[1];return[0,[0,[0,k,g[1]],g[2]]]}return 0}return 0},JV=function(z,u,i){if(u){M[1]=av(0);c(ap[4],ar)}var
j=k(i);if(j){var
m=j[1],n=m[1],v=m[2];if(l(bsP,n))var
a=[0,[0,n,v]],f=1;else
var
f=0}else
var
f=0;if(!f)var
a=0;if(a){var
o=k(a[1][2]);if(o){var
p=o[1],q=p[1],w=p[2];if(l(bsQ,q))var
b=[0,[0,q,w]],g=1;else
var
g=0}else
var
g=0;if(!g)var
b=0;var
x=b?[0,[0,bsR,b[1][2]]]:0,d=x}else
var
d=0;if(d)return[0,d[1]];var
r=k(i);if(r){var
s=r[1],t=s[1],y=s[2];if(l(bsS,t))var
e=[0,[0,t,y]],h=1;else
var
h=0}else
var
h=0;if(!h)var
e=0;return e?[0,[0,bsT,e[1][2]]]:0},oU=function(o,l,f){if(l){M[1]=av(0);c(ap[4],ar)}var
g=k(f);if(g){var
a=GL(g[1][1]),n=RF<=a?ej<=a?R8<=a?0:1:h===a?1:0:d<=a?1:0,m=n?1:0;if(m)var
b=[0,[0,0,f]],e=1;else
var
e=0}else
var
e=0;if(!e)var
b=0;if(b){var
i=k(b[1][2]);if(i){var
j=i[1];return[0,[0,j[1],j[2]]]}return 0}return 0},JW=function(j,h,d){if(h){M[1]=av(0);c(ap[4],ar)}var
e=k(d);if(e){var
i=e[1][1];if(function(a){try{kQ(a);var
b=1;return b}catch(a){return 0}}(i))var
a=[0,[0,0,d]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;if(a){var
f=k(a[1][2]);if(f){var
g=f[1];return[0,[0,g[1],g[2]]]}return 0}return 0},vo=function(m,i,h){if(i){M[1]=av(0);c(ap[4],ar)}var
d=k(h);if(d){var
e=d[1],f=e[1],j=e[2];if(l(bsU,f))var
a=[0,[0,f,j]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;if(a){var
g=a[1];return[0,[0,g[1],g[2]]]}return 0},gV=function(d,b,a){if(b){M[1]=av(0);c(ap[4],ar)}return[0,[0,0,a]]},eI=function(o,s,n,m){if(n){M[1]=av(0);c(ap[4],ar)}var
e=gV(0,0,m);if(e)var
f=e[1][2],a=[0,[0,f[2],f]];else
var
a=0;if(a){var
g=a[1],p=g[1],h=b(o,0,g[2]);if(h){var
i=h[1],q=i[1],j=gV(0,0,i[2]);if(j)var
k=j[1][2],d=[0,[0,k[2],k]];else
var
d=0;if(d){var
l=d[1],r=l[2];return[0,[0,[0,q,od(p,l[1])],r]]}return 0}return 0}return 0},jn=function(m,i,h){if(i){M[1]=av(0);c(ap[4],ar)}var
d=k(h);if(d){var
e=d[1],f=e[1],j=e[2];if(l(bsV,f))var
a=[0,[0,f,j]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;if(a){var
g=a[1];return[0,[0,g[1],g[2]]]}return 0},JX=function(i,e,d){if(e){M[1]=av(0);c(ap[4],ar)}var
f=0,g=0,a=fl(function(b,a){return jn(0,0,a)},g,f,d);if(a){var
b=a[1],h=b[2];return[0,[0,dk(d_(f2(b[1]))),h]]}return 0},JY=function(q,i,h){if(i){M[1]=av(0);c(ap[4],ar)}var
b=oU(0,0,h);if(b)var
d=b[1],a=[0,[0,d[1],d[2]]];else
var
a=0;if(a){var
e=a[1],j=e[2],m=e[1],n=0,o=0,f=dS(function(n,b){var
d=oU(0,0,b),e=d?[0,d[1]]:jn(0,0,b);if(e)var
a=[0,e[1]];else{var
g=k(b);if(g){var
h=g[1],i=h[1],m=h[2];if(l(bsW,i))var
j=[0,[0,i,m]],c=1;else
var
c=0}else
var
c=0;if(!c)var
j=0;var
a=j}if(a){var
f=a[1];return[0,[0,f[1],f[2]]]}return 0},o,n,j);if(f){var
g=f[1],p=g[2];return[0,[0,d_(f2([0,m,g[1]])),p]]}return 0}return 0},bo=function(A,z,a){if(z){M[1]=av(0);c(ap[4],ar)}var
k=aH(M[1],13),l=aI(k,R(a));if(l){var
m=l[1];if(m)var
n=m[1],o=[0,[0,n[1],n[2]]];else
var
o=0;var
d=o}else{var
i=JY(0,0,a);if(i)var
x=i[1],y=[0,[0,x[1],x[2]]];else
var
y=0;aJ(k,R(a),y);var
d=i}if(d)if(1-b(JS[4],d[1][1],bsG))var
e=[0,[0,0,a]],j=1;else
var
j=0;else
var
j=0;if(!j)var
e=0;if(e){var
f=e[1][2],p=aH(M[1],13),q=aI(p,R(f));if(q){var
r=q[1];if(r)var
s=r[1],t=[0,[0,s[1],s[2]]];else
var
t=0;var
g=t}else{var
h=JY(0,0,f);if(h)var
v=h[1],w=[0,[0,v[1],v[2]]];else
var
w=0;aJ(p,R(f),w);var
g=h}if(g){var
u=g[1];return[0,[0,u[1],u[2]]]}return 0}return 0},vp=function(ay,aq,a){if(aq){M[1]=av(0);c(ap[4],ar)}var
v=aH(M[1],5),w=aI(v,R(a));if(w){var
x=w[1];if(x)var
y=x[1],z=[0,[0,y[1],y[2]]];else
var
z=0;var
d=z}else{var
r=bo(0,0,a);if(r)var
an=r[1],ao=[0,[0,an[1],an[2]]];else
var
ao=0;aJ(v,R(a),ao);var
d=r}if(d){var
A=d[1],as=A[1],B=k(A[2]);if(B){var
C=B[1],D=C[1],at=C[2];if(l(bsX,D))var
e=[0,[0,D,at]],s=1;else
var
s=0}else
var
s=0;if(!s)var
e=0;var
E=e?[0,[0,bsY,e[1][2]]]:0;if(E){var
b=E[1][2],F=aH(M[1],5),G=aI(F,R(b));if(G){var
H=G[1];if(H)var
I=H[1],J=[0,[0,I[1],I[2]]];else
var
J=0;var
f=J}else{var
q=bo(0,0,b);if(q)var
al=q[1],am=[0,[0,al[1],al[2]]];else
var
am=0;aJ(F,R(b),am);var
f=q}var
K=f?[0,[0,f[1][1],b]]:0;if(K){var
L=vp(0,0,K[1][2]);if(L)var
N=L[1],au=N[2],O=[0,[0,t(as,t(bsZ,N[1])),au]];else
var
O=0;var
P=O}else
var
P=0;var
Q=P}else
var
Q=0;var
g=Q}else
var
g=0;if(g)var
h=[0,g[1]];else{var
ac=aH(M[1],5),ad=aI(ac,R(a));if(ad){var
ae=ad[1];if(ae)var
af=ae[1],ag=[0,[0,af[1],af[2]]];else
var
ag=0;var
o=ag}else{var
p=bo(0,0,a);if(p)var
aj=p[1],ak=[0,[0,aj[1],aj[2]]];else
var
ak=0;aJ(ac,R(a),ak);var
o=p}if(o)var
ah=o[1],ai=[0,[0,ah[1],ah[2]]];else
var
ai=0;var
h=ai}if(h)return[0,h[1]];var
S=k(a);if(S){var
T=S[1],U=T[1],aw=T[2];if(l(bs0,U))var
i=[0,[0,U,aw]],u=1;else
var
u=0}else
var
u=0;if(!u)var
i=0;var
V=i?[0,[0,bs1,i[1][2]]]:0;if(V){var
j=V[1][2],W=aH(M[1],5),X=aI(W,R(j));if(X){var
Y=X[1];if(Y)var
Z=Y[1],_=[0,[0,Z[1],Z[2]]];else
var
_=0;var
m=_}else{var
n=bo(0,0,j);if(n)var
aa=n[1],ab=[0,[0,aa[1],aa[2]]];else
var
ab=0;aJ(W,R(j),ab);var
m=n}if(m){var
$=m[1],ax=$[2];return[0,[0,t(bs2,$[1]),ax]]}return 0}return 0},vq=function(L,H,a){if(H){M[1]=av(0);c(ap[4],ar)}var
m=aH(M[1],5),n=aI(m,R(a));if(n){var
o=n[1];if(o)var
p=o[1],q=[0,[0,p[1],p[2]]];else
var
q=0;var
b=q}else{var
h=bo(0,0,a);if(h)var
F=h[1],G=[0,[0,F[1],F[2]]];else
var
G=0;aJ(m,R(a),G);var
b=h}if(b)var
r=b[1],d=[0,[0,r[1],r[2]]];else
var
d=0;if(d)var
e=[0,d[1]];else{var
x=k(a);if(x){var
y=x[1],z=y[1],J=y[2];if(l(btb,z))var
g=[0,[0,z,J]],i=1;else
var
i=0}else
var
i=0;if(!i)var
g=0;var
A=g?[0,[0,btc,g[1][2]]]:0;if(A){var
B=bo(0,0,A[1][2]);if(B)var
C=B[1],K=C[2],D=[0,[0,t(btd,C[1]),K]];else
var
D=0;var
E=D}else
var
E=0;var
e=E}if(e)return[0,e[1]];var
s=k(a);if(s){var
u=s[1],v=u[1],I=u[2];if(l(bs_,v))var
f=[0,[0,v,I]],j=1;else
var
j=0}else
var
j=0;if(!j)var
f=0;var
w=f?[0,[0,bs$,f[1][2]]]:0;return w?[0,[0,bta,w[1][2]]]:0},vr=function(y,v,a){if(v){M[1]=av(0);c(ap[4],ar)}var
f=aH(M[1],5),g=aI(f,R(a));if(g){var
h=g[1];if(h)var
i=h[1],j=[0,[0,i[1],i[2]]];else
var
j=0;var
b=j}else{var
e=bo(0,0,a);if(e)var
s=e[1],u=[0,[0,s[1],s[2]]];else
var
u=0;aJ(f,R(a),u);var
b=e}if(b){var
k=b[1],w=k[1],l=JV(0,0,k[2]);if(l){var
m=vq(0,0,l[1][2]);if(m)var
n=m[1],x=n[2],o=[0,[0,t(w,t(op,n[1])),x]];else
var
o=0;var
p=o}else
var
p=0;var
d=p}else
var
d=0;if(d)return[0,d[1]];var
q=vq(0,0,a);if(q){var
r=q[1];return[0,[0,r[1],r[2]]]}return 0},vs=function(aX,aR,b){if(aR){M[1]=av(0);c(ap[4],ar)}var
A=k(b);if(A){var
B=A[1],D=B[1],aB=B[2];if(l(bte,D))var
f=[0,[0,D,aB]],q=1;else
var
q=0}else
var
q=0;if(!q)var
f=0;if(f){var
E=f[1],aC=E[1],F=k(E[2]);if(F){var
G=F[1],H=G[1],aD=G[2];if(l(btf,H))var
g=[0,[0,H,aD]],r=1;else
var
r=0}else
var
r=0;if(!r)var
g=0;if(g)var
J=g[1],aE=J[2],K=[0,[0,d_(f2([0,aC,[0,J[1],0]])),aE]];else
var
K=0;var
h=K}else
var
h=0;if(h)var
i=[0,h[1]];else{var
$=k(b);if($){var
aa=$[1],ab=aa[1],aM=aa[2];if(l(bti,ab))var
n=[0,[0,ab,aM]],u=1;else
var
u=0}else
var
u=0;if(!u)var
n=0;if(n){var
ac=n[1],aN=ac[1],ad=jn(0,0,ac[2]);if(ad){var
ae=ad[1],aO=ae[1],af=jn(0,0,ae[2]);if(af){var
ag=af[1],aP=ag[1],ah=jn(0,0,ag[2]);if(ah)var
ai=ah[1],aQ=ai[2],aj=[0,[0,d_(f2([0,aN,[0,aO,[0,aP,[0,ai[1],0]]]])),aQ]];else
var
aj=0;var
ak=aj}else
var
ak=0;var
al=ak}else
var
al=0;var
am=al}else
var
am=0;var
i=am}if(i)var
a=[0,i[1]];else{var
L=k(b);if(L){var
N=L[1],O=N[1],aF=N[2];if(l(btg,O))var
j=[0,[0,O,aF]],v=1;else
var
v=0}else
var
v=0;if(!v)var
j=0;if(j){var
P=j[1],aG=P[1],Q=k(P[2]);if(Q){var
R=Q[1],S=R[1],aH=R[2];if(l(bth,S))var
m=[0,[0,S,aH]],w=1;else
var
w=0}else
var
w=0;if(!w)var
m=0;if(m){var
T=m[1],aI=T[1],U=vo(0,0,T[2]);if(U){var
V=U[1],aJ=V[1],W=vo(0,0,V[2]);if(W){var
X=W[1],aK=X[1],Z=vo(0,0,X[2]);if(Z)var
_=Z[1],aL=_[2],a=[0,[0,d_(f2([0,aG,[0,aI,[0,aJ,[0,aK,[0,_[1],0]]]]])),aL]];else
var
a=0}else
var
a=0}else
var
a=0}else
var
a=0}else
var
a=0}if(a)var
an=a[1],aS=an[2],aT=an[1],aA=function(a){return a},z=t(be1,t(aT,be0)),d=[0,0],ax=C(z),e=sq(1,function(b){if(ax<=d[1])throw d3;var
a=I(z,d[1]);d[1]++;return a}),y=GM[1],ay=GM[2],az=function(e,d){var
b=e,a=d;for(;;){if(a){var
f=a[2],b=c(b,a[1]),a=f;continue}return b}},o=[0,[0,c(sA(function(f,a){auW(e);try{var
h=[0,c1(e,y,f)],b=h}catch(a){a=s(a);if(a[1]===sr)var
c=0;else
if(a[1]===bz)var
c=0;else
if(a===d3)var
c=0;else{if(a[1]!==ct)throw a;var
g=a[2],d=Y(t(g,t(avV,t(gr(ay),avU)))),c=1}if(!c)var
d=[1,a];var
b=d}return 0===b[0]?az(a,b[1]):avE(e,b[1])},y),aA),aS]];else
var
o=0;if(o)return[0,o[1]];var
ao=k(b);if(ao){var
aq=ao[1],as=aq[1],aU=aq[2];if(l(btj,as))var
p=[0,[0,as,aU]],x=1;else
var
x=0}else
var
x=0;if(!x)var
p=0;var
aV=p?[0,[0,btk,p[1][2]]]:0,at=aV?0:[0,[0,0,b]];if(at){var
au=k(at[1][2]);if(au){var
aw=au[1],aW=aw[2];return[0,[0,d_(f2([0,aw[1],0])),aW]]}return 0}return 0},cz=function(S,Q,h){if(Q){M[1]=av(0);c(ap[4],ar)}var
E=k(h);if(E)if(beY(E[1][1]))var
i=[0,[0,0,h]],m=1;else
var
m=0;else
var
m=0;if(!m)var
i=0;if(i)var
F=k(i[1][2]),R=F?[0,[0,0,F[1][2]]]:0,j=R;else
var
j=0;if(j)return[0,j[1]];var
r=k(h);if(r){var
s=r[1],t=s[1],G=s[2];if(l(bto,t))var
a=[0,[0,t,G]],n=1;else
var
n=0}else
var
n=0;if(!n)var
a=0;if(a){var
u=k(a[1][2]);if(u){var
v=u[1],w=v[1],H=v[2];if(l(btp,w))var
b=[0,[0,w,H]],o=1;else
var
o=0}else
var
o=0;if(!o)var
b=0;var
I=b?[0,[0,btq,b[1][2]]]:0,d=I}else
var
d=0;if(d){var
J=d[1][2],K=0,L=0,x=ed(function(t,p){var
e=k(p);if(e){var
f=e[1],g=f[1],q=f[2];if(l(btl,g))var
a=[0,[0,g,q]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],r=i[2];if(l(btm,j))var
b=[0,[0,j,r]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;var
s=b?[0,[0,btn,b[1][2]]]:0,m=s}else
var
m=0;var
n=m?0:[0,[0,0,p]];if(n){var
o=k(n[1][2]);return o?[0,[0,0,o[1][2]]]:0}return 0},L,K,J);if(x){var
y=k(x[1][2]);if(y){var
z=y[1],A=z[1],N=z[2];if(l(btr,A))var
e=[0,[0,A,N]],p=1;else
var
p=0}else
var
p=0;if(!p)var
e=0;if(e){var
B=k(e[1][2]);if(B){var
C=B[1],D=C[1],O=C[2];if(l(bts,D))var
f=[0,[0,D,O]],q=1;else
var
q=0}else
var
q=0;if(!q)var
f=0;var
P=f?[0,[0,btt,f[1][2]]]:0,g=P}else
var
g=0;return g?[0,[0,0,g[1][2]]]:0}return 0}return 0},Q=function(p,s,o,a){if(o){M[1]=av(0);c(ap[4],ar)}var
f=aH(M[1],12),g=aI(f,R(a));if(g){var
h=g[1];if(h)var
i=h[1],j=[0,[0,i[1],i[2]]];else
var
j=0;var
d=j}else{var
q=0,r=0,e=ed(function(b,a){return cz(0,0,a)},r,q,a);if(e)var
m=e[1],n=[0,[0,m[1],m[2]]];else
var
n=0;aJ(f,R(a),n);var
d=e}if(d){var
k=b(p,0,d[1][2]);if(k){var
l=k[1];return[0,[0,l[1],l[2]]]}return 0}return 0},JZ=function(v,m,j){if(m){M[1]=av(0);c(ap[4],ar)}var
n=0,o=0,d=Q(function(f,d){var
a=k(d);if(a){var
b=a[1],c=b[1],e=b[2];if(l(btu,c))return[0,[0,c,e]]}return 0},o,n,j);if(d){var
p=d[1][2],q=0,r=0,e=dS(function(b,a){return vs(0,0,a)},r,q,p);if(e){var
f=e[1],s=f[1],g=k(f[2]);if(g){var
h=g[1],i=h[1],t=h[2];if(l(btv,i))var
a=[0,[0,i,t]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;if(a){var
u=a[1][2];return[0,[0,er(btw,s),u]]}return 0}return 0}return 0},vt=function(i,h,b){if(h){M[1]=av(0);c(ap[4],ar)}var
d=bo(0,0,b);if(d)var
e=d[1],a=[0,[0,e[1],e[2]]];else
var
a=0;if(a)return[0,a[1]];var
f=JZ(0,0,b);if(f){var
g=f[1];return[0,[0,g[1],g[2]]]}return 0},bJ=function(g,j,f,e){if(f){M[1]=av(0);c(ap[4],ar)}var
h=0,i=0,a=Q(function(e,a){var
c=0,d=0;return eI(function(c,a){return b(g,0,a)},d,c,a)},i,h,e);if(a){var
d=a[1];return[0,[0,d[1],d[2]]]}return 0},oV=function(u,E,t,a){if(t){M[1]=av(0);c(ap[4],ar)}var
f=aH(M[1],11),g=aI(f,R(a));if(g){var
h=g[1];if(h)var
i=h[1],j=[0,[0,i[1],i[2]]];else
var
j=0;var
d=j}else{var
C=0,D=0,e=bJ(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(btF,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,btG,a[1][2]]]:0},D,C,a);if(e)var
r=e[1],s=[0,[0,r[1],r[2]]];else
var
s=0;aJ(f,R(a),s);var
d=e}if(d){var
m=d[1],v=m[1],n=b(u,0,m[2]);if(n){var
o=n[1],w=o[2],x=o[1],y=0,z=0,p=bJ(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(btD,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,btE,a[1][2]]]:0},z,y,w);if(p){var
q=p[1],A=q[2],B=gT(v,q[1]);return[0,[0,[0,x[1],B],A]]}return 0}return 0}return 0},fm=function(e,t,j,d){if(j){M[1]=av(0);c(ap[4],ar)}var
f=b(e,0,d);if(f)var
m=f[1][2],n=0,o=0,g=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(btH,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,btI,a[1][2]]]:0},o,n,m),p=g?[0,[0,1,g[1][2]]]:0,a=p;else
var
a=0;if(a)return[0,a[1]];var
h=b(e,0,d);if(h){var
q=h[1][2],r=0,s=0,i=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(btJ,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,btK,a[1][2]]]:0},s,r,q);return i?[0,[0,0,i[1][2]]]:0}return 0},J0=function(aL,T,a){if(T){M[1]=av(0);c(ap[4],ar)}var
j=aH(M[1],10),m=aI(j,R(a));if(m){var
n=m[1];if(n)var
o=n[1],p=[0,[0,o[1],o[2]]];else
var
p=0;var
b=p}else{var
aG=0,aK=0,i=bJ(function(b,a){return bo(0,0,a)},aK,aG,a);if(i)var
P=i[1],S=[0,[0,P[1],P[2]]];else
var
S=0;aJ(j,R(a),S);var
b=i}if(b)var
q=b[1],U=q[2],V=q[1],d=[0,[0,function(a){return aS(btL,[0,cq(ff,V),[0,a,0]])},U]];else
var
d=0;if(d)var
e=[0,d[1]];else{var
az=0,aA=0,J=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(btY,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,btZ,a[1][2]]]:0},aA,az,a);if(J){var
aB=J[1][2],aC=0,aD=0,K=eI(function(b,a){return bo(0,0,a)},aD,aC,aB);if(K)var
L=K[1],aE=L[2],aF=L[1],N=[0,[0,function(a){return aS(bt0,[0,cq(k7,aF),[0,a,0]])},aE]];else
var
N=0;var
O=N}else
var
O=0;var
e=O}if(e)var
f=[0,e[1]];else{var
aq=0,as=0,E=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(btV,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,btW,a[1][2]]]:0},as,aq,a);if(E){var
at=E[1][2],au=0,aw=0,F=eI(function(b,a){return bo(0,0,a)},aw,au,at);if(F)var
G=F[1],ax=G[2],ay=G[1],H=[0,[0,function(a){return aS(btX,[0,cq(ff,ay),[0,a,0]])},ax]];else
var
H=0;var
I=H}else
var
I=0;var
f=I}if(f)var
g=[0,f[1]];else{var
ai=0,aj=0,z=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(btS,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,btT,a[1][2]]]:0},aj,ai,a);if(z){var
ak=z[1][2],al=0,am=0,A=eI(function(b,a){return bo(0,0,a)},am,al,ak);if(A)var
B=A[1],an=B[2],ao=B[1],C=[0,[0,function(a){return aS(btU,[0,cq(ff,ao),[0,a,0]])},an]];else
var
C=0;var
D=C}else
var
D=0;var
g=D}if(g)var
h=[0,g[1]];else{var
ab=0,ac=0,u=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(btP,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,btQ,a[1][2]]]:0},ac,ab,a);if(u){var
ad=u[1][2],ae=0,af=0,v=eI(function(b,a){return bo(0,0,a)},af,ae,ad);if(v)var
w=v[1],ag=w[2],ah=w[1],x=[0,[0,function(a){return aS(btR,[0,cq(ff,ah),[0,a,0]])},ag]];else
var
x=0;var
y=x}else
var
y=0;var
h=y}if(h)return[0,h[1]];var
W=0,X=0,r=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(btM,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,btN,a[1][2]]]:0},X,W,a);if(r){var
Y=r[1][2],Z=0,_=0,s=eI(function(b,a){return bo(0,0,a)},_,Z,Y);if(s){var
t=s[1],$=t[2],aa=t[1];return[0,[0,function(a){return aS(btO,[0,cq(ff,aa),[0,a,0]])},$]]}return 0}return 0},vu=function(a,s,j,i){if(j){M[1]=av(0);c(ap[4],ar)}var
d=b(a,0,i);if(d){var
e=d[1],k=e[2],l=e[1],m=0,n=0,f=dS(function(i,f){var
g=0,h=0,c=vn(function(b,a){return cz(0,0,a)},h,g,f);if(c){var
d=b(a,0,c[1][2]);if(d){var
e=d[1];return[0,[0,e[1],e[2]]]}return 0}return 0},n,m,k);if(f){var
g=f[1],o=g[2],p=g[1],q=0,r=0,h=ed(function(b,a){return cz(0,0,a)},r,q,o);return h?[0,[0,[0,l,p],h[1][2]]]:0}return 0}return 0},jo=function(a,j,o,i,h){if(i){M[1]=av(0);c(ap[4],ar)}var
d=b(a,0,h);if(d){var
e=d[1],k=e[2],l=e[1],m=0,n=0,f=dS(function(n,g){var
h=0,i=0,c=Q(function(c,a){return b(j,0,a)},i,h,g);if(c){var
k=c[1][2],l=0,m=0,d=ed(function(b,a){return cz(0,0,a)},m,l,k);if(d){var
e=b(a,0,d[1][2]);if(e){var
f=e[1];return[0,[0,f[1],f[2]]]}return 0}return 0}return 0},n,m,k);if(f){var
g=f[1];return[0,[0,[0,l,g[1]],g[2]]]}return 0}return 0},jp=function(e,y,m,d){if(m){M[1]=av(0);c(ap[4],ar)}var
f=b(e,0,d);if(f){var
g=f[1],n=g[2],o=g[1],p=0,q=0,h=dS(function(i,f){var
g=0,h=0,a=vn(function(b,a){return cz(0,0,a)},h,g,f);if(a){var
c=b(e,0,a[1][2]);if(c){var
d=c[1];return[0,[0,d[1],d[2]]]}return 0}return 0},q,p,n);if(h)var
i=h[1],r=i[2],s=i[1],t=0,u=0,j=ed(function(b,a){return cz(0,0,a)},u,t,r),v=j?[0,[0,[0,o,s],j[1][2]]]:0,k=v;else
var
k=0;var
a=k}else
var
a=0;if(a)return[0,a[1]];var
w=0,x=0,l=ed(function(b,a){return cz(0,0,a)},x,w,d);return l?[0,[0,0,l[1][2]]]:0},J1=function(aw,ao,a){if(ao){M[1]=av(0);c(ap[4],ar)}var
B=aH(M[1],8),C=aI(B,R(a));if(C){var
D=C[1];if(D)var
E=D[1],F=[0,[0,E[1],E[2]]];else
var
F=0;var
g=F}else{var
m=J0(0,0,a);if(m)var
V=m[1],W=[0,[0,V[1],V[2]]];else
var
W=0;aJ(B,R(a),W);var
g=m}if(g)var
G=g[1],aq=G[2],as=G[1],h=[0,[0,c(as,aS(buc,0)),aq]];else
var
h=0;if(h)var
i=[0,h[1]];else{var
J=aH(M[1],9),K=aI(J,R(a));if(K){var
L=K[1];if(L)var
N=L[1],O=[0,[0,N[1],N[2]]];else
var
O=0;var
j=O}else{var
X=0,Y=0,n=bJ(function(b,a){return JX(0,0,a)},Y,X,a);if(n)var
o=n[1],Z=o[2],d=[0,[0,aS(bt1,[0,cq(IK,o[1]),0]),Z]];else
var
d=0;if(d)var
e=[0,d[1]];else{var
al=0,am=0,y=eI(function(t,i){var
j=0,m=0,c=Q(function(f,d){var
a=k(d);if(a){var
b=a[1],c=b[1],e=b[2];if(l(bt_,c))return[0,[0,c,e]]}return 0},m,j,i);if(c){var
n=c[1][2],o=0,p=0,d=dS(function(b,a){return vs(0,0,a)},p,o,n);if(d){var
e=d[1],q=e[1],f=k(e[2]);if(f){var
g=f[1],h=g[1],r=g[2];if(l(bt$,h))var
a=[0,[0,h,r]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;if(a){var
s=a[1][2];return[0,[0,er(bua,q),s]]}return 0}return 0}return 0},am,al,a);if(y)var
z=y[1],an=z[2],A=[0,[0,aS(bub,[0,cq(k7,z[1]),0]),an]];else
var
A=0;var
e=A}if(e)var
f=[0,e[1]];else{var
af=0,ag=0,t=bJ(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bt7,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bt8,a[1][2]]]:0},ag,af,a);if(t){var
ah=t[1][2],ai=0,aj=0,u=eI(function(b,a){return bo(0,0,a)},aj,ai,ah);if(u)var
v=u[1],ak=v[2],w=[0,[0,aS(bt9,[0,cq(k7,v[1]),0]),ak]];else
var
w=0;var
x=w}else
var
x=0;var
f=x}if(f)var
b=[0,f[1]];else{var
_=0,$=0,p=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bt2,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bt3,a[1][2]]]:0},$,_,a);if(p){var
q=J2(0,0,p[1][2]);if(q){var
r=q[1],aa=r[2],ab=r[1],ac=0,ad=0,s=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bt4,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bt5,a[1][2]]]:0},ad,ac,aa);if(s)var
ae=s[1][2],b=[0,[0,aS(bt6,[0,ab,0]),ae]];else
var
b=0}else
var
b=0}else
var
b=0}if(b)var
T=b[1],U=[0,[0,T[1],T[2]]];else
var
U=0;aJ(J,R(a),U);var
j=b}if(j)var
P=j[1],S=[0,[0,P[1],P[2]]];else
var
S=0;var
i=S}if(i)return[0,i[1]];var
at=0,au=0,H=oV(function(b,a){return lf(0,0,a)},au,at,a);if(H){var
I=H[1];return[0,[0,I[1],I[2]]]}return 0},J2=function(k,e,d){if(e){M[1]=av(0);c(ap[4],ar)}var
f=0,g=0,a=jp(function(b,a){return J1(0,0,a)},g,f,d);if(a){var
b=a[1],h=b[2],i=aj(b[1]),j=aS(bud,0);return[0,[0,aZ(function(b,a){return aS(bue,[0,a,[0,b,0]])},j,i),h]]}return 0},lf=function(aV,am,a){if(am){M[1]=av(0);c(ap[4],ar)}var
o=aH(M[1],10),p=aI(o,R(a));if(p){var
q=p[1];if(q)var
r=q[1],s=[0,[0,r[1],r[2]]];else
var
s=0;var
b=s}else{var
aT=0,aU=0,m=bJ(function(b,a){return bo(0,0,a)},aU,aT,a);if(m)var
ak=m[1],al=[0,[0,ak[1],ak[2]]];else
var
al=0;aJ(o,R(a),al);var
b=m}if(b){var
t=b[1],an=t[1],u=k(t[2]);if(u){var
v=u[1],w=v[1],ao=v[2];if(l(buf,w))var
d=[0,[0,w,ao]],n=1;else
var
n=0}else
var
n=0;if(!n)var
d=0;var
x=d?[0,[0,bug,d[1][2]]]:0;if(x){var
y=lf(0,0,x[1][2]);if(y)var
z=y[1],aq=z[2],A=[0,[0,aS(buh,[0,dR(Iu,an,z[1]),0]),aq]];else
var
A=0;var
B=A}else
var
B=0;var
e=B}else
var
e=0;if(e)var
f=[0,e[1]];else{var
aG=0,aK=0,ab=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bun,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,buo,a[1][2]]]:0},aK,aG,a);if(ab){var
aL=ab[1][2],aM=0,aN=0,ac=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bup,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,buq,a[1][2]]]:0},aN,aM,aL);if(ac){var
aO=ac[1][2],aP=0,aQ=0,ad=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bur,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bus,a[1][2]]]:0},aQ,aP,aO);if(ad){var
ae=lf(0,0,ad[1][2]);if(ae)var
af=ae[1],aR=af[2],ag=[0,[0,aS(but,[0,af[1],0]),aR]];else
var
ag=0;var
ah=ag}else
var
ah=0;var
ai=ah}else
var
ai=0;var
aj=ai}else
var
aj=0;var
f=aj}if(f)var
g=[0,f[1]];else{var
au=0,aw=0,T=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bui,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,buj,a[1][2]]]:0},aw,au,a);if(T){var
ax=T[1][2],ay=0,az=0,U=bJ(function(b,a){return bo(0,0,a)},az,ay,ax);if(U){var
V=U[1],aA=V[2],aB=V[1],aC=0,aD=0,W=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(buk,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bul,a[1][2]]]:0},aD,aC,aA);if(W){var
X=lf(0,0,W[1][2]);if(X)var
Y=X[1],aE=Y[2],aF=[0,Y[1],0],Z=[0,[0,aS(bum,[0,cq(k7,aB),aF]),aE]];else
var
Z=0;var
_=Z}else
var
_=0;var
$=_}else
var
$=0;var
aa=$}else
var
aa=0;var
g=aa}if(g)var
h=[0,g[1]];else{var
E=aH(M[1],8),F=aI(E,R(a));if(F){var
G=F[1];if(G)var
H=G[1],I=[0,[0,H[1],H[2]]];else
var
I=0;var
i=I}else{var
j=J0(0,0,a);if(j)var
P=j[1],S=[0,[0,P[1],P[2]]];else
var
S=0;aJ(E,R(a),S);var
i=j}if(i){var
J=i[1],as=J[1],K=J2(0,0,J[2]);if(K)var
L=K[1],at=L[2],N=[0,[0,c(as,L[1]),at]];else
var
N=0;var
O=N}else
var
O=0;var
h=O}if(h)return[0,h[1]];var
C=J1(0,0,a);if(C){var
D=C[1];return[0,[0,D[1],D[2]]]}return 0},J3=function(r,j,d){if(j){M[1]=av(0);c(ap[4],ar)}var
k=0,l=0,e=eI(function(l,e){var
f=0,g=0,a=bJ(function(b,a){return vp(0,0,a)},g,f,e);if(a){var
b=a[1],h=b[2],i=b[1],j=0,k=0,c=jp(function(b,a){return vv(0,0,a)},k,j,h);if(c){var
d=c[1];return[0,[0,[0,i,d[1]],d[2]]]}return 0}return 0},l,k,d);if(e)var
f=e[1],a=f[1],g=a[1],m=f[2],n=g[2],o=g[1],p=L(function(a){return a[1]},n),q=a[2],b=[0,[0,[0,ov([0,a[2]],[0,p],o[1]),q],m]];else
var
b=0;if(b)return[0,b[1]];var
h=vv(0,0,d);if(h){var
i=h[1];return[0,[0,i[1],i[2]]]}return 0},vv=function(E,t,a){if(t){M[1]=av(0);c(ap[4],ar)}var
u=0,v=0,f=bJ(function(b,a){return vp(0,0,a)},v,u,a);if(f)var
g=f[1],w=g[2],x=g[1],b=[0,[0,cq(function(a){return function(b){return ov(a,buv,b)}},x),w]];else
var
b=0;if(b)var
d=[0,b[1]];else{var
C=0,D=0,p=bJ(function(B,w){var
i=k(w);if(i){var
j=i[1],m=j[1],x=j[2];if(l(buB,m))var
a=[0,[0,m,x]],e=1;else
var
e=0}else
var
e=0;if(!e)var
a=0;if(a){var
n=k(a[1][2]);if(n){var
o=n[1],p=o[1],y=o[2];if(l(buC,p))var
b=[0,[0,p,y]],f=1;else
var
f=0}else
var
f=0;if(!f)var
b=0;if(b){var
q=k(b[1][2]);if(q){var
r=q[1],s=r[1],z=r[2];if(l(buD,s))var
c=[0,[0,s,z]],g=1;else
var
g=0}else
var
g=0;if(!g)var
c=0;if(c){var
t=k(c[1][2]);if(t){var
u=t[1],v=u[1],A=u[2];if(l(buE,v))var
d=[0,[0,v,A]],h=1;else
var
h=0}else
var
h=0;if(!h)var
d=0;return d?[0,[0,buF,d[1][2]]]:0}return 0}return 0}return 0},D,C,a);if(p)var
q=p[1],r=q[1],s=[0,[0,[0,[0,dP[1],dP[2],r[2],dP[4]],r[2]],q[2]]];else
var
s=0;var
d=s}if(d)var
e=[0,d[1]];else{var
A=0,B=0,j=bJ(function(B,w){var
i=k(w);if(i){var
j=i[1],m=j[1],x=j[2];if(l(buw,m))var
a=[0,[0,m,x]],e=1;else
var
e=0}else
var
e=0;if(!e)var
a=0;if(a){var
n=k(a[1][2]);if(n){var
o=n[1],p=o[1],y=o[2];if(l(bux,p))var
b=[0,[0,p,y]],f=1;else
var
f=0}else
var
f=0;if(!f)var
b=0;if(b){var
q=k(b[1][2]);if(q){var
r=q[1],s=r[1],z=r[2];if(l(buy,s))var
c=[0,[0,s,z]],g=1;else
var
g=0}else
var
g=0;if(!g)var
c=0;if(c){var
t=k(c[1][2]);if(t){var
u=t[1],v=u[1],A=u[2];if(l(buz,v))var
d=[0,[0,v,A]],h=1;else
var
h=0}else
var
h=0;if(!h)var
d=0;return d?[0,[0,buA,d[1][2]]]:0}return 0}return 0}return 0},B,A,a);if(j)var
m=j[1],n=m[1],o=[0,[0,[0,[0,dP[1],dP[2],n[2],dP[4]],n[2]],m[2]]];else
var
o=0;var
e=o}if(e)return[0,e[1]];var
y=0,z=0,h=oV(function(b,a){return h0(0,0,a)},z,y,a);if(h){var
i=h[1];return[0,[0,i[1],i[2]]]}return 0},h0=function(ax,ag,a){if(ag){M[1]=av(0);c(ap[4],ar)}var
o=aH(M[1],6),p=aI(o,R(a));if(p){var
q=p[1];if(q)var
r=q[1],s=[0,[0,r[1],r[2]]];else
var
s=0;var
b=s}else{var
n=oW(0,0,a);if(n)var
ae=n[1],af=[0,[0,ae[1],ae[2]]];else
var
af=0;aJ(o,R(a),af);var
b=n}if(b){var
t=b[1],ah=t[2],ai=t[1],aj=0,ak=0,u=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(buG,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(buH,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,buI,b[1][2]]]:0}return 0},ak,aj,ah);if(u){var
v=h0(0,0,u[1][2]);if(v)var
w=v[1],al=w[2],x=[0,[0,dR(ow,ai,w[1]),al]];else
var
x=0;var
y=x}else
var
y=0;var
d=y}else
var
d=0;if(d)var
e=[0,d[1]];else{var
H=aH(M[1],6),I=aI(H,R(a));if(I){var
J=I[1];if(J)var
K=J[1],L=[0,[0,K[1],K[2]]];else
var
L=0;var
h=L}else{var
m=oW(0,0,a);if(m)var
ac=m[1],ad=[0,[0,ac[1],ac[2]]];else
var
ad=0;aJ(H,R(a),ad);var
h=m}if(h){var
N=h[1],am=N[2],an=N[1],ao=0,aq=0,O=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(buJ,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(buK,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,buL,b[1][2]]]:0}return 0},aq,ao,am);if(O){var
P=gV(0,0,O[1][2]);if(P)var
S=P[1][2],i=[0,[0,S[2],S]];else
var
i=0;if(i){var
T=i[1],as=T[1],U=h0(0,0,T[2]);if(U){var
V=U[1],at=V[1],W=gV(0,0,V[2]);if(W)var
X=W[1][2],j=[0,[0,X[2],X]];else
var
j=0;if(j)var
Y=j[1],au=Y[2],aw=[0,buM,od(as,Y[1])],Z=[0,[0,dR(ow,an,dR(ow,at,cq(function(a){return function(b){return ov(a,buN,b)}},aw))),au]];else
var
Z=0;var
_=Z}else
var
_=0;var
$=_}else
var
$=0;var
aa=$}else
var
aa=0;var
ab=aa}else
var
ab=0;var
e=ab}if(e)return[0,e[1]];var
z=aH(M[1],6),A=aI(z,R(a));if(A){var
B=A[1];if(B)var
C=B[1],D=[0,[0,C[1],C[2]]];else
var
D=0;var
f=D}else{var
g=oW(0,0,a);if(g)var
F=g[1],G=[0,[0,F[1],F[2]]];else
var
G=0;aJ(z,R(a),G);var
f=g}if(f){var
E=f[1];return[0,[0,E[1],E[2]]]}return 0},oW=function(K,E,a){if(E){M[1]=av(0);c(ap[4],ar)}var
h=aH(M[1],7),i=aI(h,R(a));if(i){var
j=i[1];if(j)var
m=j[1],n=[0,[0,m[1],m[2]]];else
var
n=0;var
b=n}else{var
g=J3(0,0,a);if(g)var
C=g[1],D=[0,[0,C[1],C[2]]];else
var
D=0;aJ(h,R(a),D);var
b=g}if(b){var
o=b[1],F=o[2],G=o[1],H=0,I=0,p=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(buO,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,buP,a[1][2]]]:0},I,H,F);if(p){var
q=oW(0,0,p[1][2]);if(q)var
r=q[1],J=r[2],s=[0,[0,dR(IO,G,r[1]),J]];else
var
s=0;var
t=s}else
var
t=0;var
d=t}else
var
d=0;if(d)return[0,d[1]];var
u=aH(M[1],7),v=aI(u,R(a));if(v){var
w=v[1];if(w)var
x=w[1],y=[0,[0,x[1],x[2]]];else
var
y=0;var
e=y}else{var
f=J3(0,0,a);if(f)var
A=f[1],B=[0,[0,A[1],A[2]]];else
var
B=0;aJ(u,R(a),B);var
e=f}if(e){var
z=e[1];return[0,[0,z[1],z[2]]]}return 0},vw=function(L,u,b){if(u){M[1]=av(0);c(ap[4],ar)}var
v=0,w=0,d=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bu4,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bu5,a[1][2]]]:0},w,v,b);if(d){var
x=d[1][2],y=0,z=0,e=jp(function(d,a){var
b=0,c=0;return bJ(function(b,a){return vr(0,0,a)},c,b,a)},z,y,x);if(e){var
f=e[1],A=f[2],B=f[1],C=0,D=0,g=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bu6,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bu7,a[1][2]]]:0},D,C,A);if(g){var
h=h0(0,0,g[1][2]);if(h){var
i=h[1],j=i[1],E=i[2],F=0,G=0,m=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bu8,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bu9,a[1][2]]]:0},G,F,E);if(m)var
H=m[1][2],I=0,n=[0,[0,f0(function(a,b){var
c=gT(a,j);return[0,[0,[0,a[1],[0,j[1]]],c],b]},B,I),H]];else
var
n=0;var
o=n}else
var
o=0;var
p=o}else
var
p=0;var
q=p}else
var
q=0;var
a=q}else
var
a=0;if(a)return[0,a[1]];var
J=0,K=0,r=bJ(function(b,a){return vr(0,0,a)},K,J,b);if(r){var
s=r[1],t=s[1];return[0,[0,[0,[0,[0,t[1],0],t[2]],0],s[2]]]}return 0},J4=function(v,o,a){if(o){M[1]=av(0);c(ap[4],ar)}var
e=aH(M[1],2),f=aI(e,R(a));if(f){var
g=f[1];if(g)var
h=g[1],i=[0,[0,h[1],h[2]]];else
var
i=0;var
b=i}else{var
d=lg(0,0,a);if(d)var
m=d[1],n=[0,[0,m[1],m[2]]];else
var
n=0;aJ(e,R(a),n);var
b=d}if(b){var
j=b[1],p=j[2],q=j[1],r=0,s=0,k=jp(function(b,a){return lg(0,0,a)},s,r,p);if(k){var
l=k[1],t=l[2],u=l[1];return[0,[0,aZ(function(a,b){return dR(ox,a,b)},q,u),t]]}return 0}return 0},lg=function(b9,a4,a){if(a4){M[1]=av(0);c(ap[4],ar)}var
a5=0,a6=0,E=bJ(function(U,J){var
K=0,L=0,j=fl(function(G,b){var
i=aH(M[1],5),j=aI(i,R(b));if(j){var
m=j[1];if(m)var
n=m[1],o=[0,[0,n[1],n[2]]];else
var
o=0;var
c=o}else{var
g=bo(0,0,b);if(g)var
C=g[1],D=[0,[0,C[1],C[2]]];else
var
D=0;aJ(i,R(b),D);var
c=g}if(c){var
p=c[1],E=p[1],q=k(p[2]);if(q){var
r=q[1],s=r[1],F=r[2];if(l(bs3,s))var
d=[0,[0,s,F]],h=1;else
var
h=0}else
var
h=0;if(!h)var
d=0;var
t=d?[0,[0,bs4,d[1][2]]]:0;if(t){var
a=t[1][2],u=aH(M[1],5),v=aI(u,R(a));if(v){var
w=v[1];if(w)var
x=w[1],y=[0,[0,x[1],x[2]]];else
var
y=0;var
e=y}else{var
f=bo(0,0,a);if(f)var
A=f[1],B=[0,[0,A[1],A[2]]];else
var
B=0;aJ(u,R(a),B);var
e=f}var
z=e?[0,[0,e[1][1],a]]:0;return z?[0,[0,E,z[1][2]]]:0}return 0}return 0},L,K,J);if(j){var
m=j[1],a=m[2],N=m[1],n=aH(M[1],5),o=aI(n,R(a));if(o){var
p=o[1];if(p)var
q=p[1],r=[0,[0,q[1],q[2]]];else
var
r=0;var
b=r}else{var
h=bo(0,0,a);if(h)var
H=h[1],I=[0,[0,H[1],H[2]]];else
var
I=0;aJ(n,R(a),I);var
b=h}if(b)var
s=b[1],O=s[2],P=s[1],Q=er(bs5,N),u=[0,[0,t(Q,t(bs6,P)),O]];else
var
u=0;var
c=u}else
var
c=0;if(c)return[0,c[1]];var
v=k(J);if(v){var
w=v[1],x=w[1],S=w[2];if(l(bs7,x))var
d=[0,[0,x,S]],i=1;else
var
i=0}else
var
i=0;if(!i)var
d=0;var
y=d?[0,[0,bs8,d[1][2]]]:0;if(y){var
e=y[1][2],z=aH(M[1],5),A=aI(z,R(e));if(A){var
B=A[1];if(B)var
C=B[1],D=[0,[0,C[1],C[2]]];else
var
D=0;var
f=D}else{var
g=bo(0,0,e);if(g)var
F=g[1],G=[0,[0,F[1],F[2]]];else
var
G=0;aJ(z,R(e),G);var
f=g}if(f){var
E=f[1],T=E[2];return[0,[0,t(bs9,E[1]),T]]}return 0}return 0},a6,a5,a);if(E)var
F=E[1],a7=F[2],d=[0,[0,cq(ff,F[1]),a7]];else
var
d=0;if(d)var
e=[0,d[1]];else{var
b6=0,b7=0,aT=bJ(function(x,f){var
g=k(f);if(g){var
h=g[1],i=h[1],u=h[2];if(l(bv1,i))var
a=[0,[0,i,u]],d=1;else
var
d=0}else
var
d=0;if(!d)var
a=0;var
j=a?[0,[0,bv2,a[1][2]]]:0;if(j){var
m=bo(0,0,j[1][2]);if(m)var
n=m[1],v=n[2],o=[0,[0,t(bv3,n[1]),v]];else
var
o=0;var
b=o}else
var
b=0;if(b)return[0,b[1]];var
p=k(f);if(p){var
q=p[1],r=q[1],w=q[2];if(l(bv4,r))var
c=[0,[0,r,w]],e=1;else
var
e=0}else
var
e=0;if(!e)var
c=0;var
s=c?[0,[0,bv5,c[1][2]]]:0;return s?[0,[0,bv6,s[1][2]]]:0},b7,b6,a);if(aT)var
aU=aT[1],b8=aU[2],aV=[0,[0,cq(Iw,aU[1]),b8]];else
var
aV=0;var
e=aV}if(e)var
f=[0,e[1]];else{var
b3=0,b4=0,aP=bJ(function(b,a){return vr(0,0,a)},b4,b3,a);if(aP)var
aQ=aP[1],b5=aQ[2],aR=[0,[0,cq(ff,aQ[1]),b5]];else
var
aR=0;var
f=aR}if(f)var
g=[0,f[1]];else{var
b0=0,b1=0,aM=bJ(function(e,d){var
a=JV(0,0,d);if(a){var
b=bo(0,0,a[1][2]);if(b){var
c=b[1];return[0,[0,c[1],c[2]]]}return 0}return 0},b1,b0,a);if(aM)var
aN=aM[1],b2=aN[2],aO=[0,[0,cq(bjw,aN[1]),b2]];else
var
aO=0;var
g=aO}if(g)var
h=[0,g[1]];else{var
bX=0,bY=0,aG=bJ(function(m,i){var
c=k(i);if(c){var
d=c[1],e=d[1],j=d[2];if(l(bvZ,e))var
a=[0,[0,e,j]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;var
f=a?[0,[0,bv0,a[1][2]]]:0;if(f){var
g=vq(0,0,f[1][2]);if(g){var
h=g[1];return[0,[0,h[1],h[2]]]}return 0}return 0},bY,bX,a);if(aG)var
aK=aG[1],bZ=aK[2],aL=[0,[0,cq(Iw,aK[1]),bZ]];else
var
aL=0;var
h=aL}if(h)var
i=[0,h[1]];else{var
bU=0,bV=0,aD=eI(function(t,i){var
j=0,m=0,c=Q(function(f,d){var
a=k(d);if(a){var
b=a[1],c=b[1],e=b[2];if(l(bvW,c))return[0,[0,c,e]]}return 0},m,j,i);if(c){var
n=c[1][2],o=0,p=0,d=dS(function(b,a){return vs(0,0,a)},p,o,n);if(d){var
e=d[1],q=e[1],f=k(e[2]);if(f){var
g=f[1],h=g[1],r=g[2];if(l(bvX,h))var
a=[0,[0,h,r]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;if(a){var
s=a[1][2];return[0,[0,er(bvY,q),s]]}return 0}return 0}return 0},bV,bU,a);if(aD)var
aE=aD[1],bW=aE[2],aF=[0,[0,cq(k7,aE[1]),bW]];else
var
aF=0;var
i=aF}if(i)var
j=[0,i[1]];else{var
bL=0,bM=0,aw=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bvO,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bvP,a[1][2]]]:0},bM,bL,a);if(aw){var
ax=aw[1][2],aW=0,aX=0,aY=function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bvQ,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bvR,a[1][2]]]:0},y=jo(function(b,a){return dg(0,0,a)},aY,aX,aW,ax);if(y)var
z=y[1],b=[0,[0,z[1],z[2]]];else
var
b=0;if(b)var
x=[0,b[1]];else
var
A=gV(0,0,ax),x=A?[0,[0,0,A[1][2]]]:0;if(x){var
ay=x[1],bN=ay[2],bO=ay[1],bP=0,bQ=0,az=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bvS,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bvT,a[1][2]]]:0},bQ,bP,bN);if(az)var
bR=az[1][2],bS=aj(bO),bT=aS(bvU,0),aA=[0,[0,aZ(function(b,a){return aS(bvV,[0,a,[0,b,0]])},bT,bS),bR]];else
var
aA=0;var
aB=aA}else
var
aB=0;var
aC=aB}else
var
aC=0;var
j=aC}if(j)var
m=[0,j[1]];else{var
bs=0,bt=0,aa=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bvE,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bvF,a[1][2]]]:0},bt,bs,a);if(aa){var
s=aa[1][2],ab=aH(M[1],1),ac=aI(ab,R(s));if(ac){var
ad=ac[1];if(ad)var
ae=ad[1],af=[0,[0,ae[1],ae[2]]];else
var
af=0;var
u=af}else{var
w=dg(0,0,s);if(w)var
at=w[1],au=[0,[0,at[1],at[2]]];else
var
au=0;aJ(ab,R(s),au);var
u=w}if(u){var
ag=u[1],bu=ag[2],bv=ag[1],bw=0,bx=0,ah=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bvG,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bvH,a[1][2]]]:0},bx,bw,bu);if(ah){var
by=ah[1][2],bz=0,bA=0,bB=function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bvI,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bvJ,a[1][2]]]:0},ai=jo(function(b,a){return dg(0,0,a)},bB,bA,bz,by);if(ai){var
ak=ai[1],bC=ak[2],bD=ak[1],bE=0,bF=0,al=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bvK,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bvL,a[1][2]]]:0},bF,bE,bC);if(al){var
bH=al[1][2],v=aj([0,bv,bD]);if(!v)throw[0,bG,bvN];var
bI=v[2],bK=v[1],am=[0,[0,aZ(function(b,a){return aS(bvM,[0,a,[0,b,0]])},bK,bI),bH]]}else
var
am=0;var
an=am}else
var
an=0;var
ao=an}else
var
ao=0;var
aq=ao}else
var
aq=0;var
as=aq}else
var
as=0;var
m=as}if(m)var
n=[0,m[1]];else{var
bp=0,bq=0,Z=bJ(function(b,a){return JX(0,0,a)},bq,bp,a);if(Z)var
_=Z[1],br=_[2],$=[0,[0,cq(IK,_[1]),br]];else
var
$=0;var
n=$}if(n)var
o=[0,n[1]];else{var
bh=0,bi=0,T=Q(function(N,G){var
o=k(G);if(o){var
p=o[1],q=p[1],H=p[2];if(l(bvu,q))var
a=[0,[0,q,H]],g=1;else
var
g=0}else
var
g=0;if(!g)var
a=0;if(a){var
r=k(a[1][2]);if(r){var
s=r[1],t=s[1],I=s[2];if(l(bvv,t))var
b=[0,[0,t,I]],h=1;else
var
h=0}else
var
h=0;if(!h)var
b=0;if(b){var
u=k(b[1][2]);if(u){var
v=u[1],w=v[1],J=v[2];if(l(bvw,w))var
c=[0,[0,w,J]],i=1;else
var
i=0}else
var
i=0;if(!i)var
c=0;if(c){var
x=k(c[1][2]);if(x){var
y=x[1],z=y[1],K=y[2];if(l(bvx,z))var
d=[0,[0,z,K]],j=1;else
var
j=0}else
var
j=0;if(!j)var
d=0;if(d){var
A=k(d[1][2]);if(A){var
B=A[1],C=B[1],L=B[2];if(l(bvy,C))var
e=[0,[0,C,L]],m=1;else
var
m=0}else
var
m=0;if(!m)var
e=0;if(e){var
D=k(e[1][2]);if(D){var
E=D[1],F=E[1],M=E[2];if(l(bvz,F))var
f=[0,[0,F,M]],n=1;else
var
n=0}else
var
n=0;if(!n)var
f=0;return f?[0,[0,bvA,f[1][2]]]:0}return 0}return 0}return 0}return 0}return 0},bi,bh,a);if(T){var
U=eJ(0,0,T[1][2]);if(U)var
V=U[1],bj=V[2],bk=V[1],bl=0,bm=0,W=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(bvB,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(bvC,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,bvD,b[1][2]]]:0}return 0},bm,bl,bj),bn=W?[0,[0,bk,W[1][2]]]:0,X=bn;else
var
X=0;var
Y=X}else
var
Y=0;var
o=Y}if(o)var
p=[0,o[1]];else{var
ba=0,bb=0,L=Q(function(H,B){var
m=k(B);if(m){var
n=m[1],o=n[1],C=n[2];if(l(bvl,o))var
a=[0,[0,o,C]],f=1;else
var
f=0}else
var
f=0;if(!f)var
a=0;if(a){var
p=k(a[1][2]);if(p){var
q=p[1],r=q[1],D=q[2];if(l(bvm,r))var
b=[0,[0,r,D]],g=1;else
var
g=0}else
var
g=0;if(!g)var
b=0;if(b){var
s=k(b[1][2]);if(s){var
t=s[1],u=t[1],E=t[2];if(l(bvn,u))var
c=[0,[0,u,E]],h=1;else
var
h=0}else
var
h=0;if(!h)var
c=0;if(c){var
v=k(c[1][2]);if(v){var
w=v[1],x=w[1],F=w[2];if(l(bvo,x))var
d=[0,[0,x,F]],i=1;else
var
i=0}else
var
i=0;if(!i)var
d=0;if(d){var
y=k(d[1][2]);if(y){var
z=y[1],A=z[1],G=z[2];if(l(bvp,A))var
e=[0,[0,A,G]],j=1;else
var
j=0}else
var
j=0;if(!j)var
e=0;return e?[0,[0,bvq,e[1][2]]]:0}return 0}return 0}return 0}return 0},bb,ba,a);if(L){var
B=lf(0,0,L[1][2]);if(B)var
C=B[1],a0=C[2],a1=C[1],a2=0,a3=0,D=ed(function(b,a){return cz(0,0,a)},a3,a2,a0),r=D?[0,[0,a1,D[1][2]]]:0;else
var
r=0;if(r)var
N=r[1],bc=N[2],bd=N[1],be=0,bf=0,O=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(bvr,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(bvs,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,bvt,b[1][2]]]:0}return 0},bf,be,bc),bg=O?[0,[0,bd,O[1][2]]]:0,P=bg;else
var
P=0;var
S=P}else
var
S=0;var
p=S}if(p)var
q=[0,p[1]];else{var
a_=0,a$=0,I=oV(function(v,c){var
d=aH(M[1],1),e=aI(d,R(c));if(e){var
f=e[1];if(f)var
g=f[1],h=[0,[0,g[1],g[2]]];else
var
h=0;var
a=h}else{var
b=dg(0,0,c);if(b)var
o=b[1],p=[0,[0,o[1],o[2]]];else
var
p=0;aJ(d,R(c),p);var
a=b}if(a){var
i=a[1],q=i[2],r=i[1],s=0,t=0,j=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bvd,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bve,a[1][2]]]:0},t,s,q);if(j){var
m=h0(0,0,j[1][2]);if(m){var
n=m[1],u=n[2];return[0,[0,dR(Ix,r,n[1]),u]]}return 0}return 0}return 0},a$,a_,a);if(I)var
J=I[1],K=[0,[0,J[1],J[2]]];else
var
K=0;var
q=K}if(q)return[0,q[1]];var
a8=0,a9=0,G=oV(function(i,a){var
c=aH(M[1],1),d=aI(c,R(a));if(d){var
e=d[1];if(e){var
f=e[1];return[0,[0,f[1],f[2]]]}return 0}var
b=dg(0,0,a);if(b)var
g=b[1],h=[0,[0,g[1],g[2]]];else
var
h=0;aJ(c,R(a),h);return b},a9,a8,a);if(G){var
H=G[1];return[0,[0,H[1],H[2]]]}return 0},J5=function(bL,ba,a){if(ba){M[1]=av(0);c(ap[4],ar)}var
v=aH(M[1],1),w=aI(v,R(a));if(w){var
x=w[1];if(x)var
y=x[1],z=[0,[0,y[1],y[2]]];else
var
z=0;var
b=z}else{var
u=dg(0,0,a);if(u)var
a_=u[1],a$=[0,[0,a_[1],a_[2]]];else
var
a$=0;aJ(v,R(a),a$);var
b=u}if(b){var
A=b[1],bb=A[2],bc=A[1],bd=0,be=0,B=Q(function(B,w){var
i=k(w);if(i){var
j=i[1],m=j[1],x=j[2];if(l(bv7,m))var
a=[0,[0,m,x]],e=1;else
var
e=0}else
var
e=0;if(!e)var
a=0;if(a){var
n=k(a[1][2]);if(n){var
o=n[1],p=o[1],y=o[2];if(l(bv8,p))var
b=[0,[0,p,y]],f=1;else
var
f=0}else
var
f=0;if(!f)var
b=0;if(b){var
q=k(b[1][2]);if(q){var
r=q[1],s=r[1],z=r[2];if(l(bv9,s))var
c=[0,[0,s,z]],g=1;else
var
g=0}else
var
g=0;if(!g)var
c=0;if(c){var
t=k(c[1][2]);if(t){var
u=t[1],v=u[1],A=u[2];if(l(bv_,v))var
d=[0,[0,v,A]],h=1;else
var
h=0}else
var
h=0;if(!h)var
d=0;return d?[0,[0,bv$,d[1][2]]]:0}return 0}return 0}return 0},be,bd,bb);if(B){var
C=eJ(0,0,B[1][2]);if(C){var
D=C[1],bf=D[2],bg=D[1],bh=0,bi=0,E=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(bwa,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(bwb,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,bwc,b[1][2]]]:0}return 0},bi,bh,bf);if(E){var
F=eJ(0,0,E[1][2]);if(F)var
G=F[1],bj=G[2],H=[0,[0,aS(bwd,[0,bc,[0,bg,[0,G[1],0]]]),bj]];else
var
H=0;var
I=H}else
var
I=0;var
J=I}else
var
J=0;var
K=J}else
var
K=0;var
d=K}else
var
d=0;if(d)var
e=[0,d[1]];else{var
aQ=aH(M[1],1),aR=aI(aQ,R(a));if(aR){var
aT=aR[1];if(aT)var
aU=aT[1],aV=[0,[0,aU[1],aU[2]]];else
var
aV=0;var
s=aV}else{var
t=dg(0,0,a);if(t)var
a8=t[1],a9=[0,[0,a8[1],a8[2]]];else
var
a9=0;aJ(aQ,R(a),a9);var
s=t}if(s){var
aW=s[1],bC=aW[2],bD=aW[1],bE=0,bF=0,aX=Q(function(B,w){var
i=k(w);if(i){var
j=i[1],m=j[1],x=j[2];if(l(bwv,m))var
a=[0,[0,m,x]],e=1;else
var
e=0}else
var
e=0;if(!e)var
a=0;if(a){var
n=k(a[1][2]);if(n){var
o=n[1],p=o[1],y=o[2];if(l(bww,p))var
b=[0,[0,p,y]],f=1;else
var
f=0}else
var
f=0;if(!f)var
b=0;if(b){var
q=k(b[1][2]);if(q){var
r=q[1],s=r[1],z=r[2];if(l(bwx,s))var
c=[0,[0,s,z]],g=1;else
var
g=0}else
var
g=0;if(!g)var
c=0;if(c){var
t=k(c[1][2]);if(t){var
u=t[1],v=u[1],A=u[2];if(l(bwy,v))var
d=[0,[0,v,A]],h=1;else
var
h=0}else
var
h=0;if(!h)var
d=0;return d?[0,[0,bwz,d[1][2]]]:0}return 0}return 0}return 0},bF,bE,bC);if(aX){var
aY=eJ(0,0,aX[1][2]);if(aY){var
aZ=aY[1],bG=aZ[2],bH=aZ[1],bI=0,bJ=0,a0=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(bwA,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(bwB,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,bwC,b[1][2]]]:0}return 0},bJ,bI,bG);if(a0){var
a1=eJ(0,0,a0[1][2]);if(a1)var
a2=a1[1],bK=a2[2],a3=[0,[0,aS(bwD,[0,bD,[0,bH,[0,a2[1],0]]]),bK]];else
var
a3=0;var
a4=a3}else
var
a4=0;var
a5=a4}else
var
a5=0;var
a6=a5}else
var
a6=0;var
a7=a6}else
var
a7=0;var
e=a7}if(e)var
f=[0,e[1]];else{var
az=aH(M[1],1),aA=aI(az,R(a));if(aA){var
aB=aA[1];if(aB)var
aC=aB[1],aD=[0,[0,aC[1],aC[2]]];else
var
aD=0;var
q=aD}else{var
r=dg(0,0,a);if(r)var
aO=r[1],aP=[0,[0,aO[1],aO[2]]];else
var
aP=0;aJ(az,R(a),aP);var
q=r}if(q){var
aE=q[1],bw=aE[2],bx=aE[1],by=0,bz=0,aF=Q(function(B,w){var
i=k(w);if(i){var
j=i[1],m=j[1],x=j[2];if(l(bwo,m))var
a=[0,[0,m,x]],e=1;else
var
e=0}else
var
e=0;if(!e)var
a=0;if(a){var
n=k(a[1][2]);if(n){var
o=n[1],p=o[1],y=o[2];if(l(bwp,p))var
b=[0,[0,p,y]],f=1;else
var
f=0}else
var
f=0;if(!f)var
b=0;if(b){var
q=k(b[1][2]);if(q){var
r=q[1],s=r[1],z=r[2];if(l(bwq,s))var
c=[0,[0,s,z]],g=1;else
var
g=0}else
var
g=0;if(!g)var
c=0;if(c){var
t=k(c[1][2]);if(t){var
u=t[1],v=u[1],A=u[2];if(l(bwr,v))var
d=[0,[0,v,A]],h=1;else
var
h=0}else
var
h=0;if(!h)var
d=0;return d?[0,[0,bws,d[1][2]]]:0}return 0}return 0}return 0},bz,by,bw);if(aF){var
aG=eJ(0,0,aF[1][2]);if(aG)var
aK=aG[1],bA=aK[2],bB=aK[1],aL=[0,[0,aS(bwu,[0,bx,[0,bB,[0,aS(bwt,0),0]]]),bA]];else
var
aL=0;var
aM=aL}else
var
aM=0;var
aN=aM}else
var
aN=0;var
f=aN}if(f)var
g=[0,f[1]];else{var
ai=aH(M[1],1),aj=aI(ai,R(a));if(aj){var
ak=aj[1];if(ak)var
al=ak[1],am=[0,[0,al[1],al[2]]];else
var
am=0;var
o=am}else{var
p=dg(0,0,a);if(p)var
ax=p[1],ay=[0,[0,ax[1],ax[2]]];else
var
ay=0;aJ(ai,R(a),ay);var
o=p}if(o){var
an=o[1],br=an[2],bs=an[1],bt=0,bu=0,ao=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(bwk,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(bwl,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,bwm,b[1][2]]]:0}return 0},bu,bt,br);if(ao){var
aq=eJ(0,0,ao[1][2]);if(aq)var
as=aq[1],bv=as[2],at=[0,[0,aS(bwn,[0,bs,[0,as[1],0]]),bv]];else
var
at=0;var
au=at}else
var
au=0;var
aw=au}else
var
aw=0;var
g=aw}if(g)var
h=[0,g[1]];else{var
W=aH(M[1],1),X=aI(W,R(a));if(X){var
Y=X[1];if(Y)var
Z=Y[1],_=[0,[0,Z[1],Z[2]]];else
var
_=0;var
m=_}else{var
n=dg(0,0,a);if(n)var
ag=n[1],ah=[0,[0,ag[1],ag[2]]];else
var
ah=0;aJ(W,R(a),ah);var
m=n}if(m){var
$=m[1],bm=$[2],bn=$[1],bo=0,bp=0,aa=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(bwg,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(bwh,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,bwi,b[1][2]]]:0}return 0},bp,bo,bm);if(aa){var
ab=eJ(0,0,aa[1][2]);if(ab)var
ac=ab[1],bq=ac[2],ad=[0,[0,aS(bwj,[0,bn,[0,ac[1],0]]),bq]];else
var
ad=0;var
ae=ad}else
var
ae=0;var
af=ae}else
var
af=0;var
h=af}if(h)return[0,h[1]];var
L=aH(M[1],1),N=aI(L,R(a));if(N){var
O=N[1];if(O)var
P=O[1],S=[0,[0,P[1],P[2]]];else
var
S=0;var
i=S}else{var
j=dg(0,0,a);if(j)var
U=j[1],V=[0,[0,U[1],U[2]]];else
var
V=0;aJ(L,R(a),V);var
i=j}if(i){var
T=i[1],bk=T[2],bl=T[1];return[0,[0,aS(bwf,[0,bl,[0,aS(bwe,0),0]]),bk]]}return 0},jq=function(H,v,b){if(v){M[1]=av(0);c(ap[4],ar)}var
w=0,x=0,d=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(bwE,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(bwF,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,bwG,b[1][2]]]:0}return 0},x,w,b);if(d){var
e=vx(0,0,d[1][2]);if(e){var
f=e[1],y=f[2],z=f[1],A=0,B=0,g=Q(function(B,w){var
i=k(w);if(i){var
j=i[1],m=j[1],x=j[2];if(l(bwH,m))var
a=[0,[0,m,x]],e=1;else
var
e=0}else
var
e=0;if(!e)var
a=0;if(a){var
n=k(a[1][2]);if(n){var
o=n[1],p=o[1],y=o[2];if(l(bwI,p))var
b=[0,[0,p,y]],f=1;else
var
f=0}else
var
f=0;if(!f)var
b=0;if(b){var
q=k(b[1][2]);if(q){var
r=q[1],s=r[1],z=r[2];if(l(bwJ,s))var
c=[0,[0,s,z]],g=1;else
var
g=0}else
var
g=0;if(!g)var
c=0;if(c){var
t=k(c[1][2]);if(t){var
u=t[1],v=u[1],A=u[2];if(l(bwK,v))var
d=[0,[0,v,A]],h=1;else
var
h=0}else
var
h=0;if(!h)var
d=0;return d?[0,[0,bwL,d[1][2]]]:0}return 0}return 0}return 0},B,A,y);if(g){var
h=vx(0,0,g[1][2]);if(h){var
i=h[1],C=i[2],D=i[1],E=0,F=0,j=Q(function(B,w){var
i=k(w);if(i){var
j=i[1],m=j[1],x=j[2];if(l(bwM,m))var
a=[0,[0,m,x]],e=1;else
var
e=0}else
var
e=0;if(!e)var
a=0;if(a){var
n=k(a[1][2]);if(n){var
o=n[1],p=o[1],y=o[2];if(l(bwN,p))var
b=[0,[0,p,y]],f=1;else
var
f=0}else
var
f=0;if(!f)var
b=0;if(b){var
q=k(b[1][2]);if(q){var
r=q[1],s=r[1],z=r[2];if(l(bwO,s))var
c=[0,[0,s,z]],g=1;else
var
g=0}else
var
g=0;if(!g)var
c=0;if(c){var
t=k(c[1][2]);if(t){var
u=t[1],v=u[1],A=u[2];if(l(bwP,v))var
d=[0,[0,v,A]],h=1;else
var
h=0}else
var
h=0;if(!h)var
d=0;return d?[0,[0,bwQ,d[1][2]]]:0}return 0}return 0}return 0},F,E,C);if(j){var
m=jq(0,0,j[1][2]);if(m)var
n=m[1],G=n[2],o=[0,[0,aS(bwR,[0,z,[0,D,[0,n[1],0]]]),G]];else
var
o=0;var
p=o}else
var
p=0;var
q=p}else
var
q=0;var
r=q}else
var
r=0;var
s=r}else
var
s=0;var
a=s}else
var
a=0;if(a)return[0,a[1]];var
t=vx(0,0,b);if(t){var
u=t[1];return[0,[0,u[1],u[2]]]}return 0},vx=function(bb,ak,a){if(ak){M[1]=av(0);c(ap[4],ar)}var
al=0,am=0,n=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bwS,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bwT,a[1][2]]]:0},am,al,a);if(n){var
an=n[1][2],ao=0,aq=0,o=jp(function(v,u){var
i=0,j=0,a=bJ(function(i,a){var
c=aH(M[1],5),d=aI(c,R(a));if(d){var
e=d[1];if(e){var
f=e[1];return[0,[0,f[1],f[2]]]}return 0}var
b=bo(0,0,a);if(b)var
g=b[1],h=[0,[0,g[1],g[2]]];else
var
h=0;aJ(c,R(a),h);return b},j,i,u);if(a){var
b=a[1],c=b[1],m=b[2],n=0,o=0,d=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(buQ,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,buR,a[1][2]]]:0},o,n,m);if(d){var
e=vv(0,0,d[1][2]);if(e){var
f=e[1],g=f[1],p=f[2],q=0,r=0,h=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(buS,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(buT,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,buU,b[1][2]]]:0}return 0},r,q,p);if(h){var
s=h[1][2],t=gT(c,g);return[0,[0,[0,[0,c[1],[0,g[1]]],t],s]]}return 0}return 0}return 0}return 0},aq,ao,an);if(o){var
p=o[1],q=p[1],as=p[2],at=0,au=0,r=dS(function(H,b){var
f=aH(M[1],1),g=aI(f,R(b));if(g){var
h=g[1];if(h)var
i=h[1],j=[0,[0,i[1],i[2]]];else
var
j=0;var
c=j}else{var
e=dg(0,0,b);if(e)var
r=e[1],s=[0,[0,r[1],r[2]]];else
var
s=0;aJ(f,R(b),s);var
c=e}if(c)var
m=c[1],v=m[2],w=m[1],d=[0,[0,aS(bvg,[0,w,[0,aS(bvf,0),0]]),v]];else
var
d=0;if(d)var
a=[0,d[1]];else{var
x=0,y=0,n=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bvh,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bvi,a[1][2]]]:0},y,x,b);if(n){var
o=J5(0,0,n[1][2]);if(o)var
p=o[1],z=p[2],A=p[1],B=0,C=0,q=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bvj,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bvk,a[1][2]]]:0},C,B,z),a=q?[0,[0,A,q[1][2]]]:0;else
var
a=0}else
var
a=0}if(a){var
t=a[1],D=t[2],E=t[1],F=0,G=0,u=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(bwU,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(bwV,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,bwW,b[1][2]]]:0}return 0},G,F,D);return u?[0,[0,E,u[1][2]]]:0}return 0},au,at,as);if(r){var
s=r[1],t=s[2],u=s[1];if(gV(0,0,t)){var
aw=W(u);if(0<(W(q)+aw|0))var
d=[0,[0,0,t]],m=1;else
var
m=0}else
var
m=0;if(!m)var
d=0;if(d){var
v=jq(0,0,d[1][2]);if(v){var
w=v[1],ax=w[2],ay=w[1],az=0,aA=0,x=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bwX,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bwY,a[1][2]]]:0},aA,az,ax);if(x)var
aB=x[1][2],aC=aj(u),aD=aZ(function(b,a){return aS(bwZ,[0,a,[0,b,0]])},ay,aC),y=[0,[0,f0(function(b,a){return aS(bw0,[0,dR(oT,b,a),0])},q,aD),aB]];else
var
y=0;var
z=y}else
var
z=0;var
A=z}else
var
A=0;var
B=A}else
var
B=0;var
C=B}else
var
C=0;var
e=C}else
var
e=0;if(e)return[0,e[1]];var
aE=0,aF=0,E=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bw1,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bw2,a[1][2]]]:0},aF,aE,a);if(E){var
F=eJ(0,0,E[1][2]);if(F)var
G=F[1],aG=G[2],aK=G[1],aL=0,aM=0,H=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bw3,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bw4,a[1][2]]]:0},aM,aL,aG),aN=H?[0,[0,aK,H[1][2]]]:0,I=aN;else
var
I=0;var
f=I}else
var
f=0;if(f)var
g=[0,f[1]];else{var
a0=0,a1=0,ac=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bxd,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bxe,a[1][2]]]:0},a1,a0,a);if(ac){var
a2=ac[1][2],a3=0,a4=0,a5=function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bxf,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bxg,a[1][2]]]:0},ad=jo(function(i,a){var
c=aH(M[1],3),d=aI(c,R(a));if(d){var
e=d[1];if(e){var
f=e[1];return[0,[0,f[1],f[2]]]}return 0}var
b=jq(0,0,a);if(b)var
g=b[1],h=[0,[0,g[1],g[2]]];else
var
h=0;aJ(c,R(a),h);return b},a5,a4,a3,a2);if(ad){var
ae=ad[1],a6=ae[2],a7=ae[1],a8=0,a9=0,af=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bxh,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bxi,a[1][2]]]:0},a9,a8,a6);if(af)var
a_=af[1][2],a$=function(a){return a},ba=aS(bxj,0),ag=[0,[0,GO(function(b,a){return aS(bxk,[0,b,[0,a,0]])},ba,a$,a7),a_]];else
var
ag=0;var
ah=ag}else
var
ah=0;var
ai=ah}else
var
ai=0;var
g=ai}if(g)var
h=[0,g[1]];else{var
aO=0,aP=0,U=Q(function(B,w){var
i=k(w);if(i){var
j=i[1],m=j[1],x=j[2];if(l(bw5,m))var
a=[0,[0,m,x]],e=1;else
var
e=0}else
var
e=0;if(!e)var
a=0;if(a){var
n=k(a[1][2]);if(n){var
o=n[1],p=o[1],y=o[2];if(l(bw6,p))var
b=[0,[0,p,y]],f=1;else
var
f=0}else
var
f=0;if(!f)var
b=0;if(b){var
q=k(b[1][2]);if(q){var
r=q[1],s=r[1],z=r[2];if(l(bw7,s))var
c=[0,[0,s,z]],g=1;else
var
g=0}else
var
g=0;if(!g)var
c=0;if(c){var
t=k(c[1][2]);if(t){var
u=t[1],v=u[1],A=u[2];if(l(bw8,v))var
d=[0,[0,v,A]],h=1;else
var
h=0}else
var
h=0;if(!h)var
d=0;return d?[0,[0,bw9,d[1][2]]]:0}return 0}return 0}return 0},aP,aO,a);if(U){var
aQ=U[1][2],aR=0,aT=0,V=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bw_,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bw$,a[1][2]]]:0},aT,aR,aQ);if(V){var
X=eJ(0,0,V[1][2]);if(X){var
Y=X[1],aU=Y[2],aV=Y[1],aW=0,aX=0,Z=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bxa,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bxb,a[1][2]]]:0},aX,aW,aU);if(Z)var
aY=Z[1][2],_=[0,[0,aS(bxc,[0,aV,0]),aY]];else
var
_=0;var
$=_}else
var
$=0;var
aa=$}else
var
aa=0;var
ab=aa}else
var
ab=0;var
h=ab}if(h)var
b=[0,h[1]];else{var
J=aH(M[1],1),K=aI(J,R(a));if(K){var
L=K[1];if(L)var
N=L[1],O=[0,[0,N[1],N[2]]];else
var
O=0;var
i=O}else{var
j=dg(0,0,a);if(j)var
S=j[1],T=[0,[0,S[1],S[2]]];else
var
T=0;aJ(J,R(a),T);var
i=j}if(i)var
P=i[1],b=[0,[0,P[1],P[2]]];else
var
b=0}if(b){var
D=b[1];return[0,[0,D[1],D[2]]]}return 0},dg=function(aY,aj,a){if(aj){M[1]=av(0);c(ap[4],ar)}var
ak=0,al=0,n=bJ(function(v,r){var
g=k(r);if(g){var
h=g[1],i=h[1],s=h[2];if(l(bxl,i))var
a=[0,[0,i,s]],d=1;else
var
d=0}else
var
d=0;if(!d)var
a=0;if(a){var
j=k(a[1][2]);if(j){var
m=j[1],n=m[1],t=m[2];if(l(bxm,n))var
b=[0,[0,n,t]],e=1;else
var
e=0}else
var
e=0;if(!e)var
b=0;if(b){var
o=k(b[1][2]);if(o){var
p=o[1],q=p[1],u=p[2];if(l(bxn,q))var
c=[0,[0,q,u]],f=1;else
var
f=0}else
var
f=0;if(!f)var
c=0;return c?[0,[0,bxo,c[1][2]]]:0}return 0}return 0},al,ak,a);if(n){var
o=n[1],am=o[2],an=o[1],ao=0,aq=0,p=vu(function(b,a){return vw(0,0,a)},aq,ao,am);if(p){var
q=p[1],as=q[2],at=q[1],au=0,aw=0,r=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(bxp,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(bxq,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,bxr,b[1][2]]]:0}return 0},aw,au,as);if(r){var
s=dg(0,0,r[1][2]);if(s){var
t=s[1],ax=t[2],ay=t[1],b=fZ(at);if(b)var
u=b[1],az=b[2],aA=gT(an,u),v=[0,[0,u[1],aA],az];else
var
v=b;var
w=[0,[0,f0(function(b,a){return dR(oT,b,a)},v,ay),ax]]}else
var
w=0;var
x=w}else
var
x=0;var
y=x}else
var
y=0;var
e=y}else
var
e=0;if(e)var
f=[0,e[1]];else{var
aG=0,aK=0,Y=bJ(function(B,w){var
i=k(w);if(i){var
j=i[1],m=j[1],x=j[2];if(l(bxw,m))var
a=[0,[0,m,x]],e=1;else
var
e=0}else
var
e=0;if(!e)var
a=0;if(a){var
n=k(a[1][2]);if(n){var
o=n[1],p=o[1],y=o[2];if(l(bxx,p))var
b=[0,[0,p,y]],f=1;else
var
f=0}else
var
f=0;if(!f)var
b=0;if(b){var
q=k(b[1][2]);if(q){var
r=q[1],s=r[1],z=r[2];if(l(bxy,s))var
c=[0,[0,s,z]],g=1;else
var
g=0}else
var
g=0;if(!g)var
c=0;if(c){var
t=k(c[1][2]);if(t){var
u=t[1],v=u[1],A=u[2];if(l(bxz,v))var
d=[0,[0,v,A]],h=1;else
var
h=0}else
var
h=0;if(!h)var
d=0;return d?[0,[0,bxA,d[1][2]]]:0}return 0}return 0}return 0},aK,aG,a);if(Y){var
Z=Y[1],aL=Z[2],aM=Z[1],aN=0,aO=0,_=vu(function(b,a){return vw(0,0,a)},aO,aN,aL);if(_){var
$=_[1],aP=$[2],aQ=$[1],aR=0,aT=0,aa=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(bxB,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(bxC,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,bxD,b[1][2]]]:0}return 0},aT,aR,aP);if(aa){var
ab=eJ(0,0,aa[1][2]);if(ab){var
ac=ab[1],aU=ac[2],aV=ac[1],d=fZ(aQ);if(d)var
ad=d[1],aW=d[2],aX=gT(aM,ad),ae=[0,[0,ad[1],aX],aW];else
var
ae=d;var
af=[0,[0,f0(function(b,a){return dR(oT,b,a)},ae,aV),aU]]}else
var
af=0;var
ag=af}else
var
ag=0;var
ah=ag}else
var
ah=0;var
ai=ah}else
var
ai=0;var
f=ai}if(f)var
g=[0,f[1]];else{var
H=aH(M[1],4),I=aI(H,R(a));if(I){var
J=I[1];if(J)var
K=J[1],L=[0,[0,K[1],K[2]]];else
var
L=0;var
j=L}else{var
m=J4(0,0,a);if(m)var
W=m[1],X=[0,[0,W[1],W[2]]];else
var
X=0;aJ(H,R(a),X);var
j=m}if(j){var
N=j[1],aB=N[2],aC=N[1],aD=0,aE=0,O=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(bxs,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(bxt,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,bxu,b[1][2]]]:0}return 0},aE,aD,aB);if(O){var
P=dg(0,0,O[1][2]);if(P)var
S=P[1],aF=S[2],T=[0,[0,aS(bxv,[0,aC,[0,S[1],0]]),aF]];else
var
T=0;var
U=T}else
var
U=0;var
V=U}else
var
V=0;var
g=V}if(g)return[0,g[1]];var
z=aH(M[1],4),A=aI(z,R(a));if(A){var
B=A[1];if(B)var
C=B[1],D=[0,[0,C[1],C[2]]];else
var
D=0;var
h=D}else{var
i=J4(0,0,a);if(i)var
F=i[1],G=[0,[0,F[1],F[2]]];else
var
G=0;aJ(z,R(a),G);var
h=i}if(h){var
E=h[1];return[0,[0,E[1],E[2]]]}return 0},eJ=function(O,D,n){if(D){M[1]=av(0);c(ap[4],ar)}var
r=0,s=0,d=bJ(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bu_,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bu$,a[1][2]]]:0},s,r,n);if(d){var
e=d[1],t=e[2],u=e[1],v=0,w=0,f=vu(function(b,a){return vw(0,0,a)},w,v,t);if(f){var
g=f[1],x=g[2],y=g[1],z=0,A=0,h=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bva,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bvb,a[1][2]]]:0},A,z,x);if(h)var
B=h[1][2],i=[0,[0,function(d){var
a=fZ(y);if(a)var
b=a[1],e=a[2],f=gT(u,b),c=[0,[0,b[1],f],e];else
var
c=a;return f0(function(b,a){return aS(bvc,[0,dR(oT,b,a),0])},c,d)},B]];else
var
i=0;var
j=i}else
var
j=0;var
b=j}else
var
b=0;if(b)var
a=[0,b[1]];else{var
m=gV(0,0,n);if(m)var
C=m[1][2],a=[0,[0,function(a){return a},C]];else
var
a=0}if(a){var
o=a[1],E=o[2],F=o[1],G=0,H=0,I=function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bxE,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bxF,a[1][2]]]:0},p=jo(function(b,a){return jq(0,0,a)},I,H,G,E);if(p){var
q=p[1],J=q[2],K=q[1],L=function(a){return a},N=aS(bxG,0);return[0,[0,c(F,GO(function(b,a){return aS(bxH,[0,b,[0,a,0]])},N,L,K)),J]]}return 0}return 0},J6=function(m,g,f){if(g){M[1]=av(0);c(ap[4],ar)}var
h=0,i=0,a=eI(function(m_,d){var
cT=cw(bu3,[J,function(Z){var
O=0,P=0;function
S(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(buZ,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bu0,a[1][2]]]:0}var
u=jo(function(d,a){var
b=0,c=0;return Q(function(i,a){var
c=aH(M[1],5),d=aI(c,R(a));if(d){var
e=d[1];if(e){var
f=e[1];return[0,[0,f[1],f[2]]]}return 0}var
b=bo(0,0,a);if(b)var
g=b[1],h=[0,[0,g[1],g[2]]];else
var
h=0;aJ(c,R(a),h);return b},c,b,a)},S,P,O,d);if(u){var
v=u[1],T=v[2],U=v[1],V=0,W=0,w=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bu1,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bu2,a[1][2]]]:0},W,V,T);if(w){var
x=w[1][2],z=0,A=0,e=bJ(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(buV,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,buW,a[1][2]]]:0},A,z,x);if(e){var
f=e[1],B=f[2],C=f[1],D=0,E=0,g=jp(function(d,a){var
b=0,c=0;return Q(function(b,a){return bo(0,0,a)},c,b,a)},E,D,B);if(g){var
h=g[1],F=h[2],G=h[1],H=0,I=0,i=bJ(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(buX,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,buY,a[1][2]]]:0},I,H,F);if(i){var
j=i[1],J=j[1],m=h0(0,0,j[2]);if(m)var
n=m[1],K=n[2],N=n[1],o=[0,[0,dR(bi5,[0,G,gT(C,J)],N),K]];else
var
o=0;var
p=o}else
var
p=0;var
q=p}else
var
q=0;var
b=q}else
var
b=0;if(b)var
a=[0,b[1]];else{var
r=h0(0,0,x);if(r)var
s=r[1],a=[0,[0,s[1],s[2]]];else
var
a=0}if(a)var
t=a[1],c=[0,[0,t[1][1],t[2]]];else
var
c=0;if(c){var
y=c[1],X=y[2],Y=y[1];return[0,[0,L(function(a){return[0,a,Y]},U),X]]}return 0}return 0}return 0}]);if(cT){var
iF=cT[1],mD=iF[2],mE=iF[1],mF=0,mG=0,iG=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bAC,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bAD,a[1][2]]]:0},mG,mF,mD);if(iG)var
mH=iG[1][2],iH=[0,[0,function(a){return cw(bAE,[J,function(a){return ae(function(a){var
b=a[2],c=a[1];je(function(a){return hU(c,b,a)});return 0},mE)}])},mH]];else
var
iH=0;var
bq=iH}else
var
bq=0;if(bq)var
br=[0,bq[1]];else{var
iE=cw(bAB,[J,function(a){return J5(0,0,d)}]);if(iE){var
ja=iE[1],jb=ja[1],m6=ja[2],m7=0,m8=0,jc=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bAW,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bAX,a[1][2]]]:0},m8,m7,m6);if(jc)var
m9=jc[1][2],jd=[0,[0,function(a){return oC[1]?cw(bAY,[J,function(a){return uK(jb[1])}]):cw(bAZ,[J,function(c){var
b=jb[1];function
a(a){return JJ(a)}return oR(0,o(cp(b),a))}])},m9]];else
var
jd=0;var
jf=jd}else
var
jf=0;var
br=jf}if(br)var
bs=[0,br[1]];else{var
mX=0,mY=0,i2=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(bAN,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(bAO,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,bAP,b[1][2]]]:0}return 0},mY,mX,d);if(i2){var
i3=jq(0,0,i2[1][2]);if(i3){var
i4=i3[1],i5=i4[1],mZ=i4[2],m0=0,m1=0,i6=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bAQ,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bAR,a[1][2]]]:0},m1,m0,mZ);if(i6){var
m2=i6[1][2],m3=0,m4=0,i7=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bAS,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bAT,a[1][2]]]:0},m4,m3,m2);if(i7)var
m5=i7[1][2],i8=[0,[0,function(a){return oC[1]?cw(bAU,[J,function(a){return uK(i5[1])}]):cw(bAV,[J,function(d){var
b=i5[1];function
a(a){function
b(b){var
d=[J,function(d){var
b=cv(a[3]);c(ah(bsE),b);return aG}];return f5(vm(b),T,d)}return o(JR(fk,a),b)}return oR(0,o(cp(b),a))}])},m5]];else
var
i8=0;var
i9=i8}else
var
i9=0;var
i_=i9}else
var
i_=0;var
i$=i_}else
var
i$=0;var
bs=i$}if(bs)var
bt=[0,bs[1]];else{var
iW=jq(0,0,d);if(iW){var
iX=iW[1],iY=iX[1],mT=iX[2],mU=0,mV=0,iZ=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bAJ,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bAK,a[1][2]]]:0},mV,mU,mT);if(iZ)var
mW=iZ[1][2],i0=[0,[0,function(a){return oC[1]?cw(bAL,[J,function(a){return uK(iY[1])}]):cw(bAM,[J,function(c){var
b=iY[1];function
a(a){var
b=[J,function(a){return T(0)}];function
c(a){return T(0)}return jg(o(vd(boF,a),c),b)}return oR(0,o(cp(b),a))}])},mW]];else
var
i0=0;var
i1=i0}else
var
i1=0;var
bt=i1}if(bt)var
bu=[0,bt[1]];else{var
mM=0,mN=0,iQ=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bAF,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bAG,a[1][2]]]:0},mN,mM,d);if(iQ){var
a=iQ[1][2],cU=k(a);if(cU){var
cV=cU[1],cW=cV[1],jv=cV[2];if(l(bxI,cW))var
h=[0,[0,cW,jv]],by=1;else
var
by=0}else
var
by=0;if(!by)var
h=0;if(h){var
cX=k(h[1][2]);if(cX){var
cY=cX[1],cZ=cY[1],jw=cY[2];if(l(bxJ,cZ))var
i=[0,[0,cZ,jw]],bz=1;else
var
bz=0}else
var
bz=0;if(!bz)var
i=0;if(i){var
c0=k(i[1][2]);if(c0){var
c1=c0[1],c2=c1[1],jx=c1[2];if(l(bxK,c2))var
j=[0,[0,c2,jx]],bA=1;else
var
bA=0}else
var
bA=0;if(!bA)var
j=0;var
jy=j?[0,[0,bxL,j[1][2]]]:0,c3=jy}else
var
c3=0;var
m=c3}else
var
m=0;if(m){var
jz=m[1][2],jA=0,jB=0,c4=fl(function(b,a){return cz(0,0,a)},jB,jA,jz);if(c4){var
jC=c4[1][2],jD=0,jE=0,c5=Q(function(b,a){return vt(0,0,a)},jE,jD,jC);if(c5)var
c6=c5[1],jF=c6[2],jG=c6[1],c7=[0,[0,function(a){return oz(0,function(a){var
b=c(gU[1],a);return function(a){return kZ(b,a)}},jG)},jF]];else
var
c7=0;var
c8=c7}else
var
c8=0;var
n=c8}else
var
n=0;if(n)var
q=[0,n[1]];else{var
h7=k(a);if(h7){var
h8=h7[1],h9=h8[1],mh=h8[2];if(l(bAr,h9))var
bg=[0,[0,h9,mh]],bB=1;else
var
bB=0}else
var
bB=0;if(!bB)var
bg=0;if(bg){var
h_=k(bg[1][2]);if(h_){var
h$=h_[1],ia=h$[1],mi=h$[2];if(l(bAs,ia))var
bh=[0,[0,ia,mi]],bC=1;else
var
bC=0}else
var
bC=0;if(!bC)var
bh=0;if(bh){var
ib=k(bh[1][2]);if(ib){var
ic=ib[1],id=ic[1],mj=ic[2];if(l(bAt,id))var
bi=[0,[0,id,mj]],bE=1;else
var
bE=0}else
var
bE=0;if(!bE)var
bi=0;if(bi){var
ie=k(bi[1][2]);if(ie){var
ig=ie[1],ih=ig[1],mk=ig[2];if(l(bAu,ih))var
bj=[0,[0,ih,mk]],bF=1;else
var
bF=0}else
var
bF=0;if(!bF)var
bj=0;if(bj){var
ii=k(bj[1][2]);if(ii){var
ij=ii[1],ik=ij[1],ml=ij[2];if(l(bAv,ik))var
bk=[0,[0,ik,ml]],bG=1;else
var
bG=0}else
var
bG=0;if(!bG)var
bk=0;if(bk){var
il=k(bk[1][2]);if(il){var
im=il[1],io=im[1],mm=im[2];if(l(bAw,io))var
bn=[0,[0,io,mm]],bH=1;else
var
bH=0}else
var
bH=0;if(!bH)var
bn=0;var
mn=bn?[0,[0,bAx,bn[1][2]]]:0,ip=mn}else
var
ip=0;var
iq=ip}else
var
iq=0;var
ir=iq}else
var
ir=0;var
is=ir}else
var
is=0;var
bp=is}else
var
bp=0;if(bp){var
mo=bp[1][2],mp=0,mq=0,it=fl(function(b,a){return cz(0,0,a)},mq,mp,mo);if(it){var
mr=it[1][2],ms=0,mt=0,iu=Q(function(b,a){return vt(0,0,a)},mt,ms,mr);if(iu){var
iv=iu[1],mu=iv[2],mv=iv[1],mw=0,mx=0,iw=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(bAy,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(bAz,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,bAA,b[1][2]]]:0}return 0},mx,mw,mu);if(iw){var
my=iw[1][2],mz=0,mA=0,ix=Q(function(b,a){return bo(0,0,a)},mA,mz,my);if(ix)var
iy=ix[1],mB=iy[2],mC=iy[1],iz=[0,[0,function(a){return oz([0,mC],function(a){var
b=c(gU[1],a);return function(a){return kZ(b,a)}},mv)},mB]];else
var
iz=0;var
iA=iz}else
var
iA=0;var
iB=iA}else
var
iB=0;var
iC=iB}else
var
iC=0;var
iD=iC}else
var
iD=0;var
q=iD}if(q)var
r=[0,q[1]];else{var
hz=k(a);if(hz){var
hA=hz[1],hB=hA[1],l5=hA[2];if(l(bAk,hB))var
a$=[0,[0,hB,l5]],bK=1;else
var
bK=0}else
var
bK=0;if(!bK)var
a$=0;if(a$){var
hC=k(a$[1][2]);if(hC){var
hD=hC[1],hE=hD[1],l6=hD[2];if(l(bAl,hE))var
ba=[0,[0,hE,l6]],bL=1;else
var
bL=0}else
var
bL=0;if(!bL)var
ba=0;if(ba){var
hF=k(ba[1][2]);if(hF){var
hG=hF[1],hH=hG[1],l7=hG[2];if(l(bAm,hH))var
bb=[0,[0,hH,l7]],bM=1;else
var
bM=0}else
var
bM=0;if(!bM)var
bb=0;if(bb){var
hI=k(bb[1][2]);if(hI){var
hK=hI[1],hL=hK[1],l8=hK[2];if(l(bAn,hL))var
bc=[0,[0,hL,l8]],bN=1;else
var
bN=0}else
var
bN=0;if(!bN)var
bc=0;if(bc){var
hM=k(bc[1][2]);if(hM){var
hN=hM[1],hO=hN[1],l9=hN[2];if(l(bAo,hO))var
bd=[0,[0,hO,l9]],bO=1;else
var
bO=0}else
var
bO=0;if(!bO)var
bd=0;if(bd){var
hP=k(bd[1][2]);if(hP){var
hQ=hP[1],hT=hQ[1],l_=hQ[2];if(l(bAp,hT))var
be=[0,[0,hT,l_]],bP=1;else
var
bP=0}else
var
bP=0;if(!bP)var
be=0;var
l$=be?[0,[0,bAq,be[1][2]]]:0,hV=l$}else
var
hV=0;var
hW=hV}else
var
hW=0;var
hX=hW}else
var
hX=0;var
hY=hX}else
var
hY=0;var
bf=hY}else
var
bf=0;if(bf){var
ma=bf[1][2],mb=0,mc=0,hZ=fl(function(b,a){return cz(0,0,a)},mc,mb,ma);if(hZ){var
md=hZ[1][2],me=0,mf=0,h1=Q(function(b,a){return bo(0,0,a)},mf,me,md);if(h1)var
h2=h1[1],h3=h2[1],mg=h2[2],h4=[0,[0,function(a){return oz([0,h3],function(a){var
b=c(gU[1],a);return function(a){return kZ(b,a)}},h3)},mg]];else
var
h4=0;var
h5=h4}else
var
h5=0;var
h6=h5}else
var
h6=0;var
r=h6}if(r)var
s=[0,r[1]];else{var
g$=k(a);if(g$){var
ha=g$[1],hb=ha[1],lT=ha[2];if(l(bAd,hb))var
a4=[0,[0,hb,lT]],bQ=1;else
var
bQ=0}else
var
bQ=0;if(!bQ)var
a4=0;if(a4){var
hc=k(a4[1][2]);if(hc){var
hd=hc[1],he=hd[1],lU=hd[2];if(l(bAe,he))var
a5=[0,[0,he,lU]],bR=1;else
var
bR=0}else
var
bR=0;if(!bR)var
a5=0;if(a5){var
hf=k(a5[1][2]);if(hf){var
hg=hf[1],hh=hg[1],lV=hg[2];if(l(bAf,hh))var
a6=[0,[0,hh,lV]],bS=1;else
var
bS=0}else
var
bS=0;if(!bS)var
a6=0;if(a6){var
hi=k(a6[1][2]);if(hi){var
hj=hi[1],hk=hj[1],lW=hj[2];if(l(bAg,hk))var
a7=[0,[0,hk,lW]],bT=1;else
var
bT=0}else
var
bT=0;if(!bT)var
a7=0;if(a7){var
hl=k(a7[1][2]);if(hl){var
hm=hl[1],hn=hm[1],lX=hm[2];if(l(bAh,hn))var
a8=[0,[0,hn,lX]],bU=1;else
var
bU=0}else
var
bU=0;if(!bU)var
a8=0;if(a8){var
ho=k(a8[1][2]);if(ho){var
hp=ho[1],hq=hp[1],lY=hp[2];if(l(bAi,hq))var
a9=[0,[0,hq,lY]],bV=1;else
var
bV=0}else
var
bV=0;if(!bV)var
a9=0;var
lZ=a9?[0,[0,bAj,a9[1][2]]]:0,hr=lZ}else
var
hr=0;var
hs=hr}else
var
hs=0;var
ht=hs}else
var
ht=0;var
hu=ht}else
var
hu=0;var
a_=hu}else
var
a_=0;if(a_){var
l0=a_[1][2],l1=0,l2=0,hv=Q(function(b,a){return bo(0,0,a)},l2,l1,l0);if(hv)var
hw=hv[1],l3=hw[2],l4=hw[1],hx=[0,[0,function(a){return IB(l4)},l3]];else
var
hx=0;var
hy=hx}else
var
hy=0;var
s=hy}if(s)var
t=[0,s[1]];else{var
g0=k(a);if(g0){var
g1=g0[1],g2=g1[1],lO=g1[2];if(l(bz$,g2))var
a0=[0,[0,g2,lO]],bW=1;else
var
bW=0}else
var
bW=0;if(!bW)var
a0=0;if(a0){var
g3=k(a0[1][2]);if(g3){var
g4=g3[1],g5=g4[1],lP=g4[2];if(l(bAa,g5))var
a1=[0,[0,g5,lP]],bX=1;else
var
bX=0}else
var
bX=0;if(!bX)var
a1=0;if(a1){var
g6=k(a1[1][2]);if(g6){var
g7=g6[1],g8=g7[1],lQ=g7[2];if(l(bAb,g8))var
a2=[0,[0,g8,lQ]],bY=1;else
var
bY=0}else
var
bY=0;if(!bY)var
a2=0;var
lR=a2?[0,[0,bAc,a2[1][2]]]:0,g9=lR}else
var
g9=0;var
a3=g9}else
var
a3=0;if(a3)var
lS=a3[1][2],g_=[0,[0,function(a){return IE(0)},lS]];else
var
g_=0;var
t=g_}if(t)var
u=[0,t[1]];else{var
gj=k(a);if(gj){var
gk=gj[1],gl=gk[1],lw=gk[2];if(l(bz1,gl))var
aQ=[0,[0,gl,lw]],bZ=1;else
var
bZ=0}else
var
bZ=0;if(!bZ)var
aQ=0;if(aQ){var
gm=k(aQ[1][2]);if(gm){var
gn=gm[1],go=gn[1],lx=gn[2];if(l(bz2,go))var
aR=[0,[0,go,lx]],b0=1;else
var
b0=0}else
var
b0=0;if(!b0)var
aR=0;if(aR){var
gp=k(aR[1][2]);if(gp){var
gq=gp[1],gr=gq[1],ly=gq[2];if(l(bz3,gr))var
aS=[0,[0,gr,ly]],b1=1;else
var
b1=0}else
var
b1=0;if(!b1)var
aS=0;if(aS){var
gs=k(aS[1][2]);if(gs){var
gt=gs[1],gu=gt[1],lz=gt[2];if(l(bz4,gu))var
aT=[0,[0,gu,lz]],b2=1;else
var
b2=0}else
var
b2=0;if(!b2)var
aT=0;if(aT){var
gv=k(aT[1][2]);if(gv){var
gw=gv[1],gx=gw[1],lA=gw[2];if(l(bz5,gx))var
aU=[0,[0,gx,lA]],b3=1;else
var
b3=0}else
var
b3=0;if(!b3)var
aU=0;if(aU){var
gy=k(aU[1][2]);if(gy){var
gz=gy[1],gA=gz[1],lB=gz[2];if(l(bz6,gA))var
aV=[0,[0,gA,lB]],b4=1;else
var
b4=0}else
var
b4=0;if(!b4)var
aV=0;if(aV){var
gB=k(aV[1][2]);if(gB){var
gC=gB[1],gD=gC[1],lC=gC[2];if(l(bz7,gD))var
aW=[0,[0,gD,lC]],b5=1;else
var
b5=0}else
var
b5=0;if(!b5)var
aW=0;if(aW){var
gE=k(aW[1][2]);if(gE){var
gF=gE[1],gG=gF[1],lD=gF[2];if(l(bz8,gG))var
aX=[0,[0,gG,lD]],b6=1;else
var
b6=0}else
var
b6=0;if(!b6)var
aX=0;if(aX){var
gH=k(aX[1][2]);if(gH){var
gI=gH[1],gJ=gI[1],lE=gI[2];if(l(bz9,gJ))var
aY=[0,[0,gJ,lE]],b7=1;else
var
b7=0}else
var
b7=0;if(!b7)var
aY=0;var
lF=aY?[0,[0,bz_,aY[1][2]]]:0,gK=lF}else
var
gK=0;var
gL=gK}else
var
gL=0;var
gM=gL}else
var
gM=0;var
gO=gM}else
var
gO=0;var
gP=gO}else
var
gP=0;var
gQ=gP}else
var
gQ=0;var
gR=gQ}else
var
gR=0;var
aZ=gR}else
var
aZ=0;if(aZ){var
lG=aZ[1][2],lH=0,lI=0,gS=fl(function(b,a){return cz(0,0,a)},lI,lH,lG);if(gS){var
lJ=gS[1][2],lK=0,lL=0,gV=Q(function(b,a){return JZ(0,0,a)},lL,lK,lJ);if(gV)var
gW=gV[1],lM=gW[2],lN=gW[1],gX=[0,[0,function(e){var
a=bI[1],b=a[29],c=[0,uJ(lN),0],d=ab(a[28],c);bI[1]=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19],a[20],a[21],a[22],a[23],a[24],a[25],a[26],a[27],d,b];return 0},lM]];else
var
gX=0;var
gY=gX}else
var
gY=0;var
gZ=gY}else
var
gZ=0;var
u=gZ}if(u)var
v=[0,u[1]];else{var
fJ=k(a);if(fJ){var
fK=fJ[1],fL=fK[1],li=fK[2];if(l(bzS,fL))var
aD=[0,[0,fL,li]],b8=1;else
var
b8=0}else
var
b8=0;if(!b8)var
aD=0;if(aD){var
fM=k(aD[1][2]);if(fM){var
fN=fM[1],fO=fN[1],lj=fN[2];if(l(bzT,fO))var
aE=[0,[0,fO,lj]],b9=1;else
var
b9=0}else
var
b9=0;if(!b9)var
aE=0;if(aE){var
fP=k(aE[1][2]);if(fP){var
fQ=fP[1],fR=fQ[1],lk=fQ[2];if(l(bzU,fR))var
aF=[0,[0,fR,lk]],b$=1;else
var
b$=0}else
var
b$=0;if(!b$)var
aF=0;if(aF){var
fS=k(aF[1][2]);if(fS){var
fT=fS[1],fU=fT[1],ll=fT[2];if(l(bzV,fU))var
aK=[0,[0,fU,ll]],ca=1;else
var
ca=0}else
var
ca=0;if(!ca)var
aK=0;if(aK){var
fV=k(aK[1][2]);if(fV){var
fW=fV[1],fX=fW[1],lm=fW[2];if(l(bzW,fX))var
aL=[0,[0,fX,lm]],cb=1;else
var
cb=0}else
var
cb=0;if(!cb)var
aL=0;if(aL){var
fY=k(aL[1][2]);if(fY){var
fZ=fY[1],f0=fZ[1],ln=fZ[2];if(l(bzX,f0))var
aM=[0,[0,f0,ln]],cc=1;else
var
cc=0}else
var
cc=0;if(!cc)var
aM=0;if(aM){var
f1=k(aM[1][2]);if(f1){var
f3=f1[1],f4=f3[1],lo=f3[2];if(l(bzY,f4))var
aN=[0,[0,f4,lo]],cd=1;else
var
cd=0}else
var
cd=0;if(!cd)var
aN=0;if(aN){var
f6=k(aN[1][2]);if(f6){var
f7=f6[1],f8=f7[1],lp=f7[2];if(l(bzZ,f8))var
aO=[0,[0,f8,lp]],ce=1;else
var
ce=0}else
var
ce=0;if(!ce)var
aO=0;var
lq=aO?[0,[0,bz0,aO[1][2]]]:0,f9=lq}else
var
f9=0;var
f_=f9}else
var
f_=0;var
f$=f_}else
var
f$=0;var
ga=f$}else
var
ga=0;var
gb=ga}else
var
gb=0;var
gc=gb}else
var
gc=0;var
aP=gc}else
var
aP=0;if(aP){var
lr=aP[1][2],ls=0,lt=0,gd=fl(function(b,a){return cz(0,0,a)},lt,ls,lr);if(gd){var
ge=lg(0,0,gd[1][2]);if(ge)var
gf=ge[1],lu=gf[2],lv=gf[1],gg=[0,[0,function(a){var
f=lv[1];return je(function(g){var
a=uL(c(f,0))[1],b=cN(a[2]),d=hS(a);function
e(a,b){return hR(bjR,a,b)}return p(ah(bjS),e,d,b_,b)})},lu]];else
var
gg=0;var
gh=gg}else
var
gh=0;var
gi=gh}else
var
gi=0;var
v=gi}if(v)var
w=[0,v[1]];else{var
fp=k(a);if(fp){var
fq=fp[1],fr=fq[1],k9=fq[2];if(l(bzN,fr))var
ay=[0,[0,fr,k9]],cf=1;else
var
cf=0}else
var
cf=0;if(!cf)var
ay=0;if(ay){var
fs=k(ay[1][2]);if(fs){var
ft=fs[1],fu=ft[1],k_=ft[2];if(l(bzO,fu))var
az=[0,[0,fu,k_]],cg=1;else
var
cg=0}else
var
cg=0;if(!cg)var
az=0;if(az){var
fv=k(az[1][2]);if(fv){var
fw=fv[1],fx=fw[1],k$=fw[2];if(l(bzP,fx))var
aA=[0,[0,fx,k$]],ch=1;else
var
ch=0}else
var
ch=0;if(!ch)var
aA=0;if(aA){var
fy=k(aA[1][2]);if(fy){var
fz=fy[1],fA=fz[1],la=fz[2];if(l(bzQ,fA))var
aB=[0,[0,fA,la]],ci=1;else
var
ci=0}else
var
ci=0;if(!ci)var
aB=0;var
lb=aB?[0,[0,bzR,aB[1][2]]]:0,fB=lb}else
var
fB=0;var
fC=fB}else
var
fC=0;var
aC=fC}else
var
aC=0;if(aC){var
lc=aC[1][2],ld=0,le=0,fD=fl(function(b,a){return cz(0,0,a)},le,ld,lc);if(fD){var
fE=lg(0,0,fD[1][2]);if(fE)var
fF=fE[1],lf=fF[2],lh=fF[1],fG=[0,[0,function(a){var
f=lh[1];return je(function(g){var
a=k4(c(f,0)),b=cN(a[2]),d=hS(a);function
e(a,b){return hR(bjH,a,b)}return p(ah(bjI),e,d,b_,b)})},lf]];else
var
fG=0;var
fH=fG}else
var
fH=0;var
fI=fH}else
var
fI=0;var
w=fI}if(w)var
x=[0,w[1]];else{var
e5=k(a);if(e5){var
e6=e5[1],e7=e6[1],k1=e6[2];if(l(bzH,e7))var
as=[0,[0,e7,k1]],cj=1;else
var
cj=0}else
var
cj=0;if(!cj)var
as=0;if(as){var
e8=k(as[1][2]);if(e8){var
e9=e8[1],e_=e9[1],k2=e9[2];if(l(bzI,e_))var
at=[0,[0,e_,k2]],ck=1;else
var
ck=0}else
var
ck=0;if(!ck)var
at=0;if(at){var
e$=k(at[1][2]);if(e$){var
fa=e$[1],fb=fa[1],k3=fa[2];if(l(bzJ,fb))var
au=[0,[0,fb,k3]],cl=1;else
var
cl=0}else
var
cl=0;if(!cl)var
au=0;if(au){var
fc=k(au[1][2]);if(fc){var
fd=fc[1],fe=fd[1],k5=fd[2];if(l(bzK,fe))var
av=[0,[0,fe,k5]],cm=1;else
var
cm=0}else
var
cm=0;if(!cm)var
av=0;if(av){var
ff=k(av[1][2]);if(ff){var
fg=ff[1],fh=fg[1],k6=fg[2];if(l(bzL,fh))var
aw=[0,[0,fh,k6]],cn=1;else
var
cn=0}else
var
cn=0;if(!cn)var
aw=0;var
k7=aw?[0,[0,bzM,aw[1][2]]]:0,fi=k7}else
var
fi=0;var
fj=fi}else
var
fj=0;var
fn=fj}else
var
fn=0;var
ax=fn}else
var
ax=0;if(ax)var
k8=ax[1][2],fo=[0,[0,function(a){return ve(0)},k8]];else
var
fo=0;var
x=fo}if(x)var
y=[0,x[1]];else{var
eD=k(a);if(eD){var
eE=eD[1],eF=eE[1],kL=eE[2];if(l(bzA,eF))var
al=[0,[0,eF,kL]],co=1;else
var
co=0}else
var
co=0;if(!co)var
al=0;if(al){var
eG=k(al[1][2]);if(eG){var
eH=eG[1],eI=eH[1],kM=eH[2];if(l(bzB,eI))var
am=[0,[0,eI,kM]],cq=1;else
var
cq=0}else
var
cq=0;if(!cq)var
am=0;if(am){var
eJ=k(am[1][2]);if(eJ){var
eK=eJ[1],eL=eK[1],kN=eK[2];if(l(bzC,eL))var
an=[0,[0,eL,kN]],cr=1;else
var
cr=0}else
var
cr=0;if(!cr)var
an=0;if(an){var
eM=k(an[1][2]);if(eM){var
eN=eM[1],eO=eN[1],kO=eN[2];if(l(bzD,eO))var
ao=[0,[0,eO,kO]],cs=1;else
var
cs=0}else
var
cs=0;if(!cs)var
ao=0;if(ao){var
eP=k(ao[1][2]);if(eP){var
eQ=eP[1],eR=eQ[1],kP=eQ[2];if(l(bzE,eR))var
ap=[0,[0,eR,kP]],ct=1;else
var
ct=0}else
var
ct=0;if(!ct)var
ap=0;if(ap){var
eS=k(ap[1][2]);if(eS){var
eT=eS[1],eU=eT[1],kQ=eT[2];if(l(bzF,eU))var
aq=[0,[0,eU,kQ]],cu=1;else
var
cu=0}else
var
cu=0;if(!cu)var
aq=0;var
kR=aq?[0,[0,bzG,aq[1][2]]]:0,eV=kR}else
var
eV=0;var
eW=eV}else
var
eW=0;var
eX=eW}else
var
eX=0;var
eY=eX}else
var
eY=0;var
ar=eY}else
var
ar=0;if(ar){var
kS=ar[1][2],kT=0,kU=0,eZ=fl(function(b,a){return cz(0,0,a)},kU,kT,kS);if(eZ){var
kV=eZ[1][2],kW=0,kX=0,e0=Q(function(b,a){return vt(0,0,a)},kX,kW,kV);if(e0)var
e1=e0[1],kY=e1[2],k0=e1[1],e2=[0,[0,function(a){ve(0);return oz(0,function(a){var
b=c(gU[1],a);return function(a){return kZ(b,a)}},k0)},kY]];else
var
e2=0;var
e3=e2}else
var
e3=0;var
e4=e3}else
var
e4=0;var
y=e4}if(y)var
z=[0,y[1]];else{var
d5=k(a);if(d5){var
d6=d5[1],d7=d6[1],kA=d6[2];if(l(bzp,d7))var
Y=[0,[0,d7,kA]],cx=1;else
var
cx=0}else
var
cx=0;if(!cx)var
Y=0;if(Y){var
d8=k(Y[1][2]);if(d8){var
d9=d8[1],d$=d9[1],kB=d9[2];if(l(bzq,d$))var
Z=[0,[0,d$,kB]],cy=1;else
var
cy=0}else
var
cy=0;if(!cy)var
Z=0;if(Z){var
ea=k(Z[1][2]);if(ea){var
eb=ea[1],ec=eb[1],kC=eb[2];if(l(bzr,ec))var
_=[0,[0,ec,kC]],cA=1;else
var
cA=0}else
var
cA=0;if(!cA)var
_=0;if(_){var
ed=k(_[1][2]);if(ed){var
ee=ed[1],ef=ee[1],kD=ee[2];if(l(bzs,ef))var
$=[0,[0,ef,kD]],cB=1;else
var
cB=0}else
var
cB=0;if(!cB)var
$=0;if($){var
eg=k($[1][2]);if(eg){var
eh=eg[1],ei=eh[1],kE=eh[2];if(l(bzt,ei))var
aa=[0,[0,ei,kE]],cC=1;else
var
cC=0}else
var
cC=0;if(!cC)var
aa=0;if(aa){var
ej=k(aa[1][2]);if(ej){var
ek=ej[1],el=ek[1],kF=ek[2];if(l(bzu,el))var
ac=[0,[0,el,kF]],cD=1;else
var
cD=0}else
var
cD=0;if(!cD)var
ac=0;if(ac){var
em=k(ac[1][2]);if(em){var
en=em[1],eo=en[1],kG=en[2];if(l(bzv,eo))var
af=[0,[0,eo,kG]],cE=1;else
var
cE=0}else
var
cE=0;if(!cE)var
af=0;if(af){var
ep=k(af[1][2]);if(ep){var
eq=ep[1],er=eq[1],kH=eq[2];if(l(bzw,er))var
ai=[0,[0,er,kH]],cF=1;else
var
cF=0}else
var
cF=0;if(!cF)var
ai=0;if(ai){var
es=k(ai[1][2]);if(es){var
et=es[1],eu=et[1],kI=et[2];if(l(bzx,eu))var
aj=[0,[0,eu,kI]],cG=1;else
var
cG=0}else
var
cG=0;if(!cG)var
aj=0;var
kJ=aj?[0,[0,bzy,aj[1][2]]]:0,ev=kJ}else
var
ev=0;var
ew=ev}else
var
ew=0;var
ex=ew}else
var
ex=0;var
ey=ex}else
var
ey=0;var
ez=ey}else
var
ez=0;var
eA=ez}else
var
eA=0;var
eB=eA}else
var
eB=0;var
ak=eB}else
var
ak=0;if(ak)var
kK=ak[1][2],eC=[0,[0,function(d){var
a=bI[1][22];function
c(a,c){if(c){var
d=c[1];return b(ag(a,aEg),bl,d)}return bl(a,aEh)}return b(ag(hJ,bzz),c,a)},kK]];else
var
eC=0;var
z=eC}if(z)var
A=[0,z[1]];else{var
kw=0,kx=0,d2=fm(function(H,B){var
m=k(B);if(m){var
n=m[1],o=n[1],C=n[2];if(l(bzj,o))var
a=[0,[0,o,C]],f=1;else
var
f=0}else
var
f=0;if(!f)var
a=0;if(a){var
p=k(a[1][2]);if(p){var
q=p[1],r=q[1],D=q[2];if(l(bzk,r))var
b=[0,[0,r,D]],g=1;else
var
g=0}else
var
g=0;if(!g)var
b=0;if(b){var
s=k(b[1][2]);if(s){var
t=s[1],u=t[1],E=t[2];if(l(bzl,u))var
c=[0,[0,u,E]],h=1;else
var
h=0}else
var
h=0;if(!h)var
c=0;if(c){var
v=k(c[1][2]);if(v){var
w=v[1],x=w[1],F=w[2];if(l(bzm,x))var
d=[0,[0,x,F]],i=1;else
var
i=0}else
var
i=0;if(!i)var
d=0;if(d){var
y=k(d[1][2]);if(y){var
z=y[1],A=z[1],G=z[2];if(l(bzn,A))var
e=[0,[0,A,G]],j=1;else
var
j=0}else
var
j=0;if(!j)var
e=0;return e?[0,[0,bzo,e[1][2]]]:0}return 0}return 0}return 0}return 0},kx,kw,a);if(d2)var
d3=d2[1],ky=d3[2],kz=d3[1],d4=[0,[0,function(a){gN[1]=kz;return 0},ky]];else
var
d4=0;var
A=d4}if(A)var
B=[0,A[1]];else{var
ks=0,kt=0,dZ=fm(function(ad,V){var
u=k(V);if(u){var
v=u[1],w=v[1],W=v[2];if(l(by$,w))var
a=[0,[0,w,W]],j=1;else
var
j=0}else
var
j=0;if(!j)var
a=0;if(a){var
x=k(a[1][2]);if(x){var
y=x[1],z=y[1],X=y[2];if(l(bza,z))var
b=[0,[0,z,X]],m=1;else
var
m=0}else
var
m=0;if(!m)var
b=0;if(b){var
A=k(b[1][2]);if(A){var
B=A[1],C=B[1],Y=B[2];if(l(bzb,C))var
c=[0,[0,C,Y]],n=1;else
var
n=0}else
var
n=0;if(!n)var
c=0;if(c){var
D=k(c[1][2]);if(D){var
E=D[1],F=E[1],Z=E[2];if(l(bzc,F))var
d=[0,[0,F,Z]],o=1;else
var
o=0}else
var
o=0;if(!o)var
d=0;if(d){var
G=k(d[1][2]);if(G){var
H=G[1],I=H[1],_=H[2];if(l(bzd,I))var
e=[0,[0,I,_]],p=1;else
var
p=0}else
var
p=0;if(!p)var
e=0;if(e){var
J=k(e[1][2]);if(J){var
K=J[1],L=K[1],$=K[2];if(l(bze,L))var
f=[0,[0,L,$]],q=1;else
var
q=0}else
var
q=0;if(!q)var
f=0;if(f){var
M=k(f[1][2]);if(M){var
N=M[1],O=N[1],aa=N[2];if(l(bzf,O))var
g=[0,[0,O,aa]],r=1;else
var
r=0}else
var
r=0;if(!r)var
g=0;if(g){var
P=k(g[1][2]);if(P){var
Q=P[1],R=Q[1],ab=Q[2];if(l(bzg,R))var
h=[0,[0,R,ab]],s=1;else
var
s=0}else
var
s=0;if(!s)var
h=0;if(h){var
S=k(h[1][2]);if(S){var
T=S[1],U=T[1],ac=T[2];if(l(bzh,U))var
i=[0,[0,U,ac]],t=1;else
var
t=0}else
var
t=0;if(!t)var
i=0;return i?[0,[0,bzi,i[1][2]]]:0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0},kt,ks,a);if(dZ)var
d0=dZ[1],ku=d0[2],kv=d0[1],d1=[0,[0,function(a){bD[1]=kv;return 0},ku]];else
var
d1=0;var
B=d1}if(B)var
C=[0,B[1]];else{var
ko=0,kp=0,dW=fm(function(aj,_){var
w=k(_);if(w){var
x=w[1],y=x[1],$=x[2];if(l(by0,y))var
a=[0,[0,y,$]],m=1;else
var
m=0}else
var
m=0;if(!m)var
a=0;if(a){var
z=k(a[1][2]);if(z){var
A=z[1],B=A[1],aa=A[2];if(l(by1,B))var
b=[0,[0,B,aa]],n=1;else
var
n=0}else
var
n=0;if(!n)var
b=0;if(b){var
C=k(b[1][2]);if(C){var
D=C[1],E=D[1],ab=D[2];if(l(by2,E))var
c=[0,[0,E,ab]],o=1;else
var
o=0}else
var
o=0;if(!o)var
c=0;if(c){var
F=k(c[1][2]);if(F){var
G=F[1],H=G[1],ac=G[2];if(l(by3,H))var
d=[0,[0,H,ac]],p=1;else
var
p=0}else
var
p=0;if(!p)var
d=0;if(d){var
I=k(d[1][2]);if(I){var
J=I[1],K=J[1],ad=J[2];if(l(by4,K))var
e=[0,[0,K,ad]],q=1;else
var
q=0}else
var
q=0;if(!q)var
e=0;if(e){var
L=k(e[1][2]);if(L){var
M=L[1],N=M[1],ae=M[2];if(l(by5,N))var
f=[0,[0,N,ae]],r=1;else
var
r=0}else
var
r=0;if(!r)var
f=0;if(f){var
O=k(f[1][2]);if(O){var
P=O[1],Q=P[1],af=P[2];if(l(by6,Q))var
g=[0,[0,Q,af]],s=1;else
var
s=0}else
var
s=0;if(!s)var
g=0;if(g){var
R=k(g[1][2]);if(R){var
S=R[1],T=S[1],ag=S[2];if(l(by7,T))var
h=[0,[0,T,ag]],t=1;else
var
t=0}else
var
t=0;if(!t)var
h=0;if(h){var
U=k(h[1][2]);if(U){var
V=U[1],W=V[1],ah=V[2];if(l(by8,W))var
i=[0,[0,W,ah]],u=1;else
var
u=0}else
var
u=0;if(!u)var
i=0;if(i){var
X=k(i[1][2]);if(X){var
Y=X[1],Z=Y[1],ai=Y[2];if(l(by9,Z))var
j=[0,[0,Z,ai]],v=1;else
var
v=0}else
var
v=0;if(!v)var
j=0;return j?[0,[0,by_,j[1][2]]]:0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0},kp,ko,a);if(dW)var
dX=dW[1],kq=dX[2],kr=dX[1],dY=[0,[0,function(a){ol[1]=kr;return 0},kq]];else
var
dY=0;var
C=dY}if(C)var
D=[0,C[1]];else{var
kk=0,kl=0,dT=fm(function(aj,_){var
w=k(_);if(w){var
x=w[1],y=x[1],$=x[2];if(l(byP,y))var
a=[0,[0,y,$]],m=1;else
var
m=0}else
var
m=0;if(!m)var
a=0;if(a){var
z=k(a[1][2]);if(z){var
A=z[1],B=A[1],aa=A[2];if(l(byQ,B))var
b=[0,[0,B,aa]],n=1;else
var
n=0}else
var
n=0;if(!n)var
b=0;if(b){var
C=k(b[1][2]);if(C){var
D=C[1],E=D[1],ab=D[2];if(l(byR,E))var
c=[0,[0,E,ab]],o=1;else
var
o=0}else
var
o=0;if(!o)var
c=0;if(c){var
F=k(c[1][2]);if(F){var
G=F[1],H=G[1],ac=G[2];if(l(byS,H))var
d=[0,[0,H,ac]],p=1;else
var
p=0}else
var
p=0;if(!p)var
d=0;if(d){var
I=k(d[1][2]);if(I){var
J=I[1],K=J[1],ad=J[2];if(l(byT,K))var
e=[0,[0,K,ad]],q=1;else
var
q=0}else
var
q=0;if(!q)var
e=0;if(e){var
L=k(e[1][2]);if(L){var
M=L[1],N=M[1],ae=M[2];if(l(byU,N))var
f=[0,[0,N,ae]],r=1;else
var
r=0}else
var
r=0;if(!r)var
f=0;if(f){var
O=k(f[1][2]);if(O){var
P=O[1],Q=P[1],af=P[2];if(l(byV,Q))var
g=[0,[0,Q,af]],s=1;else
var
s=0}else
var
s=0;if(!s)var
g=0;if(g){var
R=k(g[1][2]);if(R){var
S=R[1],T=S[1],ag=S[2];if(l(byW,T))var
h=[0,[0,T,ag]],t=1;else
var
t=0}else
var
t=0;if(!t)var
h=0;if(h){var
U=k(h[1][2]);if(U){var
V=U[1],W=V[1],ah=V[2];if(l(byX,W))var
i=[0,[0,W,ah]],u=1;else
var
u=0}else
var
u=0;if(!u)var
i=0;if(i){var
X=k(i[1][2]);if(X){var
Y=X[1],Z=Y[1],ai=Y[2];if(l(byY,Z))var
j=[0,[0,Z,ai]],v=1;else
var
v=0}else
var
v=0;if(!v)var
j=0;return j?[0,[0,byZ,j[1][2]]]:0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0},kl,kk,a);if(dT)var
dU=dT[1],km=dU[2],kn=dU[1],dV=[0,[0,function(a){H1[1]=kn;return 0},km]];else
var
dV=0;var
D=dV}if(D)var
E=[0,D[1]];else{var
kg=0,kh=0,dO=fm(function(aj,_){var
w=k(_);if(w){var
x=w[1],y=x[1],$=x[2];if(l(byE,y))var
a=[0,[0,y,$]],m=1;else
var
m=0}else
var
m=0;if(!m)var
a=0;if(a){var
z=k(a[1][2]);if(z){var
A=z[1],B=A[1],aa=A[2];if(l(byF,B))var
b=[0,[0,B,aa]],n=1;else
var
n=0}else
var
n=0;if(!n)var
b=0;if(b){var
C=k(b[1][2]);if(C){var
D=C[1],E=D[1],ab=D[2];if(l(byG,E))var
c=[0,[0,E,ab]],o=1;else
var
o=0}else
var
o=0;if(!o)var
c=0;if(c){var
F=k(c[1][2]);if(F){var
G=F[1],H=G[1],ac=G[2];if(l(byH,H))var
d=[0,[0,H,ac]],p=1;else
var
p=0}else
var
p=0;if(!p)var
d=0;if(d){var
I=k(d[1][2]);if(I){var
J=I[1],K=J[1],ad=J[2];if(l(byI,K))var
e=[0,[0,K,ad]],q=1;else
var
q=0}else
var
q=0;if(!q)var
e=0;if(e){var
L=k(e[1][2]);if(L){var
M=L[1],N=M[1],ae=M[2];if(l(byJ,N))var
f=[0,[0,N,ae]],r=1;else
var
r=0}else
var
r=0;if(!r)var
f=0;if(f){var
O=k(f[1][2]);if(O){var
P=O[1],Q=P[1],af=P[2];if(l(byK,Q))var
g=[0,[0,Q,af]],s=1;else
var
s=0}else
var
s=0;if(!s)var
g=0;if(g){var
R=k(g[1][2]);if(R){var
S=R[1],T=S[1],ag=S[2];if(l(byL,T))var
h=[0,[0,T,ag]],t=1;else
var
t=0}else
var
t=0;if(!t)var
h=0;if(h){var
U=k(h[1][2]);if(U){var
V=U[1],W=V[1],ah=V[2];if(l(byM,W))var
i=[0,[0,W,ah]],u=1;else
var
u=0}else
var
u=0;if(!u)var
i=0;if(i){var
X=k(i[1][2]);if(X){var
Y=X[1],Z=Y[1],ai=Y[2];if(l(byN,Z))var
j=[0,[0,Z,ai]],v=1;else
var
v=0}else
var
v=0;if(!v)var
j=0;return j?[0,[0,byO,j[1][2]]]:0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0},kh,kg,a);if(dO)var
dP=dO[1],ki=dP[2],kj=dP[1],dQ=[0,[0,function(a){vl[1]=kj;return 0},ki]];else
var
dQ=0;var
E=dQ}if(E)var
F=[0,E[1]];else{var
kc=0,kd=0,dL=fm(function(ap,ad){var
y=k(ad);if(y){var
z=y[1],A=z[1],ae=z[2];if(l(bys,A))var
a=[0,[0,A,ae]],n=1;else
var
n=0}else
var
n=0;if(!n)var
a=0;if(a){var
B=k(a[1][2]);if(B){var
C=B[1],D=C[1],af=C[2];if(l(byt,D))var
b=[0,[0,D,af]],o=1;else
var
o=0}else
var
o=0;if(!o)var
b=0;if(b){var
E=k(b[1][2]);if(E){var
F=E[1],G=F[1],ag=F[2];if(l(byu,G))var
c=[0,[0,G,ag]],p=1;else
var
p=0}else
var
p=0;if(!p)var
c=0;if(c){var
H=k(c[1][2]);if(H){var
I=H[1],J=I[1],ah=I[2];if(l(byv,J))var
d=[0,[0,J,ah]],q=1;else
var
q=0}else
var
q=0;if(!q)var
d=0;if(d){var
K=k(d[1][2]);if(K){var
L=K[1],M=L[1],ai=L[2];if(l(byw,M))var
e=[0,[0,M,ai]],r=1;else
var
r=0}else
var
r=0;if(!r)var
e=0;if(e){var
N=k(e[1][2]);if(N){var
O=N[1],P=O[1],aj=O[2];if(l(byx,P))var
f=[0,[0,P,aj]],s=1;else
var
s=0}else
var
s=0;if(!s)var
f=0;if(f){var
Q=k(f[1][2]);if(Q){var
R=Q[1],S=R[1],ak=R[2];if(l(byy,S))var
g=[0,[0,S,ak]],t=1;else
var
t=0}else
var
t=0;if(!t)var
g=0;if(g){var
T=k(g[1][2]);if(T){var
U=T[1],V=U[1],al=U[2];if(l(byz,V))var
h=[0,[0,V,al]],u=1;else
var
u=0}else
var
u=0;if(!u)var
h=0;if(h){var
W=k(h[1][2]);if(W){var
X=W[1],Y=X[1],am=X[2];if(l(byA,Y))var
i=[0,[0,Y,am]],v=1;else
var
v=0}else
var
v=0;if(!v)var
i=0;if(i){var
Z=k(i[1][2]);if(Z){var
_=Z[1],$=_[1],an=_[2];if(l(byB,$))var
j=[0,[0,$,an]],w=1;else
var
w=0}else
var
w=0;if(!w)var
j=0;if(j){var
aa=k(j[1][2]);if(aa){var
ab=aa[1],ac=ab[1],ao=ab[2];if(l(byC,ac))var
m=[0,[0,ac,ao]],x=1;else
var
x=0}else
var
x=0;if(!x)var
m=0;return m?[0,[0,byD,m[1][2]]]:0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0},kd,kc,a);if(dL)var
dM=dL[1],ke=dM[2],kf=dM[1],dN=[0,[0,function(a){IW[1]=kf;return 0},ke]];else
var
dN=0;var
F=dN}if(F)var
G=[0,F[1]];else{var
j_=0,j$=0,dI=fm(function(ad,V){var
u=k(V);if(u){var
v=u[1],w=v[1],W=v[2];if(l(byi,w))var
a=[0,[0,w,W]],j=1;else
var
j=0}else
var
j=0;if(!j)var
a=0;if(a){var
x=k(a[1][2]);if(x){var
y=x[1],z=y[1],X=y[2];if(l(byj,z))var
b=[0,[0,z,X]],m=1;else
var
m=0}else
var
m=0;if(!m)var
b=0;if(b){var
A=k(b[1][2]);if(A){var
B=A[1],C=B[1],Y=B[2];if(l(byk,C))var
c=[0,[0,C,Y]],n=1;else
var
n=0}else
var
n=0;if(!n)var
c=0;if(c){var
D=k(c[1][2]);if(D){var
E=D[1],F=E[1],Z=E[2];if(l(byl,F))var
d=[0,[0,F,Z]],o=1;else
var
o=0}else
var
o=0;if(!o)var
d=0;if(d){var
G=k(d[1][2]);if(G){var
H=G[1],I=H[1],_=H[2];if(l(bym,I))var
e=[0,[0,I,_]],p=1;else
var
p=0}else
var
p=0;if(!p)var
e=0;if(e){var
J=k(e[1][2]);if(J){var
K=J[1],L=K[1],$=K[2];if(l(byn,L))var
f=[0,[0,L,$]],q=1;else
var
q=0}else
var
q=0;if(!q)var
f=0;if(f){var
M=k(f[1][2]);if(M){var
N=M[1],O=N[1],aa=N[2];if(l(byo,O))var
g=[0,[0,O,aa]],r=1;else
var
r=0}else
var
r=0;if(!r)var
g=0;if(g){var
P=k(g[1][2]);if(P){var
Q=P[1],R=Q[1],ab=Q[2];if(l(byp,R))var
h=[0,[0,R,ab]],s=1;else
var
s=0}else
var
s=0;if(!s)var
h=0;if(h){var
S=k(h[1][2]);if(S){var
T=S[1],U=T[1],ac=T[2];if(l(byq,U))var
i=[0,[0,U,ac]],t=1;else
var
t=0}else
var
t=0;if(!t)var
i=0;return i?[0,[0,byr,i[1][2]]]:0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0},j$,j_,a);if(dI)var
dJ=dI[1],ka=dJ[2],kb=dJ[1],dK=[0,[0,function(a){HU[1]=kb;return 0},ka]];else
var
dK=0;var
G=dK}if(G)var
H=[0,G[1]];else{var
j6=0,j7=0,dF=fm(function(v,r){var
g=k(r);if(g){var
h=g[1],i=h[1],s=h[2];if(l(bye,i))var
a=[0,[0,i,s]],d=1;else
var
d=0}else
var
d=0;if(!d)var
a=0;if(a){var
j=k(a[1][2]);if(j){var
m=j[1],n=m[1],t=m[2];if(l(byf,n))var
b=[0,[0,n,t]],e=1;else
var
e=0}else
var
e=0;if(!e)var
b=0;if(b){var
o=k(b[1][2]);if(o){var
p=o[1],q=p[1],u=p[2];if(l(byg,q))var
c=[0,[0,q,u]],f=1;else
var
f=0}else
var
f=0;if(!f)var
c=0;return c?[0,[0,byh,c[1][2]]]:0}return 0}return 0},j7,j6,a);if(dF)var
dG=dF[1],j8=dG[2],j9=dG[1],dH=[0,[0,function(a){uU[1]=j9;return 0},j8]];else
var
dH=0;var
H=dH}if(H)var
I=[0,H[1]];else{var
j2=0,j3=0,dC=fm(function(aH,as){var
E=k(as);if(E){var
F=E[1],G=F[1],at=F[2];if(l(bx1,G))var
a=[0,[0,G,at]],q=1;else
var
q=0}else
var
q=0;if(!q)var
a=0;if(a){var
H=k(a[1][2]);if(H){var
I=H[1],J=I[1],au=I[2];if(l(bx2,J))var
b=[0,[0,J,au]],r=1;else
var
r=0}else
var
r=0;if(!r)var
b=0;if(b){var
K=k(b[1][2]);if(K){var
L=K[1],M=L[1],av=L[2];if(l(bx3,M))var
c=[0,[0,M,av]],s=1;else
var
s=0}else
var
s=0;if(!s)var
c=0;if(c){var
N=k(c[1][2]);if(N){var
O=N[1],P=O[1],aw=O[2];if(l(bx4,P))var
d=[0,[0,P,aw]],t=1;else
var
t=0}else
var
t=0;if(!t)var
d=0;if(d){var
Q=k(d[1][2]);if(Q){var
R=Q[1],S=R[1],ax=R[2];if(l(bx5,S))var
e=[0,[0,S,ax]],u=1;else
var
u=0}else
var
u=0;if(!u)var
e=0;if(e){var
T=k(e[1][2]);if(T){var
U=T[1],V=U[1],ay=U[2];if(l(bx6,V))var
f=[0,[0,V,ay]],v=1;else
var
v=0}else
var
v=0;if(!v)var
f=0;if(f){var
W=k(f[1][2]);if(W){var
X=W[1],Y=X[1],az=X[2];if(l(bx7,Y))var
g=[0,[0,Y,az]],w=1;else
var
w=0}else
var
w=0;if(!w)var
g=0;if(g){var
Z=k(g[1][2]);if(Z){var
_=Z[1],$=_[1],aA=_[2];if(l(bx8,$))var
h=[0,[0,$,aA]],x=1;else
var
x=0}else
var
x=0;if(!x)var
h=0;if(h){var
aa=k(h[1][2]);if(aa){var
ab=aa[1],ac=ab[1],aB=ab[2];if(l(bx9,ac))var
i=[0,[0,ac,aB]],y=1;else
var
y=0}else
var
y=0;if(!y)var
i=0;if(i){var
ad=k(i[1][2]);if(ad){var
ae=ad[1],af=ae[1],aC=ae[2];if(l(bx_,af))var
j=[0,[0,af,aC]],z=1;else
var
z=0}else
var
z=0;if(!z)var
j=0;if(j){var
ag=k(j[1][2]);if(ag){var
ah=ag[1],ai=ah[1],aD=ah[2];if(l(bx$,ai))var
m=[0,[0,ai,aD]],A=1;else
var
A=0}else
var
A=0;if(!A)var
m=0;if(m){var
aj=k(m[1][2]);if(aj){var
ak=aj[1],al=ak[1],aE=ak[2];if(l(bya,al))var
n=[0,[0,al,aE]],B=1;else
var
B=0}else
var
B=0;if(!B)var
n=0;if(n){var
am=k(n[1][2]);if(am){var
an=am[1],ao=an[1],aF=an[2];if(l(byb,ao))var
o=[0,[0,ao,aF]],C=1;else
var
C=0}else
var
C=0;if(!C)var
o=0;if(o){var
ap=k(o[1][2]);if(ap){var
aq=ap[1],ar=aq[1],aG=aq[2];if(l(byc,ar))var
p=[0,[0,ar,aG]],D=1;else
var
D=0}else
var
D=0;if(!D)var
p=0;return p?[0,[0,byd,p[1][2]]]:0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0}return 0},j3,j2,a);if(dC)var
dD=dC[1],j4=dD[2],j5=dD[1],dE=[0,[0,function(a){oC[1]=j5;return 0},j4]];else
var
dE=0;var
I=dE}if(I)var
N=[0,I[1]];else{var
jT=0,jU=0,dw=fm(function(H,B){var
m=k(B);if(m){var
n=m[1],o=n[1],C=n[2];if(l(bxT,o))var
a=[0,[0,o,C]],f=1;else
var
f=0}else
var
f=0;if(!f)var
a=0;if(a){var
p=k(a[1][2]);if(p){var
q=p[1],r=q[1],D=q[2];if(l(bxU,r))var
b=[0,[0,r,D]],g=1;else
var
g=0}else
var
g=0;if(!g)var
b=0;if(b){var
s=k(b[1][2]);if(s){var
t=s[1],u=t[1],E=t[2];if(l(bxV,u))var
c=[0,[0,u,E]],h=1;else
var
h=0}else
var
h=0;if(!h)var
c=0;if(c){var
v=k(c[1][2]);if(v){var
w=v[1],x=w[1],F=w[2];if(l(bxW,x))var
d=[0,[0,x,F]],i=1;else
var
i=0}else
var
i=0;if(!i)var
d=0;if(d){var
y=k(d[1][2]);if(y){var
z=y[1],A=z[1],G=z[2];if(l(bxX,A))var
e=[0,[0,A,G]],j=1;else
var
j=0}else
var
j=0;if(!j)var
e=0;return e?[0,[0,bxY,e[1][2]]]:0}return 0}return 0}return 0}return 0},jU,jT,a);if(dw){var
dx=dw[1],jV=dx[2],jW=dx[1],jX=0,jY=0,jZ=function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bxZ,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bx0,a[1][2]]]:0},dy=jo(function(b,a){return lg(0,0,a)},jZ,jY,jX,jV);if(dy)var
dz=dy[1],j0=dz[2],j1=dz[1],dA=[0,[0,function(a){return ae(function(b){var
c=b[1];function
a(a){function
b(e){function
f(a){return bm(bmR,function(b){return oP(jW,a)})}var
b=e[1];if(typeof
b==="number")var
a=0;else
if(K===b[1]){var
d=b[2][2];if(ad===d[1])var
c=T(d[2]),a=1;else
var
a=0}else
var
a=0;if(!a)var
c=aG;return o(c,f)}return o(cp(function(b){return k4(a)}),b)}return oR(0,o(cp(c),a))},j1)},j0]];else
var
dA=0;var
dB=dA}else
var
dB=0;var
N=dB}if(N)var
e=[0,N[1]];else{var
c9=k(a);if(c9){var
c_=c9[1],c$=c_[1],jH=c_[2];if(l(bxM,c$))var
O=[0,[0,c$,jH]],cH=1;else
var
cH=0}else
var
cH=0;if(!cH)var
O=0;if(O){var
da=k(O[1][2]);if(da){var
db=da[1],dc=db[1],jI=db[2];if(l(bxN,dc))var
P=[0,[0,dc,jI]],cI=1;else
var
cI=0}else
var
cI=0;if(!cI)var
P=0;if(P){var
dd=k(P[1][2]);if(dd){var
de=dd[1],df=de[1],jJ=de[2];if(l(bxO,df))var
S=[0,[0,df,jJ]],cJ=1;else
var
cJ=0}else
var
cJ=0;if(!cJ)var
S=0;if(S){var
dg=k(S[1][2]);if(dg){var
dh=dg[1],di=dh[1],jK=dh[2];if(l(bxP,di))var
U=[0,[0,di,jK]],cK=1;else
var
cK=0}else
var
cK=0;if(!cK)var
U=0;if(U){var
dj=k(U[1][2]);if(dj){var
dk=dj[1],dl=dk[1],jL=dk[2];if(l(bxQ,dl))var
V=[0,[0,dl,jL]],cL=1;else
var
cL=0}else
var
cL=0;if(!cL)var
V=0;if(V){var
dm=k(V[1][2]);if(dm){var
dn=dm[1],dp=dn[1],jM=dn[2];if(l(bxR,dp))var
W=[0,[0,dp,jM]],cM=1;else
var
cM=0}else
var
cM=0;if(!cM)var
W=0;var
jN=W?[0,[0,bxS,W[1][2]]]:0,dq=jN}else
var
dq=0;var
dr=dq}else
var
dr=0;var
ds=dr}else
var
ds=0;var
dt=ds}else
var
dt=0;var
X=dt}else
var
X=0;if(X){var
jO=X[1][2],jP=0,jQ=0,du=Q(function(q,i){var
b=JW(0,0,i),c=b?[0,[0,b[1][1],i]]:0;if(c){var
d=oU(0,0,c[1][2]);if(d)var
e=d[1],a=[0,[0,e[1],e[2]]];else
var
a=0}else
var
a=0;if(a){var
f=a[1],j=f[2],m=f[1],n=0,o=0,g=dS(function(q,o){var
d=JW(0,0,o),e=d?[0,[0,d[1][1],o]]:0;if(e){var
a=e[1][2],f=oU(0,0,a),g=f?[0,f[1]]:jn(0,0,a);if(g)var
b=[0,g[1]];else{var
i=k(a);if(i){var
j=i[1],m=j[1],p=j[2];if(l(buu,m))var
n=[0,[0,m,p]],c=1;else
var
c=0}else
var
c=0;if(!c)var
n=0;var
b=n}if(b){var
h=b[1];return[0,[0,h[1],h[2]]]}return 0}return 0},o,n,j);if(g){var
h=g[1],p=h[2];return[0,[0,d_(f2([0,m,h[1]])),p]]}return 0}return 0},jQ,jP,jO);if(du)var
dv=du[1],jR=dv[2],jS=dv[1],e=[0,[0,function(a){throw[0,bsI,jS]},jR]];else
var
e=0}else
var
e=0}if(e){var
iR=e[1],mO=iR[2],mP=iR[1],mQ=0,mR=0,iS=Q(function(h,f){var
c=k(f);if(c){var
d=c[1],e=d[1],g=d[2];if(l(bAH,e))var
a=[0,[0,e,g]],b=1;else
var
b=0}else
var
b=0;if(!b)var
a=0;return a?[0,[0,bAI,a[1][2]]]:0},mR,mQ,mO);if(iS)var
mS=iS[1][2],iT=[0,[0,function(a){return c(mP,0)},mS]];else
var
iT=0;var
iU=iT}else
var
iU=0;var
iV=iU}else
var
iV=0;var
bu=iV}if(bu)var
bv=[0,bu[1]];else{var
jk=0,jl=0,cQ=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(btx,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(bty,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,btz,b[1][2]]]:0}return 0},jl,jk,d);if(cQ){var
jm=cQ[1][2],jh=0,ji=0,cO=fl(function(u,q){var
e=k(q);if(e){var
f=e[1],g=f[1],r=f[2];if(l(bsM,g))var
a=[0,[0,g,r]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],s=i[2];if(l(bsN,j))var
b=[0,[0,j,s]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;var
t=b?[0,[0,bsO,b[1][2]]]:0,m=t}else
var
m=0;var
n=m?0:[0,[0,0,q]];if(n){var
o=k(n[1][2]);if(o){var
p=o[1];return[0,[0,p[1],p[2]]]}return 0}return 0},ji,jh,jm);if(cO)var
cP=cO[1],jj=cP[2],g=[0,[0,d_(f2(cP[1])),jj]];else
var
g=0;if(g)var
cR=g[1],jr=cR[2],js=cR[1],jt=0,ju=0,cS=Q(function(p,m){var
e=k(m);if(e){var
f=e[1],g=f[1],n=f[2];if(l(btA,g))var
a=[0,[0,g,n]],c=1;else
var
c=0}else
var
c=0;if(!c)var
a=0;if(a){var
h=k(a[1][2]);if(h){var
i=h[1],j=i[1],o=i[2];if(l(btB,j))var
b=[0,[0,j,o]],d=1;else
var
d=0}else
var
d=0;if(!d)var
b=0;return b?[0,[0,btC,b[1][2]]]:0}return 0},ju,jt,jr),f=cS?[0,[0,js,cS[1][2]]]:0;else
var
f=0}else
var
f=0;if(f)var
mL=f[1][2],iP=[0,[0,function(a){return 0},mL]];else
var
iP=0;var
bv=iP}if(bv)return[0,bv[1]];var
iI=aH(M[1],0),iJ=aI(iI,R(d));if(iJ){var
iK=iJ[1];if(iK)var
iL=iK[1],iM=[0,[0,iL[1],iL[2]]];else
var
iM=0;var
bw=iM}else{var
mJ=0,mK=0,bx=vn(function(b,a){return cz(0,0,a)},mK,mJ,d);if(bx)var
iN=bx[1],iO=[0,[0,iN[1],iN[2]]];else
var
iO=0;aJ(iI,R(d),iO);var
bw=bx}if(bw){var
mI=bw[1][2];return[0,[0,function(a){return 0},mI]]}return 0},i,h,f);if(a){var
d=a[1],e=d[1],j=d[2];return[0,[0,function(b){JT[1]=e[2];var
a=e[1];return cw(bA0,[J,function(b){return c(a,0)}])},j]]}return 0},J7=function(h,e,d){if(e){M[1]=av(0);c(ap[4],ar)}var
a=J6(0,0,d);if(a){var
b=a[1],f=b[2],g=b[1];return[0,[0,function(a){c(g,0);return iP(hJ)},f]]}return 0};HN(bBr);gU[1]=function(y,C,i,h){var
z=M[1],A=c(ap[5],ar);if(zz<=y){if(i){M[1]=av(0);c(ap[4],ar)}var
p=0,q=0,a=dS(function(b,a){return J7(0,0,a)},q,p,h);if(a)var
d=a[1],r=d[2],s=d[1],t=0,u=0,e=ed(function(b,a){return cz(0,0,a)},u,t,r),j=e?[0,[0,s,e[1][2]]]:0;else
var
j=0;var
n=j}else{if(i){M[1]=av(0);c(ap[4],ar)}var
v=0,w=0,f=dS(function(b5,E){var
ab=k(E);if(ab){var
ac=ab[1],ad=ac[1],bz=ac[2];if(l(bA4,ad))var
d=[0,[0,ad,bz]],F=1;else
var
F=0}else
var
F=0;if(!F)var
d=0;if(d){var
ae=k(d[1][2]);if(ae){var
af=ae[1],ag=af[1],bA=af[2];if(l(bA5,ag))var
e=[0,[0,ag,bA]],G=1;else
var
G=0}else
var
G=0;if(!G)var
e=0;if(e){var
ah=k(e[1][2]);if(ah){var
ai=ah[1],aj=ai[1],bB=ai[2];if(l(bA6,aj))var
f=[0,[0,aj,bB]],H=1;else
var
H=0}else
var
H=0;if(!H)var
f=0;if(f){var
ak=k(f[1][2]);if(ak){var
al=ak[1],am=al[1],bC=al[2];if(l(bA7,am))var
g=[0,[0,am,bC]],I=1;else
var
I=0}else
var
I=0;if(!I)var
g=0;if(g){var
an=k(g[1][2]);if(an){var
ao=an[1],ap=ao[1],bD=ao[2];if(l(bA8,ap))var
h=[0,[0,ap,bD]],J=1;else
var
J=0}else
var
J=0;if(!J)var
h=0;if(h){var
aq=k(h[1][2]);if(aq){var
ar=aq[1],as=ar[1],bE=ar[2];if(l(bA9,as))var
i=[0,[0,as,bE]],K=1;else
var
K=0}else
var
K=0;if(!K)var
i=0;if(i){var
at=k(i[1][2]);if(at){var
au=at[1],av=au[1],bF=au[2];if(l(bA_,av))var
j=[0,[0,av,bF]],L=1;else
var
L=0}else
var
L=0;if(!L)var
j=0;if(j){var
aw=k(j[1][2]);if(aw){var
ax=aw[1],ay=ax[1],bG=ax[2];if(l(bA$,ay))var
m=[0,[0,ay,bG]],M=1;else
var
M=0}else
var
M=0;if(!M)var
m=0;if(m){var
az=k(m[1][2]);if(az){var
aA=az[1],aB=aA[1],bH=aA[2];if(l(bBa,aB))var
n=[0,[0,aB,bH]],N=1;else
var
N=0}else
var
N=0;if(!N)var
n=0;var
bI=n?[0,[0,bBb,n[1][2]]]:0,aC=bI}else
var
aC=0;var
aD=aC}else
var
aD=0;var
aE=aD}else
var
aE=0;var
aF=aE}else
var
aF=0;var
aG=aF}else
var
aG=0;var
aH=aG}else
var
aH=0;var
aI=aH}else
var
aI=0;var
o=aI}else
var
o=0;if(o){var
bJ=o[1][2],bK=0,bL=0,aJ=dS(function(C,s){var
g=J7(0,0,s);if(g)var
h=g[1],t=h[2],u=h[1],v=0,w=0,i=ed(function(b,a){return cz(0,0,a)},w,v,t),x=i?[0,[0,u,i[1][2]]]:0,a=x;else
var
a=0;if(a)return[0,a[1]];var
j=k(s);if(j){var
m=j[1],n=m[1],y=m[2];if(l(bA1,n))var
b=[0,[0,n,y]],e=1;else
var
e=0}else
var
e=0;if(!e)var
b=0;if(b){var
o=k(b[1][2]);if(o){var
p=o[1],q=p[1],z=p[2];if(l(bA2,q))var
c=[0,[0,q,z]],f=1;else
var
f=0}else
var
f=0;if(!f)var
c=0;var
A=c?[0,[0,bA3,c[1][2]]]:0,d=A}else
var
d=0;if(d){var
r=JU(0,0,d[1][2]);if(r){var
B=r[1][2];return[0,[0,function(a){return 0},B]]}return 0}return 0},bL,bK,bJ);if(aJ){var
aK=aJ[1],bM=aK[2],bN=aK[1],bO=0,bP=0,aL=ed(function(b,a){return cz(0,0,a)},bP,bO,bM);if(aL){var
p=aL[1][2];if(gV(0,0,p))if(1===p[2][3])var
c=[0,[0,0,p]],O=1;else
var
O=0;else
var
O=0;if(!O)var
c=0;if(c){var
aM=k(c[1][2]);if(aM){var
aN=aM[1],aO=aN[1],bQ=aN[2];if(l(bBc,aO))var
q=[0,[0,aO,bQ]],P=1;else
var
P=0}else
var
P=0;if(!P)var
q=0;if(q){var
aP=k(q[1][2]);if(aP){var
aQ=aP[1],aR=aQ[1],bR=aQ[2];if(l(bBd,aR))var
r=[0,[0,aR,bR]],Q=1;else
var
Q=0}else
var
Q=0;if(!Q)var
r=0;if(r){var
aS=k(r[1][2]);if(aS){var
aT=aS[1],aU=aT[1],bS=aT[2];if(l(bBe,aU))var
s=[0,[0,aU,bS]],R=1;else
var
R=0}else
var
R=0;if(!R)var
s=0;if(s){var
aV=k(s[1][2]);if(aV){var
aW=aV[1],aX=aW[1],bT=aW[2];if(l(bBf,aX))var
t=[0,[0,aX,bT]],S=1;else
var
S=0}else
var
S=0;if(!S)var
t=0;var
a=t?[0,[0,bBg,t[1][2]]]:0}else
var
a=0}else
var
a=0}else
var
a=0;if(a)var
aa=a[1],b=[0,[0,aa[1],aa[2]]];else
var
b=0}else
var
b=0;var
bU=b?[0,[0,bN,b[1][2]]]:0,aY=bU}else
var
aY=0;var
aZ=aY}else
var
aZ=0;var
u=aZ}else
var
u=0;if(u)return[0,u[1]];var
a0=k(E);if(a0){var
a1=a0[1],a2=a1[1],bV=a1[2];if(l(bBh,a2))var
v=[0,[0,a2,bV]],T=1;else
var
T=0}else
var
T=0;if(!T)var
v=0;if(v){var
a3=k(v[1][2]);if(a3){var
a4=a3[1],a5=a4[1],bW=a4[2];if(l(bBi,a5))var
w=[0,[0,a5,bW]],U=1;else
var
U=0}else
var
U=0;if(!U)var
w=0;if(w){var
a6=k(w[1][2]);if(a6){var
a7=a6[1],a8=a7[1],bX=a7[2];if(l(bBj,a8))var
x=[0,[0,a8,bX]],V=1;else
var
V=0}else
var
V=0;if(!V)var
x=0;if(x){var
a9=k(x[1][2]);if(a9){var
a_=a9[1],a$=a_[1],bY=a_[2];if(l(bBk,a$))var
y=[0,[0,a$,bY]],W=1;else
var
W=0}else
var
W=0;if(!W)var
y=0;if(y){var
ba=k(y[1][2]);if(ba){var
bb=ba[1],bc=bb[1],bZ=bb[2];if(l(bBl,bc))var
z=[0,[0,bc,bZ]],X=1;else
var
X=0}else
var
X=0;if(!X)var
z=0;if(z){var
bd=k(z[1][2]);if(bd){var
be=bd[1],bf=be[1],b0=be[2];if(l(bBm,bf))var
A=[0,[0,bf,b0]],Y=1;else
var
Y=0}else
var
Y=0;if(!Y)var
A=0;if(A){var
bg=k(A[1][2]);if(bg){var
bh=bg[1],bi=bh[1],b1=bh[2];if(l(bBn,bi))var
B=[0,[0,bi,b1]],Z=1;else
var
Z=0}else
var
Z=0;if(!Z)var
B=0;if(B){var
bj=k(B[1][2]);if(bj){var
bk=bj[1],bl=bk[1],b2=bk[2];if(l(bBo,bl))var
C=[0,[0,bl,b2]],_=1;else
var
_=0}else
var
_=0;if(!_)var
C=0;if(C){var
bm=k(C[1][2]);if(bm){var
bn=bm[1],bo=bn[1],b3=bn[2];if(l(bBp,bo))var
D=[0,[0,bo,b3]],$=1;else
var
$=0}else
var
$=0;if(!$)var
D=0;var
b4=D?[0,[0,bBq,D[1][2]]]:0,bp=b4}else
var
bp=0;var
bq=bp}else
var
bq=0;var
br=bq}else
var
br=0;var
bs=br}else
var
bs=0;var
bt=bs}else
var
bt=0;var
bu=bt}else
var
bu=0;var
bv=bu}else
var
bv=0;var
bw=bv}else
var
bw=0;var
bx=bw?0:[0,[0,0,E]];if(bx){var
by=JU(0,0,bx[1][2]);return by?[0,[0,0,by[1][2]]]:0}return 0},w,v,h);if(f)var
g=f[1],x=g[2],o=[0,[0,fZ(g[1]),x]];else
var
o=0;var
n=o}M[1]=z;c(ap[4],ar);function
B(b,a){return m(ap[6],ar,b,a)}b(ap[15],B,A);return n};var
vy=function(a){return c(ah(bBs),a)},bBt=function(a){return dD(Bl(a))};uN(bBu);var
bBv=function(f,a){if(a){var
b=a[2];if(b)if(!b[2]){var
c=b[1],d=a[1],e=function(a){function
b(a){var
b=bBt(a);return b2(0,c,f_([0,c[3]],b))}return o(eH(a),b)};return o(aw(0,0,d),e)}}throw[0,r,bBw]};aC(bBx,D(0,b1,D(0,b1,X)),bBv);uO(0);var
J8=[N,bBy,H(0)],bBz=gU[1];gU[1]=function(f,e,d,b){var
a=p(bBz,f,e,d,b),c=b[5][1];if(a)if(0===c){vy(t(bBB,t(ub(a[1][2][2]),bBA)));throw J8}return a};var
vz=function(d){var
g=[0,bD[1]];function
h(a){bD[1]=g[1];return 0}function
a(l){var
d=l;for(;;){var
m=function(c){return function(d){var
b=i_(c);return function(g){var
b=g;for(;;){var
c=k(b);if(c){var
d=c[1],e=d[2],h=d[1];try{var
i=10===kQ(h)?1:0,f=i}catch(a){var
f=0}if(f)return a(e);var
b=e;continue}return 0}}(b)}}(d),e=function(a){return cv(JT[1])};try{g[1]=bD[1];var
i=bhn(J6,d);iP(hJ);if(bff(d))var
f=0;else
if(i){var
j=i[1],x=j[2];c(j[1],0);var
f=a(x)}else{vy(t(bBL,t(ub(d[2]),bBK)));var
f=m(0)}return f}catch(a){a=s(a);if(a===tr)return 0;if(a[1]===IH){var
n=a[3],o=a[2],q=function(a,b){return eC(bBE,bBD,bBC,bl,a,b)},r=e(0);p(ah(bBF),r,o,q,n);var
d=i_(d);continue}if(a!==fe)if(a!==jl)if(a!==J8){if(a[1]===JK){var
u=a[2],v=e(0);b(ah(bBG),v,u);var
d=i_(d);continue}if(a===IC){var
w=e(0);c(ah(bBH),w);var
d=i_(d);continue}if(a[1]===HS){vy(t(bBJ,t(a[3],bBI)));h(0);var
d=i_(d);continue}throw a}h(0);var
d=i_(d);continue}}}return a(uc(0,d))},bBP=function(b){Iy(0);ve(0);function
a(a){return IG(0,function(a){var
b=c(gU[1],a);return function(a){return kZ(b,a)}},a)}a(uJ(bBM));if(mO(bBN))a(bBO);k5[1]=bI[1];I3[1]=oG[1];return 0},bBQ=function(b){var
a=[0,bBR];t$(e6,function(b){a[1]=t(a[1],b);return 0});t$(cL,function(b){a[1]=t(a[1],b);return 0});vz(dD(b));return a[1].toString()},bBS=function(a){return vz(dD(a))},bBT=function(a){t$(e6,function(a){return self.postMessage(a.toString())});return self.addEventListener("message",rw(function(a){return vz(dD(a.data))}),beQ)},bBU=function(a){return GC.makam=rw(bBQ)},bBV=function(a){return module.exports={"eval":rw(bBS),"version":"0.5"}};bBP(0);if(Bl(bBW))bBV(0);else
if(Bl(bBX))bBT(0);else
bBU(0);BB(0);return}}(function(){return this}()));
